{
	"info": {
		"_postman_id": "42630524-32a0-4210-8006-db99f20a9b07",
		"name": "PowerProtect Data Manager 19.6",
		"description": "PowerProtect Data Manager Public Restful API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "api/v2",
			"item": [
				{
					"name": "account",
					"item": [
						{
							"name": "Update user account login credentials.",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"newPassword\": \"<string>\",\n    \"password\": \"<string>\",\n    \"username\": \"<string>\"\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/account/change-password",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"account",
										"change-password"
									]
								},
								"description": "Updates user account login credentials by providing the username, current password, and a new password. Returns the username and masked new password in the response body in JSON format."
							},
							"response": [
								{
									"name": "An internal server error occurred. Please contact the system administrator.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"newPassword\": \"<string>\",\n    \"password\": \"<string>\",\n    \"username\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/account/change-password",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"account",
												"change-password"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unprocessable entity. An error has occurred when trying to change the user password.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"newPassword\": \"<string>\",\n    \"password\": \"<string>\",\n    \"username\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/account/change-password",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"account",
												"change-password"
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "The request body is either invalid or is missing the required fields.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"newPassword\": \"<string>\",\n    \"password\": \"<string>\",\n    \"username\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/account/change-password",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"account",
												"change-password"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "The operation is currently unavailable. The system may currently be in maintenance mode.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"newPassword\": \"<string>\",\n    \"password\": \"<string>\",\n    \"username\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/account/change-password",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"account",
												"change-password"
											]
										}
									},
									"status": "Service Unavailable",
									"code": 503,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Successfully changed the user password.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"newPassword\": \"<string>\",\n    \"password\": \"<string>\",\n    \"username\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/account/change-password",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"account",
												"change-password"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"username\": \"do\",\n \"password\": \"consequat\"\n}"
								},
								{
									"name": "The provided credentials are invalid.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"newPassword\": \"<string>\",\n    \"password\": \"<string>\",\n    \"username\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/account/change-password",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"account",
												"change-password"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Send an email to reset a user password.",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"<string>\"\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/account/forgot-password",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"account",
										"forgot-password"
									]
								},
								"description": "Resets a user password by providing the username. An email is sent to the user email address with a link to reset the token."
							},
							"response": [
								{
									"name": "The operation is currently unavailable. The system may currently be in maintenance mode.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"username\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/account/forgot-password",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"account",
												"forgot-password"
											]
										}
									},
									"status": "Service Unavailable",
									"code": 503,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "The request body is either invalid or is missing the required fields.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"username\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/account/forgot-password",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"account",
												"forgot-password"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "If the username exists, an email is sent to the user email address.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"username\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/account/forgot-password",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"account",
												"forgot-password"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unprocessable entity. An error has occurred when trying to send an email to the user.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"username\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/account/forgot-password",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"account",
												"forgot-password"
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "An internal server error occurred. Please contact the system administrator.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"username\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/account/forgot-password",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"account",
												"forgot-password"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Reset user password with temporary reset token.",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"resetToken\": \"<string>\",\n    \"newPassword\": \"<string>\"\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/account/reset-password",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"account",
										"reset-password"
									]
								},
								"description": "Resets the user password with the temporary reset token. The temporary reset token is contained in the email sent to the user email address, after performing an API call to forgot-password."
							},
							"response": [
								{
									"name": "Unprocessable entity. An error occurred while trying to send an email to the user.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"resetToken\": \"<string>\",\n    \"newPassword\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/account/reset-password",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"account",
												"reset-password"
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "An internal server error occurred. Please contact the system administrator.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"resetToken\": \"<string>\",\n    \"newPassword\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/account/reset-password",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"account",
												"reset-password"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "The operation is currently unavailable. The system may currently be in maintenance mode.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"resetToken\": \"<string>\",\n    \"newPassword\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/account/reset-password",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"account",
												"reset-password"
											]
										}
									},
									"status": "Service Unavailable",
									"code": 503,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Successfully changed the user password.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"resetToken\": \"<string>\",\n    \"newPassword\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/account/reset-password",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"account",
												"reset-password"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"username\": \"do\",\n \"password\": \"consequat\"\n}"
								},
								{
									"name": "The reset password token is either invalid or expired.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"resetToken\": \"<string>\",\n    \"newPassword\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/account/reset-password",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"account",
												"reset-password"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "The request body is either invalid or is missing the required fields.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"resetToken\": \"<string>\",\n    \"newPassword\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/account/reset-password",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"account",
												"reset-password"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "activities",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Get an activity by ID.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/activities/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"activities",
												":id"
											],
											"variable": [
												{
													"id": "4a1aa29a-5153-4ec8-82ef-78a319d6b775",
													"key": "id",
													"value": "<string>",
													"type": "string",
													"description": "(Required) ID of the activity resource."
												}
											]
										},
										"description": "Retrieves an activity resource with matching ID.\n> This endpoint supports execution by the following roles: admin\n"
									},
									"response": [
										{
											"name": "The requestor is not authenticated.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/activities/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"activities",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 401,\n \"path\": \"/api/v2/activities/078ac5f1-f5ef-4e3f-bef2-b93f4ea539b\",\n \"reason\": \"Invalid authentication token: eyJraWQiOiIwOTRkMmM3Yi1mMWRjLTiMGEtYjk3ZS05NThlN2Q0NTBhOGUiLCJhbGciOiJFUzI1NiJ9.eyJqdGkiOiJkNGQyNGU5Yi1iOTk3LTQwMjktODdjNi1iNWQzNjc0ODFjMGYiLCJpc3MiOiJlQ0RNIEFBQSBTZXJ2aWNlIiwiaWF0IjoxNTY1OTg3MjYzLCJleHAiOjE1NjYwMTYwNjMsImV4dCI6eyJzeXN0ZW0iOnsicm9sZSI6WyJBZG1pbiJdfSwiYXVkaXQiOnsidWlkIjoiMDAwMDAwMDAtMDAwMC00MDAwLWEwMDAtMDAwMDAwMDAwMDAwIn19LCJzdWIiOiJhZG1pbiIsImF1dGhvcml6YXRpb24tdG9rZW4tYml0bWFwIjp7InVzZXJuYW1lIjoiYWRtaW4iLCJhdXRoZW50aWNhdGVkIjp0cnVlLCJpZCI6IjAwMDAwMDAwLTAwMDAtNDAwMC1hMDAwLTAwMDAwMDAwMDAwMCIsInVzZXJUeXBlIjoiTE9DQUwiLCJ0aW1lc3RhbXAiOjAsImNyZWF0aW9uVGltZSI6MCwidGVuYW50U2NvcGUiOiIvMDAwMDAwMDAtMDAwMC00MDAwLWIwMDAtMDAwMDAwMDAwMDAwLzAwMDAwMDAwLTAwMDAtNDAwMC1hMDAwLTAwMDAwMDAwMDAwMCIsImF1dGhvcml0aWVzIjpbeyJ0ZW5hbnRzIjpbIjAwMDAwMDAwLTAwMDAtNDAwMC1iMDAwLTAwMDAwMDAwMDAwMCJdLCJwcml2aWxlZ2VzIjpbIjE3MTc5ODY5MTgzIl0sInJvbGVzIjpbIjJiYzkwMDIwLTc2NzUtMDEzNi0yOWU5LTViYmQzY2U3MjliMCJdfV19LCJydGkiOiJhNDRkNDY5My1lMGMyLTQyZTktOGE1OC0wZmQ2MzA3N2FhNjcifQ.e5nolI8eHtZIkTNqhopP55c5Z7MtSWli-_AqQds0dWiVmTygn3unPAch88Mx_XH3tu1dXC4rlRt7Kb7M5fy6yw\",\n \"remediation\": \"The token is invalid or expired. Login again to receive a new authentication token.\",\n \"timestamp\": 1565989361531\n}"
										},
										{
											"name": "Successfully returned available activity resource.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/activities/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"activities",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"actions\": {\n  \"cancelable\": false,\n  \"retryable\": true\n },\n \"averageBytesTransferred\": 0,\n \"averageDuration\": 0,\n \"category\": \"PROTECT\",\n \"classType\": \"JOB_GROUP\",\n \"createTime\": \"2019-08-12T22:49:13.844Z\",\n \"duration\": 0,\n \"endTime\": \"2019-08-12T22:49:28.797Z\",\n \"hasChildren\": true,\n \"hasLogs\": false,\n \"id\": \"25a77c3e-eb9c-4976-a2f0-aa5caa2472eb\",\n \"initiatedType\": \"SCHEDULED\",\n \"name\": \"test job1565650132347\",\n \"progress\": 100,\n \"result\": {\n  \"status\": \"FAILED\",\n  \"summaries\": []\n },\n \"source\": {\n  \"type\": \"DATA_MANAGER\"\n },\n \"state\": \"COMPLETED\",\n \"stateSummaries\": {\n  \"canceled\": 0,\n  \"completed\": 2,\n  \"criticalEvent\": 2,\n  \"failed\": 2,\n  \"ok\": 0,\n  \"okWithErrors\": 0,\n  \"pendingCancellation\": 0,\n  \"queued\": 0,\n  \"running\": 0,\n  \"total\": 2\n },\n \"updateTime\": \"2019-08-12T22:49:28.803Z\"\n}"
										},
										{
											"name": "The requestor does not have required permissions.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/activities/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"activities",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 403,\n \"extendedInfo\": null,\n \"path\": \"/api/v2/activities/f1801d88-aec1-4dac-861d-9a054e19a801\",\n \"reason\": \"User UserRoleUser does not have proper privileges!\",\n \"remediation\": null,\n \"timestamp\": 1566577855868\n}"
										},
										{
											"name": "A server error prevented the completion of the request.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/activities/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"activities",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"actions\": {\n  \"cancelable\": false,\n  \"retryable\": false\n },\n \"category\": \"DISCOVER\",\n \"classType\": \"TASK\",\n \"createTime\": \"2019-08-12T20:43:23.713Z\",\n \"duration\": 68757,\n \"endTime\": \"2019-08-12T20:44:33.444Z\",\n \"hasChildren\": false,\n \"hasLogs\": false,\n \"id\": \"078ac5f1-f5ef-4e3f-bef2-b93f4ea539b9\",\n \"name\": \"Discovery task for inventory source \\\"ddve117\\\" with level \\\"DataCopies\\\"\",\n \"progress\": 100,\n \"result\": {\n  \"status\": \"OK\",\n  \"summaries\": [\n   \"Discovery Type: EXTERNALDATADOMAIN  Resource Type: none  Sub-Type: DATADOMAINSYSTEM  Total Assets: 1  New Assets: 1\",\n   \"Discovery Type: EXTERNALDATADOMAIN  Resource Type: TARGETVOLUME  Sub-Type: DDVDISKDEVICE  Total Assets: 0  New Assets: 0\",\n   \"Discovery Type: EXTERNALDATADOMAIN  Resource Type: GROUP  Sub-Type: DDVDISKPOOL  Total Assets: 0  New Assets: 0\",\n   \"Discovery Type: EXTERNALDATADOMAIN  Resource Type: GROUP  Sub-Type: DDVDISKDEVICEGROUP  Total Assets: 0  New Assets: 0\",\n   \"Discovery Type: EXTERNALDATADOMAIN  Resource Type: GROUP  Sub-Type: DDMTREE  Total Assets: 39  New Assets: 39\",\n   \"Discovery Type: EXTERNALDATADOMAIN  Resource Type: DATACOPY  Sub-Type: DDSTATICIMAGE  Total Assets: 0  New Assets: 0\"\n  ]\n },\n \"source\": {\n  \"type\": \"DATA_MANAGER\"\n },\n \"startTime\": \"2019-08-12T20:43:24.687Z\",\n \"state\": \"COMPLETED\",\n \"updateTime\": \"2019-08-12T20:44:33.587Z\"\n}"
										},
										{
											"name": "The requested resource is not found.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/activities/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"activities",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 404,\n \"extendedInfo\": null,\n \"path\": \"/api/v2/activities/078ac5f1-f5ef-4e3f-bef2-b93f4ea539b\",\n \"reason\": \"A resource with the specified ID is not found.\",\n \"remediation\": \"Check to ensure that the resource id exists.\",\n \"timestamp\": 1565989310577\n}"
										}
									]
								},
								{
									"name": "Cancel a running activity.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/activities/:id/cancel",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"activities",
												":id",
												"cancel"
											],
											"variable": [
												{
													"id": "1d0b67ee-1ab6-4bf8-9e94-3ffe43f9f92e",
													"key": "id",
													"value": "<string>",
													"type": "string",
													"description": "(Required) ID of the activity resource."
												}
											]
										},
										"description": "Cancels the selected activity with the specified ID. Activities in running or queued state can be canceled.\n> This endpoint supports execution by the following roles: admin\n"
									},
									"response": [
										{
											"name": "The requestor does not have required permissions.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/activities/:id/cancel",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"activities",
														":id",
														"cancel"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The requestor is not authenticated.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/activities/:id/cancel",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"activities",
														":id",
														"cancel"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "A server error prevented the completion of the request.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/activities/:id/cancel",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"activities",
														":id",
														"cancel"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 500,\n \"extendedInfo\": null,\n \"path\": \"/api/v2/activities/7d89bca3-2ab2-4cfe-91da-75d6a1a02b23/cancel\",\n \"reason\": null,\n \"remediation\": null,\n \"timestamp\": 1566572970546\n}"
										},
										{
											"name": "The request is accepted and is processing. The activity transitions to Pending Cancellation state before being Canceled. In some cases, the cancel request may be rejected if the activity is close to completion when the request was issued.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/activities/:id/cancel",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"activities",
														":id",
														"cancel"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"actions\": {\n  \"cancelable\": true,\n  \"retryable\": false\n },\n \"averageBytesTransferred\": 0,\n \"averageDuration\": 0,\n \"category\": \"PROTECT\",\n \"classType\": \"JOB_GROUP\",\n \"createTime\": \"2019-08-12T22:53:40.880Z\",\n \"duration\": 922624959,\n \"hasChildren\": true,\n \"hasLogs\": false,\n \"id\": \"f9d72a46-a0d7-4020-9a35-ce55b3e5b6d3\",\n \"name\": \"test job1565650420862\",\n \"progress\": 68,\n \"source\": {\n  \"type\": \"DATA_MANAGER\"\n },\n \"startTime\": \"2019-08-12T22:53:58.189Z\",\n \"state\": \"PENDING_CANCELLATION\",\n \"stateSummaries\": {\n  \"canceled\": 0,\n  \"completed\": 0,\n  \"criticalEvent\": 0,\n  \"failed\": 0,\n  \"ok\": 0,\n  \"okWithErrors\": 0,\n  \"pendingCancellation\": 1,\n  \"queued\": 0,\n  \"running\": 0,\n  \"total\": 1\n },\n \"updateTime\": \"2019-08-12T22:54:28.214Z\"\n}"
										},
										{
											"name": "The request is not valid. Check request body and/or filters.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/activities/:id/cancel",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"activities",
														":id",
														"cancel"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 400,\n \"extendedInfo\": null,\n \"path\": \"/api/v2/activities/e7b5442a-03cb-4635-8431-82363d87d89d/cancel\",\n \"reason\": \"This activity and associated jobs cannot be cancelled.\",\n \"remediation\": \"The state of the activity should be RUNNING or QUEUED and cancelable is true.\",\n \"timestamp\": 1566572848970\n}"
										},
										{
											"name": "The requested resource is not found.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/activities/:id/cancel",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"activities",
														":id",
														"cancel"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										}
									]
								},
								{
									"name": "Retry a failed activity.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"retryJobIds\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/activities/:id/retry",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"activities",
												":id",
												"retry"
											],
											"variable": [
												{
													"id": "72b747ac-535b-4beb-b127-e1f9c8b5d8bc",
													"key": "id",
													"value": "<string>",
													"type": "string",
													"description": "(Required) ID of the activity resource."
												}
											]
										},
										"description": "Retries one or more failed jobs within a job group for the specified ID.\n> This endpoint supports execution by the following roles: admin\n"
									},
									"response": [
										{
											"name": "The request is not valid. Check request body and/or filters.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"retryJobIds\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/activities/:id/retry",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"activities",
														":id",
														"retry"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The requestor is not authenticated.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"retryJobIds\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/activities/:id/retry",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"activities",
														":id",
														"retry"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The requestor does not have required permissions.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"retryJobIds\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/activities/:id/retry",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"activities",
														":id",
														"retry"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The requested resource is not found.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"retryJobIds\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/activities/:id/retry",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"activities",
														":id",
														"retry"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The request has been accepted and is processing. A new job is generated when an existing job is retried. The new job replaces the old one under the job group if the retry operation is successful.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"retryJobIds\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/activities/:id/retry",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"activities",
														":id",
														"retry"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"retryJobsInitiatedCount\": 2,\n \"retryJobsReceivedCount\": 2,\n \"retryResults\": [\n  {\n   \"newJobId\": \"7f7329a9-6961-466f-b381-cfeb6fc86a08\",\n   \"retryJobId\": \"75969f00-872e-4355-9cec-cdab5fad04ab\"\n  },\n  {\n   \"newJobId\": \"d64131c9-6e74-495f-9802-e7c1637d9550\",\n   \"retryJobId\": \"7fc8059c-2aab-4b9e-8436-1d8465f56d99\"\n  }\n ]\n}"
										},
										{
											"name": "A server error prevented the completion of the request.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"retryJobIds\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/activities/:id/retry",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"activities",
														":id",
														"retry"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Get all activities.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/activities?page=1&pageSize=100&filter=<string>&orderby=<string>&queryState=<string>&q=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"activities"
									],
									"query": [
										{
											"key": "page",
											"value": "1",
											"description": "The page number to be returned. Must not be less than 1. See Tutorials - Page the List Result."
										},
										{
											"key": "pageSize",
											"value": "100",
											"description": "The number of resources to be returned. Must not be less than 1. See Tutorials - Page the List Result."
										},
										{
											"key": "filter",
											"value": "<string>",
											"description": "The filter string that is expressed using PowerProtect Data Manager filter syntax. See Tutorials - Filter the List Result."
										},
										{
											"key": "orderby",
											"value": "<string>",
											"description": "The attributes/fields to be sorted by. This parameter can combine with sort direction \"ASC\" or \"DESC\". Default direction is ASC. See Tutorials - Sort the List Result."
										},
										{
											"key": "queryState",
											"value": "<string>",
											"description": "Token string to use to retrieve the next page of a result. The initial search request with queryState must be queryState=BEGIN and a pageSize. After a search begins, subsequent responses include a token string to pass as a parameter for the next page retrieval. When the query state in the response that is returned from the previous search is END, no further results can be retrieved from this query. More details see Tutorials - Page the List Result."
										},
										{
											"key": "q",
											"value": "<string>",
											"description": "The general search text. For example: q=VM_1"
										}
									]
								},
								"description": "Retrieves a list of all activities.\n> This endpoint supports execution by the following roles: admin\n\n> This endpoint supports pagination with types: random,serial\n"
							},
							"response": [
								{
									"name": "A server error prevented the completion of the request.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/activities?page=1&pageSize=100&filter=<string>&orderby=<string>&queryState=<string>&q=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"activities"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "<string>"
												},
												{
													"key": "orderby",
													"value": "<string>"
												},
												{
													"key": "queryState",
													"value": "<string>"
												},
												{
													"key": "q",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "The requestor is not authenticated.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/activities?page=1&pageSize=100&filter=<string>&orderby=<string>&queryState=<string>&q=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"activities"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "<string>"
												},
												{
													"key": "orderby",
													"value": "<string>"
												},
												{
													"key": "queryState",
													"value": "<string>"
												},
												{
													"key": "q",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 401,\n \"path\": \"/api/v2/activities/078ac5f1-f5ef-4e3f-bef2-b93f4ea539b\",\n \"reason\": \"Invalid authentication token: eyJraWQiOiIwOTRkMmM3Yi1mMWRjLTiMGEtYjk3ZS05NThlN2Q0NTBhOGUiLCJhbGciOiJFUzI1NiJ9.eyJqdGkiOiJkNGQyNGU5Yi1iOTk3LTQwMjktODdjNi1iNWQzNjc0ODFjMGYiLCJpc3MiOiJlQ0RNIEFBQSBTZXJ2aWNlIiwiaWF0IjoxNTY1OTg3MjYzLCJleHAiOjE1NjYwMTYwNjMsImV4dCI6eyJzeXN0ZW0iOnsicm9sZSI6WyJBZG1pbiJdfSwiYXVkaXQiOnsidWlkIjoiMDAwMDAwMDAtMDAwMC00MDAwLWEwMDAtMDAwMDAwMDAwMDAwIn19LCJzdWIiOiJhZG1pbiIsImF1dGhvcml6YXRpb24tdG9rZW4tYml0bWFwIjp7InVzZXJuYW1lIjoiYWRtaW4iLCJhdXRoZW50aWNhdGVkIjp0cnVlLCJpZCI6IjAwMDAwMDAwLTAwMDAtNDAwMC1hMDAwLTAwMDAwMDAwMDAwMCIsInVzZXJUeXBlIjoiTE9DQUwiLCJ0aW1lc3RhbXAiOjAsImNyZWF0aW9uVGltZSI6MCwidGVuYW50U2NvcGUiOiIvMDAwMDAwMDAtMDAwMC00MDAwLWIwMDAtMDAwMDAwMDAwMDAwLzAwMDAwMDAwLTAwMDAtNDAwMC1hMDAwLTAwMDAwMDAwMDAwMCIsImF1dGhvcml0aWVzIjpbeyJ0ZW5hbnRzIjpbIjAwMDAwMDAwLTAwMDAtNDAwMC1iMDAwLTAwMDAwMDAwMDAwMCJdLCJwcml2aWxlZ2VzIjpbIjE3MTc5ODY5MTgzIl0sInJvbGVzIjpbIjJiYzkwMDIwLTc2NzUtMDEzNi0yOWU5LTViYmQzY2U3MjliMCJdfV19LCJydGkiOiJhNDRkNDY5My1lMGMyLTQyZTktOGE1OC0wZmQ2MzA3N2FhNjcifQ.e5nolI8eHtZIkTNqhopP55c5Z7MtSWli-_AqQds0dWiVmTygn3unPAch88Mx_XH3tu1dXC4rlRt7Kb7M5fy6yw\",\n \"remediation\": \"The token is invalid or expired. Login again to receive a new authentication token.\",\n \"timestamp\": 1565989361531\n}"
								},
								{
									"name": "Successfully returned available activity resources.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/activities?page=1&pageSize=100&filter=<string>&orderby=<string>&queryState=<string>&q=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"activities"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "<string>"
												},
												{
													"key": "orderby",
													"value": "<string>"
												},
												{
													"key": "queryState",
													"value": "<string>"
												},
												{
													"key": "q",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"content\": [\n  {\n   \"actions\": {\n    \"cancelable\": false,\n    \"retryable\": false\n   },\n   \"category\": \"DISCOVER\",\n   \"classType\": \"TASK\",\n   \"createTime\": \"2019-08-12T20:43:23.713Z\",\n   \"duration\": 68757,\n   \"endTime\": \"2019-08-12T20:44:33.444Z\",\n   \"hasChildren\": false,\n   \"hasLogs\": false,\n   \"id\": \"078ac5f1-f5ef-4e3f-bef2-b93f4ea539b9\",\n   \"name\": \"Discovery task for inventory source \\\"ddve117\\\" with level \\\"DataCopies\\\"\",\n   \"progress\": 100,\n   \"result\": {\n    \"status\": \"OK\",\n    \"summaries\": [\n     \"Discovery Type: EXTERNALDATADOMAIN  Resource Type: none  Sub-Type: DATADOMAINSYSTEM  Total Assets: 1  New Assets: 1\",\n     \"Discovery Type: EXTERNALDATADOMAIN  Resource Type: TARGETVOLUME  Sub-Type: DDVDISKDEVICE  Total Assets: 0  New Assets: 0\",\n     \"Discovery Type: EXTERNALDATADOMAIN  Resource Type: GROUP  Sub-Type: DDVDISKPOOL  Total Assets: 0  New Assets: 0\",\n     \"Discovery Type: EXTERNALDATADOMAIN  Resource Type: GROUP  Sub-Type: DDVDISKDEVICEGROUP  Total Assets: 0  New Assets: 0\",\n     \"Discovery Type: EXTERNALDATADOMAIN  Resource Type: GROUP  Sub-Type: DDMTREE  Total Assets: 39  New Assets: 39\",\n     \"Discovery Type: EXTERNALDATADOMAIN  Resource Type: DATACOPY  Sub-Type: DDSTATICIMAGE  Total Assets: 0  New Assets: 0\"\n    ]\n   },\n   \"source\": {\n    \"type\": \"DATA_MANAGER\"\n   },\n   \"startTime\": \"2019-08-12T20:43:24.687Z\",\n   \"state\": \"COMPLETED\",\n   \"updateTime\": \"2019-08-12T20:44:33.587Z\"\n  },\n  {\n   \"actions\": {\n    \"cancelable\": false,\n    \"retryable\": false\n   },\n   \"category\": \"CONFIG\",\n   \"classType\": \"TASK\",\n   \"createTime\": \"2019-08-12T21:11:41.135Z\",\n   \"duration\": 3081,\n   \"endTime\": \"2019-08-12T21:11:44.564Z\",\n   \"hasChildren\": false,\n   \"hasLogs\": false,\n   \"id\": \"a8d1647f-efa2-4619-8adc-5997fe7d5aac\",\n   \"name\": \"Data Domain Policy Configuration Task\",\n   \"parentId\": \"2dc41938-e64a-495c-9da5-ace3a3996d59\",\n   \"progress\": 100,\n   \"result\": {\n    \"status\": \"OK\",\n    \"summaries\": []\n   },\n   \"source\": {\n    \"type\": \"DATA_MANAGER\"\n   },\n   \"startTime\": \"2019-08-12T21:11:41.483Z\",\n   \"state\": \"COMPLETED\",\n   \"updateTime\": \"2019-08-12T21:11:44.747Z\"\n  },\n  {\n   \"actions\": {\n    \"cancelable\": false,\n    \"retryable\": false\n   },\n   \"category\": \"CONFIG\",\n   \"classType\": \"TASK\",\n   \"createTime\": \"2019-08-12T21:11:41.135Z\",\n   \"duration\": 3582,\n   \"endTime\": \"2019-08-12T21:11:45.065Z\",\n   \"hasChildren\": false,\n   \"hasLogs\": false,\n   \"id\": \"a0496ad0-0f4c-4cac-820f-bb4ad3993001\",\n   \"name\": \"Data Domain Policy Configuration Task\",\n   \"parentId\": \"40a252d3-4589-4763-952c-91d0699fdbc4\",\n   \"progress\": 100,\n   \"result\": {\n    \"status\": \"OK\",\n    \"summaries\": []\n   },\n   \"source\": {\n    \"type\": \"DATA_MANAGER\"\n   },\n   \"startTime\": \"2019-08-12T21:11:41.483Z\",\n   \"state\": \"COMPLETED\",\n   \"updateTime\": \"2019-08-12T21:11:45.229Z\"\n  },\n  {\n   \"actions\": {\n    \"cancelable\": false,\n    \"retryable\": false\n   },\n   \"asset\": {\n    \"type\": \"VMWARE_VIRTUAL_MACHINE\"\n   },\n   \"averageBytesTransferred\": 21474836480,\n   \"averageDuration\": 138076.5,\n   \"category\": \"PROTECT\",\n   \"classType\": \"JOB_GROUP\",\n   \"createTime\": \"2019-08-12T21:11:38.889Z\",\n   \"duration\": 209913,\n   \"endTime\": \"2019-08-12T21:15:34.788Z\",\n   \"hasChildren\": true,\n   \"hasLogs\": false,\n   \"id\": \"6fcbbe35-71a3-4545-80fa-745588a068c4\",\n   \"name\": \"Protecting VM - VM Protection Gold\",\n   \"progress\": 100,\n   \"protectionPolicy\": {\n    \"id\": \"9d91b470-a7ff-4a5f-866f-14d91d22a2ab\",\n    \"name\": \"VM Protection Gold\"\n   },\n   \"result\": {\n    \"bytesTransferred\": 42949672960,\n    \"status\": \"OK\",\n    \"summaries\": []\n   },\n   \"source\": {\n    \"type\": \"DATA_MANAGER\"\n   },\n   \"startTime\": \"2019-08-12T21:12:04.875Z\",\n   \"state\": \"COMPLETED\",\n   \"stateSummaries\": {\n    \"canceled\": 0,\n    \"completed\": 2,\n    \"criticalEvent\": 0,\n    \"failed\": 0,\n    \"ok\": 2,\n    \"okWithErrors\": 0,\n    \"pendingCancellation\": 0,\n    \"queued\": 0,\n    \"running\": 0,\n    \"total\": 2\n   },\n   \"updateTime\": \"2019-08-12T21:15:34.887Z\"\n  },\n  {\n   \"actions\": {\n    \"cancelable\": true,\n    \"retryable\": false\n   },\n   \"asset\": {\n    \"id\": \"1fb351f1-e892-5562-83a6-bc58b3a071e2\"\n   },\n   \"category\": \"PROTECT\",\n   \"classType\": \"JOB\",\n   \"createTime\": \"2019-08-12T21:11:39.216Z\",\n   \"duration\": 208593,\n   \"endTime\": \"2019-08-12T21:15:09.213Z\",\n   \"hasChildren\": true,\n   \"hasLogs\": false,\n   \"id\": \"e0fc046f-99da-4971-b586-168eb557bdbb\",\n   \"name\": \"Protecting VM - O_JL_CA_VM15\",\n   \"parentId\": \"6fcbbe35-71a3-4545-80fa-745588a068c4\",\n   \"progress\": 100,\n   \"result\": {\n    \"bytesTransferred\": 42949672960,\n    \"status\": \"OK\",\n    \"summaries\": []\n   },\n   \"source\": {\n    \"type\": \"DATA_MANAGER\"\n   },\n   \"startTime\": \"2019-08-12T21:11:40.620Z\",\n   \"state\": \"COMPLETED\",\n   \"updateTime\": \"2019-08-12T21:15:09.451Z\"\n  },\n  {\n   \"actions\": {\n    \"cancelable\": true,\n    \"retryable\": false\n   },\n   \"asset\": {\n    \"id\": \"3832069a-be26-52ab-a7cb-e190e0f1bd3d\"\n   },\n   \"category\": \"PROTECT\",\n   \"classType\": \"JOB\",\n   \"createTime\": \"2019-08-12T21:11:39.366Z\",\n   \"duration\": 67560,\n   \"endTime\": \"2019-08-12T21:12:48.213Z\",\n   \"hasChildren\": true,\n   \"hasLogs\": false,\n   \"id\": \"de395e17-7ac5-48bf-a353-25002a53a2a6\",\n   \"name\": \"Protecting VM - R_JL_CA_VM16\",\n   \"parentId\": \"6fcbbe35-71a3-4545-80fa-745588a068c4\",\n   \"progress\": 100,\n   \"result\": {\n    \"bytesTransferred\": 0,\n    \"status\": \"OK\",\n    \"summaries\": []\n   },\n   \"source\": {\n    \"type\": \"DATA_MANAGER\"\n   },\n   \"startTime\": \"2019-08-12T21:11:40.653Z\",\n   \"state\": \"COMPLETED\",\n   \"updateTime\": \"2019-08-12T21:12:48.478Z\"\n  },\n  {\n   \"actions\": {\n    \"cancelable\": false,\n    \"retryable\": false\n   },\n   \"category\": \"CONFIG\",\n   \"classType\": \"JOB\",\n   \"createTime\": \"2019-08-12T21:11:39.217Z\",\n   \"duration\": 7660,\n   \"endTime\": \"2019-08-12T21:11:47.256Z\",\n   \"hasChildren\": true,\n   \"hasLogs\": false,\n   \"id\": \"2dc41938-e64a-495c-9da5-ace3a3996d59\",\n   \"name\": \"Perform Policy Configuration\",\n   \"parentId\": \"7faba409-48f4-43e8-8c43-41a06220e283\",\n   \"progress\": 100,\n   \"result\": {\n    \"bytesTransferred\": 0,\n    \"status\": \"OK\",\n    \"summaries\": []\n   },\n   \"source\": {\n    \"type\": \"DATA_MANAGER\"\n   },\n   \"startTime\": \"2019-08-12T21:11:39.596Z\",\n   \"state\": \"COMPLETED\",\n   \"updateTime\": \"2019-08-12T21:11:47.473Z\"\n  },\n  {\n   \"actions\": {\n    \"cancelable\": true,\n    \"retryable\": false\n   },\n   \"category\": \"REPLICATE\",\n   \"classType\": \"TASK\",\n   \"createTime\": \"2019-08-12T22:00:48.992Z\",\n   \"duration\": 11049,\n   \"endTime\": \"2019-08-12T22:01:00.643Z\",\n   \"hasChildren\": false,\n   \"hasLogs\": false,\n   \"id\": \"59629494-0003-43e1-9510-dd79e38a1049\",\n   \"name\": \"Replicating asset copies\",\n   \"parentId\": \"daf5c737-efb1-4f60-aeee-9d2d9f62e80a\",\n   \"progress\": 100,\n   \"result\": {\n    \"bytesTransferred\": 189015852,\n    \"status\": \"OK\",\n    \"summaries\": [\n     \"Replicating copies for asset=[O_JL_CA_VM15] on storage-node=[10.7.65.75] with storage-unit=[VM_Protection_Gold-lava253114-R-3bca7]\",\n     \"replication succeeded for copies:\",\n     \"copySetId=7289172f..., subType=VIRTUALMACHINE, backupLevel=FULL dataConsistency=CRASH_CONSISTENT startTime=2019-08-12T21:11:51Z endTime=2019-08-12T21:14:45Z\",\n     \"Total copies succeeded : 1\"\n    ]\n   },\n   \"source\": {\n    \"type\": \"DATA_MANAGER\"\n   },\n   \"startTime\": \"2019-08-12T22:00:49.594Z\",\n   \"state\": \"COMPLETED\",\n   \"updateTime\": \"2019-08-12T22:01:01.160Z\"\n  },\n  {\n   \"actions\": {\n    \"cancelable\": true,\n    \"retryable\": false\n   },\n   \"category\": \"REPLICATE\",\n   \"classType\": \"TASK\",\n   \"createTime\": \"2019-08-12T22:00:49.026Z\",\n   \"duration\": 7298,\n   \"endTime\": \"2019-08-12T22:00:56.792Z\",\n   \"hasChildren\": false,\n   \"hasLogs\": false,\n   \"id\": \"a4fa5a74-865a-4c44-bc0f-3057b8ea319f\",\n   \"name\": \"Replicating asset copies\",\n   \"parentId\": \"f7947eda-09e9-4b4c-b3c9-c96fc90b05d7\",\n   \"progress\": 100,\n   \"result\": {\n    \"bytesTransferred\": 91688,\n    \"status\": \"OK\",\n    \"summaries\": [\n     \"Replicating copies for asset=[R_JL_CA_VM16] on storage-node=[10.7.65.75] with storage-unit=[VM_Protection_Gold-lava253114-R-3bca7]\",\n     \"replication succeeded for copies:\",\n     \"copySetId=73cab8f9..., subType=VIRTUALMACHINE, backupLevel=FULL dataConsistency=CRASH_CONSISTENT startTime=2019-08-12T21:11:51Z endTime=2019-08-12T21:12:05Z\",\n     \"Total copies succeeded : 1\"\n    ]\n   },\n   \"source\": {\n    \"type\": \"DATA_MANAGER\"\n   },\n   \"startTime\": \"2019-08-12T22:00:49.494Z\",\n   \"state\": \"COMPLETED\",\n   \"updateTime\": \"2019-08-12T22:00:57.316Z\"\n  },\n  {\n   \"actions\": {\n    \"cancelable\": true,\n    \"retryable\": false\n   },\n   \"category\": \"PROTECT\",\n   \"classType\": \"TASK\",\n   \"createTime\": \"2019-08-12T22:00:47.442Z\",\n   \"duration\": 15758,\n   \"endTime\": \"2019-08-12T22:01:38.811Z\",\n   \"hasChildren\": false,\n   \"hasLogs\": false,\n   \"id\": \"c61b52c2-7511-430d-b539-27a3241256df\",\n   \"name\": \"Protecting VM - O_JL_CA_VM15 using VM Proxy\",\n   \"parentId\": \"049317cc-a01a-46d0-86f8-d4f927b0ceeb\",\n   \"progress\": 100,\n   \"result\": {\n    \"bytesTransferred\": 0,\n    \"status\": \"OK\",\n    \"summaries\": [\n     \"Parameters: {\\n  \\\"asset\\\" : \\\"O_JL_CA_VM15\\\",\\n  \\\"backupType\\\" : \\\"FULL\\\",\\n  \\\"dataConsistency\\\" : \\\"CRASH_CONSISTENT\\\",\\n  \\\"plc\\\" : \\\"VM Protection Gold\\\",\\n  \\\"storage\\\" : \\\"lava66117.vdp.emc.com\\\",\\n  \\\"storageUnit\\\" : \\\"VM_Protection_Gold-lava253114-3b5f2\\\",\\n  \\\"taskId\\\" : \\\"c61b52c2-7511-430d-b539-27a3241256df\\\",\\n  \\\"vcenter\\\" : \\\"vc243150\\\"\\n}\\nResult: {\\n  \\\"sessionId\\\" : \\\"efbfc7a0-1aca-4ee4-b8cf-ab7010e9c234\\\",\\n  \\\"state\\\" : \\\"Success\\\",\\n  \\\"description\\\" : \\\"Backup has SUCCEEDED (Moved: 0.00 Bytes in 8s, Overall: 0 MiB/s, R: 0 MiB/s, W: 0 MiB/s).\\\",\\n  \\\"virtualDiskStatus\\\" : [ {\\n    \\\"label\\\" : \\\"Hard disk 1\\\",\\n    \\\"provisionedBytes\\\" : 42949672960,\\n    \\\"usedBytes\\\" : 42949672960,\\n    \\\"preClientCompBytes\\\" : 0,\\n    \\\"postClientCompBytes\\\" : 0,\\n    \\\"secondsTaken\\\" : 0,\\n    \\\"changedBytes\\\" : 0\\n  } ],\\n  \\\"parallelismUsed\\\" : 1,\\n  \\\"backupLevel\\\" : \\\"FULL_SYNTHETIC\\\",\\n  \\\"vmproxyName\\\" : \\\"localhost\\\"\\n}\"\n    ]\n   },\n   \"source\": {\n    \"type\": \"DATA_MANAGER\"\n   },\n   \"startTime\": \"2019-08-12T22:01:23.053Z\",\n   \"state\": \"COMPLETED\",\n   \"updateTime\": \"2019-08-12T22:01:38.821Z\"\n  }\n ],\n \"page\": {\n  \"number\": 1,\n  \"size\": 10,\n  \"totalElements\": 74,\n  \"totalPages\": 8\n }\n}"
								},
								{
									"name": "The request is not valid. Check request parameters.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/activities?page=1&pageSize=100&filter=<string>&orderby=<string>&queryState=<string>&q=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"activities"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "<string>"
												},
												{
													"key": "orderby",
													"value": "<string>"
												},
												{
													"key": "queryState",
													"value": "<string>"
												},
												{
													"key": "q",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 400,\n \"extendedInfo\": null,\n \"path\": \"/api/v2/activities\",\n \"reason\": \"Invalid data in the request body.\",\n \"remediation\": null,\n \"timestamp\": 1566575988731\n}"
								},
								{
									"name": "The requestor does not have required permissions.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/activities?page=1&pageSize=100&filter=<string>&orderby=<string>&queryState=<string>&q=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"activities"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "<string>"
												},
												{
													"key": "orderby",
													"value": "<string>"
												},
												{
													"key": "queryState",
													"value": "<string>"
												},
												{
													"key": "q",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 403,\n \"extendedInfo\": null,\n \"path\": \"/api/v2/activities\",\n \"reason\": \"User UserRoleUser does not have proper privileges!\",\n \"remediation\": null,\n \"timestamp\": 1566577855868\n}"
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "alerts",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Get an alert message by ID.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/alerts/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"alerts",
												":id"
											],
											"variable": [
												{
													"id": "bc806c60-f081-4b60-a724-d999ded42ba8",
													"key": "id",
													"value": "<string>",
													"type": "string",
													"description": "(Required) ID of the alerts resource."
												}
											]
										},
										"description": "Retrieves an alert message with the specified ID.\n> This endpoint supports execution by the following roles: admin\n"
									},
									"response": [
										{
											"name": "The request is not valid. Verify the ID.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/alerts/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"alerts",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/alerts/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"alerts",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The requestor is not authenticated to perform this operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/alerts/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"alerts",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "Successfully returned the alert message.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/alerts/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"alerts",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"acknowledgement\": {\n  \"acknowledgeBy\": \"SYSTEM\",\n  \"acknowledgeState\": \"ACKNOWLEDGED\",\n  \"acknowledgeTime\": \"2019-08-13T01:00:43.852Z\"\n },\n \"category\": \"SYSTEM\",\n \"detailSummaries\": [],\n \"detailedDescription\": \"To support integration with the vSphere client UI, PPDM must register extensions with the vCenter. If this registration fails, these features will be unavailable.  However, PPDM will continue to work normally.\",\n \"email\": true,\n \"esrs\": false,\n \"id\": \"ba243fe2-ccf7-4b2a-8116-437ae956a33d\",\n \"jobId\": null,\n \"message\": \"Failed to register extension with vCenter vc243150.\",\n \"messageArgs\": [\n  \"vc243150\"\n ],\n \"messageID\": \"SYS0016\",\n \"postedTime\": \"2019-08-13T01:00:00.423Z\",\n \"responseAction\": \"The attempt will be retried until it succeeds, or the vSphere integration setting is changed for this vCenter.\",\n \"severity\": \"WARNING\",\n \"source\": {\n  \"type\": \"DATA_MANAGER\"\n },\n \"supportDetails\": null,\n \"taskId\": null,\n \"userNote\": null,\n \"visibility\": true\n}"
										},
										{
											"name": "Any server error that prevented the completion of the request.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/alerts/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"alerts",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The requested resource is not found.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/alerts/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"alerts",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										}
									]
								},
								{
									"name": "Update message acknowledgement or user note by ID.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"messageID\": \"<string>\",\n    \"message\": \"<string>\",\n    \"category\": \"<string>\",\n    \"severity\": \"<string>\",\n    \"postedTime\": \"<dateTime>\",\n    \"acknowledgement\": {\n        \"acknowledgeState\": \"<string>\",\n        \"acknowledgeBy\": \"<string>\",\n        \"acknowledgeTime\": \"<dateTime>\"\n    },\n    \"id\": \"<string>\",\n    \"detailSummaries\": [\n        {\n            \"summary\": \"<string>\",\n            \"taskId\": \"<string>\"\n        },\n        {\n            \"summary\": \"<string>\",\n            \"taskId\": \"<string>\"\n        }\n    ],\n    \"detailedDescription\": \"<string>\",\n    \"email\": \"<boolean>\",\n    \"esrs\": \"<boolean>\",\n    \"jobId\": \"<string>\",\n    \"messageArgs\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"responseAction\": \"<string>\",\n    \"source\": {\n        \"type\": \"<string>\"\n    },\n    \"supportDetails\": \"<string>\",\n    \"taskId\": \"<string>\",\n    \"userNote\": {\n        \"note\": \"<string>\",\n        \"updatedTime\": \"<dateTime>\",\n        \"username\": \"<string>\"\n    },\n    \"visibility\": \"<boolean>\"\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/alerts/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"alerts",
												":id"
											],
											"variable": [
												{
													"id": "10f9cb9b-6b52-46d4-8445-951fb1afe97b",
													"key": "id",
													"value": "<string>",
													"type": "string",
													"description": "(Required) ID of the alerts resource."
												}
											]
										},
										"description": "Updates acknowledgement object of a message. Adds or updates userNote object of a message.\n> This endpoint supports execution by the following roles: admin\n"
									},
									"response": [
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"messageID\": \"SYS0016\",\n    \"message\": \"Failed to register extension with vCenter lava12345.lss.emc.com.\",\n    \"category\": \"SYSTEM\",\n    \"severity\": \"WARNING\",\n    \"postedTime\": \"2019-08-13T01:00:00.423Z\",\n    \"acknowledgement\": {\n        \"acknowledgeState\": \"ACKNOWLEDGED\",\n        \"acknowledgeBy\": \"admin\",\n        \"acknowledgeTime\": \"2019-08-13T01:00:43.852Z\"\n    },\n    \"id\": \"ba243fe2-ccf7-4b2a-8116-437ae956a33d\",\n    \"detailSummaries\": [\n        {\n            \"summary\": \"<plc>: Protection Policy backup failed for Virtual Machine <asset> on vCenter <vCenterName> to <target>.\",\n            \"taskId\": \"86c8ac0a-4124-4696-a7b5-33f23ff5b7b7\"\n        },\n        {\n            \"summary\": \"plcName1: Protection Policy backup failed for Virtual Machine assetName1 on vCenter vCenter1 to DD1.\",\n            \"taskId\": \"40f6634f-900c-40c6-8256-106567e68d8b\"\n        }\n    ],\n    \"detailedDescription\": \"To support integration with the vSphere client UI, PPDM must register extensions with the vCenter. If this registration fails, these features will be unavailable.  However, PPDM will continue to work normally.\",\n    \"email\": true,\n    \"esrs\": false,\n    \"jobId\": \"d9b2670d-7701-4346-b3f4-9a356fe49563\",\n    \"messageArgs\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"responseAction\": \"The attempt will be retried until it succeeds, or the vSphere integration setting is changed for this vCenter.\",\n    \"source\": {\n        \"type\": \"DATA_MANAGER\"\n    },\n    \"supportDetails\": \"<string>\",\n    \"taskId\": \"86c8ac0a-4124-4696-a7b5-33f23ff5b7b7\",\n    \"userNote\": {\n        \"note\": \"<string>\",\n        \"updatedTime\": \"<dateTime>\",\n        \"username\": \"<string>\"\n    },\n    \"visibility\": true\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/alerts/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"alerts",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "Any server error that prevented the completion of the request.",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"messageID\": \"SYS0016\",\n    \"message\": \"Failed to register extension with vCenter lava12345.lss.emc.com.\",\n    \"category\": \"SYSTEM\",\n    \"severity\": \"WARNING\",\n    \"postedTime\": \"2019-08-13T01:00:00.423Z\",\n    \"acknowledgement\": {\n        \"acknowledgeState\": \"ACKNOWLEDGED\",\n        \"acknowledgeBy\": \"admin\",\n        \"acknowledgeTime\": \"2019-08-13T01:00:43.852Z\"\n    },\n    \"id\": \"ba243fe2-ccf7-4b2a-8116-437ae956a33d\",\n    \"detailSummaries\": [\n        {\n            \"summary\": \"<plc>: Protection Policy backup failed for Virtual Machine <asset> on vCenter <vCenterName> to <target>.\",\n            \"taskId\": \"86c8ac0a-4124-4696-a7b5-33f23ff5b7b7\"\n        },\n        {\n            \"summary\": \"plcName1: Protection Policy backup failed for Virtual Machine assetName1 on vCenter vCenter1 to DD1.\",\n            \"taskId\": \"40f6634f-900c-40c6-8256-106567e68d8b\"\n        }\n    ],\n    \"detailedDescription\": \"To support integration with the vSphere client UI, PPDM must register extensions with the vCenter. If this registration fails, these features will be unavailable.  However, PPDM will continue to work normally.\",\n    \"email\": true,\n    \"esrs\": false,\n    \"jobId\": \"d9b2670d-7701-4346-b3f4-9a356fe49563\",\n    \"messageArgs\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"responseAction\": \"The attempt will be retried until it succeeds, or the vSphere integration setting is changed for this vCenter.\",\n    \"source\": {\n        \"type\": \"DATA_MANAGER\"\n    },\n    \"supportDetails\": \"<string>\",\n    \"taskId\": \"86c8ac0a-4124-4696-a7b5-33f23ff5b7b7\",\n    \"userNote\": {\n        \"note\": \"<string>\",\n        \"updatedTime\": \"<dateTime>\",\n        \"username\": \"<string>\"\n    },\n    \"visibility\": true\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/alerts/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"alerts",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "Resource updated.",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"messageID\": \"SYS0016\",\n    \"message\": \"Failed to register extension with vCenter lava12345.lss.emc.com.\",\n    \"category\": \"SYSTEM\",\n    \"severity\": \"WARNING\",\n    \"postedTime\": \"2019-08-13T01:00:00.423Z\",\n    \"acknowledgement\": {\n        \"acknowledgeState\": \"ACKNOWLEDGED\",\n        \"acknowledgeBy\": \"admin\",\n        \"acknowledgeTime\": \"2019-08-13T01:00:43.852Z\"\n    },\n    \"id\": \"ba243fe2-ccf7-4b2a-8116-437ae956a33d\",\n    \"detailSummaries\": [\n        {\n            \"summary\": \"<plc>: Protection Policy backup failed for Virtual Machine <asset> on vCenter <vCenterName> to <target>.\",\n            \"taskId\": \"86c8ac0a-4124-4696-a7b5-33f23ff5b7b7\"\n        },\n        {\n            \"summary\": \"plcName1: Protection Policy backup failed for Virtual Machine assetName1 on vCenter vCenter1 to DD1.\",\n            \"taskId\": \"40f6634f-900c-40c6-8256-106567e68d8b\"\n        }\n    ],\n    \"detailedDescription\": \"To support integration with the vSphere client UI, PPDM must register extensions with the vCenter. If this registration fails, these features will be unavailable.  However, PPDM will continue to work normally.\",\n    \"email\": true,\n    \"esrs\": false,\n    \"jobId\": \"d9b2670d-7701-4346-b3f4-9a356fe49563\",\n    \"messageArgs\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"responseAction\": \"The attempt will be retried until it succeeds, or the vSphere integration setting is changed for this vCenter.\",\n    \"source\": {\n        \"type\": \"DATA_MANAGER\"\n    },\n    \"supportDetails\": \"<string>\",\n    \"taskId\": \"86c8ac0a-4124-4696-a7b5-33f23ff5b7b7\",\n    \"userNote\": {\n        \"note\": \"<string>\",\n        \"updatedTime\": \"<dateTime>\",\n        \"username\": \"<string>\"\n    },\n    \"visibility\": true\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/alerts/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"alerts",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{}"
										},
										{
											"name": "The requested resource is not found.",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"messageID\": \"SYS0016\",\n    \"message\": \"Failed to register extension with vCenter lava12345.lss.emc.com.\",\n    \"category\": \"SYSTEM\",\n    \"severity\": \"WARNING\",\n    \"postedTime\": \"2019-08-13T01:00:00.423Z\",\n    \"acknowledgement\": {\n        \"acknowledgeState\": \"ACKNOWLEDGED\",\n        \"acknowledgeBy\": \"admin\",\n        \"acknowledgeTime\": \"2019-08-13T01:00:43.852Z\"\n    },\n    \"id\": \"ba243fe2-ccf7-4b2a-8116-437ae956a33d\",\n    \"detailSummaries\": [\n        {\n            \"summary\": \"<plc>: Protection Policy backup failed for Virtual Machine <asset> on vCenter <vCenterName> to <target>.\",\n            \"taskId\": \"86c8ac0a-4124-4696-a7b5-33f23ff5b7b7\"\n        },\n        {\n            \"summary\": \"plcName1: Protection Policy backup failed for Virtual Machine assetName1 on vCenter vCenter1 to DD1.\",\n            \"taskId\": \"40f6634f-900c-40c6-8256-106567e68d8b\"\n        }\n    ],\n    \"detailedDescription\": \"To support integration with the vSphere client UI, PPDM must register extensions with the vCenter. If this registration fails, these features will be unavailable.  However, PPDM will continue to work normally.\",\n    \"email\": true,\n    \"esrs\": false,\n    \"jobId\": \"d9b2670d-7701-4346-b3f4-9a356fe49563\",\n    \"messageArgs\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"responseAction\": \"The attempt will be retried until it succeeds, or the vSphere integration setting is changed for this vCenter.\",\n    \"source\": {\n        \"type\": \"DATA_MANAGER\"\n    },\n    \"supportDetails\": \"<string>\",\n    \"taskId\": \"86c8ac0a-4124-4696-a7b5-33f23ff5b7b7\",\n    \"userNote\": {\n        \"note\": \"<string>\",\n        \"updatedTime\": \"<dateTime>\",\n        \"username\": \"<string>\"\n    },\n    \"visibility\": true\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/alerts/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"alerts",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The request is not valid.",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"messageID\": \"SYS0016\",\n    \"message\": \"Failed to register extension with vCenter lava12345.lss.emc.com.\",\n    \"category\": \"SYSTEM\",\n    \"severity\": \"WARNING\",\n    \"postedTime\": \"2019-08-13T01:00:00.423Z\",\n    \"acknowledgement\": {\n        \"acknowledgeState\": \"ACKNOWLEDGED\",\n        \"acknowledgeBy\": \"admin\",\n        \"acknowledgeTime\": \"2019-08-13T01:00:43.852Z\"\n    },\n    \"id\": \"ba243fe2-ccf7-4b2a-8116-437ae956a33d\",\n    \"detailSummaries\": [\n        {\n            \"summary\": \"<plc>: Protection Policy backup failed for Virtual Machine <asset> on vCenter <vCenterName> to <target>.\",\n            \"taskId\": \"86c8ac0a-4124-4696-a7b5-33f23ff5b7b7\"\n        },\n        {\n            \"summary\": \"plcName1: Protection Policy backup failed for Virtual Machine assetName1 on vCenter vCenter1 to DD1.\",\n            \"taskId\": \"40f6634f-900c-40c6-8256-106567e68d8b\"\n        }\n    ],\n    \"detailedDescription\": \"To support integration with the vSphere client UI, PPDM must register extensions with the vCenter. If this registration fails, these features will be unavailable.  However, PPDM will continue to work normally.\",\n    \"email\": true,\n    \"esrs\": false,\n    \"jobId\": \"d9b2670d-7701-4346-b3f4-9a356fe49563\",\n    \"messageArgs\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"responseAction\": \"The attempt will be retried until it succeeds, or the vSphere integration setting is changed for this vCenter.\",\n    \"source\": {\n        \"type\": \"DATA_MANAGER\"\n    },\n    \"supportDetails\": \"<string>\",\n    \"taskId\": \"86c8ac0a-4124-4696-a7b5-33f23ff5b7b7\",\n    \"userNote\": {\n        \"note\": \"<string>\",\n        \"updatedTime\": \"<dateTime>\",\n        \"username\": \"<string>\"\n    },\n    \"visibility\": true\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/alerts/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"alerts",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The requestor is not authenticated to perform this operation.",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"messageID\": \"SYS0016\",\n    \"message\": \"Failed to register extension with vCenter lava12345.lss.emc.com.\",\n    \"category\": \"SYSTEM\",\n    \"severity\": \"WARNING\",\n    \"postedTime\": \"2019-08-13T01:00:00.423Z\",\n    \"acknowledgement\": {\n        \"acknowledgeState\": \"ACKNOWLEDGED\",\n        \"acknowledgeBy\": \"admin\",\n        \"acknowledgeTime\": \"2019-08-13T01:00:43.852Z\"\n    },\n    \"id\": \"ba243fe2-ccf7-4b2a-8116-437ae956a33d\",\n    \"detailSummaries\": [\n        {\n            \"summary\": \"<plc>: Protection Policy backup failed for Virtual Machine <asset> on vCenter <vCenterName> to <target>.\",\n            \"taskId\": \"86c8ac0a-4124-4696-a7b5-33f23ff5b7b7\"\n        },\n        {\n            \"summary\": \"plcName1: Protection Policy backup failed for Virtual Machine assetName1 on vCenter vCenter1 to DD1.\",\n            \"taskId\": \"40f6634f-900c-40c6-8256-106567e68d8b\"\n        }\n    ],\n    \"detailedDescription\": \"To support integration with the vSphere client UI, PPDM must register extensions with the vCenter. If this registration fails, these features will be unavailable.  However, PPDM will continue to work normally.\",\n    \"email\": true,\n    \"esrs\": false,\n    \"jobId\": \"d9b2670d-7701-4346-b3f4-9a356fe49563\",\n    \"messageArgs\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"responseAction\": \"The attempt will be retried until it succeeds, or the vSphere integration setting is changed for this vCenter.\",\n    \"source\": {\n        \"type\": \"DATA_MANAGER\"\n    },\n    \"supportDetails\": \"<string>\",\n    \"taskId\": \"86c8ac0a-4124-4696-a7b5-33f23ff5b7b7\",\n    \"userNote\": {\n        \"note\": \"<string>\",\n        \"updatedTime\": \"<dateTime>\",\n        \"username\": \"<string>\"\n    },\n    \"visibility\": true\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/alerts/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"alerts",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										}
									]
								},
								{
									"name": "Update alert acknowledgement by ID.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"acknowledgement\": {\n        \"acknowledgeState\": \"<string>\",\n        \"acknowledgeBy\": \"<string>\",\n        \"acknowledgeTime\": \"<dateTime>\"\n    },\n    \"id\": \"<string>\"\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/alerts/:id/acknowledgement",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"alerts",
												":id",
												"acknowledgement"
											],
											"variable": [
												{
													"id": "1c401b18-f684-4771-b3b7-cc351a4e4c25",
													"key": "id",
													"value": "<string>",
													"type": "string",
													"description": "(Required) ID of the alerts resource."
												}
											]
										},
										"description": "Updates acknowledgement object of the specified alert.\n> This endpoint supports execution by the following roles: admin\n"
									},
									"response": [
										{
											"name": "Resource updated.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"acknowledgement\": {\n        \"acknowledgeState\": \"ACKNOWLEDGED\",\n        \"acknowledgeBy\": \"admin\",\n        \"acknowledgeTime\": \"2019-08-13T01:00:43.852Z\"\n    },\n    \"id\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/alerts/:id/acknowledgement",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"alerts",
														":id",
														"acknowledgement"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"acknowledgement\": {\n  \"acknowledgeBy\": \"admin\",\n  \"acknowledgeState\": \"ACKNOWLEDGED\",\n  \"acknowledgeTime\": \"2019-08-13T01:00:43.852Z\"\n },\n \"id\": \"ef00e0ef-4110-69e4-fc06-4b8b19574d14\"\n}"
										},
										{
											"name": "Any server error that prevented the completion of the request.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"acknowledgement\": {\n        \"acknowledgeState\": \"ACKNOWLEDGED\",\n        \"acknowledgeBy\": \"admin\",\n        \"acknowledgeTime\": \"2019-08-13T01:00:43.852Z\"\n    },\n    \"id\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/alerts/:id/acknowledgement",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"alerts",
														":id",
														"acknowledgement"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The requested resource is not found.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"acknowledgement\": {\n        \"acknowledgeState\": \"ACKNOWLEDGED\",\n        \"acknowledgeBy\": \"admin\",\n        \"acknowledgeTime\": \"2019-08-13T01:00:43.852Z\"\n    },\n    \"id\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/alerts/:id/acknowledgement",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"alerts",
														":id",
														"acknowledgement"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The requestor is not authenticated to perform this operation.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"acknowledgement\": {\n        \"acknowledgeState\": \"ACKNOWLEDGED\",\n        \"acknowledgeBy\": \"admin\",\n        \"acknowledgeTime\": \"2019-08-13T01:00:43.852Z\"\n    },\n    \"id\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/alerts/:id/acknowledgement",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"alerts",
														":id",
														"acknowledgement"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The request is not valid.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"acknowledgement\": {\n        \"acknowledgeState\": \"ACKNOWLEDGED\",\n        \"acknowledgeBy\": \"admin\",\n        \"acknowledgeTime\": \"2019-08-13T01:00:43.852Z\"\n    },\n    \"id\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/alerts/:id/acknowledgement",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"alerts",
														":id",
														"acknowledgement"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"acknowledgement\": {\n        \"acknowledgeState\": \"ACKNOWLEDGED\",\n        \"acknowledgeBy\": \"admin\",\n        \"acknowledgeTime\": \"2019-08-13T01:00:43.852Z\"\n    },\n    \"id\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/alerts/:id/acknowledgement",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"alerts",
														":id",
														"acknowledgement"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Get all alerts.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/alerts?page=1&pageSize=100&filter=<string>&orderby=<string>&queryState=<string>&q=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"alerts"
									],
									"query": [
										{
											"key": "page",
											"value": "1",
											"description": "The page number to be returned. Must not be less than 1. See Tutorials - Page the List Result."
										},
										{
											"key": "pageSize",
											"value": "100",
											"description": "The number of resources to be returned. Must not be less than 1. See Tutorials - Page the List Result."
										},
										{
											"key": "filter",
											"value": "<string>",
											"description": "The filter string that is expressed using PowerProtect Data Manager filter syntax. See Tutorials - Filter the List Result."
										},
										{
											"key": "orderby",
											"value": "<string>",
											"description": "The attributes/fields to be sorted by. This parameter can combine with sort direction \"ASC\" or \"DESC\". Default direction is ASC. See Tutorials - Sort the List Result."
										},
										{
											"key": "queryState",
											"value": "<string>",
											"description": "Token string to use to retrieve the next page of a result. The initial search request with queryState must be queryState=BEGIN and a pageSize. After a search begins, subsequent responses include a token string to pass as a parameter for the next page retrieval. When the query state in the response that is returned from the previous search is END, no further results can be retrieved from this query. More details see Tutorials - Page the List Result."
										},
										{
											"key": "q",
											"value": "<string>",
											"description": "The general search text. For example q=VM_1"
										}
									]
								},
								"description": "Retrieves a list of alerts.\n> This endpoint supports execution by the following roles: admin\n\n> This endpoint supports pagination with types: random,serial\n"
							},
							"response": [
								{
									"name": "Any server error that prevented the completion of the request.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/alerts?page=1&pageSize=100&filter=<string>&orderby=<string>&queryState=<string>&q=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"alerts"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "<string>"
												},
												{
													"key": "orderby",
													"value": "<string>"
												},
												{
													"key": "queryState",
													"value": "<string>"
												},
												{
													"key": "q",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "Successfully returned available alert resources.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/alerts?page=1&pageSize=100&filter=<string>&orderby=<string>&queryState=<string>&q=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"alerts"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "<string>"
												},
												{
													"key": "orderby",
													"value": "<string>"
												},
												{
													"key": "queryState",
													"value": "<string>"
												},
												{
													"key": "q",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"content\": [\n  {\n   \"acknowledgement\": {\n    \"acknowledgeBy\": \"SYSTEM\",\n    \"acknowledgeState\": \"ACKNOWLEDGED\",\n    \"acknowledgeTime\": \"2019-08-13T01:00:43.852Z\"\n   },\n   \"category\": \"SYSTEM\",\n   \"detailSummaries\": [],\n   \"detailedDescription\": \"To support integration with the vSphere client UI, PPDM must register extensions with the vCenter. If this registration fails, these features will be unavailable.  However, PPDM will continue to work normally.\",\n   \"email\": true,\n   \"esrs\": false,\n   \"id\": \"ba243fe2-ccf7-4b2a-8116-437ae956a33d\",\n   \"jobId\": null,\n   \"message\": \"Failed to register extension with vCenter vc243150.\",\n   \"messageArgs\": [\n    \"vc243150\"\n   ],\n   \"messageID\": \"SYS0016\",\n   \"postedTime\": \"2019-08-13T01:00:00.423Z\",\n   \"responseAction\": \"The attempt will be retried until it succeeds, or the vSphere integration setting is changed for this vCenter.\",\n   \"severity\": \"WARNING\",\n   \"source\": {\n    \"type\": \"DATA_MANAGER\"\n   },\n   \"supportDetails\": null,\n   \"taskId\": null,\n   \"userNote\": null,\n   \"visibility\": true\n  },\n  {\n   \"acknowledgement\": {\n    \"acknowledgeBy\": \"SYSTEM\",\n    \"acknowledgeState\": \"ACKNOWLEDGED\",\n    \"acknowledgeTime\": \"2019-08-13T03:00:15.012Z\"\n   },\n   \"category\": \"SYSTEM\",\n   \"detailSummaries\": [],\n   \"detailedDescription\": \"To support integration with the vSphere client UI, PPDM must register extensions with the vCenter. If this registration fails, these features will be unavailable.  However, PPDM will continue to work normally.\",\n   \"email\": true,\n   \"esrs\": false,\n   \"id\": \"982cb2d5-a9fa-4334-be1c-f61dc151af8c\",\n   \"jobId\": null,\n   \"message\": \"Failed to register extension with vCenter vc243150.\",\n   \"messageArgs\": [\n    \"vc243150\"\n   ],\n   \"messageID\": \"SYS0016\",\n   \"postedTime\": \"2019-08-13T02:48:22.494Z\",\n   \"responseAction\": \"The attempt will be retried until it succeeds, or the vSphere integration setting is changed for this vCenter.\",\n   \"severity\": \"WARNING\",\n   \"source\": {\n    \"type\": \"DATA_MANAGER\"\n   },\n   \"supportDetails\": null,\n   \"taskId\": null,\n   \"userNote\": null,\n   \"visibility\": true\n  },\n  {\n   \"acknowledgement\": {\n    \"acknowledgeBy\": \"SYSTEM\",\n    \"acknowledgeState\": \"ACKNOWLEDGED\",\n    \"acknowledgeTime\": \"2019-08-13T08:01:15.929Z\"\n   },\n   \"category\": \"SYSTEM\",\n   \"detailSummaries\": [],\n   \"detailedDescription\": \"To support integration with the vSphere client UI, PPDM must register extensions with the vCenter. If this registration fails, these features will be unavailable.  However, PPDM will continue to work normally.\",\n   \"email\": true,\n   \"esrs\": false,\n   \"id\": \"56e91fdb-09d2-417f-8b89-c033db741f81\",\n   \"jobId\": null,\n   \"message\": \"Failed to register extension with vCenter vc243150.\",\n   \"messageArgs\": [\n    \"vc243150\"\n   ],\n   \"messageID\": \"SYS0016\",\n   \"postedTime\": \"2019-08-13T08:00:00.611Z\",\n   \"responseAction\": \"The attempt will be retried until it succeeds, or the vSphere integration setting is changed for this vCenter.\",\n   \"severity\": \"WARNING\",\n   \"source\": {\n    \"type\": \"DATA_MANAGER\"\n   },\n   \"supportDetails\": null,\n   \"taskId\": null,\n   \"userNote\": null,\n   \"visibility\": true\n  },\n  {\n   \"acknowledgement\": {\n    \"acknowledgeBy\": \"SYSTEM\",\n    \"acknowledgeState\": \"ACKNOWLEDGED\",\n    \"acknowledgeTime\": \"2019-08-13T13:02:05.898Z\"\n   },\n   \"category\": \"SYSTEM\",\n   \"detailSummaries\": [],\n   \"detailedDescription\": \"To support integration with the vSphere client UI, PPDM must register extensions with the vCenter. If this registration fails, these features will be unavailable.  However, PPDM will continue to work normally.\",\n   \"email\": true,\n   \"esrs\": false,\n   \"id\": \"175157c2-7161-4104-a0a6-5b41b8fb6c95\",\n   \"jobId\": null,\n   \"message\": \"Failed to register extension with vCenter vc243150.\",\n   \"messageArgs\": [\n    \"vc243150\"\n   ],\n   \"messageID\": \"SYS0016\",\n   \"postedTime\": \"2019-08-13T13:00:00.466Z\",\n   \"responseAction\": \"The attempt will be retried until it succeeds, or the vSphere integration setting is changed for this vCenter.\",\n   \"severity\": \"WARNING\",\n   \"source\": {\n    \"type\": \"DATA_MANAGER\"\n   },\n   \"supportDetails\": null,\n   \"taskId\": null,\n   \"userNote\": null,\n   \"visibility\": true\n  },\n  {\n   \"acknowledgement\": {\n    \"acknowledgeBy\": \"SYSTEM\",\n    \"acknowledgeState\": \"ACKNOWLEDGED\",\n    \"acknowledgeTime\": \"2019-08-13T16:00:06.575Z\"\n   },\n   \"category\": \"SYSTEM\",\n   \"detailSummaries\": [],\n   \"detailedDescription\": \"To support integration with the vSphere client UI, PPDM must register extensions with the vCenter. If this registration fails, these features will be unavailable.  However, PPDM will continue to work normally.\",\n   \"email\": true,\n   \"esrs\": false,\n   \"id\": \"b5d01531-8934-4d4f-9c39-913c0c16c22d\",\n   \"jobId\": null,\n   \"message\": \"Failed to register extension with vCenter vc243150.\",\n   \"messageArgs\": [\n    \"vc243150\"\n   ],\n   \"messageID\": \"SYS0016\",\n   \"postedTime\": \"2019-08-13T16:00:00.717Z\",\n   \"responseAction\": \"The attempt will be retried until it succeeds, or the vSphere integration setting is changed for this vCenter.\",\n   \"severity\": \"WARNING\",\n   \"source\": {\n    \"type\": \"DATA_MANAGER\"\n   },\n   \"supportDetails\": null,\n   \"taskId\": null,\n   \"userNote\": null,\n   \"visibility\": true\n  },\n  {\n   \"acknowledgement\": {\n    \"acknowledgeBy\": null,\n    \"acknowledgeState\": \"UNACKNOWLEDGED\",\n    \"acknowledgeTime\": null\n   },\n   \"category\": \"PROTECTION\",\n   \"detailSummaries\": [\n    {\n     \"summary\": \"<plc>: Protection Policy backup failed for Virtual Machine <asset> on vCenter <vCenterName> to <target>.\",\n     \"taskId\": \"ecfd3a06-f05a-48a8-bbd1-f7a33e51f4b3\"\n    },\n    {\n     \"summary\": \"plcName1: Protection Policy backup failed for Virtual Machine assetName1 on vCenter vCenter1 to DD1.\",\n     \"taskId\": \"8a023e87-5670-4295-87e3-a1dc4269561e\"\n    }\n   ],\n   \"detailedDescription\": \"Protection job failed for the virtual machine.\",\n   \"email\": true,\n   \"esrs\": false,\n   \"id\": \"41a9ca55-bf4c-4b02-8149-19dda1326391\",\n   \"jobId\": \"b99575a7-cc2e-47d8-8cf7-e7bb4e5d594b\",\n   \"message\": \"Protection job failed for the virtual machine. Job: Test Job - 1565724716040\",\n   \"messageArgs\": null,\n   \"messageID\": \"ABV0001\",\n   \"postedTime\": \"2019-08-13T19:31:56.716Z\",\n   \"responseAction\": \"Check the Jobs Monitor for details and/or contact the backup administrator.\",\n   \"severity\": \"WARNING\",\n   \"source\": {\n    \"type\": \"DATA_MANAGER\"\n   },\n   \"supportDetails\": null,\n   \"taskId\": null,\n   \"userNote\": null,\n   \"visibility\": true\n  },\n  {\n   \"acknowledgement\": {\n    \"acknowledgeBy\": null,\n    \"acknowledgeState\": \"UNACKNOWLEDGED\",\n    \"acknowledgeTime\": null\n   },\n   \"category\": \"PROTECTION\",\n   \"detailSummaries\": [\n    {\n     \"summary\": \"plcName1: Protection Policy backup failed for Virtual Machine assetName1 on vCenter vCenter1 to DD1.\",\n     \"taskId\": \"92026c81-c1e6-4680-8a52-9989211f829a\"\n    },\n    {\n     \"summary\": \"<plc>: Protection Policy backup failed for Virtual Machine <asset> on vCenter <vCenterName> to <target>.\",\n     \"taskId\": \"64fa31d7-196f-495e-aeb2-15b91125d651\"\n    }\n   ],\n   \"detailedDescription\": \"Protection job failed for the virtual machine.\",\n   \"email\": true,\n   \"esrs\": false,\n   \"id\": \"cf91e168-f079-4d26-83f2-77b9bd37358a\",\n   \"jobId\": \"d9b2670d-7701-4346-b3f4-9a356fe49563\",\n   \"message\": \"Protection job failed for the virtual machine. Job: Test Job - 1565724988384\",\n   \"messageArgs\": null,\n   \"messageID\": \"ABV0001\",\n   \"postedTime\": \"2019-08-13T19:36:29.232Z\",\n   \"responseAction\": \"Check the Jobs Monitor for details and/or contact the backup administrator.\",\n   \"severity\": \"WARNING\",\n   \"source\": {\n    \"type\": \"DATA_MANAGER\"\n   },\n   \"supportDetails\": null,\n   \"taskId\": null,\n   \"userNote\": null,\n   \"visibility\": true\n  },\n  {\n   \"acknowledgement\": {\n    \"acknowledgeBy\": null,\n    \"acknowledgeState\": \"UNACKNOWLEDGED\",\n    \"acknowledgeTime\": null\n   },\n   \"category\": \"PROTECTION\",\n   \"detailSummaries\": [\n    {\n     \"summary\": \"<plc>: Protection Policy backup failed for Virtual Machine <asset> on vCenter <vCenterName> to <target>.\",\n     \"taskId\": \"86c8ac0a-4124-4696-a7b5-33f23ff5b7b7\"\n    },\n    {\n     \"summary\": \"plcName1: Protection Policy backup failed for Virtual Machine assetName1 on vCenter vCenter1 to DD1.\",\n     \"taskId\": \"40f6634f-900c-40c6-8256-106567e68d8b\"\n    }\n   ],\n   \"detailedDescription\": \"Protection job failed for the virtual machine.\",\n   \"email\": true,\n   \"esrs\": false,\n   \"id\": \"361dacc9-b0cc-4bcf-843d-c8d0bcc854e4\",\n   \"jobId\": \"07121854-5a45-4fdb-94df-ed082b1271c5\",\n   \"message\": \"Protection job failed for the virtual machine. Job: Test Job - 1565724740564\",\n   \"messageArgs\": null,\n   \"messageID\": \"ABV0001\",\n   \"postedTime\": \"2019-08-13T19:32:20.931Z\",\n   \"responseAction\": \"Check the Jobs Monitor for details and/or contact the backup administrator.\",\n   \"severity\": \"WARNING\",\n   \"source\": {\n    \"type\": \"DATA_MANAGER\"\n   },\n   \"supportDetails\": null,\n   \"taskId\": null,\n   \"userNote\": null,\n   \"visibility\": true\n  },\n  {\n   \"acknowledgement\": {\n    \"acknowledgeBy\": null,\n    \"acknowledgeState\": \"UNACKNOWLEDGED\",\n    \"acknowledgeTime\": null\n   },\n   \"category\": \"PROTECTION_POLICY\",\n   \"detailSummaries\": [\n    {\n     \"summary\": \"plcName: Protection Policy configuration failed.\",\n     \"taskId\": \"98284cb0-a549-4b3d-a83c-6d51e945b035\"\n    }\n   ],\n   \"detailedDescription\": \"Protection policy configuration failed.\",\n   \"email\": true,\n   \"esrs\": false,\n   \"id\": \"32996b51-014e-44b8-93ba-a95076a9412a\",\n   \"jobId\": \"07121854-5a45-4fdb-94df-ed082b1271c5\",\n   \"message\": \"Protection policy configuration failed. Job: Test Job - 1565724740564\",\n   \"messageArgs\": null,\n   \"messageID\": \"CFG0001\",\n   \"postedTime\": \"2019-08-13T19:32:21.069Z\",\n   \"responseAction\": \"\",\n   \"severity\": \"CRITICAL\",\n   \"source\": {\n    \"type\": \"DATA_MANAGER\"\n   },\n   \"supportDetails\": null,\n   \"taskId\": null,\n   \"userNote\": null,\n   \"visibility\": true\n  }\n ],\n \"page\": {\n  \"number\": 1,\n  \"size\": 10,\n  \"totalElements\": 95,\n  \"totalPages\": 10\n }\n}"
								},
								{
									"name": "The requestor is not authenticated to perform this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/alerts?page=1&pageSize=100&filter=<string>&orderby=<string>&queryState=<string>&q=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"alerts"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "<string>"
												},
												{
													"key": "orderby",
													"value": "<string>"
												},
												{
													"key": "queryState",
													"value": "<string>"
												},
												{
													"key": "q",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "The request is not valid. Check the request parameters.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/alerts?page=1&pageSize=100&filter=<string>&orderby=<string>&queryState=<string>&q=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"alerts"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "<string>"
												},
												{
													"key": "orderby",
													"value": "<string>"
												},
												{
													"key": "queryState",
													"value": "<string>"
												},
												{
													"key": "q",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "The requestor is not authorized to perform this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/alerts?page=1&pageSize=100&filter=<string>&orderby=<string>&queryState=<string>&q=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"alerts"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "<string>"
												},
												{
													"key": "orderby",
													"value": "<string>"
												},
												{
													"key": "queryState",
													"value": "<string>"
												},
												{
													"key": "q",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								}
							]
						},
						{
							"name": "Update message acknowledgements by ID.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"messageIds\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"acknowledgement\": {\n        \"acknowledgeState\": \"<string>\",\n        \"acknowledgeBy\": \"<string>\",\n        \"acknowledgeTime\": \"<dateTime>\"\n    },\n    \"acknowledgementCount\": \"<integer>\",\n    \"acknowledgementReceivedCount\": \"<integer>\",\n    \"bulkResults\": [\n        {\n            \"acknowledgement\": {\n                \"acknowledgeState\": \"<string>\",\n                \"acknowledgeBy\": \"<string>\",\n                \"acknowledgeTime\": \"<dateTime>\"\n            },\n            \"errorResponseObject\": {\n                \"code\": \"<integer>\",\n                \"path\": \"<string>\",\n                \"reason\": \"<string>\",\n                \"remediation\": \"<string>\",\n                \"timestamp\": \"<long>\"\n            },\n            \"id\": \"<string>\"\n        },\n        {\n            \"acknowledgement\": {\n                \"acknowledgeState\": \"<string>\",\n                \"acknowledgeBy\": \"<string>\",\n                \"acknowledgeTime\": \"<dateTime>\"\n            },\n            \"errorResponseObject\": {\n                \"code\": \"<integer>\",\n                \"path\": \"<string>\",\n                \"reason\": \"<string>\",\n                \"remediation\": \"<string>\",\n                \"timestamp\": \"<long>\"\n            },\n            \"id\": \"<string>\"\n        }\n    ]\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/alerts/acknowledgements",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"alerts",
										"acknowledgements"
									]
								},
								"description": "Updates acknowledgement object of bulk messages.\n> This endpoint supports execution by the following roles: admin\n"
							},
							"response": [
								{
									"name": "The request is not valid.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"messageIds\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"acknowledgement\": {\n        \"acknowledgeState\": \"ACKNOWLEDGED\",\n        \"acknowledgeBy\": \"admin\",\n        \"acknowledgeTime\": \"2019-08-13T01:00:43.852Z\"\n    },\n    \"acknowledgementCount\": \"<integer>\",\n    \"acknowledgementReceivedCount\": \"<integer>\",\n    \"bulkResults\": [\n        {\n            \"acknowledgement\": {\n                \"acknowledgeState\": \"ACKNOWLEDGED\",\n                \"acknowledgeBy\": \"admin\",\n                \"acknowledgeTime\": \"2019-08-13T01:00:43.852Z\"\n            },\n            \"errorResponseObject\": {\n                \"code\": \"<integer>\",\n                \"path\": \"<string>\",\n                \"reason\": \"<string>\",\n                \"remediation\": \"<string>\",\n                \"timestamp\": \"<long>\"\n            },\n            \"id\": \"<string>\"\n        },\n        {\n            \"acknowledgement\": {\n                \"acknowledgeState\": \"ACKNOWLEDGED\",\n                \"acknowledgeBy\": \"admin\",\n                \"acknowledgeTime\": \"2019-08-13T01:00:43.852Z\"\n            },\n            \"errorResponseObject\": {\n                \"code\": \"<integer>\",\n                \"path\": \"<string>\",\n                \"reason\": \"<string>\",\n                \"remediation\": \"<string>\",\n                \"timestamp\": \"<long>\"\n            },\n            \"id\": \"<string>\"\n        }\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/alerts/acknowledgements",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"alerts",
												"acknowledgements"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "Resources updated.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"messageIds\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"acknowledgement\": {\n        \"acknowledgeState\": \"ACKNOWLEDGED\",\n        \"acknowledgeBy\": \"admin\",\n        \"acknowledgeTime\": \"2019-08-13T01:00:43.852Z\"\n    },\n    \"acknowledgementCount\": \"<integer>\",\n    \"acknowledgementReceivedCount\": \"<integer>\",\n    \"bulkResults\": [\n        {\n            \"acknowledgement\": {\n                \"acknowledgeState\": \"ACKNOWLEDGED\",\n                \"acknowledgeBy\": \"admin\",\n                \"acknowledgeTime\": \"2019-08-13T01:00:43.852Z\"\n            },\n            \"errorResponseObject\": {\n                \"code\": \"<integer>\",\n                \"path\": \"<string>\",\n                \"reason\": \"<string>\",\n                \"remediation\": \"<string>\",\n                \"timestamp\": \"<long>\"\n            },\n            \"id\": \"<string>\"\n        },\n        {\n            \"acknowledgement\": {\n                \"acknowledgeState\": \"ACKNOWLEDGED\",\n                \"acknowledgeBy\": \"admin\",\n                \"acknowledgeTime\": \"2019-08-13T01:00:43.852Z\"\n            },\n            \"errorResponseObject\": {\n                \"code\": \"<integer>\",\n                \"path\": \"<string>\",\n                \"reason\": \"<string>\",\n                \"remediation\": \"<string>\",\n                \"timestamp\": \"<long>\"\n            },\n            \"id\": \"<string>\"\n        }\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/alerts/acknowledgements",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"alerts",
												"acknowledgements"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"acknowledgementCount\": 3,\n \"acknowledgementReceivedCount\": 3,\n \"bulkResults\": [\n  {\n   \"acknowledgement\": {\n    \"acknowledgeBy\": \"admin\",\n    \"acknowledgeState\": \"ACKNOWLEDGED\",\n    \"acknowledgeTime\": \"2019-10-25T20:07:00.616Z\"\n   },\n   \"id\": \"e0b454c7-e146-400e-b3b3-ebac8a99b6a1\"\n  },\n  {\n   \"acknowledgement\": {\n    \"acknowledgeBy\": \"admin\",\n    \"acknowledgeState\": \"ACKNOWLEDGED\",\n    \"acknowledgeTime\": \"2019-10-25T20:07:00.663Z\"\n   },\n   \"id\": \"59ad4787-6377-4e57-bf0a-00e88ca22af1\"\n  },\n  {\n   \"acknowledgement\": {\n    \"acknowledgeBy\": \"admin\",\n    \"acknowledgeState\": \"ACKNOWLEDGED\",\n    \"acknowledgeTime\": \"2019-10-25T20:07:00.678Z\"\n   },\n   \"id\": \"1f3aa6eb-b765-44f6-899f-f3503c44e52d\"\n  }\n ]\n}"
								},
								{
									"name": "Any server error that prevented the completion of the request.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"messageIds\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"acknowledgement\": {\n        \"acknowledgeState\": \"ACKNOWLEDGED\",\n        \"acknowledgeBy\": \"admin\",\n        \"acknowledgeTime\": \"2019-08-13T01:00:43.852Z\"\n    },\n    \"acknowledgementCount\": \"<integer>\",\n    \"acknowledgementReceivedCount\": \"<integer>\",\n    \"bulkResults\": [\n        {\n            \"acknowledgement\": {\n                \"acknowledgeState\": \"ACKNOWLEDGED\",\n                \"acknowledgeBy\": \"admin\",\n                \"acknowledgeTime\": \"2019-08-13T01:00:43.852Z\"\n            },\n            \"errorResponseObject\": {\n                \"code\": \"<integer>\",\n                \"path\": \"<string>\",\n                \"reason\": \"<string>\",\n                \"remediation\": \"<string>\",\n                \"timestamp\": \"<long>\"\n            },\n            \"id\": \"<string>\"\n        },\n        {\n            \"acknowledgement\": {\n                \"acknowledgeState\": \"ACKNOWLEDGED\",\n                \"acknowledgeBy\": \"admin\",\n                \"acknowledgeTime\": \"2019-08-13T01:00:43.852Z\"\n            },\n            \"errorResponseObject\": {\n                \"code\": \"<integer>\",\n                \"path\": \"<string>\",\n                \"reason\": \"<string>\",\n                \"remediation\": \"<string>\",\n                \"timestamp\": \"<long>\"\n            },\n            \"id\": \"<string>\"\n        }\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/alerts/acknowledgements",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"alerts",
												"acknowledgements"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "The requestor is not authorized to perform this operation.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"messageIds\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"acknowledgement\": {\n        \"acknowledgeState\": \"ACKNOWLEDGED\",\n        \"acknowledgeBy\": \"admin\",\n        \"acknowledgeTime\": \"2019-08-13T01:00:43.852Z\"\n    },\n    \"acknowledgementCount\": \"<integer>\",\n    \"acknowledgementReceivedCount\": \"<integer>\",\n    \"bulkResults\": [\n        {\n            \"acknowledgement\": {\n                \"acknowledgeState\": \"ACKNOWLEDGED\",\n                \"acknowledgeBy\": \"admin\",\n                \"acknowledgeTime\": \"2019-08-13T01:00:43.852Z\"\n            },\n            \"errorResponseObject\": {\n                \"code\": \"<integer>\",\n                \"path\": \"<string>\",\n                \"reason\": \"<string>\",\n                \"remediation\": \"<string>\",\n                \"timestamp\": \"<long>\"\n            },\n            \"id\": \"<string>\"\n        },\n        {\n            \"acknowledgement\": {\n                \"acknowledgeState\": \"ACKNOWLEDGED\",\n                \"acknowledgeBy\": \"admin\",\n                \"acknowledgeTime\": \"2019-08-13T01:00:43.852Z\"\n            },\n            \"errorResponseObject\": {\n                \"code\": \"<integer>\",\n                \"path\": \"<string>\",\n                \"reason\": \"<string>\",\n                \"remediation\": \"<string>\",\n                \"timestamp\": \"<long>\"\n            },\n            \"id\": \"<string>\"\n        }\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/alerts/acknowledgements",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"alerts",
												"acknowledgements"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "The requested resources is not found.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"messageIds\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"acknowledgement\": {\n        \"acknowledgeState\": \"ACKNOWLEDGED\",\n        \"acknowledgeBy\": \"admin\",\n        \"acknowledgeTime\": \"2019-08-13T01:00:43.852Z\"\n    },\n    \"acknowledgementCount\": \"<integer>\",\n    \"acknowledgementReceivedCount\": \"<integer>\",\n    \"bulkResults\": [\n        {\n            \"acknowledgement\": {\n                \"acknowledgeState\": \"ACKNOWLEDGED\",\n                \"acknowledgeBy\": \"admin\",\n                \"acknowledgeTime\": \"2019-08-13T01:00:43.852Z\"\n            },\n            \"errorResponseObject\": {\n                \"code\": \"<integer>\",\n                \"path\": \"<string>\",\n                \"reason\": \"<string>\",\n                \"remediation\": \"<string>\",\n                \"timestamp\": \"<long>\"\n            },\n            \"id\": \"<string>\"\n        },\n        {\n            \"acknowledgement\": {\n                \"acknowledgeState\": \"ACKNOWLEDGED\",\n                \"acknowledgeBy\": \"admin\",\n                \"acknowledgeTime\": \"2019-08-13T01:00:43.852Z\"\n            },\n            \"errorResponseObject\": {\n                \"code\": \"<integer>\",\n                \"path\": \"<string>\",\n                \"reason\": \"<string>\",\n                \"remediation\": \"<string>\",\n                \"timestamp\": \"<long>\"\n            },\n            \"id\": \"<string>\"\n        }\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/alerts/acknowledgements",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"alerts",
												"acknowledgements"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "The requestor is not authenticated to perform this operation.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"messageIds\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"acknowledgement\": {\n        \"acknowledgeState\": \"ACKNOWLEDGED\",\n        \"acknowledgeBy\": \"admin\",\n        \"acknowledgeTime\": \"2019-08-13T01:00:43.852Z\"\n    },\n    \"acknowledgementCount\": \"<integer>\",\n    \"acknowledgementReceivedCount\": \"<integer>\",\n    \"bulkResults\": [\n        {\n            \"acknowledgement\": {\n                \"acknowledgeState\": \"ACKNOWLEDGED\",\n                \"acknowledgeBy\": \"admin\",\n                \"acknowledgeTime\": \"2019-08-13T01:00:43.852Z\"\n            },\n            \"errorResponseObject\": {\n                \"code\": \"<integer>\",\n                \"path\": \"<string>\",\n                \"reason\": \"<string>\",\n                \"remediation\": \"<string>\",\n                \"timestamp\": \"<long>\"\n            },\n            \"id\": \"<string>\"\n        },\n        {\n            \"acknowledgement\": {\n                \"acknowledgeState\": \"ACKNOWLEDGED\",\n                \"acknowledgeBy\": \"admin\",\n                \"acknowledgeTime\": \"2019-08-13T01:00:43.852Z\"\n            },\n            \"errorResponseObject\": {\n                \"code\": \"<integer>\",\n                \"path\": \"<string>\",\n                \"reason\": \"<string>\",\n                \"remediation\": \"<string>\",\n                \"timestamp\": \"<long>\"\n            },\n            \"id\": \"<string>\"\n        }\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/alerts/acknowledgements",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"alerts",
												"acknowledgements"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "assets",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Get an asset by its ID.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/assets/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"assets",
												":id"
											],
											"variable": [
												{
													"id": "97c5b38b-5c58-4938-9633-e20ccc17ddd3",
													"key": "id",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The asset ID."
												}
											]
										},
										"description": "Retrieves an asset by its ID. Use this API request to get detailed information about the asset.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
									},
									"response": [
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/assets/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"assets",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The requested asset does not exist.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/assets/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"assets",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Successfully returned the asset.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/assets/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"assets",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"name\": \"fugiat ipsum\",\n \"type\": \"MICROSOFT_SQL_DATABASE\",\n \"details\": {\n  \"database\": {\n   \"appServerId\": \"nostrud ad minim ut\",\n   \"appServerName\": \"qui ipsum minim Excepteur culpa\",\n   \"appVersion\": \"aliquip\",\n   \"asm\": \"ut amet\",\n   \"clusterName\": \"occaecat laborum\",\n   \"clusterType\": \"consequat deserunt ad\",\n   \"dbId\": \"dolore consequat tempor in\",\n   \"lastBackup\": \"commodo\",\n   \"protectionEngineFlow\": \"VMDIRECT\",\n   \"protectionType\": \"nulla adipisicing\",\n   \"sid\": \"minim est Excepteur dolore\"\n  },\n  \"fileSystem\": {\n   \"fileSystemType\": \"adipisicing Lorem mo\",\n   \"guid\": \"reprehen\",\n   \"hostName\": \"cupidatat ea consectetur dolor\",\n   \"hostOS\": \"quis qui aliqua non\",\n   \"lastBackup\": \"mollit minim\",\n   \"protectionType\": \"nulla proident dolore \"\n  },\n  \"k8s\": {\n   \"externalCreatedAt\": \"consequat ut aute elit\",\n   \"inventorySourceId\": \"consequat Ut\",\n   \"inventorySourceName\": \"ullamco\",\n   \"lastBackup\": \"nisi sed te\",\n   \"namespace\": \"in deserunt minim\",\n   \"persistentVolumeClaim\": {\n    \"accessModes\": [\n     \"aliqua\",\n     \"quis\"\n    ],\n    \"excluded\": false,\n    \"status\": \"laboris elit magna voluptate minim\",\n    \"storageClassName\": \"in Lorem\",\n    \"volumeMode\": \"Ut ut\",\n    \"volumeName\": \"irure ullamco Ut\"\n   },\n   \"size\": -83580764,\n   \"subType\": \"eu do deserunt ut\",\n   \"uid\": \"in eu\"\n  },\n  \"nasShare\": {\n   \"fileSystemName\": \"d\",\n   \"nasServer\": {\n    \"addresses\": [\n     {\n      \"type\": \"IPV6\",\n      \"value\": \"dolor\"\n     },\n     {\n      \"type\": \"IPV4\",\n      \"value\": \"est amet culpa\"\n     }\n    ],\n    \"name\": \"aliquip dolore\"\n   },\n   \"protocol\": \"NFS\"\n  },\n  \"vm\": {\n   \"clusterName\": \"magna eiusmod\",\n   \"dataMoverType\": \"INHERIT_FROM_POLICY\",\n   \"datacenter\": \"nisi culpa\",\n   \"datastore\": [\n    {\n     \"datastoreMoref\": \"reprehenderit\",\n     \"datastoreName\": \"nostrud nulla dolore ea\"\n    },\n    {\n     \"datastoreMoref\": \"exercitation officia eiusmod dolor\",\n     \"datastoreName\": \"amet elit laboris cupidatat\"\n    }\n   ],\n   \"disks\": [\n    {\n     \"datastoreMoref\": \"ea laboris esse\",\n     \"eagerlyScrub\": false,\n     \"excluded\": true,\n     \"key\": -36830023,\n     \"label\": \"irure\",\n     \"name\": \"anim dolore deserunt do\",\n     \"sizeInBytes\": 35080515,\n     \"thinProvisioned\": false,\n     \"usedBytes\": 91878696.85523391\n    },\n    {\n     \"datastoreMoref\": \"ad Duis sunt nostrud\",\n     \"eagerlyScrub\": true,\n     \"excluded\": true,\n     \"key\": -67262562,\n     \"label\": \"Duis laborum deserunt\",\n     \"name\": \"dolore\",\n     \"sizeInBytes\": 44650296,\n     \"thinProvisioned\": true,\n     \"usedBytes\": -74822768.39644952\n    }\n   ],\n   \"dnsName\": \"aliquip dolor qui\",\n   \"esxName\": \"quis Ut anim ullamco\",\n   \"externalId\": \"in laborum\",\n   \"folder\": \"ut Duis cillum fugiat\",\n   \"guestOS\": \"tempor esse dolore\",\n   \"hostMoref\": \"esse id amet Ut\",\n   \"hostName\": \"sint non occaecat\",\n   \"inventoryPath\": \"aliquip consequat dolor esse eiusmod\",\n   \"inventorySourceId\": \"adipisicing\",\n   \"inventorySourceName\": \"sint eu deserunt\",\n   \"primaryIpAddress\": \"est\",\n   \"protectedApplication\": \"NONE\",\n   \"resourcePool\": \"velit aute tempor proident\",\n   \"vApp\": \"dolor dolor laboris ea\",\n   \"vcenterName\": \"tempor\",\n   \"vmBiosUuid\": \"nostrud aliqua anim\",\n   \"vmMoref\": \"laborum\"\n  },\n  \"vmaxStorageGroup\": {\n   \"configuration\": {\n    \"backupDevice\": {\n     \"guid\": \"in\",\n     \"name\": \"consectetur sunt sed in\",\n     \"uri\": \"dolore\"\n    },\n    \"backupStorage\": {\n     \"guid\": \"ex nos\",\n     \"name\": \"quis\",\n     \"uri\": \"reprehenderit\"\n    },\n    \"restoreDevice\": {\n     \"guid\": \"esse in Lorem\",\n     \"name\": \"occaecat aliquip consectetur incididunt\",\n     \"uri\": \"in Lorem\"\n    },\n    \"restoreStorage\": {\n     \"guid\": \"voluptate pariatur ipsum proident\",\n     \"name\": \"laborum \",\n     \"uri\": \"Excepteur esse\"\n    }\n   },\n   \"coordinatingHostId\": \"consectetur minim dolor qui\",\n   \"coordinatingHostname\": \"co\"\n  }\n },\n \"_embedded\": {\n  \"protectionPolicy\": {\n   \"id\": \"eiusmod ut non qui\",\n   \"name\": \"reprehenderit et ut quis ut\",\n   \"protectionEngine\": \"voluptate incididunt sint sunt non\",\n   \"type\": \"aliqua est qui\"\n  },\n  \"protectionlifeCycle\": {\n   \"id\": \"dolore sunt sed et culpa\",\n   \"name\": \"dolor fugiat\",\n   \"protectionEngine\": \"adipisicing est\",\n   \"type\": \"exercitation aliqua dolor\"\n  },\n  \"storageSystem\": {\n   \"id\": \"cillum\",\n   \"name\": \"officia laborum elit fugiat\"\n  }\n },\n \"assetGroupId\": \"in veniam dolore ad\",\n \"backupDetails\": [\n  {\n   \"backupType\": \"LOG\",\n   \"parallelism\": 25090426\n  },\n  {\n   \"backupType\": \"SYNTHETIC_FULL\",\n   \"parallelism\": 66135692\n  }\n ],\n \"createdAt\": \"2016-04-17T05:23:36.754Z\",\n \"credentialId\": \"in\",\n \"dataTargetIds\": \"sunt Excepteur occaecat Duis\",\n \"deleted\": false,\n \"filterIds\": [\n  \"Excepteur Duis cupidatat irure\",\n  \"consectetur\"\n ],\n \"id\": \"nulla occaecat aute ad\",\n \"lastAvailableCopyTime\": \"2010-08-15T13:43:13.855Z\",\n \"networkLabel\": \"laboris minim nisi\",\n \"protectable\": true,\n \"protectionCapacity\": {\n  \"size\": 22033521,\n  \"time\": \"2011-06-15T07:46:52.671Z\"\n },\n \"protectionLifeCycleId\": \"laborum quis qui\",\n \"protectionPolicy\": {\n  \"id\": \"culpa nostrud nul\",\n  \"name\": \"minim laboris deserunt in\",\n  \"protectionEngine\": \"irure ea aute\",\n  \"type\": \"do consectetur\"\n },\n \"protectionPolicyId\": \"aute veniam\",\n \"ruleId\": \"proident veniam nostrud\",\n \"ruleName\": \"adipisicing nulla eu\",\n \"size\": 94566600,\n \"updatedAt\": \"1971-11-21T10:16:44.102Z\",\n \"userTags\": [\n  \"e\",\n  \"Duis et deserunt dolor\"\n ],\n \"vmMoref\": \"ullamco aliqua\"\n}"
										},
										{
											"name": "The request is not valid.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/assets/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"assets",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The requestor is not allowed to perform this operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/assets/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"assets",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/assets/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"assets",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										}
									]
								},
								{
									"name": "Set disks excluded status of an asset.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"details\": {\n        \"vm\": {\n            \"disks\": [\n                {\n                    \"excluded\": \"<boolean>\",\n                    \"key\": \"<integer>\",\n                    \"name\": \"<string>\"\n                },\n                {\n                    \"excluded\": \"<boolean>\",\n                    \"key\": \"<integer>\",\n                    \"name\": \"<string>\"\n                }\n            ]\n        }\n    },\n    \"id\": \"<string>\"\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/assets/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"assets",
												":id"
											],
											"variable": [
												{
													"id": "fd99b759-f90d-49c4-b754-1149e0d038aa",
													"key": "id",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The asset ID."
												}
											]
										},
										"description": "Sends patch request to set the VM disk excluded status to true or false. Each patch request sets only one asset by the specified ID.\n> This endpoint supports execution by the following roles: admin\n"
									},
									"response": [
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"details\": {\n        \"vm\": {\n            \"disks\": [\n                {\n                    \"excluded\": \"<boolean>\",\n                    \"key\": \"<integer>\",\n                    \"name\": \"<string>\"\n                },\n                {\n                    \"excluded\": \"<boolean>\",\n                    \"key\": \"<integer>\",\n                    \"name\": \"<string>\"\n                }\n            ]\n        }\n    },\n    \"id\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/assets/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"assets",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"details\": {\n        \"vm\": {\n            \"disks\": [\n                {\n                    \"excluded\": \"<boolean>\",\n                    \"key\": \"<integer>\",\n                    \"name\": \"<string>\"\n                },\n                {\n                    \"excluded\": \"<boolean>\",\n                    \"key\": \"<integer>\",\n                    \"name\": \"<string>\"\n                }\n            ]\n        }\n    },\n    \"id\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/assets/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"assets",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The request is not valid.",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"details\": {\n        \"vm\": {\n            \"disks\": [\n                {\n                    \"excluded\": \"<boolean>\",\n                    \"key\": \"<integer>\",\n                    \"name\": \"<string>\"\n                },\n                {\n                    \"excluded\": \"<boolean>\",\n                    \"key\": \"<integer>\",\n                    \"name\": \"<string>\"\n                }\n            ]\n        }\n    },\n    \"id\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/assets/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"assets",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The requestor is not allowed to perform this operation.",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"details\": {\n        \"vm\": {\n            \"disks\": [\n                {\n                    \"excluded\": \"<boolean>\",\n                    \"key\": \"<integer>\",\n                    \"name\": \"<string>\"\n                },\n                {\n                    \"excluded\": \"<boolean>\",\n                    \"key\": \"<integer>\",\n                    \"name\": \"<string>\"\n                }\n            ]\n        }\n    },\n    \"id\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/assets/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"assets",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The response shows the asset that includes the updated excluded disk status.",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"details\": {\n        \"vm\": {\n            \"disks\": [\n                {\n                    \"excluded\": \"<boolean>\",\n                    \"key\": \"<integer>\",\n                    \"name\": \"<string>\"\n                },\n                {\n                    \"excluded\": \"<boolean>\",\n                    \"key\": \"<integer>\",\n                    \"name\": \"<string>\"\n                }\n            ]\n        }\n    },\n    \"id\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/assets/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"assets",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"name\": \"fugiat ipsum\",\n \"type\": \"MICROSOFT_SQL_DATABASE\",\n \"details\": {\n  \"database\": {\n   \"appServerId\": \"nostrud ad minim ut\",\n   \"appServerName\": \"qui ipsum minim Excepteur culpa\",\n   \"appVersion\": \"aliquip\",\n   \"asm\": \"ut amet\",\n   \"clusterName\": \"occaecat laborum\",\n   \"clusterType\": \"consequat deserunt ad\",\n   \"dbId\": \"dolore consequat tempor in\",\n   \"lastBackup\": \"commodo\",\n   \"protectionEngineFlow\": \"VMDIRECT\",\n   \"protectionType\": \"nulla adipisicing\",\n   \"sid\": \"minim est Excepteur dolore\"\n  },\n  \"fileSystem\": {\n   \"fileSystemType\": \"adipisicing Lorem mo\",\n   \"guid\": \"reprehen\",\n   \"hostName\": \"cupidatat ea consectetur dolor\",\n   \"hostOS\": \"quis qui aliqua non\",\n   \"lastBackup\": \"mollit minim\",\n   \"protectionType\": \"nulla proident dolore \"\n  },\n  \"k8s\": {\n   \"externalCreatedAt\": \"consequat ut aute elit\",\n   \"inventorySourceId\": \"consequat Ut\",\n   \"inventorySourceName\": \"ullamco\",\n   \"lastBackup\": \"nisi sed te\",\n   \"namespace\": \"in deserunt minim\",\n   \"persistentVolumeClaim\": {\n    \"accessModes\": [\n     \"aliqua\",\n     \"quis\"\n    ],\n    \"excluded\": false,\n    \"status\": \"laboris elit magna voluptate minim\",\n    \"storageClassName\": \"in Lorem\",\n    \"volumeMode\": \"Ut ut\",\n    \"volumeName\": \"irure ullamco Ut\"\n   },\n   \"size\": -83580764,\n   \"subType\": \"eu do deserunt ut\",\n   \"uid\": \"in eu\"\n  },\n  \"nasShare\": {\n   \"fileSystemName\": \"d\",\n   \"nasServer\": {\n    \"addresses\": [\n     {\n      \"type\": \"IPV6\",\n      \"value\": \"dolor\"\n     },\n     {\n      \"type\": \"IPV4\",\n      \"value\": \"est amet culpa\"\n     }\n    ],\n    \"name\": \"aliquip dolore\"\n   },\n   \"protocol\": \"NFS\"\n  },\n  \"vm\": {\n   \"clusterName\": \"magna eiusmod\",\n   \"dataMoverType\": \"INHERIT_FROM_POLICY\",\n   \"datacenter\": \"nisi culpa\",\n   \"datastore\": [\n    {\n     \"datastoreMoref\": \"reprehenderit\",\n     \"datastoreName\": \"nostrud nulla dolore ea\"\n    },\n    {\n     \"datastoreMoref\": \"exercitation officia eiusmod dolor\",\n     \"datastoreName\": \"amet elit laboris cupidatat\"\n    }\n   ],\n   \"disks\": [\n    {\n     \"datastoreMoref\": \"ea laboris esse\",\n     \"eagerlyScrub\": false,\n     \"excluded\": true,\n     \"key\": -36830023,\n     \"label\": \"irure\",\n     \"name\": \"anim dolore deserunt do\",\n     \"sizeInBytes\": 35080515,\n     \"thinProvisioned\": false,\n     \"usedBytes\": 91878696.85523391\n    },\n    {\n     \"datastoreMoref\": \"ad Duis sunt nostrud\",\n     \"eagerlyScrub\": true,\n     \"excluded\": true,\n     \"key\": -67262562,\n     \"label\": \"Duis laborum deserunt\",\n     \"name\": \"dolore\",\n     \"sizeInBytes\": 44650296,\n     \"thinProvisioned\": true,\n     \"usedBytes\": -74822768.39644952\n    }\n   ],\n   \"dnsName\": \"aliquip dolor qui\",\n   \"esxName\": \"quis Ut anim ullamco\",\n   \"externalId\": \"in laborum\",\n   \"folder\": \"ut Duis cillum fugiat\",\n   \"guestOS\": \"tempor esse dolore\",\n   \"hostMoref\": \"esse id amet Ut\",\n   \"hostName\": \"sint non occaecat\",\n   \"inventoryPath\": \"aliquip consequat dolor esse eiusmod\",\n   \"inventorySourceId\": \"adipisicing\",\n   \"inventorySourceName\": \"sint eu deserunt\",\n   \"primaryIpAddress\": \"est\",\n   \"protectedApplication\": \"NONE\",\n   \"resourcePool\": \"velit aute tempor proident\",\n   \"vApp\": \"dolor dolor laboris ea\",\n   \"vcenterName\": \"tempor\",\n   \"vmBiosUuid\": \"nostrud aliqua anim\",\n   \"vmMoref\": \"laborum\"\n  },\n  \"vmaxStorageGroup\": {\n   \"configuration\": {\n    \"backupDevice\": {\n     \"guid\": \"in\",\n     \"name\": \"consectetur sunt sed in\",\n     \"uri\": \"dolore\"\n    },\n    \"backupStorage\": {\n     \"guid\": \"ex nos\",\n     \"name\": \"quis\",\n     \"uri\": \"reprehenderit\"\n    },\n    \"restoreDevice\": {\n     \"guid\": \"esse in Lorem\",\n     \"name\": \"occaecat aliquip consectetur incididunt\",\n     \"uri\": \"in Lorem\"\n    },\n    \"restoreStorage\": {\n     \"guid\": \"voluptate pariatur ipsum proident\",\n     \"name\": \"laborum \",\n     \"uri\": \"Excepteur esse\"\n    }\n   },\n   \"coordinatingHostId\": \"consectetur minim dolor qui\",\n   \"coordinatingHostname\": \"co\"\n  }\n },\n \"_embedded\": {\n  \"protectionPolicy\": {\n   \"id\": \"eiusmod ut non qui\",\n   \"name\": \"reprehenderit et ut quis ut\",\n   \"protectionEngine\": \"voluptate incididunt sint sunt non\",\n   \"type\": \"aliqua est qui\"\n  },\n  \"protectionlifeCycle\": {\n   \"id\": \"dolore sunt sed et culpa\",\n   \"name\": \"dolor fugiat\",\n   \"protectionEngine\": \"adipisicing est\",\n   \"type\": \"exercitation aliqua dolor\"\n  },\n  \"storageSystem\": {\n   \"id\": \"cillum\",\n   \"name\": \"officia laborum elit fugiat\"\n  }\n },\n \"assetGroupId\": \"in veniam dolore ad\",\n \"backupDetails\": [\n  {\n   \"backupType\": \"LOG\",\n   \"parallelism\": 25090426\n  },\n  {\n   \"backupType\": \"SYNTHETIC_FULL\",\n   \"parallelism\": 66135692\n  }\n ],\n \"createdAt\": \"2016-04-17T05:23:36.754Z\",\n \"credentialId\": \"in\",\n \"dataTargetIds\": \"sunt Excepteur occaecat Duis\",\n \"deleted\": false,\n \"filterIds\": [\n  \"Excepteur Duis cupidatat irure\",\n  \"consectetur\"\n ],\n \"id\": \"nulla occaecat aute ad\",\n \"lastAvailableCopyTime\": \"2010-08-15T13:43:13.855Z\",\n \"networkLabel\": \"laboris minim nisi\",\n \"protectable\": true,\n \"protectionCapacity\": {\n  \"size\": 22033521,\n  \"time\": \"2011-06-15T07:46:52.671Z\"\n },\n \"protectionLifeCycleId\": \"laborum quis qui\",\n \"protectionPolicy\": {\n  \"id\": \"culpa nostrud nul\",\n  \"name\": \"minim laboris deserunt in\",\n  \"protectionEngine\": \"irure ea aute\",\n  \"type\": \"do consectetur\"\n },\n \"protectionPolicyId\": \"aute veniam\",\n \"ruleId\": \"proident veniam nostrud\",\n \"ruleName\": \"adipisicing nulla eu\",\n \"size\": 94566600,\n \"updatedAt\": \"1971-11-21T10:16:44.102Z\",\n \"userTags\": [\n  \"e\",\n  \"Duis et deserunt dolor\"\n ],\n \"vmMoref\": \"ullamco aliqua\"\n}"
										}
									]
								},
								{
									"name": "Update asset credential ID.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"<string>\",\n    \"type\": \"<string>\",\n    \"credentialId\": \"<string>\"\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/assets/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"assets",
												":id"
											],
											"variable": [
												{
													"id": "5b813822-64c0-4749-9336-905bc732f39d",
													"key": "id",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The asset ID."
												}
											]
										},
										"description": "Updates the only credential ID of the specified asset. \n> This endpoint supports execution by the following roles: admin\n"
									},
									"response": [
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\": \"<string>\",\n    \"type\": \"<string>\",\n    \"credentialId\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/assets/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"assets",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\": \"<string>\",\n    \"type\": \"<string>\",\n    \"credentialId\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/assets/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"assets",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "Successfully updated the asset.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\": \"<string>\",\n    \"type\": \"<string>\",\n    \"credentialId\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/assets/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"assets",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"name\": \"fugiat ipsum\",\n \"type\": \"MICROSOFT_SQL_DATABASE\",\n \"details\": {\n  \"database\": {\n   \"appServerId\": \"nostrud ad minim ut\",\n   \"appServerName\": \"qui ipsum minim Excepteur culpa\",\n   \"appVersion\": \"aliquip\",\n   \"asm\": \"ut amet\",\n   \"clusterName\": \"occaecat laborum\",\n   \"clusterType\": \"consequat deserunt ad\",\n   \"dbId\": \"dolore consequat tempor in\",\n   \"lastBackup\": \"commodo\",\n   \"protectionEngineFlow\": \"VMDIRECT\",\n   \"protectionType\": \"nulla adipisicing\",\n   \"sid\": \"minim est Excepteur dolore\"\n  },\n  \"fileSystem\": {\n   \"fileSystemType\": \"adipisicing Lorem mo\",\n   \"guid\": \"reprehen\",\n   \"hostName\": \"cupidatat ea consectetur dolor\",\n   \"hostOS\": \"quis qui aliqua non\",\n   \"lastBackup\": \"mollit minim\",\n   \"protectionType\": \"nulla proident dolore \"\n  },\n  \"k8s\": {\n   \"externalCreatedAt\": \"consequat ut aute elit\",\n   \"inventorySourceId\": \"consequat Ut\",\n   \"inventorySourceName\": \"ullamco\",\n   \"lastBackup\": \"nisi sed te\",\n   \"namespace\": \"in deserunt minim\",\n   \"persistentVolumeClaim\": {\n    \"accessModes\": [\n     \"aliqua\",\n     \"quis\"\n    ],\n    \"excluded\": false,\n    \"status\": \"laboris elit magna voluptate minim\",\n    \"storageClassName\": \"in Lorem\",\n    \"volumeMode\": \"Ut ut\",\n    \"volumeName\": \"irure ullamco Ut\"\n   },\n   \"size\": -83580764,\n   \"subType\": \"eu do deserunt ut\",\n   \"uid\": \"in eu\"\n  },\n  \"nasShare\": {\n   \"fileSystemName\": \"d\",\n   \"nasServer\": {\n    \"addresses\": [\n     {\n      \"type\": \"IPV6\",\n      \"value\": \"dolor\"\n     },\n     {\n      \"type\": \"IPV4\",\n      \"value\": \"est amet culpa\"\n     }\n    ],\n    \"name\": \"aliquip dolore\"\n   },\n   \"protocol\": \"NFS\"\n  },\n  \"vm\": {\n   \"clusterName\": \"magna eiusmod\",\n   \"dataMoverType\": \"INHERIT_FROM_POLICY\",\n   \"datacenter\": \"nisi culpa\",\n   \"datastore\": [\n    {\n     \"datastoreMoref\": \"reprehenderit\",\n     \"datastoreName\": \"nostrud nulla dolore ea\"\n    },\n    {\n     \"datastoreMoref\": \"exercitation officia eiusmod dolor\",\n     \"datastoreName\": \"amet elit laboris cupidatat\"\n    }\n   ],\n   \"disks\": [\n    {\n     \"datastoreMoref\": \"ea laboris esse\",\n     \"eagerlyScrub\": false,\n     \"excluded\": true,\n     \"key\": -36830023,\n     \"label\": \"irure\",\n     \"name\": \"anim dolore deserunt do\",\n     \"sizeInBytes\": 35080515,\n     \"thinProvisioned\": false,\n     \"usedBytes\": 91878696.85523391\n    },\n    {\n     \"datastoreMoref\": \"ad Duis sunt nostrud\",\n     \"eagerlyScrub\": true,\n     \"excluded\": true,\n     \"key\": -67262562,\n     \"label\": \"Duis laborum deserunt\",\n     \"name\": \"dolore\",\n     \"sizeInBytes\": 44650296,\n     \"thinProvisioned\": true,\n     \"usedBytes\": -74822768.39644952\n    }\n   ],\n   \"dnsName\": \"aliquip dolor qui\",\n   \"esxName\": \"quis Ut anim ullamco\",\n   \"externalId\": \"in laborum\",\n   \"folder\": \"ut Duis cillum fugiat\",\n   \"guestOS\": \"tempor esse dolore\",\n   \"hostMoref\": \"esse id amet Ut\",\n   \"hostName\": \"sint non occaecat\",\n   \"inventoryPath\": \"aliquip consequat dolor esse eiusmod\",\n   \"inventorySourceId\": \"adipisicing\",\n   \"inventorySourceName\": \"sint eu deserunt\",\n   \"primaryIpAddress\": \"est\",\n   \"protectedApplication\": \"NONE\",\n   \"resourcePool\": \"velit aute tempor proident\",\n   \"vApp\": \"dolor dolor laboris ea\",\n   \"vcenterName\": \"tempor\",\n   \"vmBiosUuid\": \"nostrud aliqua anim\",\n   \"vmMoref\": \"laborum\"\n  },\n  \"vmaxStorageGroup\": {\n   \"configuration\": {\n    \"backupDevice\": {\n     \"guid\": \"in\",\n     \"name\": \"consectetur sunt sed in\",\n     \"uri\": \"dolore\"\n    },\n    \"backupStorage\": {\n     \"guid\": \"ex nos\",\n     \"name\": \"quis\",\n     \"uri\": \"reprehenderit\"\n    },\n    \"restoreDevice\": {\n     \"guid\": \"esse in Lorem\",\n     \"name\": \"occaecat aliquip consectetur incididunt\",\n     \"uri\": \"in Lorem\"\n    },\n    \"restoreStorage\": {\n     \"guid\": \"voluptate pariatur ipsum proident\",\n     \"name\": \"laborum \",\n     \"uri\": \"Excepteur esse\"\n    }\n   },\n   \"coordinatingHostId\": \"consectetur minim dolor qui\",\n   \"coordinatingHostname\": \"co\"\n  }\n },\n \"_embedded\": {\n  \"protectionPolicy\": {\n   \"id\": \"eiusmod ut non qui\",\n   \"name\": \"reprehenderit et ut quis ut\",\n   \"protectionEngine\": \"voluptate incididunt sint sunt non\",\n   \"type\": \"aliqua est qui\"\n  },\n  \"protectionlifeCycle\": {\n   \"id\": \"dolore sunt sed et culpa\",\n   \"name\": \"dolor fugiat\",\n   \"protectionEngine\": \"adipisicing est\",\n   \"type\": \"exercitation aliqua dolor\"\n  },\n  \"storageSystem\": {\n   \"id\": \"cillum\",\n   \"name\": \"officia laborum elit fugiat\"\n  }\n },\n \"assetGroupId\": \"in veniam dolore ad\",\n \"backupDetails\": [\n  {\n   \"backupType\": \"LOG\",\n   \"parallelism\": 25090426\n  },\n  {\n   \"backupType\": \"SYNTHETIC_FULL\",\n   \"parallelism\": 66135692\n  }\n ],\n \"createdAt\": \"2016-04-17T05:23:36.754Z\",\n \"credentialId\": \"in\",\n \"dataTargetIds\": \"sunt Excepteur occaecat Duis\",\n \"deleted\": false,\n \"filterIds\": [\n  \"Excepteur Duis cupidatat irure\",\n  \"consectetur\"\n ],\n \"id\": \"nulla occaecat aute ad\",\n \"lastAvailableCopyTime\": \"2010-08-15T13:43:13.855Z\",\n \"networkLabel\": \"laboris minim nisi\",\n \"protectable\": true,\n \"protectionCapacity\": {\n  \"size\": 22033521,\n  \"time\": \"2011-06-15T07:46:52.671Z\"\n },\n \"protectionLifeCycleId\": \"laborum quis qui\",\n \"protectionPolicy\": {\n  \"id\": \"culpa nostrud nul\",\n  \"name\": \"minim laboris deserunt in\",\n  \"protectionEngine\": \"irure ea aute\",\n  \"type\": \"do consectetur\"\n },\n \"protectionPolicyId\": \"aute veniam\",\n \"ruleId\": \"proident veniam nostrud\",\n \"ruleName\": \"adipisicing nulla eu\",\n \"size\": 94566600,\n \"updatedAt\": \"1971-11-21T10:16:44.102Z\",\n \"userTags\": [\n  \"e\",\n  \"Duis et deserunt dolor\"\n ],\n \"vmMoref\": \"ullamco aliqua\"\n}"
										},
										{
											"name": "The request is not valid.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\": \"<string>\",\n    \"type\": \"<string>\",\n    \"credentialId\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/assets/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"assets",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The requestor is not allowed to perform this operation.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\": \"<string>\",\n    \"type\": \"<string>\",\n    \"credentialId\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/assets/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"assets",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										}
									]
								},
								{
									"name": "Get all copies by asset ID.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/assets/:id/copies?page=1&pageSize=100&filter=<string>&orderby=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"assets",
												":id",
												"copies"
											],
											"query": [
												{
													"key": "page",
													"value": "1",
													"description": "The page number to be returned. Must not be less than 1. See Tutorials - Page the List Result."
												},
												{
													"key": "pageSize",
													"value": "100",
													"description": "The number of resources to be returned. Must not be less than 1. See Tutorials - Page the List Result."
												},
												{
													"key": "filter",
													"value": "<string>",
													"description": "The filter string that is expressed using PowerProtect Data Manager filter syntax. See Tutorials - Filter the List Result."
												},
												{
													"key": "orderby",
													"value": "<string>",
													"description": "The attributes/fields to be sorted by. This parameter can combine with sort direction \"ASC\" or \"DESC\". Default direction is ASC. See Tutorials - Sort the List Result."
												}
											],
											"variable": [
												{
													"id": "ebd37293-9097-481b-86d6-238b318a09d1",
													"key": "id",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The asset ID."
												}
											]
										},
										"description": "Retrieves all copies of the asset by the specified asset ID.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n\n> This endpoint supports pagination with types: random\n"
									},
									"response": [
										{
											"name": "The requestor is not allowed to perform this operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/assets/:id/copies?page=1&pageSize=100&filter=<string>&orderby=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"assets",
														":id",
														"copies"
													],
													"query": [
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "pageSize",
															"value": "100"
														},
														{
															"key": "filter",
															"value": "<string>"
														},
														{
															"key": "orderby",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/assets/:id/copies?page=1&pageSize=100&filter=<string>&orderby=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"assets",
														":id",
														"copies"
													],
													"query": [
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "pageSize",
															"value": "100"
														},
														{
															"key": "filter",
															"value": "<string>"
														},
														{
															"key": "orderby",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "Successfully returned available copies.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/assets/:id/copies?page=1&pageSize=100&filter=<string>&orderby=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"assets",
														":id",
														"copies"
													],
													"query": [
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "pageSize",
															"value": "100"
														},
														{
															"key": "filter",
															"value": "<string>"
														},
														{
															"key": "orderby",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"content\": [\n  {\n   \"adhocBackup\": true,\n   \"assetId\": \"do ad\",\n   \"backupTransactionId\": \"quis dolore\",\n   \"baseCopyId\": \"laboris velit proide\",\n   \"copyConsistency\": \"APPLICATION_CONSISTENT\",\n   \"copyType\": \"DIFF_INCR\",\n   \"createTime\": \"1994-05-30T03:04:00.460Z\",\n   \"details\": {\n    \"k8sBackup\": {\n     \"backupId\": \"nostrud minim est et\",\n     \"persistentVolumeClaims\": [\n      {\n       \"appConsistentType\": \"anim enim Ut ali\",\n       \"dataMover\": \"voluptate occaecat\",\n       \"excluded\": \"incididunt Lorem\",\n       \"name\": \"ad magna culpa commodo\",\n       \"size\": -78581785.94319631,\n       \"storageClass\": \"nulla\",\n       \"uid\": \"reprehenderit incididunt\"\n      },\n      {\n       \"appConsistentType\": \"consectetur dolore aliquip nisi\",\n       \"dataMover\": \"voluptate Lorem et occaecat mollit\",\n       \"excluded\": \"labore consequat Duis\",\n       \"name\": \"id pariatur\",\n       \"size\": -94454869.23192607,\n       \"storageClass\": \"pariatur qui\",\n       \"uid\": \"elit dolor in laboris\"\n      }\n     ]\n    },\n    \"mssqlBackup\": {\n     \"protectionFlowEngine\": \"VMDIRECT\"\n    },\n    \"nasBackup\": {\n     \"directoryCount\": \"dolor nostrud dolore\",\n     \"fileCount\": \"in dolore\",\n     \"snapshotMetadata\": {\n      \"id\": \"aliquip do exercitation\",\n      \"name\": \"esse Ut enim mollit\",\n      \"path\": \"culpa consectetur sunt\",\n      \"pathId\": \"culpa \"\n     }\n    },\n    \"vmBackup\": {\n     \"dataMoverType\": \"INHERIT_FROM_POLICY\"\n    }\n   },\n   \"exportedCopyCount\": 93460166,\n   \"externalId\": \"dolor nulla adipisicing occaecat\",\n   \"id\": \"cillum laborum nisi qui\",\n   \"location\": \"LOCAL\",\n   \"logCount\": \"reprehenderit velit Duis\",\n   \"metadataIndexingStatus\": \"RUNNING, FAILED, PARTIAL_SUCCESS,  SUCCESS, null\",\n   \"partialCopy\": true,\n   \"partialCopyDescription\": \"cillum nulla\",\n   \"protectionCreated\": true,\n   \"replicatedCopy\": true,\n   \"restoreTargetCompatibilities\": [\n    {\n     \"compatibilityFailureReason\": \"reprehenderit\",\n     \"targetName\": \"aute in enim\",\n     \"type\": \"INCOMPATIBLE\"\n    },\n    {\n     \"compatibilityFailureReason\": \"anim id ut\",\n     \"targetName\": \"reprehenderit minim mollit in\",\n     \"type\": \"COMPATIBLE\"\n    }\n   ],\n   \"retentionLock\": \"PARTIAL_COPIES_LOCKED\",\n   \"retentionTime\": \"1997-09-04T11:49:03.374Z\",\n   \"retierTime\": \"2003-06-21T06:02:15.924Z\",\n   \"size\": -47145477,\n   \"state\": \"CLOUD_TIERING\",\n   \"storageSystemId\": \"cupidatat culpa l\",\n   \"validationResult\": {\n    \"status\": \"in velit tempor\",\n    \"time\": \"2001-01-30T07:07:32.901Z\"\n   }\n  },\n  {\n   \"adhocBackup\": false,\n   \"assetId\": \"anim sunt\",\n   \"backupTransactionId\": \"proident exercitation\",\n   \"baseCopyId\": \"nulla ad\",\n   \"copyConsistency\": \"CRASH_CONSISTENT\",\n   \"copyType\": \"ARCHIVELOG\",\n   \"createTime\": \"2005-02-12T02:03:14.116Z\",\n   \"details\": {\n    \"k8sBackup\": {\n     \"backupId\": \"et sit\",\n     \"persistentVolumeClaims\": [\n      {\n       \"appConsistentType\": \"elit\",\n       \"dataMover\": \"esse dolore\",\n       \"excluded\": \"laboris in velit\",\n       \"name\": \"laborum quis cupidatat proident\",\n       \"size\": -92350690.53451678,\n       \"storageClass\": \"cillum ea ex\",\n       \"uid\": \"commodo mollit\"\n      },\n      {\n       \"appConsistentType\": \"occaecat dolor aliqua est\",\n       \"dataMover\": \"occaecat irure Ut nostrud\",\n       \"excluded\": \"eiusmod pariatur commodo esse s\",\n       \"name\": \"Lorem fugiat est\",\n       \"size\": 6707837.010959938,\n       \"storageClass\": \"dolore dolor exercitation\",\n       \"uid\": \"tempor pariatur\"\n      }\n     ]\n    },\n    \"mssqlBackup\": {\n     \"protectionFlowEngine\": \"APPDIRECT\"\n    },\n    \"nasBackup\": {\n     \"directoryCount\": \"elit do minim Duis\",\n     \"fileCount\": \"ullamco incididunt ut do\",\n     \"snapshotMetadata\": {\n      \"id\": \"sit et exercitation in\",\n      \"name\": \"aute id\",\n      \"path\": \"ea voluptate sint ut\",\n      \"pathId\": \"enim in laborum sint\"\n     }\n    },\n    \"vmBackup\": {\n     \"dataMoverType\": \"INHERIT_FROM_POLICY\"\n    }\n   },\n   \"exportedCopyCount\": -96409074,\n   \"externalId\": \"ut enim proident\",\n   \"id\": \"veli\",\n   \"location\": \"LOCAL_RECALLED\",\n   \"logCount\": \"ex incididunt fugiat\",\n   \"metadataIndexingStatus\": \"RUNNING, FAILED, PARTIAL_SUCCESS,  SUCCESS, null\",\n   \"partialCopy\": false,\n   \"partialCopyDescription\": \"laboris id eiusmod voluptate sunt\",\n   \"protectionCreated\": false,\n   \"replicatedCopy\": true,\n   \"restoreTargetCompatibilities\": [\n    {\n     \"compatibilityFailureReason\": \"elit eu sint laboris irure\",\n     \"targetName\": \"aliqua in\",\n     \"type\": \"COMPATIBLE\"\n    },\n    {\n     \"compatibilityFailureReason\": \"amet\",\n     \"targetName\": \"mollit eu anim pariatur \",\n     \"type\": \"UNKNOWN\"\n    }\n   ],\n   \"retentionLock\": \"ALL_COPIES_UNLOCKED\",\n   \"retentionTime\": \"1961-09-23T01:30:58.107Z\",\n   \"retierTime\": \"2005-07-23T04:24:29.935Z\",\n   \"size\": -49077486,\n   \"state\": \"null\",\n   \"storageSystemId\": \"eu conse\",\n   \"validationResult\": {\n    \"status\": \"quis ipsum\",\n    \"time\": \"2006-01-14T14:48:30.120Z\"\n   }\n  }\n ],\n \"page\": {\n  \"number\": -98170147,\n  \"queryState\": \"elit ad in\",\n  \"size\": -99474477,\n  \"totalElements\": 46776554,\n  \"totalPages\": 25858675\n }\n}"
										},
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/assets/:id/copies?page=1&pageSize=100&filter=<string>&orderby=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"assets",
														":id",
														"copies"
													],
													"query": [
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "pageSize",
															"value": "100"
														},
														{
															"key": "filter",
															"value": "<string>"
														},
														{
															"key": "orderby",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The request is not valid.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/assets/:id/copies?page=1&pageSize=100&filter=<string>&orderby=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"assets",
														":id",
														"copies"
													],
													"query": [
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "pageSize",
															"value": "100"
														},
														{
															"key": "filter",
															"value": "<string>"
														},
														{
															"key": "orderby",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										}
									]
								},
								{
									"name": "Get copy map for an asset.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/assets/:id/copy-map",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"assets",
												":id",
												"copy-map"
											],
											"variable": [
												{
													"id": "aee68a42-771d-4c26-8a48-58a201dfa46a",
													"key": "id",
													"value": "<string>",
													"type": "string",
													"description": "(Required) ID of the asset."
												}
											]
										},
										"description": "Retrieves copy map of the specified asset.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
									},
									"response": [
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/assets/:id/copy-map",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"assets",
														":id",
														"copy-map"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "Successfully returned available copy map.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/assets/:id/copy-map",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"assets",
														":id",
														"copy-map"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"assetType\": \"VMWARE_VIRTUAL_MACHINE\",\n \"details\": {\n  \"database\": {\n   \"appServerId\": \"ut irure mollit fugiat\",\n   \"appServerName\": \"sit Excepteur ad sint cupidatat\",\n   \"appVersion\": \"quis consectetur dolor\",\n   \"asm\": \"irure cupidatat ut aliquip\",\n   \"clusterName\": \"dolore ad mollit ex\",\n   \"clusterType\": \"pariatur cupidatat esse dolore sed\",\n   \"dbId\": \"occaecat et\",\n   \"lastBackup\": \"labore ullamco\",\n   \"protectionEngineFlow\": \"VMDIRECT\",\n   \"protectionType\": \"amet ad aliqua qui cillum\",\n   \"sid\": \"magna est non\"\n  },\n  \"fileSystem\": {\n   \"fileSystemType\": \"exercitation\",\n   \"guid\": \"consequat\",\n   \"hostName\": \"mollit sit\",\n   \"hostOS\": \"deserunt in\",\n   \"lastBackup\": \"dolor Ut dolore\",\n   \"protectionType\": \"fugiat eu\"\n  },\n  \"k8s\": {\n   \"externalCreatedAt\": \"occaecat reprehenderit ea\",\n   \"inventorySourceId\": \"veniam labore magna\",\n   \"inventorySourceName\": \"aute mollit\",\n   \"lastBackup\": \"cupidatat ea amet\",\n   \"namespace\": \"fugiat aliquip commodo ullamco dolore\",\n   \"persistentVolumeClaim\": {\n    \"accessModes\": [\n     \"Ut sed enim magna cupidatat\",\n     \"in\"\n    ],\n    \"excluded\": true,\n    \"status\": \"Du\",\n    \"storageClassName\": \"ipsum elit minim tempor\",\n    \"volumeMode\": \"dolore magna non\",\n    \"volumeName\": \"ad nulla veniam labore\"\n   },\n   \"size\": 62425720,\n   \"subType\": \"anim amet\",\n   \"uid\": \"irure mollit nisi Excepteur elit\"\n  },\n  \"nasShare\": {\n   \"fileSystemName\": \"Lorem dolore in sit\",\n   \"nasServer\": {\n    \"addresses\": [\n     {\n      \"type\": \"IPV4\",\n      \"value\": \"quis consequat\"\n     },\n     {\n      \"type\": \"IPV6\",\n      \"value\": \"in Excepteur\"\n     }\n    ],\n    \"name\": \"minim elit cupidatat in\"\n   },\n   \"protocol\": \"CIFS\"\n  },\n  \"vm\": {\n   \"clusterName\": \"veniam id ipsum occaecat\",\n   \"dataMoverType\": \"SDM\",\n   \"datacenter\": \"nostrud do\",\n   \"datastore\": [\n    {\n     \"datastoreMoref\": \"velit\",\n     \"datastoreName\": \"eu est incididunt exercitation dolor\"\n    },\n    {\n     \"datastoreMoref\": \"Excepteur exercitation anim\",\n     \"datastoreName\": \"aute aliqua ipsum cillum minim\"\n    }\n   ],\n   \"disks\": [\n    {\n     \"datastoreMoref\": \"offi\",\n     \"eagerlyScrub\": true,\n     \"excluded\": true,\n     \"key\": 62615949,\n     \"label\": \"proident voluptate ipsum incididunt\",\n     \"name\": \"in\",\n     \"sizeInBytes\": 41456379,\n     \"thinProvisioned\": false,\n     \"usedBytes\": -78134835.15322405\n    },\n    {\n     \"datastoreMoref\": \"Excepteur cillum aliquip quis\",\n     \"eagerlyScrub\": false,\n     \"excluded\": true,\n     \"key\": -15981159,\n     \"label\": \"enim Duis irure veniam\",\n     \"name\": \"ut\",\n     \"sizeInBytes\": -42772408,\n     \"thinProvisioned\": true,\n     \"usedBytes\": 96138842.24220538\n    }\n   ],\n   \"dnsName\": \"in quis\",\n   \"esxName\": \"reprehenderit fugiat do consectetur\",\n   \"externalId\": \"deserunt magna non\",\n   \"folder\": \"qu\",\n   \"guestOS\": \"consectetur eu p\",\n   \"hostMoref\": \"nisi ipsum adipisicing\",\n   \"hostName\": \"do occaecat\",\n   \"inventoryPath\": \"minim Ut enim\",\n   \"inventorySourceId\": \"nisi de\",\n   \"inventorySourceName\": \"ut in cillum\",\n   \"primaryIpAddress\": \"dolor\",\n   \"protectedApplication\": \"MSSQL\",\n   \"resourcePool\": \"sit dolore Ut\",\n   \"vApp\": \"id in in voluptate et\",\n   \"vcenterName\": \"aute id\",\n   \"vmBiosUuid\": \"in velit\",\n   \"vmMoref\": \"exercitation\"\n  },\n  \"vmaxStorageGroup\": {\n   \"configuration\": {\n    \"backupDevice\": {\n     \"guid\": \"labor\",\n     \"name\": \"in irure ut\",\n     \"uri\": \"nisi pariatur mollit non\"\n    },\n    \"backupStorage\": {\n     \"guid\": \"adipisicing amet Ut\",\n     \"name\": \"mollit et\",\n     \"uri\": \"elit ut\"\n    },\n    \"restoreDevice\": {\n     \"guid\": \"laborum non adipisicing\",\n     \"name\": \"Ut id irure ut\",\n     \"uri\": \"adipisicing\"\n    },\n    \"restoreStorage\": {\n     \"guid\": \"aliquip est do officia\",\n     \"name\": \"ut amet dolor\",\n     \"uri\": \"dolor aliquip elit\"\n    }\n   },\n   \"coordinatingHostId\": \"fugiat nisi\",\n   \"coordinatingHostname\": \"sunt ad sint officia qui\"\n  }\n },\n \"id\": \"ea adip\",\n \"name\": \"velit culpa amet pariatur est\",\n \"nodeId\": \"consectetur Duis\",\n \"storageLocations\": [\n  {\n   \"capacityBytes\": \"esse do sed dolor Duis\",\n   \"id\": \"ipsum id\",\n   \"location\": \"nostrud ipsum\",\n   \"name\": \"enim ullamco dolore consequat\",\n   \"nodeId\": \"fugiat ullamco dolor\",\n   \"quotaBytes\": \"mollit\",\n   \"quotaRemainingBytes\": \"ex Excepteur ut\",\n   \"replication\": false,\n   \"replicationLocations\": [\n    {\n     \"capacityBytes\": \"in labore\",\n     \"id\": \"laboris incididunt qui pariatur\",\n     \"location\": \"ipsum laboris ut dolore\",\n     \"name\": \"in cupidatat laboris nulla\",\n     \"nodeId\": \"magna ad\",\n     \"quotaBytes\": \"magna\",\n     \"quotaRemainingBytes\": \"in est eli\",\n     \"replication\": false,\n     \"replicationLocations\": [\n      {\n       \"capacityBytes\": \"amet dolore\",\n       \"id\": \"dolore laboris pariatur ut\",\n       \"location\": \"labore magna non\",\n       \"name\": \"pariatur ad elit anim\",\n       \"nodeId\": \"non aute Excepteur in\",\n       \"quotaBytes\": \"laborum et adipisicing commodo\",\n       \"quotaRemainingBytes\": \"exercitation\",\n       \"replication\": true,\n       \"replicationLocations\": [\n        {\n         \"value\": \"<Circular reference to #/components/schemas/StorageLocation detected>\"\n        },\n        {\n         \"value\": \"<Circular reference to #/components/schemas/StorageLocation detected>\"\n        }\n       ],\n       \"storageSystemType\": \"CDRREGIONSYSTEM\",\n       \"totalCopyCount\": \"ad sed sint Excepteur pariatur\",\n       \"totalSizeBytes\": \"tempor sit do adipisicing\",\n       \"usedBytes\": \"deserunt irure\"\n      },\n      {\n       \"capacityBytes\": \"velit sed\",\n       \"id\": \"Ut aliqua labor\",\n       \"location\": \"magna officia\",\n       \"name\": \"ut ullamco\",\n       \"nodeId\": \"officia in do\",\n       \"quotaBytes\": \"officia amet Lorem\",\n       \"quotaRemainingBytes\": \"dolor ut\",\n       \"replication\": true,\n       \"replicationLocations\": [\n        {\n         \"value\": \"<Circular reference to #/components/schemas/StorageLocation detected>\"\n        },\n        {\n         \"value\": \"<Circular reference to #/components/schemas/StorageLocation detected>\"\n        }\n       ],\n       \"storageSystemType\": \"XTREMIOSTORAGESYSTEM\",\n       \"totalCopyCount\": \"minim \",\n       \"totalSizeBytes\": \"labore cillum\",\n       \"usedBytes\": \"amet\"\n      }\n     ],\n     \"storageSystemType\": \"RECOVERPOINTSYSTEM\",\n     \"totalCopyCount\": \"fugiat incididunt non Ut\",\n     \"totalSizeBytes\": \"sunt incididunt amet ipsum\",\n     \"usedBytes\": \"consequat voluptate sunt\"\n    },\n    {\n     \"capacityBytes\": \"quis\",\n     \"id\": \"laboris\",\n     \"location\": \"consequat et\",\n     \"name\": \"nisi reprehenderit\",\n     \"nodeId\": \"officia\",\n     \"quotaBytes\": \"consectetur eiusmod\",\n     \"quotaRemainingBytes\": \"aliqua non\",\n     \"replication\": false,\n     \"replicationLocations\": [\n      {\n       \"capacityBytes\": \"cupidatat qui in\",\n       \"id\": \"commodo laboris fugiat officia laborum\",\n       \"location\": \"culpa reprehenderit nulla in\",\n       \"name\": \"non nisi incididunt\",\n       \"nodeId\": \"commodo sit do\",\n       \"quotaBytes\": \"incididunt et \",\n       \"quotaRemainingBytes\": \"cupidatat ut mollit\",\n       \"replication\": true,\n       \"replicationLocations\": [\n        {\n         \"value\": \"<Circular reference to #/components/schemas/StorageLocation detected>\"\n        },\n        {\n         \"value\": \"<Circular reference to #/components/schemas/StorageLocation detected>\"\n        }\n       ],\n       \"storageSystemType\": \"XTREMIOSTORAGESYSTEM\",\n       \"totalCopyCount\": \"ut Duis cillum aute\",\n       \"totalSizeBytes\": \"adipisicing aliquip proident\",\n       \"usedBytes\": \"reprehenderit do non ullamco ex\"\n      },\n      {\n       \"capacityBytes\": \"veniam ut ullamco\",\n       \"id\": \"exercitation consequat est\",\n       \"location\": \"voluptate\",\n       \"name\": \"deserunt amet Lorem\",\n       \"nodeId\": \"aliquip qui consectetur et\",\n       \"quotaBytes\": \"voluptate ut cillum Lorem eiusmod\",\n       \"quotaRemainingBytes\": \"Lorem qui ad ullamco voluptate\",\n       \"replication\": true,\n       \"replicationLocations\": [\n        {\n         \"value\": \"<Circular reference to #/components/schemas/StorageLocation detected>\"\n        },\n        {\n         \"value\": \"<Circular reference to #/components/schemas/StorageLocation detected>\"\n        }\n       ],\n       \"storageSystemType\": \"XTREMIOSTORAGESYSTEM\",\n       \"totalCopyCount\": \"qui\",\n       \"totalSizeBytes\": \"veniam\",\n       \"usedBytes\": \"commodo in deserunt\"\n      }\n     ],\n     \"storageSystemType\": \"DATADOMAINSYSTEM\",\n     \"totalCopyCount\": \"reprehenderit mollit\",\n     \"totalSizeBytes\": \"consequat\",\n     \"usedBytes\": \"consequat deserunt cillum\"\n    }\n   ],\n   \"storageSystemType\": \"XTREMIOSTORAGESYSTEM\",\n   \"totalCopyCount\": \"ipsum mollit sed deserunt non\",\n   \"totalSizeBytes\": \"qui culpa officia\",\n   \"usedBytes\": \"quis\"\n  },\n  {\n   \"capacityBytes\": \"Excepteur ipsum\",\n   \"id\": \"veniam cillum dolore\",\n   \"location\": \"Lore\",\n   \"name\": \"deserunt pariatur ut dolore sed\",\n   \"nodeId\": \"sint veniam\",\n   \"quotaBytes\": \"aliqua nostrud ut ullamco\",\n   \"quotaRemainingBytes\": \"aliqua ut\",\n   \"replication\": true,\n   \"replicationLocations\": [\n    {\n     \"capacityBytes\": \"ipsu\",\n     \"id\": \"et\",\n     \"location\": \"incididunt non esse\",\n     \"name\": \"est dolor esse ut\",\n     \"nodeId\": \"magna ad\",\n     \"quotaBytes\": \"officia enim ullamco adipisicing minim\",\n     \"quotaRemainingBytes\": \"exercitation nostrud fugiat\",\n     \"replication\": true,\n     \"replicationLocations\": [\n      {\n       \"capacityBytes\": \"Lorem\",\n       \"id\": \"eu id exercitation aliqua Ut\",\n       \"location\": \"ipsum\",\n       \"name\": \"voluptate enim dolor aliqua\",\n       \"nodeId\": \"occaecat et sint aliquip\",\n       \"quotaBytes\": \"Ut anim labore\",\n       \"quotaRemainingBytes\": \"laborum labore\",\n       \"replication\": false,\n       \"replicationLocations\": [\n        {\n         \"value\": \"<Circular reference to #/components/schemas/StorageLocation detected>\"\n        },\n        {\n         \"value\": \"<Circular reference to #/components/schemas/StorageLocation detected>\"\n        }\n       ],\n       \"storageSystemType\": \"CDRREGIONSYSTEM\",\n       \"totalCopyCount\": \"occaecat proident sed\",\n       \"totalSizeBytes\": \"pariatur adipisicing aute\",\n       \"usedBytes\": \"in Duis\"\n      },\n      {\n       \"capacityBytes\": \"irure ad tempor\",\n       \"id\": \"qui\",\n       \"location\": \"pariatur ad\",\n       \"name\": \"fugia\",\n       \"nodeId\": \"esse\",\n       \"quotaBytes\": \"dolore ullamco\",\n       \"quotaRemainingBytes\": \"ex cupidatat\",\n       \"replication\": true,\n       \"replicationLocations\": [\n        {\n         \"value\": \"<Circular reference to #/components/schemas/StorageLocation detected>\"\n        },\n        {\n         \"value\": \"<Circular reference to #/components/schemas/StorageLocation detected>\"\n        }\n       ],\n       \"storageSystemType\": \"DATADOMAINSYSTEM\",\n       \"totalCopyCount\": \"dolor\",\n       \"totalSizeBytes\": \"nulla dolore\",\n       \"usedBytes\": \"do\"\n      }\n     ],\n     \"storageSystemType\": \"POWERPROTECTSYSTEM\",\n     \"totalCopyCount\": \"voluptate ea velit Ut\",\n     \"totalSizeBytes\": \"sunt consectetur sint id\",\n     \"usedBytes\": \"fugiat culpa ea\"\n    },\n    {\n     \"capacityBytes\": \"Duis tempor amet commodo\",\n     \"id\": \"consectetur officia c\",\n     \"location\": \"Excepteur mollit\",\n     \"name\": \"ut Duis\",\n     \"nodeId\": \"in magna s\",\n     \"quotaBytes\": \"tempor\",\n     \"quotaRemainingBytes\": \"sint cillum laborum \",\n     \"replication\": true,\n     \"replicationLocations\": [\n      {\n       \"capacityBytes\": \"quis occaecat\",\n       \"id\": \"non deserunt in\",\n       \"location\": \"in aliqua\",\n       \"name\": \"magna adipisicing proident\",\n       \"nodeId\": \"ex ut incididunt veniam\",\n       \"quotaBytes\": \"in minim\",\n       \"quotaRemainingBytes\": \"eiusmod reprehenderit mollit in dolore\",\n       \"replication\": true,\n       \"replicationLocations\": [\n        {\n         \"value\": \"<Circular reference to #/components/schemas/StorageLocation detected>\"\n        },\n        {\n         \"value\": \"<Circular reference to #/components/schemas/StorageLocation detected>\"\n        }\n       ],\n       \"storageSystemType\": \"DATADOMAINSYSTEM\",\n       \"totalCopyCount\": \"culpa in aliqua\",\n       \"totalSizeBytes\": \"ut cillum\",\n       \"usedBytes\": \"pariatur Duis\"\n      },\n      {\n       \"capacityBytes\": \"incididunt dolore exerci\",\n       \"id\": \"aute ex ullamco ut\",\n       \"location\": \"magna qui proident\",\n       \"name\": \"Excepteur deserunt\",\n       \"nodeId\": \"exercitation velit\",\n       \"quotaBytes\": \"dolor\",\n       \"quotaRemainingBytes\": \"deserunt aliquip ipsum\",\n       \"replication\": true,\n       \"replicationLocations\": [\n        {\n         \"value\": \"<Circular reference to #/components/schemas/StorageLocation detected>\"\n        },\n        {\n         \"value\": \"<Circular reference to #/components/schemas/StorageLocation detected>\"\n        }\n       ],\n       \"storageSystemType\": \"RECOVERPOINTSYSTEM\",\n       \"totalCopyCount\": \"aliqua ullamco\",\n       \"totalSizeBytes\": \"tempor\",\n       \"usedBytes\": \"dolore\"\n      }\n     ],\n     \"storageSystemType\": \"POWERPROTECTSYSTEM\",\n     \"totalCopyCount\": \"ad do nisi proident\",\n     \"totalSizeBytes\": \"consequat eu\",\n     \"usedBytes\": \"in id reprehenderit officia\"\n    }\n   ],\n   \"storageSystemType\": \"VMAXSTORAGESYSTEM\",\n   \"totalCopyCount\": \"nisi et amet veniam\",\n   \"totalSizeBytes\": \"minim non voluptate fugiat\",\n   \"usedBytes\": \"nulla\"\n  }\n ],\n \"storageSystemName\": \"deserunt tempor mollit amet\",\n \"totalCopyCount\": \"veniam laborum\",\n \"totalSizeBytes\": \"nisi sed\"\n}"
										},
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/assets/:id/copy-map",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"assets",
														":id",
														"copy-map"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The request is not valid.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/assets/:id/copy-map",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"assets",
														":id",
														"copy-map"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The requestor is not allowed to perform this operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/assets/:id/copy-map",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"assets",
														":id",
														"copy-map"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										}
									]
								},
								{
									"name": "Get files and folders within a protected asset.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/assets/:id/file-instances?page=1&pageSize=100&filter=<string>&orderby=<string>&copyStartDate=<dateTime>&copyEndDate=<dateTime>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"assets",
												":id",
												"file-instances"
											],
											"query": [
												{
													"key": "page",
													"value": "1",
													"description": "The page number to be returned. Must not be less than 1. See Tutorials - Page the List Result."
												},
												{
													"key": "pageSize",
													"value": "100",
													"description": "The number of resources to be returned. Must not be less than 1. See Tutorials - Page the List Result."
												},
												{
													"key": "filter",
													"value": "<string>",
													"description": "The filter string that is expressed using PowerProtect Data Manager filter syntax. See Tutorials - Filter the List Result."
												},
												{
													"key": "orderby",
													"value": "<string>",
													"description": "The attributes/fields to be sorted by. This parameter can combine with sort direction \"ASC\" or \"DESC\". Default direction is ASC. See Tutorials - Sort the List Result."
												},
												{
													"key": "copyStartDate",
													"value": "<dateTime>",
													"description": "The start date from which to show document copies.  Each file or folder copy has a copy start date and copy end date that records the from-and-to time.  Modifications to that file or folder cause another document to be indexed with a different copy start date and copy end date.  This filter limits result sets to be greater or equal to a particular copy start date."
												},
												{
													"key": "copyEndDate",
													"value": "<dateTime>",
													"description": "The end date up to which to show document copies.  Each file or folder copy has a copy start date and copy end date that records the from-and-to time.  Modifications to that file or folder cause another document to be indexed with a different copy start date and copy end date.  This filter limits result sets to be less or equal to a particular copy end date."
												}
											],
											"variable": [
												{
													"id": "594768ce-8aea-4bc7-977a-02a438800dbd",
													"key": "id",
													"value": "<string>",
													"type": "string",
													"description": "(Required) ID of the protected asset."
												}
											]
										},
										"description": "Retrieves a paginated list of documents that represent files and folders within the specified asset. A number of query parameters can be used to customize the ordering, pagination, and filtering of the result. By default, a list of 10 objects is returned.\n> This endpoint supports execution by the following roles: admin\n"
									},
									"response": [
										{
											"name": "Server error prevented the successful completion of the request.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/assets/:id/file-instances?page=1&pageSize=100&filter=<string>&orderby=<string>&copyStartDate=<dateTime>&copyEndDate=<dateTime>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"assets",
														":id",
														"file-instances"
													],
													"query": [
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "pageSize",
															"value": "100"
														},
														{
															"key": "filter",
															"value": "<string>"
														},
														{
															"key": "orderby",
															"value": "<string>"
														},
														{
															"key": "copyStartDate",
															"value": "<dateTime>"
														},
														{
															"key": "copyEndDate",
															"value": "<dateTime>"
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The request is not valid.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/assets/:id/file-instances?page=1&pageSize=100&filter=<string>&orderby=<string>&copyStartDate=<dateTime>&copyEndDate=<dateTime>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"assets",
														":id",
														"file-instances"
													],
													"query": [
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "pageSize",
															"value": "100"
														},
														{
															"key": "filter",
															"value": "<string>"
														},
														{
															"key": "orderby",
															"value": "<string>"
														},
														{
															"key": "copyStartDate",
															"value": "<dateTime>"
														},
														{
															"key": "copyEndDate",
															"value": "<dateTime>"
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/assets/:id/file-instances?page=1&pageSize=100&filter=<string>&orderby=<string>&copyStartDate=<dateTime>&copyEndDate=<dateTime>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"assets",
														":id",
														"file-instances"
													],
													"query": [
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "pageSize",
															"value": "100"
														},
														{
															"key": "filter",
															"value": "<string>"
														},
														{
															"key": "orderby",
															"value": "<string>"
														},
														{
															"key": "copyStartDate",
															"value": "<dateTime>"
														},
														{
															"key": "copyEndDate",
															"value": "<dateTime>"
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "Successfully returned the array of files and folders within the specified asset.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/assets/:id/file-instances?page=1&pageSize=100&filter=<string>&orderby=<string>&copyStartDate=<dateTime>&copyEndDate=<dateTime>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"assets",
														":id",
														"file-instances"
													],
													"query": [
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "pageSize",
															"value": "100"
														},
														{
															"key": "filter",
															"value": "<string>"
														},
														{
															"key": "orderby",
															"value": "<string>"
														},
														{
															"key": "copyStartDate",
															"value": "<dateTime>"
														},
														{
															"key": "copyEndDate",
															"value": "<dateTime>"
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"content\": [\n  {\n   \"assetId\": \"157765f3-65f9-5b74-8e2b-deba621eb371\",\n   \"assetName\": \"WIN750-13\",\n   \"backupType\": \"Windows VM\",\n   \"copyEndDate\": \"2007-02-18T11:02:41.621Z\",\n   \"copyStartDate\": \"2007-02-18T11:02:41.621Z\",\n   \"createdAt\": \"2007-02-18T11:02:41.621Z\",\n   \"id\": \"cdbaae2e-8a07-11e9-bc42-526af7764f64\",\n   \"itemType\": \"file\",\n   \"location\": \"C:/Users/Joe Smith/My Documents\",\n   \"name\": \"MyDocument.pdf\",\n   \"protectionPolicyId\": \"ddbaae2e-8a07-11e9-bc42-526af7764f64\",\n   \"size\": 1024,\n   \"sourceServer\": \"src-vso.brsvirtdev.asl.lab.emc.com\",\n   \"type\": \"pdf\",\n   \"updatedAt\": \"2007-02-18T11:02:41.621Z\"\n  },\n  {\n   \"assetId\": \"157765f3-65f9-5b74-8e2b-deba621eb371\",\n   \"assetName\": \"WIN750-13\",\n   \"backupType\": \"Windows VM\",\n   \"copyEndDate\": \"2007-02-18T11:02:41.621Z\",\n   \"copyStartDate\": \"2007-02-18T11:02:41.621Z\",\n   \"createdAt\": \"2007-02-18T11:02:41.621Z\",\n   \"id\": \"e3fca052-8a07-11e9-bc42-526af7764f64\",\n   \"itemType\": \"folder\",\n   \"location\": \"C:/Users/Joe Smith\",\n   \"name\": \"Documents\",\n   \"protectionPolicyId\": \"ddbaae2e-8a07-11e9-bc42-526af7764f64\",\n   \"size\": 0,\n   \"sourceServer\": \"src-vso.brsvirtdev.asl.lab.emc.com\",\n   \"type\": \"folder\",\n   \"updatedAt\": \"2007-02-18T11:02:41.621Z\"\n  }\n ],\n \"page\": {\n  \"number\": 1,\n  \"size\": 10,\n  \"totalElements\": 2,\n  \"totalPages\": 1\n }\n}"
										},
										{
											"name": "The requestor is not authenticated to perform this operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/assets/:id/file-instances?page=1&pageSize=100&filter=<string>&orderby=<string>&copyStartDate=<dateTime>&copyEndDate=<dateTime>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"assets",
														":id",
														"file-instances"
													],
													"query": [
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "pageSize",
															"value": "100"
														},
														{
															"key": "filter",
															"value": "<string>"
														},
														{
															"key": "orderby",
															"value": "<string>"
														},
														{
															"key": "copyStartDate",
															"value": "<dateTime>"
														},
														{
															"key": "copyEndDate",
															"value": "<dateTime>"
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Get all assets.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/assets?page=1&pageSize=100&filter=<string>&orderby=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"assets"
									],
									"query": [
										{
											"key": "page",
											"value": "1",
											"description": "The page number to be returned. Must not be less than 1. See Tutorials - Page the List Result."
										},
										{
											"key": "pageSize",
											"value": "100",
											"description": "The number of resources to be returned. Must not be less than 1. See Tutorials - Page the List Result."
										},
										{
											"key": "filter",
											"value": "<string>",
											"description": "The filter string that is expressed using PowerProtect Data Manager filter syntax. See Tutorials - Filter the List Result."
										},
										{
											"key": "orderby",
											"value": "<string>",
											"description": "The attributes/fields to be sorted by. This parameter can combine with sort direction \"ASC\" or \"DESC\". Default direction is ASC. See Tutorials - Sort the List Result."
										}
									]
								},
								"description": "Retrieves all assets that PowerProtect Data Manager manages.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n\n> This endpoint supports pagination with types: random,serial\n"
							},
							"response": [
								{
									"name": "Successfully returned available asset.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/assets?page=1&pageSize=100&filter=<string>&orderby=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"assets"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "<string>"
												},
												{
													"key": "orderby",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"content\": [\n  {\n   \"name\": \"nisi non enim\",\n   \"type\": \"VMAX_STORAGE_GROUP\",\n   \"details\": {\n    \"database\": {\n     \"appServerId\": \"sed aliquip consequat laboris qui\",\n     \"appServerName\": \"do et\",\n     \"appVersion\": \"nisi laboris deserunt\",\n     \"asm\": \"reprehenderit anim\",\n     \"clusterName\": \"sit Duis irure aliqua\",\n     \"clusterType\": \"quis voluptate pariatur\",\n     \"dbId\": \"anim\",\n     \"lastBackup\": \"ex \",\n     \"protectionEngineFlow\": \"VMDIRECT\",\n     \"protectionType\": \"culpa cupidatat pariatur\",\n     \"sid\": \"labore\"\n    },\n    \"fileSystem\": {\n     \"fileSystemType\": \"laborum non Du\",\n     \"guid\": \"et nulla tempor\",\n     \"hostName\": \"reprehenderit do eu veniam\",\n     \"hostOS\": \"enim minim elit reprehenderit amet\",\n     \"lastBackup\": \"ut incididunt\",\n     \"protectionType\": \"in deserunt enim\"\n    },\n    \"k8s\": {\n     \"externalCreatedAt\": \"aliquip e\",\n     \"inventorySourceId\": \"adipisicing fugiat veniam tempor dolore\",\n     \"inventorySourceName\": \"ea deserunt sunt\",\n     \"lastBackup\": \"consectetur aliqua in id\",\n     \"namespace\": \"Ut nisi amet\",\n     \"persistentVolumeClaim\": {\n      \"accessModes\": [\n       \"cupidatat adipisicing tempor eiusmod\",\n       \"cupidatat eu culpa velit\"\n      ],\n      \"excluded\": true,\n      \"status\": \"ut dolore aliqua\",\n      \"storageClassName\": \"anim\",\n      \"volumeMode\": \"laboris sed culpa\",\n      \"volumeName\": \"eiusmod\"\n     },\n     \"size\": -91438579,\n     \"subType\": \"dolor nisi consectetur\",\n     \"uid\": \"ut consectetur\"\n    },\n    \"nasShare\": {\n     \"fileSystemName\": \"culpa\",\n     \"nasServer\": {\n      \"addresses\": [\n       {\n        \"type\": \"IPV4\",\n        \"value\": \"aliqua enim\"\n       },\n       {\n        \"type\": \"IPV4\",\n        \"value\": \"do cillum\"\n       }\n      ],\n      \"name\": \"Excepteur sit\"\n     },\n     \"protocol\": \"CIFS\"\n    },\n    \"vm\": {\n     \"clusterName\": \"aute\",\n     \"dataMoverType\": \"SDM\",\n     \"datacenter\": \"aute do\",\n     \"datastore\": [\n      {\n       \"datastoreMoref\": \"eiusmod anim\",\n       \"datastoreName\": \"elit sunt\"\n      },\n      {\n       \"datastoreMoref\": \"aliqua eiusmod id occaecat\",\n       \"datastoreName\": \"consectetur fugiat Ut\"\n      }\n     ],\n     \"disks\": [\n      {\n       \"datastoreMoref\": \"velit dolo\",\n       \"eagerlyScrub\": false,\n       \"excluded\": true,\n       \"key\": -28044482,\n       \"label\": \"in consequat\",\n       \"name\": \"laboris\",\n       \"sizeInBytes\": -97427047,\n       \"thinProvisioned\": true,\n       \"usedBytes\": -60123567.77108869\n      },\n      {\n       \"datastoreMoref\": \"com\",\n       \"eagerlyScrub\": true,\n       \"excluded\": false,\n       \"key\": 14376209,\n       \"label\": \"dolor ipsum aliquip velit in\",\n       \"name\": \"voluptate dolore\",\n       \"sizeInBytes\": 57352901,\n       \"thinProvisioned\": true,\n       \"usedBytes\": 7600040.199953899\n      }\n     ],\n     \"dnsName\": \"minim pariatur enim est\",\n     \"esxName\": \"sit\",\n     \"externalId\": \"consect\",\n     \"folder\": \"labore occaecat\",\n     \"guestOS\": \"dolor dolore\",\n     \"hostMoref\": \"deserunt id amet\",\n     \"hostName\": \"voluptate do\",\n     \"inventoryPath\": \"ea sunt\",\n     \"inventorySourceId\": \"voluptate\",\n     \"inventorySourceName\": \"cillum L\",\n     \"primaryIpAddress\": \"tempor dolor\",\n     \"protectedApplication\": \"NONE\",\n     \"resourcePool\": \"Duis ut nulla qui mollit\",\n     \"vApp\": \"amet cillum in magna\",\n     \"vcenterName\": \"laboris et in velit\",\n     \"vmBiosUuid\": \"qui\",\n     \"vmMoref\": \"ut amet tempor\"\n    },\n    \"vmaxStorageGroup\": {\n     \"configuration\": {\n      \"backupDevice\": {\n       \"guid\": \"adipisicing ipsum reprehenderit\",\n       \"name\": \"id dolor eiusmod ex\",\n       \"uri\": \"aliquip laboris consectetur\"\n      },\n      \"backupStorage\": {\n       \"guid\": \"in sit enim deserunt amet\",\n       \"name\": \"ullamco deserunt aute\",\n       \"uri\": \"ut Duis\"\n      },\n      \"restoreDevice\": {\n       \"guid\": \"enim veniam ut\",\n       \"name\": \"esse amet fugiat laboris\",\n       \"uri\": \"in\"\n      },\n      \"restoreStorage\": {\n       \"guid\": \"est sit esse\",\n       \"name\": \"ipsum laborum aliqua\",\n       \"uri\": \"cupidatat officia elit dolor\"\n      }\n     },\n     \"coordinatingHostId\": \"in dolore dolore\",\n     \"coordinatingHostname\": \"aliquip est nisi\"\n    }\n   },\n   \"_embedded\": {\n    \"protectionPolicy\": {\n     \"id\": \"incididunt dolor aliqua ad\",\n     \"name\": \"ad reprehenderit aliquip\",\n     \"protectionEngine\": \"Lorem c\",\n     \"type\": \"exercitation pariatur\"\n    },\n    \"protectionlifeCycle\": {\n     \"id\": \"magna consectetur\",\n     \"name\": \"ullamco eu eiusmod Ut eni\",\n     \"protectionEngine\": \"sunt laboris qui ex\",\n     \"type\": \"sed ullamco esse\"\n    },\n    \"storageSystem\": {\n     \"id\": \"consectetur labore\",\n     \"name\": \"elit qui officia exercitation\"\n    }\n   },\n   \"assetGroupId\": \"in cupidatat nostrud\",\n   \"backupDetails\": [\n    {\n     \"backupType\": \"INCREMENTAL\",\n     \"parallelism\": 80949134\n    },\n    {\n     \"backupType\": \"CUMULATIVE\",\n     \"parallelism\": 79114740\n    }\n   ],\n   \"createdAt\": \"2008-02-07T16:23:32.129Z\",\n   \"credentialId\": \"velit aute\",\n   \"dataTargetIds\": \"eiusmod ea esse dolore\",\n   \"deleted\": false,\n   \"filterIds\": [\n    \"ex aliquip magna\",\n    \"ut incididunt id\"\n   ],\n   \"id\": \"Duis exercitation cillum consectetur ut\",\n   \"lastAvailableCopyTime\": \"2015-09-18T05:40:18.302Z\",\n   \"networkLabel\": \"eu\",\n   \"protectable\": true,\n   \"protectionCapacity\": {\n    \"size\": 2723607,\n    \"time\": \"1949-04-20T21:36:17.828Z\"\n   },\n   \"protectionLifeCycleId\": \"sunt in aliquip\",\n   \"protectionPolicy\": {\n    \"id\": \"dolor eu fugiat\",\n    \"name\": \"ut velit\",\n    \"protectionEngine\": \"esse qui irure anim\",\n    \"type\": \"deserunt aute est aliquip\"\n   },\n   \"protectionPolicyId\": \"sed exercitation amet\",\n   \"ruleId\": \"Ut occaecat aliquip\",\n   \"ruleName\": \"Lorem \",\n   \"size\": 4739015,\n   \"updatedAt\": \"2011-07-15T03:12:31.176Z\",\n   \"userTags\": [\n    \"ipsum eiusmod aliqua Lorem dolor\",\n    \"do sint sed\"\n   ],\n   \"vmMoref\": \"do amet officia esse\"\n  },\n  {\n   \"name\": \"amet eu\",\n   \"type\": \"ORACLE_DATABASE\",\n   \"details\": {\n    \"database\": {\n     \"appServerId\": \"non\",\n     \"appServerName\": \"laboris ut\",\n     \"appVersion\": \"et deserunt cillum reprehenderit amet\",\n     \"asm\": \"reprehenderit dolore nostrud pariatur\",\n     \"clusterName\": \"pariatur sint\",\n     \"clusterType\": \"labo\",\n     \"dbId\": \"pariatur quis veniam nostrud in\",\n     \"lastBackup\": \"est incididunt Lorem voluptate\",\n     \"protectionEngineFlow\": \"APPDIRECT\",\n     \"protectionType\": \"pariatur non commodo ipsum\",\n     \"sid\": \"fugiat elit do et in\"\n    },\n    \"fileSystem\": {\n     \"fileSystemType\": \"tempor\",\n     \"guid\": \"commodo et Excepteur\",\n     \"hostName\": \"ipsum adipi\",\n     \"hostOS\": \"enim laboris elit\",\n     \"lastBackup\": \"ex non\",\n     \"protectionType\": \"anim tempor\"\n    },\n    \"k8s\": {\n     \"externalCreatedAt\": \"in veniam Excepteur pariatur\",\n     \"inventorySourceId\": \"ex\",\n     \"inventorySourceName\": \"voluptate cillum esse ex\",\n     \"lastBackup\": \"labore\",\n     \"namespace\": \"ut id\",\n     \"persistentVolumeClaim\": {\n      \"accessModes\": [\n       \"pariatur\",\n       \"Lo\"\n      ],\n      \"excluded\": false,\n      \"status\": \"enim Ut nisi veniam id\",\n      \"storageClassName\": \"Ut sit\",\n      \"volumeMode\": \"veniam reprehenderit\",\n      \"volumeName\": \"nisi proident cillum cupidatat\"\n     },\n     \"size\": -95108959,\n     \"subType\": \"eu\",\n     \"uid\": \"Duis exercitation sint\"\n    },\n    \"nasShare\": {\n     \"fileSystemName\": \"aute velit est elit\",\n     \"nasServer\": {\n      \"addresses\": [\n       {\n        \"type\": \"IPV6\",\n        \"value\": \"veniam qui sunt deserunt exercitation\"\n       },\n       {\n        \"type\": \"IPV4\",\n        \"value\": \"elit proident eiusm\"\n       }\n      ],\n      \"name\": \"sit mollit commodo ut reprehenderit\"\n     },\n     \"protocol\": \"CIFS\"\n    },\n    \"vm\": {\n     \"clusterName\": \"ut mollit\",\n     \"dataMoverType\": \"VADP\",\n     \"datacenter\": \"esse\",\n     \"datastore\": [\n      {\n       \"datastoreMoref\": \"laborum tempor reprehenderit\",\n       \"datastoreName\": \"amet in dolore deserunt Ut\"\n      },\n      {\n       \"datastoreMoref\": \"voluptate minim exercitation qui\",\n       \"datastoreName\": \"laboris non nostrud eu\"\n      }\n     ],\n     \"disks\": [\n      {\n       \"datastoreMoref\": \"non exercitation \",\n       \"eagerlyScrub\": false,\n       \"excluded\": false,\n       \"key\": 47380535,\n       \"label\": \"ad\",\n       \"name\": \"deserunt\",\n       \"sizeInBytes\": 31593867,\n       \"thinProvisioned\": false,\n       \"usedBytes\": -21418113.41700141\n      },\n      {\n       \"datastoreMoref\": \"Excepteur in labore\",\n       \"eagerlyScrub\": true,\n       \"excluded\": false,\n       \"key\": 56979628,\n       \"label\": \"ex ad dolore\",\n       \"name\": \"ut nostrud Duis exercitation\",\n       \"sizeInBytes\": 6019567,\n       \"thinProvisioned\": true,\n       \"usedBytes\": 31083385.49239482\n      }\n     ],\n     \"dnsName\": \"pariatur ipsum non\",\n     \"esxName\": \"et laborum labore\",\n     \"externalId\": \"anim fugiat quis sit\",\n     \"folder\": \"commodo laboris consequat\",\n     \"guestOS\": \"laboris\",\n     \"hostMoref\": \"commodo laborum in deserunt\",\n     \"hostName\": \"dolore\",\n     \"inventoryPath\": \"aliqua laboris amet\",\n     \"inventorySourceId\": \"tempor do sed ipsum\",\n     \"inventorySourceName\": \"nisi\",\n     \"primaryIpAddress\": \"minim veniam qui adipisicing magna\",\n     \"protectedApplication\": \"MSSQL\",\n     \"resourcePool\": \"quis u\",\n     \"vApp\": \"amet ut cupidatat sint velit\",\n     \"vcenterName\": \"aute deserunt\",\n     \"vmBiosUuid\": \"laboris ut commodo\",\n     \"vmMoref\": \"Lorem velit ut dolor\"\n    },\n    \"vmaxStorageGroup\": {\n     \"configuration\": {\n      \"backupDevice\": {\n       \"guid\": \"dolore velit\",\n       \"name\": \"non adipisicing\",\n       \"uri\": \"incididunt Lorem\"\n      },\n      \"backupStorage\": {\n       \"guid\": \"dolor Ut laborum reprehenderit\",\n       \"name\": \"velit non tempor enim\",\n       \"uri\": \"laboris aute adipisicing\"\n      },\n      \"restoreDevice\": {\n       \"guid\": \"dolore adipisicing\",\n       \"name\": \"officia \",\n       \"uri\": \"proident dolore nostrud Lorem\"\n      },\n      \"restoreStorage\": {\n       \"guid\": \"dolor Ut mollit dolor\",\n       \"name\": \"adipis\",\n       \"uri\": \"esse\"\n      }\n     },\n     \"coordinatingHostId\": \"enim cupidatat do officia\",\n     \"coordinatingHostname\": \"mollit minim\"\n    }\n   },\n   \"_embedded\": {\n    \"protectionPolicy\": {\n     \"id\": \"labore\",\n     \"name\": \"Ut in non i\",\n     \"protectionEngine\": \"aliqua dolor consectetur est\",\n     \"type\": \"null\"\n    },\n    \"protectionlifeCycle\": {\n     \"id\": \"minim\",\n     \"name\": \"et mollit voluptate est\",\n     \"protectionEngine\": \"exercitation\",\n     \"type\": \"sit id ad adipisicing cupidatat\"\n    },\n    \"storageSystem\": {\n     \"id\": \"cillum dolore aute\",\n     \"name\": \"magna nostrud velit sed\"\n    }\n   },\n   \"assetGroupId\": \"do pariatur\",\n   \"backupDetails\": [\n    {\n     \"backupType\": \"CUMULATIVE\",\n     \"parallelism\": -59155555\n    },\n    {\n     \"backupType\": \"DIFFERENTIAL\",\n     \"parallelism\": 67119437\n    }\n   ],\n   \"createdAt\": \"2008-10-07T23:43:54.006Z\",\n   \"credentialId\": \"dolor id aliqua\",\n   \"dataTargetIds\": \"non nulla irure\",\n   \"deleted\": false,\n   \"filterIds\": [\n    \"tempor dolore en\",\n    \"adipisicing sunt ex voluptate dolor\"\n   ],\n   \"id\": \"sit cupidatat et\",\n   \"lastAvailableCopyTime\": \"1959-05-12T15:56:05.675Z\",\n   \"networkLabel\": \"mollit sit\",\n   \"protectable\": true,\n   \"protectionCapacity\": {\n    \"size\": -47189874,\n    \"time\": \"2003-05-24T19:09:51.724Z\"\n   },\n   \"protectionLifeCycleId\": \"nostrud l\",\n   \"protectionPolicy\": {\n    \"id\": \"Ut adipisicing ea in\",\n    \"name\": \"id\",\n    \"protectionEngine\": \"adipisicing in quis\",\n    \"type\": \"occaecat\"\n   },\n   \"protectionPolicyId\": \"nisi Excepteur in laboris\",\n   \"ruleId\": \"enim velit irure\",\n   \"ruleName\": \"in laboris aute dese\",\n   \"size\": 32924297,\n   \"updatedAt\": \"1993-07-07T18:40:32.205Z\",\n   \"userTags\": [\n    \"cupidatat\",\n    \"do\"\n   ],\n   \"vmMoref\": \"id aliquip\"\n  }\n ],\n \"page\": {\n  \"number\": -36192287,\n  \"queryState\": \"cupidatat\",\n  \"size\": -38315227,\n  \"totalElements\": 3040318,\n  \"totalPages\": -90422954\n }\n}"
								},
								{
									"name": "An unexpected error prevented the server from fulfilling your request.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/assets?page=1&pageSize=100&filter=<string>&orderby=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"assets"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "<string>"
												},
												{
													"key": "orderby",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "The requestor is not authorized to perform this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/assets?page=1&pageSize=100&filter=<string>&orderby=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"assets"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "<string>"
												},
												{
													"key": "orderby",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "The requestor is not allowed to perform this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/assets?page=1&pageSize=100&filter=<string>&orderby=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"assets"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "<string>"
												},
												{
													"key": "orderby",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "The request is too large to be retrieved.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/assets?page=1&pageSize=100&filter=<string>&orderby=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"assets"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "<string>"
												},
												{
													"key": "orderby",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Requested Range Not Satisfiable",
									"code": 416,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "The request is not valid.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/assets?page=1&pageSize=100&filter=<string>&orderby=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"assets"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "<string>"
												},
												{
													"key": "orderby",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "audit-logs",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Get an audit log resource with the given ID.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/audit-logs/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"audit-logs",
												":id"
											],
											"variable": [
												{
													"id": "c058fe9f-8cad-46c4-8e56-9f62c49e1c1b",
													"key": "id",
													"value": "<string>",
													"type": "string",
													"description": "(Required) ID of the audit log resource."
												}
											]
										},
										"description": "Retrieves the audit log resource that matches the given ID. \n> This endpoint supports execution by the following roles: admin\n"
									},
									"response": [
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/audit-logs/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"audit-logs",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "Successfully returned the audit log.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/audit-logs/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"audit-logs",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"after\": \"password Id: a858bd04-d25a-4f93-bd82-31091ff7664d\",\n \"auditType\": \"SECURITY\",\n \"before\": \"password Id: 1c5fb83f-3359-446d-8ee7-e2241ec789eb\",\n \"changeDescription\": \"User admin password has been changed.\",\n \"changedBy\": {\n  \"id\": \"00000000-0000-4000-8000-deadbeeef60d\",\n  \"username\": \"dotTenantAdmin\"\n },\n \"changedObject\": {\n  \"id\": \"00000000-0000-4000-a000-000000000000\",\n  \"resourceName\": \"admin\",\n  \"resourceType\": \"/users\"\n },\n \"changedTime\": \"2019-08-12T20:28:27.226Z\",\n \"createdAt\": \"2019-08-12T20:28:35.594Z\",\n \"id\": \"30e01300-58cf-485c-b148-6a6b58f693ce\",\n \"messageArgs\": [\n  \"admin\"\n ],\n \"messageID\": \"ADT0104\",\n \"userNote\": null\n}"
										},
										{
											"name": "The request is not valid. Check if id is valid.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/audit-logs/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"audit-logs",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The requestor is not allowed to perform this operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/audit-logs/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"audit-logs",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "Any server error that prevented the completion of the request.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/audit-logs/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"audit-logs",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The requested resource does not exist.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/audit-logs/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"audit-logs",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										}
									]
								},
								{
									"name": "Update the AuditLog resource with the given id.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"<string>\",\n    \"createdAt\": \"<dateTime>\",\n    \"auditType\": \"<string>\",\n    \"messageID\": \"<string>\",\n    \"changeDescription\": \"<string>\",\n    \"changedTime\": \"<dateTime>\",\n    \"changedBy\": {\n        \"id\": \"<string>\",\n        \"username\": \"<string>\"\n    },\n    \"after\": \"<string>\",\n    \"before\": \"<string>\",\n    \"changedObject\": {\n        \"id\": \"<string>\",\n        \"resourceName\": \"<string>\",\n        \"resourceType\": \"<string>\"\n    },\n    \"messageArgs\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"userNote\": {\n        \"note\": \"<string>\",\n        \"updatedTime\": \"<dateTime>\",\n        \"username\": \"<string>\"\n    }\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/audit-logs/:id/notes",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"audit-logs",
												":id",
												"notes"
											],
											"variable": [
												{
													"id": "ab4fc9ff-8c2c-4bb1-829b-b9093a31253f",
													"key": "id",
													"value": "<string>",
													"type": "string",
													"description": "(Required) ID of the audit log resource."
												}
											]
										},
										"description": "Updates the audit log resource with the given ID. \n> This endpoint supports execution by the following roles: admin\n"
									},
									"response": [
										{
											"name": "The request is not valid.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\": \"30e01300-58cf-485c-b148-6a6b58f693ce\",\n    \"createdAt\": \"2019-08-12T20:28:35.594Z\",\n    \"auditType\": \"SECURITY\",\n    \"messageID\": \"SYS0016\",\n    \"changeDescription\": \"User admin password has been changed.\",\n    \"changedTime\": \"2019-08-12T20:28:27.226Z\",\n    \"changedBy\": {\n        \"id\": \"00000000-0000-4000-8000-deadbeeef60d\",\n        \"username\": \"dotTenantAdmin\"\n    },\n    \"after\": \"password Id: a858bd04-d25a-4f93-bd82-31091ff7664d\",\n    \"before\": \"password Id: 1c5fb83f-3359-446d-8ee7-e2241ec789eb\",\n    \"changedObject\": {\n        \"id\": \"00000000-0000-4000-a000-000000000000\",\n        \"resourceName\": \"admin\",\n        \"resourceType\": \"/users\"\n    },\n    \"messageArgs\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"userNote\": {\n        \"note\": \"<string>\",\n        \"updatedTime\": \"<dateTime>\",\n        \"username\": \"<string>\"\n    }\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/audit-logs/:id/notes",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"audit-logs",
														":id",
														"notes"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The requestor is not allowed to perform this operation.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\": \"30e01300-58cf-485c-b148-6a6b58f693ce\",\n    \"createdAt\": \"2019-08-12T20:28:35.594Z\",\n    \"auditType\": \"SECURITY\",\n    \"messageID\": \"SYS0016\",\n    \"changeDescription\": \"User admin password has been changed.\",\n    \"changedTime\": \"2019-08-12T20:28:27.226Z\",\n    \"changedBy\": {\n        \"id\": \"00000000-0000-4000-8000-deadbeeef60d\",\n        \"username\": \"dotTenantAdmin\"\n    },\n    \"after\": \"password Id: a858bd04-d25a-4f93-bd82-31091ff7664d\",\n    \"before\": \"password Id: 1c5fb83f-3359-446d-8ee7-e2241ec789eb\",\n    \"changedObject\": {\n        \"id\": \"00000000-0000-4000-a000-000000000000\",\n        \"resourceName\": \"admin\",\n        \"resourceType\": \"/users\"\n    },\n    \"messageArgs\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"userNote\": {\n        \"note\": \"<string>\",\n        \"updatedTime\": \"<dateTime>\",\n        \"username\": \"<string>\"\n    }\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/audit-logs/:id/notes",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"audit-logs",
														":id",
														"notes"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The requested audit logs does not exist.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\": \"30e01300-58cf-485c-b148-6a6b58f693ce\",\n    \"createdAt\": \"2019-08-12T20:28:35.594Z\",\n    \"auditType\": \"SECURITY\",\n    \"messageID\": \"SYS0016\",\n    \"changeDescription\": \"User admin password has been changed.\",\n    \"changedTime\": \"2019-08-12T20:28:27.226Z\",\n    \"changedBy\": {\n        \"id\": \"00000000-0000-4000-8000-deadbeeef60d\",\n        \"username\": \"dotTenantAdmin\"\n    },\n    \"after\": \"password Id: a858bd04-d25a-4f93-bd82-31091ff7664d\",\n    \"before\": \"password Id: 1c5fb83f-3359-446d-8ee7-e2241ec789eb\",\n    \"changedObject\": {\n        \"id\": \"00000000-0000-4000-a000-000000000000\",\n        \"resourceName\": \"admin\",\n        \"resourceType\": \"/users\"\n    },\n    \"messageArgs\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"userNote\": {\n        \"note\": \"<string>\",\n        \"updatedTime\": \"<dateTime>\",\n        \"username\": \"<string>\"\n    }\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/audit-logs/:id/notes",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"audit-logs",
														":id",
														"notes"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\": \"30e01300-58cf-485c-b148-6a6b58f693ce\",\n    \"createdAt\": \"2019-08-12T20:28:35.594Z\",\n    \"auditType\": \"SECURITY\",\n    \"messageID\": \"SYS0016\",\n    \"changeDescription\": \"User admin password has been changed.\",\n    \"changedTime\": \"2019-08-12T20:28:27.226Z\",\n    \"changedBy\": {\n        \"id\": \"00000000-0000-4000-8000-deadbeeef60d\",\n        \"username\": \"dotTenantAdmin\"\n    },\n    \"after\": \"password Id: a858bd04-d25a-4f93-bd82-31091ff7664d\",\n    \"before\": \"password Id: 1c5fb83f-3359-446d-8ee7-e2241ec789eb\",\n    \"changedObject\": {\n        \"id\": \"00000000-0000-4000-a000-000000000000\",\n        \"resourceName\": \"admin\",\n        \"resourceType\": \"/users\"\n    },\n    \"messageArgs\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"userNote\": {\n        \"note\": \"<string>\",\n        \"updatedTime\": \"<dateTime>\",\n        \"username\": \"<string>\"\n    }\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/audit-logs/:id/notes",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"audit-logs",
														":id",
														"notes"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "Successfully returned the audit log.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\": \"30e01300-58cf-485c-b148-6a6b58f693ce\",\n    \"createdAt\": \"2019-08-12T20:28:35.594Z\",\n    \"auditType\": \"SECURITY\",\n    \"messageID\": \"SYS0016\",\n    \"changeDescription\": \"User admin password has been changed.\",\n    \"changedTime\": \"2019-08-12T20:28:27.226Z\",\n    \"changedBy\": {\n        \"id\": \"00000000-0000-4000-8000-deadbeeef60d\",\n        \"username\": \"dotTenantAdmin\"\n    },\n    \"after\": \"password Id: a858bd04-d25a-4f93-bd82-31091ff7664d\",\n    \"before\": \"password Id: 1c5fb83f-3359-446d-8ee7-e2241ec789eb\",\n    \"changedObject\": {\n        \"id\": \"00000000-0000-4000-a000-000000000000\",\n        \"resourceName\": \"admin\",\n        \"resourceType\": \"/users\"\n    },\n    \"messageArgs\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"userNote\": {\n        \"note\": \"<string>\",\n        \"updatedTime\": \"<dateTime>\",\n        \"username\": \"<string>\"\n    }\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/audit-logs/:id/notes",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"audit-logs",
														":id",
														"notes"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"id\": \"30e01300-58cf-485c-b148-6a6b58f693ce\",\n \"createdAt\": \"2019-08-12T20:28:35.594Z\",\n \"auditType\": \"SECURITY\",\n \"messageID\": \"SYS0016\",\n \"changeDescription\": \"User admin password has been changed.\",\n \"changedTime\": \"2019-08-12T20:28:27.226Z\",\n \"changedBy\": {\n  \"id\": \"00000000-0000-4000-8000-deadbeeef60d\",\n  \"username\": \"dotTenantAdmin\"\n },\n \"after\": \"password Id: a858bd04-d25a-4f93-bd82-31091ff7664d\",\n \"before\": \"password Id: 1c5fb83f-3359-446d-8ee7-e2241ec789eb\",\n \"changedObject\": {\n  \"id\": \"00000000-0000-4000-a000-000000000000\",\n  \"resourceName\": \"admin\",\n  \"resourceType\": \"/users\"\n },\n \"messageArgs\": [\n  \"id enim\",\n  \"ad ullamco eiusmod pariatur mollit\"\n ],\n \"userNote\": {\n  \"note\": \"laboris sit\",\n  \"updatedTime\": \"2014-04-08T07:46:57.140Z\",\n  \"username\": \"ipsum dolore aliqua incididunt labore\"\n }\n}"
										},
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\": \"30e01300-58cf-485c-b148-6a6b58f693ce\",\n    \"createdAt\": \"2019-08-12T20:28:35.594Z\",\n    \"auditType\": \"SECURITY\",\n    \"messageID\": \"SYS0016\",\n    \"changeDescription\": \"User admin password has been changed.\",\n    \"changedTime\": \"2019-08-12T20:28:27.226Z\",\n    \"changedBy\": {\n        \"id\": \"00000000-0000-4000-8000-deadbeeef60d\",\n        \"username\": \"dotTenantAdmin\"\n    },\n    \"after\": \"password Id: a858bd04-d25a-4f93-bd82-31091ff7664d\",\n    \"before\": \"password Id: 1c5fb83f-3359-446d-8ee7-e2241ec789eb\",\n    \"changedObject\": {\n        \"id\": \"00000000-0000-4000-a000-000000000000\",\n        \"resourceName\": \"admin\",\n        \"resourceType\": \"/users\"\n    },\n    \"messageArgs\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"userNote\": {\n        \"note\": \"<string>\",\n        \"updatedTime\": \"<dateTime>\",\n        \"username\": \"<string>\"\n    }\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/audit-logs/:id/notes",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"audit-logs",
														":id",
														"notes"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Get all audit log resources.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/audit-logs?page=1&pageSize=100&filter=<string>&orderby=<string>&queryState=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"audit-logs"
									],
									"query": [
										{
											"key": "page",
											"value": "1",
											"description": "The page number to be returned. Must not be less than 1. See Tutorials - Page the List Result."
										},
										{
											"key": "pageSize",
											"value": "100",
											"description": "The number of resources to be returned. Must not be less than 1. See Tutorials - Page the List Result."
										},
										{
											"key": "filter",
											"value": "<string>",
											"description": "The filter string that is expressed using PowerProtect Data Manager filter syntax. See Tutorials - Filter the List Result."
										},
										{
											"key": "orderby",
											"value": "<string>",
											"description": "The attributes/fields to be sorted by. This parameter can combine with sort direction \"ASC\" or \"DESC\". Default direction is ASC. See Tutorials - Sort the List Result."
										},
										{
											"key": "queryState",
											"value": "<string>",
											"description": "Token string to use to retrieve the next page of a result. The initial search request with queryState must be queryState=BEGIN and a pageSize. After a search begins, subsequent responses include a token string to pass as a parameter for the next page retrieval. When the query state in the response that is returned from the previous search is END, no further results can be retrieved from this query. More details see Tutorials - Page the List Result."
										}
									]
								},
								"description": "Retrieves all audit logs. \n> This endpoint supports execution by the following roles: admin\n\n> This endpoint supports pagination with types: random,serial\n"
							},
							"response": [
								{
									"name": "The requestor is not authorized to perform this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/audit-logs?page=1&pageSize=100&filter=<string>&orderby=<string>&queryState=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"audit-logs"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "<string>"
												},
												{
													"key": "orderby",
													"value": "<string>"
												},
												{
													"key": "queryState",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "The requestor is not allowed to perform this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/audit-logs?page=1&pageSize=100&filter=<string>&orderby=<string>&queryState=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"audit-logs"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "<string>"
												},
												{
													"key": "orderby",
													"value": "<string>"
												},
												{
													"key": "queryState",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "The request is too large to be satisfied.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/audit-logs?page=1&pageSize=100&filter=<string>&orderby=<string>&queryState=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"audit-logs"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "<string>"
												},
												{
													"key": "orderby",
													"value": "<string>"
												},
												{
													"key": "queryState",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Requested Range Not Satisfiable",
									"code": 416,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "Any server error that prevented the completion of the request.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/audit-logs?page=1&pageSize=100&filter=<string>&orderby=<string>&queryState=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"audit-logs"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "<string>"
												},
												{
													"key": "orderby",
													"value": "<string>"
												},
												{
													"key": "queryState",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "The request is not valid. Check the request parameters.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/audit-logs?page=1&pageSize=100&filter=<string>&orderby=<string>&queryState=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"audit-logs"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "<string>"
												},
												{
													"key": "orderby",
													"value": "<string>"
												},
												{
													"key": "queryState",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "Successfully returned available audit logs.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/audit-logs?page=1&pageSize=100&filter=<string>&orderby=<string>&queryState=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"audit-logs"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "<string>"
												},
												{
													"key": "orderby",
													"value": "<string>"
												},
												{
													"key": "queryState",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"content\": [\n  {\n   \"after\": \"password Id: a858bd04-d25a-4f93-bd82-31091ff7664d\",\n   \"auditType\": \"SECURITY\",\n   \"before\": \"password Id: 1c5fb83f-3359-446d-8ee7-e2241ec789eb\",\n   \"changeDescription\": \"User admin password has been changed.\",\n   \"changedBy\": {\n    \"id\": \"00000000-0000-4000-8000-deadbeeef60d\",\n    \"username\": \"dotTenantAdmin\"\n   },\n   \"changedObject\": {\n    \"id\": \"00000000-0000-4000-a000-000000000000\",\n    \"resourceName\": \"admin\",\n    \"resourceType\": \"/users\"\n   },\n   \"changedTime\": \"2019-08-12T20:28:27.226Z\",\n   \"createdAt\": \"2019-08-12T20:28:35.594Z\",\n   \"id\": \"30e01300-58cf-485c-b148-6a6b58f693ce\",\n   \"messageArgs\": [\n    \"admin\"\n   ],\n   \"messageID\": \"ADT0104\",\n   \"userNote\": null\n  },\n  {\n   \"after\": \"VM Protection Gold\",\n   \"auditType\": \"PROTECTION_POLICY\",\n   \"before\": \"\",\n   \"changeDescription\": \"Protection Policy 'VM Protection Gold' has been created.\",\n   \"changedBy\": {\n    \"id\": \"00000000-0000-4000-a000-000000000000\",\n    \"username\": \"admin\"\n   },\n   \"changedObject\": {\n    \"id\": \"9d91b470-a7ff-4a5f-866f-14d91d22a2ab\",\n    \"resourceName\": \"VM Protection Gold\",\n    \"resourceType\": \"protectionLifeCycles\"\n   },\n   \"changedTime\": \"2019-08-12T21:11:33.569Z\",\n   \"createdAt\": \"2019-08-12T21:11:33.728Z\",\n   \"id\": \"25e58640-f3a4-478f-912b-f8785d609c4e\",\n   \"messageArgs\": [\n    \"'VM Protection Gold'\"\n   ],\n   \"messageID\": \"ADT0201\",\n   \"userNote\": null\n  },\n  {\n   \"after\": \"O_JL_CA_VM15, R_JL_CA_VM16\",\n   \"auditType\": \"PROTECTION_POLICY\",\n   \"before\": \"\",\n   \"changeDescription\": \"2 asset(s) assigned to 'VM Protection Gold'.\",\n   \"changedBy\": {\n    \"id\": \"00000000-0000-4000-a000-000000000000\",\n    \"username\": \"admin\"\n   },\n   \"changedObject\": {\n    \"id\": \"9d91b470-a7ff-4a5f-866f-14d91d22a2ab\",\n    \"resourceName\": \"'VM Protection Gold'\",\n    \"resourceType\": \"protectionLifeCycles\"\n   },\n   \"changedTime\": \"2019-08-12T21:11:35.323Z\",\n   \"createdAt\": \"2019-08-12T21:11:35.391Z\",\n   \"id\": \"ebcec0b5-e0f4-4c87-a836-2d6683ae9803\",\n   \"messageArgs\": [\n    \"2\",\n    \"'VM Protection Gold'\"\n   ],\n   \"messageID\": \"ADT0215\",\n   \"userNote\": null\n  },\n  {\n   \"after\": \"Z_JL_CA_VM6\",\n   \"auditType\": \"PROTECTION_POLICY\",\n   \"before\": \"\",\n   \"changeDescription\": \"1 asset(s) assigned to 'VM Protection Gold'.\",\n   \"changedBy\": {\n    \"id\": \"00000000-0000-4000-a000-000000000000\",\n    \"username\": \"admin\"\n   },\n   \"changedObject\": {\n    \"id\": \"9d91b470-a7ff-4a5f-866f-14d91d22a2ab\",\n    \"resourceName\": \"'VM Protection Gold'\",\n    \"resourceType\": \"protectionLifeCycles\"\n   },\n   \"changedTime\": \"2019-08-13T15:42:17.741Z\",\n   \"createdAt\": \"2019-08-13T15:42:17.887Z\",\n   \"id\": \"591807d4-3cd9-4d36-a1c0-3bd21794b07a\",\n   \"messageArgs\": [\n    \"1\",\n    \"'VM Protection Gold'\"\n   ],\n   \"messageID\": \"ADT0215\",\n   \"userNote\": null\n  },\n  {\n   \"after\": \"\",\n   \"auditType\": \"PROTECTION\",\n   \"before\": \"\",\n   \"changeDescription\": \"Adhoc backup request received for R_JL_CA_VM16.\",\n   \"changedBy\": {\n    \"id\": \"00000000-0000-4000-a000-000000000000\",\n    \"username\": \"admin\"\n   },\n   \"changedObject\": {\n    \"id\": \"3832069a-be26-52ab-a7cb-e190e0f1bd3d\",\n    \"resourceName\": \"R_JL_CA_VM16\",\n    \"resourceType\": \"Asset Resource\"\n   },\n   \"changedTime\": \"2019-08-15T17:34:44.531Z\",\n   \"createdAt\": \"2019-08-15T17:34:44.610Z\",\n   \"id\": \"9a86b2e5-13bd-45c5-808f-4e9c834069a3\",\n   \"messageArgs\": [\n    \"R_JL_CA_VM16\"\n   ],\n   \"messageID\": \"ADT0801\",\n   \"userNote\": null\n  }\n ],\n \"page\": {\n  \"number\": 1,\n  \"size\": 5,\n  \"totalElements\": 5,\n  \"totalPages\": 1\n }\n}"
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "certificates",
					"item": [
						{
							"name": "{cert Id}",
							"item": [
								{
									"name": "Delete a certificate by ID.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/certificates/:certId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"certificates",
												":certId"
											],
											"variable": [
												{
													"id": "519ca388-7cc9-4f50-88a1-7c5c6d5edc33",
													"key": "certId",
													"value": "<string>",
													"type": "string",
													"description": "(Required) Certificate ID in UUID format."
												}
											]
										},
										"description": "Deletes an external host TLS certificate that is currently stored in the trust store by using the ID of the certificate.\n> This endpoint supports execution by the following roles: admin\n"
									},
									"response": [
										{
											"name": "The Authorization token is either invalid or expired.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/certificates/:certId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"certificates",
														":certId"
													],
													"variable": [
														{
															"key": "certId"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "An issue has occurred on the system. Please contact the system administrator.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/certificates/:certId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"certificates",
														":certId"
													],
													"variable": [
														{
															"key": "certId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The request body is either invalid or is missing the required fields.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/certificates/:certId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"certificates",
														":certId"
													],
													"variable": [
														{
															"key": "certId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The operation is currently unavailable. The system may currently be in maintenance mode.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/certificates/:certId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"certificates",
														":certId"
													],
													"variable": [
														{
															"key": "certId"
														}
													]
												}
											},
											"status": "Service Unavailable",
											"code": 503,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Successfully deleted the specified certificate.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/certificates/:certId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"certificates",
														":certId"
													],
													"variable": [
														{
															"key": "certId"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The certificate was not found.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/certificates/:certId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"certificates",
														":certId"
													],
													"variable": [
														{
															"key": "certId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Get a certificate by ID.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/certificates/:certId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"certificates",
												":certId"
											],
											"variable": [
												{
													"id": "3401e4ac-01dd-4236-b3e2-77e19c72f8fc",
													"key": "certId",
													"value": "<string>",
													"type": "string",
													"description": "(Required) Certificate ID in UUID format."
												}
											]
										},
										"description": "Retrieves an external host TLS certificate that is currently stored in the trust store, and lists it in the response body in JSON format.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin \n"
									},
									"response": [
										{
											"name": "The operation is currently unavailable. The system may currently be in maintenance mode.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/certificates/:certId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"certificates",
														":certId"
													],
													"variable": [
														{
															"key": "certId"
														}
													]
												}
											},
											"status": "Service Unavailable",
											"code": 503,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The Authorization token is either invalid or expired.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/certificates/:certId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"certificates",
														":certId"
													],
													"variable": [
														{
															"key": "certId"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The request body is either invalid or is missing the required fields.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/certificates/:certId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"certificates",
														":certId"
													],
													"variable": [
														{
															"key": "certId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Successfully retrieved the specified certificate.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/certificates/:certId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"certificates",
														":certId"
													],
													"variable": [
														{
															"key": "certId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"host\": \"occaecat nostrud consequat\",\n \"port\": \"laboris sit\",\n \"fingerprint\": \"aute pariatur est\",\n \"id\": \"non sed fugiat in\",\n \"issuerName\": \"veniam exercitation non\",\n \"notValidAfter\": \"sunt sit incididunt ullamco pariatur\",\n \"notValidBefore\": \"ex incididunt qui\",\n \"state\": \"EXPIRED\",\n \"subjectName\": \"laborum dolore aliqua minim\",\n \"type\": \"INTERMEDIATE\"\n}"
										},
										{
											"name": "The certificate was not found.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/certificates/:certId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"certificates",
														":certId"
													],
													"variable": [
														{
															"key": "certId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "An issue has occurred on the system. Please contact the system administrator.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/certificates/:certId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"certificates",
														":certId"
													],
													"variable": [
														{
															"key": "certId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Update a certificate by ID.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"host\": \"<string>\",\n    \"port\": \"<string>\",\n    \"fingerprint\": \"<string>\",\n    \"id\": \"<string>\",\n    \"issuerName\": \"<string>\",\n    \"notValidAfter\": \"<string>\",\n    \"notValidBefore\": \"<string>\",\n    \"state\": \"<string>\",\n    \"subjectName\": \"<string>\",\n    \"type\": \"<string>\"\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/certificates/:certId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"certificates",
												":certId"
											],
											"variable": [
												{
													"id": "6476acc7-771c-45c7-981e-ee8252f41a68",
													"key": "certId",
													"value": "<string>",
													"type": "string",
													"description": "(Required) Certificate ID in UUID format."
												}
											]
										},
										"description": "Updates an external host TLS certificate that is currently stored in the trust store by using the ID of the certificate, and lists the updated one in the response body in JSON format.\n> This endpoint supports execution by the following roles: admin\n"
									},
									"response": [
										{
											"name": "The Authorization token is either invalid or expired.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"host\": \"<string>\",\n    \"port\": \"<string>\",\n    \"fingerprint\": \"<string>\",\n    \"id\": \"<string>\",\n    \"issuerName\": \"<string>\",\n    \"notValidAfter\": \"<string>\",\n    \"notValidBefore\": \"<string>\",\n    \"state\": \"<string>\",\n    \"subjectName\": \"<string>\",\n    \"type\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/certificates/:certId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"certificates",
														":certId"
													],
													"variable": [
														{
															"key": "certId"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The request body is either invalid or is missing the required fields.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"host\": \"<string>\",\n    \"port\": \"<string>\",\n    \"fingerprint\": \"<string>\",\n    \"id\": \"<string>\",\n    \"issuerName\": \"<string>\",\n    \"notValidAfter\": \"<string>\",\n    \"notValidBefore\": \"<string>\",\n    \"state\": \"<string>\",\n    \"subjectName\": \"<string>\",\n    \"type\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/certificates/:certId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"certificates",
														":certId"
													],
													"variable": [
														{
															"key": "certId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "An issue has occurred on the system. Please contact the system administrator.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"host\": \"<string>\",\n    \"port\": \"<string>\",\n    \"fingerprint\": \"<string>\",\n    \"id\": \"<string>\",\n    \"issuerName\": \"<string>\",\n    \"notValidAfter\": \"<string>\",\n    \"notValidBefore\": \"<string>\",\n    \"state\": \"<string>\",\n    \"subjectName\": \"<string>\",\n    \"type\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/certificates/:certId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"certificates",
														":certId"
													],
													"variable": [
														{
															"key": "certId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The operation is currently unavailable. The system may currently be in maintenance mode.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"host\": \"<string>\",\n    \"port\": \"<string>\",\n    \"fingerprint\": \"<string>\",\n    \"id\": \"<string>\",\n    \"issuerName\": \"<string>\",\n    \"notValidAfter\": \"<string>\",\n    \"notValidBefore\": \"<string>\",\n    \"state\": \"<string>\",\n    \"subjectName\": \"<string>\",\n    \"type\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/certificates/:certId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"certificates",
														":certId"
													],
													"variable": [
														{
															"key": "certId"
														}
													]
												}
											},
											"status": "Service Unavailable",
											"code": 503,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Successfully updated the specified certificate.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"host\": \"<string>\",\n    \"port\": \"<string>\",\n    \"fingerprint\": \"<string>\",\n    \"id\": \"<string>\",\n    \"issuerName\": \"<string>\",\n    \"notValidAfter\": \"<string>\",\n    \"notValidBefore\": \"<string>\",\n    \"state\": \"<string>\",\n    \"subjectName\": \"<string>\",\n    \"type\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/certificates/:certId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"certificates",
														":certId"
													],
													"variable": [
														{
															"key": "certId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"host\": \"occaecat nostrud consequat\",\n \"port\": \"laboris sit\",\n \"fingerprint\": \"aute pariatur est\",\n \"id\": \"non sed fugiat in\",\n \"issuerName\": \"veniam exercitation non\",\n \"notValidAfter\": \"sunt sit incididunt ullamco pariatur\",\n \"notValidBefore\": \"ex incididunt qui\",\n \"state\": \"EXPIRED\",\n \"subjectName\": \"laborum dolore aliqua minim\",\n \"type\": \"INTERMEDIATE\"\n}"
										},
										{
											"name": "The certificate was not found.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"host\": \"<string>\",\n    \"port\": \"<string>\",\n    \"fingerprint\": \"<string>\",\n    \"id\": \"<string>\",\n    \"issuerName\": \"<string>\",\n    \"notValidAfter\": \"<string>\",\n    \"notValidBefore\": \"<string>\",\n    \"state\": \"<string>\",\n    \"subjectName\": \"<string>\",\n    \"type\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/certificates/:certId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"certificates",
														":certId"
													],
													"variable": [
														{
															"key": "certId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Get all certificates.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/certificates?host=<string>&port=<string>&type=HOST&strict=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"certificates"
									],
									"query": [
										{
											"key": "host",
											"value": "<string>",
											"description": "(Required) Specify the host from which to get the certificate."
										},
										{
											"key": "port",
											"value": "<string>",
											"description": "(Required) Specify the port number from which to get the certificate."
										},
										{
											"key": "type",
											"value": "HOST",
											"description": "Specify the type of certificate to get."
										},
										{
											"key": "strict",
											"value": "false",
											"description": "Check if the host IP or fully qualified domain name (FQDN) used in host is in the certificate's subject alternative name."
										}
									]
								},
								"description": "Retrieves all of the external hosts and root CA TLS certificates that are currently stored in the trust store and has the state of ACCEPTED, and lists them in the response body in JSON format.  Identical to GET /api/v2/certificates/external.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
							},
							"response": [
								{
									"name": "The request body is either invalid or is missing the required fields.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/certificates?host=<string>&port=<string>&type=HOST&strict=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"certificates"
											],
											"query": [
												{
													"key": "host",
													"value": "<string>"
												},
												{
													"key": "port",
													"value": "<string>"
												},
												{
													"key": "type",
													"value": "HOST"
												},
												{
													"key": "strict",
													"value": "false"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "An issue has occurred on the system. Please contact the system administrator.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/certificates?host=<string>&port=<string>&type=HOST&strict=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"certificates"
											],
											"query": [
												{
													"key": "host",
													"value": "<string>"
												},
												{
													"key": "port",
													"value": "<string>"
												},
												{
													"key": "type",
													"value": "HOST"
												},
												{
													"key": "strict",
													"value": "false"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "The Authorization token is either invalid or expired.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/certificates?host=<string>&port=<string>&type=HOST&strict=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"certificates"
											],
											"query": [
												{
													"key": "host",
													"value": "<string>"
												},
												{
													"key": "port",
													"value": "<string>"
												},
												{
													"key": "type",
													"value": "HOST"
												},
												{
													"key": "strict",
													"value": "false"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "The certificate was not found.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/certificates?host=<string>&port=<string>&type=HOST&strict=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"certificates"
											],
											"query": [
												{
													"key": "host",
													"value": "<string>"
												},
												{
													"key": "port",
													"value": "<string>"
												},
												{
													"key": "type",
													"value": "HOST"
												},
												{
													"key": "strict",
													"value": "false"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Successfully retrieved all the certificates.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/certificates?host=<string>&port=<string>&type=HOST&strict=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"certificates"
											],
											"query": [
												{
													"key": "host",
													"value": "<string>"
												},
												{
													"key": "port",
													"value": "<string>"
												},
												{
													"key": "type",
													"value": "HOST"
												},
												{
													"key": "strict",
													"value": "false"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n {\n  \"host\": \"amet fugiat laborum non\",\n  \"port\": \"quis velit dolore\",\n  \"fingerprint\": \"deserunt amet\",\n  \"id\": \"est labore sed aliqua velit\",\n  \"issuerName\": \"sint nulla sunt\",\n  \"notValidAfter\": \"nostrud\",\n  \"notValidBefore\": \"ut sint\",\n  \"state\": \"UNKNOWN\",\n  \"subjectName\": \"consequat Excepteur\",\n  \"type\": \"HOST\"\n },\n {\n  \"host\": \"veniam\",\n  \"port\": \"quis in consequat\",\n  \"fingerprint\": \"quis\",\n  \"id\": \"in ad in\",\n  \"issuerName\": \"commodo in in qui aliquip\",\n  \"notValidAfter\": \"do laborum culpa\",\n  \"notValidBefore\": \"eiusmod dolor ut\",\n  \"state\": \"EXPIRED\",\n  \"subjectName\": \"aliqua dolore cillum quis\",\n  \"type\": \"INTERMEDIATE\"\n }\n]"
								},
								{
									"name": "The operation is currently unavailable. The system may currently be in maintenance mode.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/certificates?host=<string>&port=<string>&type=HOST&strict=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"certificates"
											],
											"query": [
												{
													"key": "host",
													"value": "<string>"
												},
												{
													"key": "port",
													"value": "<string>"
												},
												{
													"key": "type",
													"value": "HOST"
												},
												{
													"key": "strict",
													"value": "false"
												}
											]
										}
									},
									"status": "Service Unavailable",
									"code": 503,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n {\n  \"host\": \"amet fugiat laborum non\",\n  \"port\": \"quis velit dolore\",\n  \"fingerprint\": \"deserunt amet\",\n  \"id\": \"est labore sed aliqua velit\",\n  \"issuerName\": \"sint nulla sunt\",\n  \"notValidAfter\": \"nostrud\",\n  \"notValidBefore\": \"ut sint\",\n  \"state\": \"UNKNOWN\",\n  \"subjectName\": \"consequat Excepteur\",\n  \"type\": \"HOST\"\n },\n {\n  \"host\": \"veniam\",\n  \"port\": \"quis in consequat\",\n  \"fingerprint\": \"quis\",\n  \"id\": \"in ad in\",\n  \"issuerName\": \"commodo in in qui aliquip\",\n  \"notValidAfter\": \"do laborum culpa\",\n  \"notValidBefore\": \"eiusmod dolor ut\",\n  \"state\": \"EXPIRED\",\n  \"subjectName\": \"aliqua dolore cillum quis\",\n  \"type\": \"INTERMEDIATE\"\n }\n]"
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "cloud-dr-accounts",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "cloud-dr-data-targets",
									"item": [
										{
											"name": "{td Id}",
											"item": [
												{
													"name": "Delete Cloud DR target.",
													"request": {
														"auth": {
															"type": "apikey",
															"apikey": [
																{
																	"key": "key",
																	"value": "Authorization",
																	"type": "string"
																},
																{
																	"key": "value",
																	"value": true,
																	"type": "boolean"
																},
																{
																	"key": "in",
																	"value": "header",
																	"type": "string"
																}
															]
														},
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/v2/cloud-dr-accounts/:id/cloud-dr-data-targets/:tdId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"cloud-dr-accounts",
																":id",
																"cloud-dr-data-targets",
																":tdId"
															],
															"variable": [
																{
																	"id": "c0718a3a-1d88-45f8-b36b-cadcda8fe610",
																	"key": "id",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) ID of the Cloud DR account."
																},
																{
																	"id": "84f3e82b-ed2c-4474-a37f-47065912fc29",
																	"key": "tdId",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) ID of the Cloud DR target."
																}
															]
														},
														"description": "Deletes Cloud Disaster Recovery target for the specified Cloud DR account.\n> This endpoint supports execution by the following roles: export-and-recovery-admin\n"
													},
													"response": [
														{
															"name": "The requester is not authorized to perform this operation.",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": {
																			"content": "Added as a part of security scheme: apikey",
																			"type": "text/plain"
																		},
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/cloud-dr-accounts/:id/cloud-dr-data-targets/:tdId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"cloud-dr-accounts",
																		":id",
																		"cloud-dr-data-targets",
																		":tdId"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "tdId"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "The request is not valid.",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": {
																			"content": "Added as a part of security scheme: apikey",
																			"type": "text/plain"
																		},
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/cloud-dr-accounts/:id/cloud-dr-data-targets/:tdId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"cloud-dr-accounts",
																		":id",
																		"cloud-dr-data-targets",
																		":tdId"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "tdId"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
														},
														{
															"name": "Successfully deleted Cloud DR target.",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": {
																			"content": "Added as a part of security scheme: apikey",
																			"type": "text/plain"
																		},
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/cloud-dr-accounts/:id/cloud-dr-data-targets/:tdId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"cloud-dr-accounts",
																		":id",
																		"cloud-dr-data-targets",
																		":tdId"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "tdId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{}"
														},
														{
															"name": "Any server error that prevented the completion of the request.",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": {
																			"content": "Added as a part of security scheme: apikey",
																			"type": "text/plain"
																		},
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/cloud-dr-accounts/:id/cloud-dr-data-targets/:tdId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"cloud-dr-accounts",
																		":id",
																		"cloud-dr-data-targets",
																		":tdId"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "tdId"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
														},
														{
															"name": "The requester is not authenticated to perform this operation.",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": {
																			"content": "Added as a part of security scheme: apikey",
																			"type": "text/plain"
																		},
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/cloud-dr-accounts/:id/cloud-dr-data-targets/:tdId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"cloud-dr-accounts",
																		":id",
																		"cloud-dr-data-targets",
																		":tdId"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "tdId"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
														}
													]
												},
												{
													"name": "Get Cloud DR target.",
													"request": {
														"auth": {
															"type": "apikey",
															"apikey": [
																{
																	"key": "key",
																	"value": "Authorization",
																	"type": "string"
																},
																{
																	"key": "value",
																	"value": true,
																	"type": "boolean"
																},
																{
																	"key": "in",
																	"value": "header",
																	"type": "string"
																}
															]
														},
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/v2/cloud-dr-accounts/:id/cloud-dr-data-targets/:tdId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"cloud-dr-accounts",
																":id",
																"cloud-dr-data-targets",
																":tdId"
															],
															"variable": [
																{
																	"id": "550a6785-8161-41ba-b73a-cb48dcef6eb8",
																	"key": "id",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) ID of the Cloud DR account."
																},
																{
																	"id": "735c7ba0-a980-4cec-9c07-3c41ebed54eb",
																	"key": "tdId",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) ID of the Cloud DR target."
																}
															]
														},
														"description": "Retrieves Cloud Disaster Recovery target by its ID.\n> This endpoint supports execution by the following roles: user\n"
													},
													"response": [
														{
															"name": "Successfully returned Cloud DR target.",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": {
																			"content": "Added as a part of security scheme: apikey",
																			"type": "text/plain"
																		},
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/cloud-dr-accounts/:id/cloud-dr-data-targets/:tdId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"cloud-dr-accounts",
																		":id",
																		"cloud-dr-data-targets",
																		":tdId"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "tdId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"copiesStorageContainer\": {\n  \"cloudAccountId\": \"tempor laboris eiusmod\",\n  \"id\": \"ullamco consequat\",\n  \"location\": \"ut et\",\n  \"name\": \"laborum Lorem\",\n  \"type\": \"culpa incididunt eu elit\"\n },\n \"encryptionMethod\": \"quis nisi veniam ut\",\n \"id\": \"ad in\",\n \"name\": \"dolor laboris\",\n \"state\": {\n  \"stateEnum\": [\n   \"elit ullamco ad anim\",\n   \"c\"\n  ]\n }\n}"
														},
														{
															"name": "The requester is not authenticated to perform this operation.",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": {
																			"content": "Added as a part of security scheme: apikey",
																			"type": "text/plain"
																		},
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/cloud-dr-accounts/:id/cloud-dr-data-targets/:tdId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"cloud-dr-accounts",
																		":id",
																		"cloud-dr-data-targets",
																		":tdId"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "tdId"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
														},
														{
															"name": "The requester is not authorized to perform this operation.",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": {
																			"content": "Added as a part of security scheme: apikey",
																			"type": "text/plain"
																		},
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/cloud-dr-accounts/:id/cloud-dr-data-targets/:tdId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"cloud-dr-accounts",
																		":id",
																		"cloud-dr-data-targets",
																		":tdId"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "tdId"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
														},
														{
															"name": "Any server error that prevented the completion of the request.",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": {
																			"content": "Added as a part of security scheme: apikey",
																			"type": "text/plain"
																		},
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/cloud-dr-accounts/:id/cloud-dr-data-targets/:tdId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"cloud-dr-accounts",
																		":id",
																		"cloud-dr-data-targets",
																		":tdId"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "tdId"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
														},
														{
															"name": "The request is not valid.",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": {
																			"content": "Added as a part of security scheme: apikey",
																			"type": "text/plain"
																		},
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/cloud-dr-accounts/:id/cloud-dr-data-targets/:tdId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"cloud-dr-accounts",
																		":id",
																		"cloud-dr-data-targets",
																		":tdId"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "tdId"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
														}
													]
												}
											],
											"protocolProfileBehavior": {},
											"_postman_isSubFolder": true
										},
										{
											"name": "Get all Cloud DR targets.",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": true,
															"type": "boolean"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/v2/cloud-dr-accounts/:id/cloud-dr-data-targets",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"cloud-dr-accounts",
														":id",
														"cloud-dr-data-targets"
													],
													"variable": [
														{
															"id": "9ed4880b-0c32-419e-a894-c8e08fd2d491",
															"key": "id",
															"value": "<string>",
															"type": "string",
															"description": "(Required) ID of the Cloud DR account."
														}
													]
												},
												"description": "Retrieves a list of Cloud DR targets for the specified Cloud DR account.\n> This endpoint supports execution by the following roles: user\n"
											},
											"response": [
												{
													"name": "Successfully returned Cloud DR targets list.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: apikey",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/cloud-dr-accounts/:id/cloud-dr-data-targets",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"cloud-dr-accounts",
																":id",
																"cloud-dr-data-targets"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"content\": [\n  {\n   \"copiesStorageContainer\": {\n    \"cloudAccountId\": \"Ut est sit anim\",\n    \"id\": \"ullamco Lorem proident\",\n    \"location\": \"ullamco\",\n    \"name\": \"mollit eu laborum\",\n    \"type\": \"incidid\"\n   },\n   \"encryptionMethod\": \"laboris irure la\",\n   \"id\": \"laborum in proident\",\n   \"name\": \"quis\",\n   \"state\": {\n    \"stateEnum\": [\n     \"esse quis ex\",\n     \"dolor laboris labore p\"\n    ]\n   }\n  },\n  {\n   \"copiesStorageContainer\": {\n    \"cloudAccountId\": \"commodo id eiusmod Lorem\",\n    \"id\": \"veniam amet dolor minim\",\n    \"location\": \"esse dolore est\",\n    \"name\": \"tempor officia\",\n    \"type\": \"exercitation aliqua in occaecat\"\n   },\n   \"encryptionMethod\": \"nisi sit officia ipsum dolore\",\n   \"id\": \"esse pariatur ut\",\n   \"name\": \"deserunt\",\n   \"state\": {\n    \"stateEnum\": [\n     \"ut minim\",\n     \"lab\"\n    ]\n   }\n  }\n ],\n \"page\": {\n  \"number\": 62477544,\n  \"queryState\": \"tempor deserunt ullamco\",\n  \"size\": -6142136,\n  \"totalElements\": 15266574,\n  \"totalPages\": 42465722\n }\n}"
												},
												{
													"name": "The request is not valid.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: apikey",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/cloud-dr-accounts/:id/cloud-dr-data-targets",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"cloud-dr-accounts",
																":id",
																"cloud-dr-data-targets"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
												},
												{
													"name": "The requester is not authorized to perform this operation.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: apikey",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/cloud-dr-accounts/:id/cloud-dr-data-targets",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"cloud-dr-accounts",
																":id",
																"cloud-dr-data-targets"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
												},
												{
													"name": "The requester is not authenticated to perform this operation.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: apikey",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/cloud-dr-accounts/:id/cloud-dr-data-targets",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"cloud-dr-accounts",
																":id",
																"cloud-dr-data-targets"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
												},
												{
													"name": "Any server error that prevented the completion of the request.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: apikey",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/cloud-dr-accounts/:id/cloud-dr-data-targets",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"cloud-dr-accounts",
																":id",
																"cloud-dr-data-targets"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
												}
											]
										},
										{
											"name": "Create Cloud DR target.",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": true,
															"type": "boolean"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"copiesStorageContainer\": {\n        \"cloudAccountId\": \"<string>\",\n        \"id\": \"<string>\",\n        \"location\": \"<string>\",\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n    },\n    \"encryptionMethod\": \"<string>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"state\": {\n        \"stateEnum\": [\n            \"<string>\",\n            \"<string>\"\n        ]\n    }\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/cloud-dr-accounts/:id/cloud-dr-data-targets",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"cloud-dr-accounts",
														":id",
														"cloud-dr-data-targets"
													],
													"variable": [
														{
															"id": "30a0b0b3-5f28-46ab-862f-97158edd391b",
															"key": "id",
															"value": "<string>",
															"type": "string",
															"description": "(Required) ID of the Cloud DR account."
														}
													]
												},
												"description": "Creates Cloud Disaster Recovery target for the specified Cloud DR account.\n> This endpoint supports execution by the following roles: export-and-recovery-admin\n"
											},
											"response": [
												{
													"name": "The requester is not authenticated to perform this operation.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: apikey",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"copiesStorageContainer\": {\n        \"cloudAccountId\": \"<string>\",\n        \"id\": \"<string>\",\n        \"location\": \"<string>\",\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n    },\n    \"encryptionMethod\": \"<string>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"state\": {\n        \"stateEnum\": [\n            \"<string>\",\n            \"<string>\"\n        ]\n    }\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/cloud-dr-accounts/:id/cloud-dr-data-targets",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"cloud-dr-accounts",
																":id",
																"cloud-dr-data-targets"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
												},
												{
													"name": "The requester is not authorized to perform this operation.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: apikey",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"copiesStorageContainer\": {\n        \"cloudAccountId\": \"<string>\",\n        \"id\": \"<string>\",\n        \"location\": \"<string>\",\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n    },\n    \"encryptionMethod\": \"<string>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"state\": {\n        \"stateEnum\": [\n            \"<string>\",\n            \"<string>\"\n        ]\n    }\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/cloud-dr-accounts/:id/cloud-dr-data-targets",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"cloud-dr-accounts",
																":id",
																"cloud-dr-data-targets"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
												},
												{
													"name": "Any server error that prevented the completion of the request.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: apikey",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"copiesStorageContainer\": {\n        \"cloudAccountId\": \"<string>\",\n        \"id\": \"<string>\",\n        \"location\": \"<string>\",\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n    },\n    \"encryptionMethod\": \"<string>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"state\": {\n        \"stateEnum\": [\n            \"<string>\",\n            \"<string>\"\n        ]\n    }\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/cloud-dr-accounts/:id/cloud-dr-data-targets",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"cloud-dr-accounts",
																":id",
																"cloud-dr-data-targets"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
												},
												{
													"name": "Resource created.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: apikey",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"copiesStorageContainer\": {\n        \"cloudAccountId\": \"<string>\",\n        \"id\": \"<string>\",\n        \"location\": \"<string>\",\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n    },\n    \"encryptionMethod\": \"<string>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"state\": {\n        \"stateEnum\": [\n            \"<string>\",\n            \"<string>\"\n        ]\n    }\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/cloud-dr-accounts/:id/cloud-dr-data-targets",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"cloud-dr-accounts",
																":id",
																"cloud-dr-data-targets"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"copiesStorageContainer\": {\n  \"cloudAccountId\": \"tempor laboris eiusmod\",\n  \"id\": \"ullamco consequat\",\n  \"location\": \"ut et\",\n  \"name\": \"laborum Lorem\",\n  \"type\": \"culpa incididunt eu elit\"\n },\n \"encryptionMethod\": \"quis nisi veniam ut\",\n \"id\": \"ad in\",\n \"name\": \"dolor laboris\",\n \"state\": {\n  \"stateEnum\": [\n   \"elit ullamco ad anim\",\n   \"c\"\n  ]\n }\n}"
												},
												{
													"name": "The request is not valid.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: apikey",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"copiesStorageContainer\": {\n        \"cloudAccountId\": \"<string>\",\n        \"id\": \"<string>\",\n        \"location\": \"<string>\",\n        \"name\": \"<string>\",\n        \"type\": \"<string>\"\n    },\n    \"encryptionMethod\": \"<string>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"state\": {\n        \"stateEnum\": [\n            \"<string>\",\n            \"<string>\"\n        ]\n    }\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/cloud-dr-accounts/:id/cloud-dr-data-targets",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"cloud-dr-accounts",
																":id",
																"cloud-dr-data-targets"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
												}
											]
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "cloud-dr-storage-containers",
									"item": [
										{
											"name": "Get Cloud DR storage containers.",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": true,
															"type": "boolean"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/v2/cloud-dr-accounts/:id/cloud-dr-storage-containers",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"cloud-dr-accounts",
														":id",
														"cloud-dr-storage-containers"
													],
													"variable": [
														{
															"id": "fa86c9d9-9ed8-40d7-852e-7f126a2846c3",
															"key": "id",
															"value": "<string>",
															"type": "string",
															"description": "(Required) The ID of storage container. "
														}
													]
												},
												"description": "Retrieves a list of Cloud DR storage containers for the specified Cloud DR account.\n> This endpoint supports execution by the following roles: user\n"
											},
											"response": [
												{
													"name": "Successfully returned storage containers.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: apikey",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/cloud-dr-accounts/:id/cloud-dr-storage-containers",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"cloud-dr-accounts",
																":id",
																"cloud-dr-storage-containers"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"content\": [\n  {\n   \"cloudAccountId\": \"esse magna sit eu\",\n   \"id\": \"\",\n   \"location\": \"fugiat aliqua velit\",\n   \"name\": \"ut id do\",\n   \"type\": \"quis proident culpa\"\n  },\n  {\n   \"cloudAccountId\": \"deserunt dolore aliquip labore non\",\n   \"id\": \"sed enim in laboris deserunt\",\n   \"location\": \"aliquip labore culpa fugiat\",\n   \"name\": \"qui ea voluptate dolor\",\n   \"type\": \"Ut in id\"\n  }\n ],\n \"page\": {\n  \"number\": -72575520,\n  \"queryState\": \"aute incididunt minim dolore\",\n  \"size\": 99328478,\n  \"totalElements\": 27163995,\n  \"totalPages\": 93894949\n }\n}"
												},
												{
													"name": "The requester is not authenticated to perform this operation.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: apikey",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/cloud-dr-accounts/:id/cloud-dr-storage-containers",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"cloud-dr-accounts",
																":id",
																"cloud-dr-storage-containers"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
												},
												{
													"name": "The requester is not authorized to perform this operation.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: apikey",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/cloud-dr-accounts/:id/cloud-dr-storage-containers",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"cloud-dr-accounts",
																":id",
																"cloud-dr-storage-containers"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
												},
												{
													"name": "The request is not valid.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: apikey",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/cloud-dr-accounts/:id/cloud-dr-storage-containers",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"cloud-dr-accounts",
																":id",
																"cloud-dr-storage-containers"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
												},
												{
													"name": "Any server error that prevented the completion of the request.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: apikey",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/cloud-dr-accounts/:id/cloud-dr-storage-containers",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"cloud-dr-accounts",
																":id",
																"cloud-dr-storage-containers"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
												}
											]
										},
										{
											"name": "Get Cloud DR storage container.",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": true,
															"type": "boolean"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/v2/cloud-dr-accounts/:id/cloud-dr-storage-containers/:scId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"cloud-dr-accounts",
														":id",
														"cloud-dr-storage-containers",
														":scId"
													],
													"variable": [
														{
															"id": "d09b1cc2-3088-464e-80b7-39c004e2fa63",
															"key": "id",
															"value": "<string>",
															"type": "string",
															"description": "(Required) ID of the Cloud DR account."
														},
														{
															"id": "9a9ed45f-7a36-43b7-a0cb-a2f08219f8ef",
															"key": "scId",
															"value": "<string>",
															"type": "string",
															"description": "(Required) Storage container ID."
														}
													]
												},
												"description": "Retrieves the specified Cloud Disaster Recovery storage container for the Cloud DR account.\n> This endpoint supports execution by the following roles: user\n"
											},
											"response": [
												{
													"name": "Any server error that prevented the completion of the request.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: apikey",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/cloud-dr-accounts/:id/cloud-dr-storage-containers/:scId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"cloud-dr-accounts",
																":id",
																"cloud-dr-storage-containers",
																":scId"
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "scId"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
												},
												{
													"name": "Successfully returned storage container.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: apikey",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/cloud-dr-accounts/:id/cloud-dr-storage-containers/:scId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"cloud-dr-accounts",
																":id",
																"cloud-dr-storage-containers",
																":scId"
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "scId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"cloudAccountId\": \"magna veniam\",\n \"id\": \"ea nostrud non ex aliquip\",\n \"location\": \"tempor cillum in et veniam\",\n \"name\": \"aliquip amet veniam eu\",\n \"type\": \"dolor tempor veniam\"\n}"
												},
												{
													"name": "The request is not valid.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: apikey",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/cloud-dr-accounts/:id/cloud-dr-storage-containers/:scId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"cloud-dr-accounts",
																":id",
																"cloud-dr-storage-containers",
																":scId"
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "scId"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
												},
												{
													"name": "The requester is not authorized to perform this operation.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: apikey",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/cloud-dr-accounts/:id/cloud-dr-storage-containers/:scId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"cloud-dr-accounts",
																":id",
																"cloud-dr-storage-containers",
																":scId"
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "scId"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
												},
												{
													"name": "The requester is not authenticated to perform this operation.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: apikey",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/cloud-dr-accounts/:id/cloud-dr-storage-containers/:scId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"cloud-dr-accounts",
																":id",
																"cloud-dr-storage-containers",
																":scId"
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "scId"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
												}
											]
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Get Cloud DR account by ID.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/cloud-dr-accounts/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"cloud-dr-accounts",
												":id"
											],
											"variable": [
												{
													"id": "2ba660c9-82a6-4c03-8e1b-5ffdbdeb8cbf",
													"key": "id",
													"value": "<string>",
													"type": "string",
													"description": "(Required) Cloud DR account ID."
												}
											]
										},
										"description": "Retrieves the specified Cloud Disaster Recovery account by ID.\n> This endpoint supports execution by the following roles: user\n"
									},
									"response": [
										{
											"name": "Successfully returned Cloud DR account.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/cloud-dr-accounts/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"cloud-dr-accounts",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"connectionStatus\": \"cillum deserunt\",\n \"connectionStatusMessage\": \"elit deserunt irure dolor\",\n \"id\": \"velit enim anim\",\n \"providerAccountId\": \"cupidatat proident \",\n \"providerName\": \"veniam aute exercitation proident\",\n \"providerParameters\": [\n  {\n   \"name\": \"la\",\n   \"value\": \"Excepteur nulla\"\n  },\n  {\n   \"name\": \"in incididunt adipisicing minim\",\n   \"value\": \"ipsum pariatur labore enim\"\n  }\n ],\n \"secretKey\": \"ut\",\n \"userKey\": \"ad ut\",\n \"userName\": \"deserunt Lorem Duis\"\n}"
										},
										{
											"name": "The request is not valid.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/cloud-dr-accounts/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"cloud-dr-accounts",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The requester is not authenticated to perform this operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/cloud-dr-accounts/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"cloud-dr-accounts",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The requester is not authorized to perform this operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/cloud-dr-accounts/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"cloud-dr-accounts",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "Any server error that prevented the completion of the request.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/cloud-dr-accounts/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"cloud-dr-accounts",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										}
									]
								},
								{
									"name": "Update Cloud DR account.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"connectionStatus\": \"<string>\",\n    \"connectionStatusMessage\": \"<string>\",\n    \"id\": \"<string>\",\n    \"providerAccountId\": \"<string>\",\n    \"providerName\": \"<string>\",\n    \"providerParameters\": [\n        {\n            \"name\": \"<string>\",\n            \"value\": \"<string>\"\n        },\n        {\n            \"name\": \"<string>\",\n            \"value\": \"<string>\"\n        }\n    ],\n    \"secretKey\": \"<string>\",\n    \"userKey\": \"<string>\",\n    \"userName\": \"<string>\"\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/cloud-dr-accounts/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"cloud-dr-accounts",
												":id"
											],
											"variable": [
												{
													"id": "643e143b-3937-40e5-bdef-8f7dc8b9dfae",
													"key": "id",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The Cloud DR account ID."
												}
											]
										},
										"description": "Updates the specified Cloud Disaster Recovery account.\n> This endpoint supports execution by the following roles: export-and-recovery-admin\n"
									},
									"response": [
										{
											"name": "The requester is not authenticated to perform this operation.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"connectionStatus\": \"<string>\",\n    \"connectionStatusMessage\": \"<string>\",\n    \"id\": \"<string>\",\n    \"providerAccountId\": \"<string>\",\n    \"providerName\": \"<string>\",\n    \"providerParameters\": [\n        {\n            \"name\": \"<string>\",\n            \"value\": \"<string>\"\n        },\n        {\n            \"name\": \"<string>\",\n            \"value\": \"<string>\"\n        }\n    ],\n    \"secretKey\": \"<string>\",\n    \"userKey\": \"<string>\",\n    \"userName\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/cloud-dr-accounts/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"cloud-dr-accounts",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "Resource updated.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"connectionStatus\": \"<string>\",\n    \"connectionStatusMessage\": \"<string>\",\n    \"id\": \"<string>\",\n    \"providerAccountId\": \"<string>\",\n    \"providerName\": \"<string>\",\n    \"providerParameters\": [\n        {\n            \"name\": \"<string>\",\n            \"value\": \"<string>\"\n        },\n        {\n            \"name\": \"<string>\",\n            \"value\": \"<string>\"\n        }\n    ],\n    \"secretKey\": \"<string>\",\n    \"userKey\": \"<string>\",\n    \"userName\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/cloud-dr-accounts/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"cloud-dr-accounts",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"connectionStatus\": \"cillum deserunt\",\n \"connectionStatusMessage\": \"elit deserunt irure dolor\",\n \"id\": \"velit enim anim\",\n \"providerAccountId\": \"cupidatat proident \",\n \"providerName\": \"veniam aute exercitation proident\",\n \"providerParameters\": [\n  {\n   \"name\": \"la\",\n   \"value\": \"Excepteur nulla\"\n  },\n  {\n   \"name\": \"in incididunt adipisicing minim\",\n   \"value\": \"ipsum pariatur labore enim\"\n  }\n ],\n \"secretKey\": \"ut\",\n \"userKey\": \"ad ut\",\n \"userName\": \"deserunt Lorem Duis\"\n}"
										},
										{
											"name": "Any server error that prevented the completion of the request.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"connectionStatus\": \"<string>\",\n    \"connectionStatusMessage\": \"<string>\",\n    \"id\": \"<string>\",\n    \"providerAccountId\": \"<string>\",\n    \"providerName\": \"<string>\",\n    \"providerParameters\": [\n        {\n            \"name\": \"<string>\",\n            \"value\": \"<string>\"\n        },\n        {\n            \"name\": \"<string>\",\n            \"value\": \"<string>\"\n        }\n    ],\n    \"secretKey\": \"<string>\",\n    \"userKey\": \"<string>\",\n    \"userName\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/cloud-dr-accounts/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"cloud-dr-accounts",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The requester is not authorized to perform this operation.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"connectionStatus\": \"<string>\",\n    \"connectionStatusMessage\": \"<string>\",\n    \"id\": \"<string>\",\n    \"providerAccountId\": \"<string>\",\n    \"providerName\": \"<string>\",\n    \"providerParameters\": [\n        {\n            \"name\": \"<string>\",\n            \"value\": \"<string>\"\n        },\n        {\n            \"name\": \"<string>\",\n            \"value\": \"<string>\"\n        }\n    ],\n    \"secretKey\": \"<string>\",\n    \"userKey\": \"<string>\",\n    \"userName\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/cloud-dr-accounts/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"cloud-dr-accounts",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The request is not valid.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"connectionStatus\": \"<string>\",\n    \"connectionStatusMessage\": \"<string>\",\n    \"id\": \"<string>\",\n    \"providerAccountId\": \"<string>\",\n    \"providerName\": \"<string>\",\n    \"providerParameters\": [\n        {\n            \"name\": \"<string>\",\n            \"value\": \"<string>\"\n        },\n        {\n            \"name\": \"<string>\",\n            \"value\": \"<string>\"\n        }\n    ],\n    \"secretKey\": \"<string>\",\n    \"userKey\": \"<string>\",\n    \"userName\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/cloud-dr-accounts/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"cloud-dr-accounts",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Get Cloud DR accounts.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/cloud-dr-accounts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"cloud-dr-accounts"
									]
								},
								"description": "Retrieves a list of Cloud Disaster Recovery accounts.\n> This endpoint supports execution by the following roles: user\n"
							},
							"response": [
								{
									"name": "The request is not valid.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/cloud-dr-accounts",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"cloud-dr-accounts"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "The requester is not authenticated to perform this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/cloud-dr-accounts",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"cloud-dr-accounts"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "The requester is not authorized to perform this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/cloud-dr-accounts",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"cloud-dr-accounts"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "Successfully returned Cloud DR accounts list.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/cloud-dr-accounts",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"cloud-dr-accounts"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"content\": [\n  {\n   \"connectionStatus\": \"ea in nisi consequat\",\n   \"connectionStatusMessage\": \"irure consequat ad exercitation\",\n   \"id\": \"aliquip\",\n   \"providerAccountId\": \"reprehenderit velit enim id ipsum\",\n   \"providerName\": \"cupidatat eu pariatur nostrud\",\n   \"providerParameters\": [\n    {\n     \"name\": \"dolor Duis ipsum pariatur sint\",\n     \"value\": \"anim incididunt\"\n    },\n    {\n     \"name\": \"c\",\n     \"value\": \"culpa Ut in elit labore\"\n    }\n   ],\n   \"secretKey\": \"veniam eu\",\n   \"userKey\": \"mollit non\",\n   \"userName\": \"elit sed tempor\"\n  },\n  {\n   \"connectionStatus\": \"irure ipsum qui enim\",\n   \"connectionStatusMessage\": \"irure cupidatat\",\n   \"id\": \"in eiusmod\",\n   \"providerAccountId\": \"non\",\n   \"providerName\": \"sint m\",\n   \"providerParameters\": [\n    {\n     \"name\": \"dolore\",\n     \"value\": \"nostrud enim aliquip\"\n    },\n    {\n     \"name\": \"cillum\",\n     \"value\": \"ipsum consequat\"\n    }\n   ],\n   \"secretKey\": \"ea\",\n   \"userKey\": \"exercitation esse\",\n   \"userName\": \"anim id\"\n  }\n ],\n \"page\": {\n  \"number\": -62334382,\n  \"queryState\": \"enim qui non \",\n  \"size\": 23753613,\n  \"totalElements\": -82539935,\n  \"totalPages\": -53058764\n }\n}"
								},
								{
									"name": "Any server error that prevented the completion of the request.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/cloud-dr-accounts",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"cloud-dr-accounts"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								}
							]
						},
						{
							"name": "Create Cloud DR accounts.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"connectionStatus\": \"<string>\",\n    \"connectionStatusMessage\": \"<string>\",\n    \"id\": \"<string>\",\n    \"providerAccountId\": \"<string>\",\n    \"providerName\": \"<string>\",\n    \"providerParameters\": [\n        {\n            \"name\": \"<string>\",\n            \"value\": \"<string>\"\n        },\n        {\n            \"name\": \"<string>\",\n            \"value\": \"<string>\"\n        }\n    ],\n    \"secretKey\": \"<string>\",\n    \"userKey\": \"<string>\",\n    \"userName\": \"<string>\"\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/cloud-dr-accounts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"cloud-dr-accounts"
									]
								},
								"description": "Creates a new Cloud Disaster Recovery account.\n> This endpoint supports execution by the following roles: export-and-recovery-admin\n"
							},
							"response": [
								{
									"name": "The request is not valid.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"connectionStatus\": \"<string>\",\n    \"connectionStatusMessage\": \"<string>\",\n    \"id\": \"<string>\",\n    \"providerAccountId\": \"<string>\",\n    \"providerName\": \"<string>\",\n    \"providerParameters\": [\n        {\n            \"name\": \"<string>\",\n            \"value\": \"<string>\"\n        },\n        {\n            \"name\": \"<string>\",\n            \"value\": \"<string>\"\n        }\n    ],\n    \"secretKey\": \"<string>\",\n    \"userKey\": \"<string>\",\n    \"userName\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/cloud-dr-accounts",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"cloud-dr-accounts"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "Any server error that prevented the completion of the request.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"connectionStatus\": \"<string>\",\n    \"connectionStatusMessage\": \"<string>\",\n    \"id\": \"<string>\",\n    \"providerAccountId\": \"<string>\",\n    \"providerName\": \"<string>\",\n    \"providerParameters\": [\n        {\n            \"name\": \"<string>\",\n            \"value\": \"<string>\"\n        },\n        {\n            \"name\": \"<string>\",\n            \"value\": \"<string>\"\n        }\n    ],\n    \"secretKey\": \"<string>\",\n    \"userKey\": \"<string>\",\n    \"userName\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/cloud-dr-accounts",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"cloud-dr-accounts"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "The requester is not authorized to perform this operation.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"connectionStatus\": \"<string>\",\n    \"connectionStatusMessage\": \"<string>\",\n    \"id\": \"<string>\",\n    \"providerAccountId\": \"<string>\",\n    \"providerName\": \"<string>\",\n    \"providerParameters\": [\n        {\n            \"name\": \"<string>\",\n            \"value\": \"<string>\"\n        },\n        {\n            \"name\": \"<string>\",\n            \"value\": \"<string>\"\n        }\n    ],\n    \"secretKey\": \"<string>\",\n    \"userKey\": \"<string>\",\n    \"userName\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/cloud-dr-accounts",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"cloud-dr-accounts"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "The requester is not authenticated to perform this operation.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"connectionStatus\": \"<string>\",\n    \"connectionStatusMessage\": \"<string>\",\n    \"id\": \"<string>\",\n    \"providerAccountId\": \"<string>\",\n    \"providerName\": \"<string>\",\n    \"providerParameters\": [\n        {\n            \"name\": \"<string>\",\n            \"value\": \"<string>\"\n        },\n        {\n            \"name\": \"<string>\",\n            \"value\": \"<string>\"\n        }\n    ],\n    \"secretKey\": \"<string>\",\n    \"userKey\": \"<string>\",\n    \"userName\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/cloud-dr-accounts",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"cloud-dr-accounts"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "Resource created.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"connectionStatus\": \"<string>\",\n    \"connectionStatusMessage\": \"<string>\",\n    \"id\": \"<string>\",\n    \"providerAccountId\": \"<string>\",\n    \"providerName\": \"<string>\",\n    \"providerParameters\": [\n        {\n            \"name\": \"<string>\",\n            \"value\": \"<string>\"\n        },\n        {\n            \"name\": \"<string>\",\n            \"value\": \"<string>\"\n        }\n    ],\n    \"secretKey\": \"<string>\",\n    \"userKey\": \"<string>\",\n    \"userName\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/cloud-dr-accounts",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"cloud-dr-accounts"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"connectionStatus\": \"cillum deserunt\",\n \"connectionStatusMessage\": \"elit deserunt irure dolor\",\n \"id\": \"velit enim anim\",\n \"providerAccountId\": \"cupidatat proident \",\n \"providerName\": \"veniam aute exercitation proident\",\n \"providerParameters\": [\n  {\n   \"name\": \"la\",\n   \"value\": \"Excepteur nulla\"\n  },\n  {\n   \"name\": \"in incididunt adipisicing minim\",\n   \"value\": \"ipsum pariatur labore enim\"\n  }\n ],\n \"secretKey\": \"ut\",\n \"userKey\": \"ad ut\",\n \"userName\": \"deserunt Lorem Duis\"\n}"
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "cloud-dr-configurations",
					"item": [
						{
							"name": "Update Cloud DR configuration.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"key\": \"<string>\",\n    \"value\": \"<string>\"\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/cloud-dr-configurations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"cloud-dr-configurations"
									]
								},
								"description": "Update the Cloud Disaster Recovery configuration.\n> This endpoint supports execution by the following roles: export-and-recovery-admin\n"
							},
							"response": [
								{
									"name": "The requester is not authenticated to perform this operation.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"key\": \"<string>\",\n    \"value\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/cloud-dr-configurations",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"cloud-dr-configurations"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "The request is not valid.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"key\": \"<string>\",\n    \"value\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/cloud-dr-configurations",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"cloud-dr-configurations"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "Any server error that prevented the completion of the request.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"key\": \"<string>\",\n    \"value\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/cloud-dr-configurations",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"cloud-dr-configurations"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "Resource has been updated successfully.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"key\": \"<string>\",\n    \"value\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/cloud-dr-configurations",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"cloud-dr-configurations"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"cdrsConnectivityState\": {\n  \"CdrsConnectivityStateEnum\": [\n   \"ea anim Ut commodo\",\n   \"Lorem\"\n  ]\n },\n \"cidr\": \"esse nisi consectetur in\",\n \"cloudTargetId\": \"eu nostrud in\",\n \"connectionIp\": \"laborum consequat\",\n \"deploymentCompleted\": true,\n \"email\": \"in dolore consequat\",\n \"privateNetwork\": false,\n \"publicDns\": \"tempor ea cupidatat\",\n \"region\": \"sed Excepteur proident aute in\"\n}"
								},
								{
									"name": "The requester is not authorized to perform this operation.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"key\": \"<string>\",\n    \"value\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/cloud-dr-configurations",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"cloud-dr-configurations"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								}
							]
						},
						{
							"name": "Get Cloud DR configuration by key.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/cloud-dr-configurations/:key",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"cloud-dr-configurations",
										":key"
									],
									"variable": [
										{
											"id": "cd1439b5-df9f-4fef-98c5-2bbd5d0e3d1f",
											"key": "key",
											"value": "<string>",
											"type": "string",
											"description": "(Required) Key of the Cloud DR configuration."
										}
									]
								},
								"description": "Retrieves the Cloud Disaster Recovery configuration for the specified key.\n> This endpoint supports execution by the following roles: user\n"
							},
							"response": [
								{
									"name": "The requester is not authenticated to perform this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/cloud-dr-configurations/:key",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"cloud-dr-configurations",
												":key"
											],
											"variable": [
												{
													"key": "key"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "The requester is not authorized to perform this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/cloud-dr-configurations/:key",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"cloud-dr-configurations",
												":key"
											],
											"variable": [
												{
													"key": "key"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "The response body contains a Cloud DR configuration object.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/cloud-dr-configurations/:key",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"cloud-dr-configurations",
												":key"
											],
											"variable": [
												{
													"key": "key"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"key\": \"ad culpa velit\",\n \"value\": \"fugiat incididunt\"\n}"
								},
								{
									"name": "The request is not valid.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/cloud-dr-configurations/:key",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"cloud-dr-configurations",
												":key"
											],
											"variable": [
												{
													"key": "key"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "Any server error that prevented the completion of the request.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/cloud-dr-configurations/:key",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"cloud-dr-configurations",
												":key"
											],
											"variable": [
												{
													"key": "key"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "cloud-dr-proxy",
					"item": [
						{
							"name": "Delete Cloud DR proxy configuration.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/cloud-dr-proxy",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"cloud-dr-proxy"
									]
								},
								"description": "Deletes proxy details from Cloud DR.\n> This endpoint supports execution by the following roles: export-and-recovery-admin\n"
							},
							"response": [
								{
									"name": "The request was accepted for processing.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/cloud-dr-proxy",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"cloud-dr-proxy"
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								}
							]
						},
						{
							"name": "Get Cloud DR proxy configuration.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/cloud-dr-proxy",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"cloud-dr-proxy"
									]
								},
								"description": "Retrieves details about the Cloud DR proxy.\n> This endpoint supports execution by the following roles: user\n"
							},
							"response": [
								{
									"name": "The request completed successfully.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/cloud-dr-proxy",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"cloud-dr-proxy"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n {\n  \"enable\": true,\n  \"enableAuthentication\": false,\n  \"host\": \"sint nisi id commodo\",\n  \"port\": 25085905,\n  \"username\": \"incididunt Duis tempor\"\n },\n {\n  \"enable\": false,\n  \"enableAuthentication\": false,\n  \"host\": \"sunt irure occaecat\",\n  \"port\": 34183274,\n  \"username\": \"volu\"\n }\n]"
								}
							]
						},
						{
							"name": "Update Cloud DR proxy configuration.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"enable\": \"<boolean>\",\n    \"enableAuthentication\": \"<boolean>\",\n    \"host\": \"<string>\",\n    \"port\": \"<integer>\",\n    \"username\": \"<string>\",\n    \"password\": \"<string>\"\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/cloud-dr-proxy",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"cloud-dr-proxy"
									]
								},
								"description": "Updates proxy details in Cloud DR.\n> This endpoint supports execution by the following roles: export-and-recovery-admin\n"
							},
							"response": [
								{
									"name": "The request was accepted for processing.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"enable\": \"<boolean>\",\n    \"enableAuthentication\": \"<boolean>\",\n    \"host\": \"<string>\",\n    \"port\": \"<integer>\",\n    \"username\": \"<string>\",\n    \"password\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/cloud-dr-proxy",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"cloud-dr-proxy"
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"enable\": false,\n \"enableAuthentication\": false,\n \"host\": \"cupidatat eu magna\",\n \"port\": -83626235,\n \"username\": \"eiusmod labore\"\n}"
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "cloud-dr-server-configuration",
					"item": [
						{
							"name": "Get CDRS properties.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/cloud-dr-server-configuration",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"cloud-dr-server-configuration"
									]
								},
								"description": "Retrieves the Cloud Disaster Recovery Server (CDRS) properties.\n> This endpoint supports execution by the following roles: user\n"
							},
							"response": [
								{
									"name": "Successfully returned CDRS properties.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/cloud-dr-server-configuration",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"cloud-dr-server-configuration"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"cdrsConnectivityState\": {\n  \"CdrsConnectivityStateEnum\": [\n   \"ea anim Ut commodo\",\n   \"Lorem\"\n  ]\n },\n \"cidr\": \"esse nisi consectetur in\",\n \"cloudTargetId\": \"eu nostrud in\",\n \"connectionIp\": \"laborum consequat\",\n \"deploymentCompleted\": true,\n \"email\": \"in dolore consequat\",\n \"privateNetwork\": false,\n \"publicDns\": \"tempor ea cupidatat\",\n \"region\": \"sed Excepteur proident aute in\"\n}"
								},
								{
									"name": "The request is not valid.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/cloud-dr-server-configuration",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"cloud-dr-server-configuration"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "The requester is not authorized to perform this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/cloud-dr-server-configuration",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"cloud-dr-server-configuration"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "The requester is not authenticated to perform this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/cloud-dr-server-configuration",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"cloud-dr-server-configuration"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "Any server error that prevented the completion of the request.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/cloud-dr-server-configuration",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"cloud-dr-server-configuration"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								}
							]
						},
						{
							"name": "Edit CDRS connection properties.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"password\": \"<string>\",\n    \"privateIp\": \"<string>\"\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/cloud-dr-server-configuration",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"cloud-dr-server-configuration"
									]
								},
								"description": "Edit the Cloud Disaster Recovery Server (CDRS) connection properties.\n> This endpoint supports execution by the following roles: export-and-recovery-admin\n"
							},
							"response": [
								{
									"name": "The requester is not authorized to perform this operation.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"password\": \"<string>\",\n    \"privateIp\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/cloud-dr-server-configuration",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"cloud-dr-server-configuration"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "Resource updated.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"password\": \"<string>\",\n    \"privateIp\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/cloud-dr-server-configuration",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"cloud-dr-server-configuration"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								},
								{
									"name": "Any server error that prevented the completion of the request.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"password\": \"<string>\",\n    \"privateIp\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/cloud-dr-server-configuration",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"cloud-dr-server-configuration"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "The request is not valid.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"password\": \"<string>\",\n    \"privateIp\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/cloud-dr-server-configuration",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"cloud-dr-server-configuration"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "The requester is not authenticated to perform this operation.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"password\": \"<string>\",\n    \"privateIp\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/cloud-dr-server-configuration",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"cloud-dr-server-configuration"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "cloud-dr-server-deployment",
					"item": [
						{
							"name": "Delete CDRS.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "\"<string>\"",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/cloud-dr-server-deployment",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"cloud-dr-server-deployment"
									]
								},
								"description": "Deletes the Cloud Disaster Recovery Server (CDRS).\n> This endpoint supports execution by the following roles: export-and-recovery-admin\n"
							},
							"response": [
								{
									"name": "Any server error that prevented the completion of the request.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "\"<string>\""
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/cloud-dr-server-deployment",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"cloud-dr-server-deployment"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "The requester is not authorized to perform this operation.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "\"<string>\""
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/cloud-dr-server-deployment",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"cloud-dr-server-deployment"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "Successfully deleted CDRS.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "\"<string>\""
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/cloud-dr-server-deployment",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"cloud-dr-server-deployment"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								},
								{
									"name": "The requester is not authenticated to perform this operation.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "\"<string>\""
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/cloud-dr-server-deployment",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"cloud-dr-server-deployment"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "The request is not valid.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "\"<string>\""
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/cloud-dr-server-deployment",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"cloud-dr-server-deployment"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								}
							]
						},
						{
							"name": "Get CDRS deployment state.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/cloud-dr-server-deployment",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"cloud-dr-server-deployment"
									]
								},
								"description": "Retrieves the Cloud Disaster Recovery Server (CDRS) deployment state.\n> This endpoint supports execution by the following roles: user\n"
							},
							"response": [
								{
									"name": "Any server error that prevented the completion of the request.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/cloud-dr-server-deployment",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"cloud-dr-server-deployment"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "The requester is not authenticated to perform this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/cloud-dr-server-deployment",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"cloud-dr-server-deployment"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "Successfully returned CDRS deployment state.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/cloud-dr-server-deployment",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"cloud-dr-server-deployment"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"deployState\": {\n  \"DeployStateEnum\": [\n   \"velit tempor\",\n   \"sed voluptate tempor\"\n  ]\n },\n \"jobName\": \"sed Ut nostrud sit occaecat\",\n \"message\": \"esse aliqua\"\n}"
								},
								{
									"name": "The request is not valid.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/cloud-dr-server-deployment",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"cloud-dr-server-deployment"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "The requester is not authorized to perform this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/cloud-dr-server-deployment",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"cloud-dr-server-deployment"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								}
							]
						},
						{
							"name": "Deploy a CDRS.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"adminPassword\": \"<string>\",\n    \"cidrBlockIp\": \"<string>\",\n    \"cloudTargetId\": \"<string>\",\n    \"deleteExisting\": \"<boolean>\",\n    \"email\": \"<string>\",\n    \"monitorPassword\": \"<string>\",\n    \"vpcId\": \"<string>\",\n    \"workflowTaskId\": \"<string>\"\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/cloud-dr-server-deployment",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"cloud-dr-server-deployment"
									]
								},
								"description": "Deploys a Cloud Disaster Recovery Server (CDRS).\n> This endpoint supports execution by the following roles: export-and-recovery-admin\n"
							},
							"response": [
								{
									"name": "The requester is not authenticated to perform this operation.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"adminPassword\": \"<string>\",\n    \"cidrBlockIp\": \"<string>\",\n    \"cloudTargetId\": \"<string>\",\n    \"deleteExisting\": \"<boolean>\",\n    \"email\": \"<string>\",\n    \"monitorPassword\": \"<string>\",\n    \"vpcId\": \"<string>\",\n    \"workflowTaskId\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/cloud-dr-server-deployment",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"cloud-dr-server-deployment"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "The requester is not authorized to perform this operation.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"adminPassword\": \"<string>\",\n    \"cidrBlockIp\": \"<string>\",\n    \"cloudTargetId\": \"<string>\",\n    \"deleteExisting\": \"<boolean>\",\n    \"email\": \"<string>\",\n    \"monitorPassword\": \"<string>\",\n    \"vpcId\": \"<string>\",\n    \"workflowTaskId\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/cloud-dr-server-deployment",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"cloud-dr-server-deployment"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "Request accepted.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"adminPassword\": \"<string>\",\n    \"cidrBlockIp\": \"<string>\",\n    \"cloudTargetId\": \"<string>\",\n    \"deleteExisting\": \"<boolean>\",\n    \"email\": \"<string>\",\n    \"monitorPassword\": \"<string>\",\n    \"vpcId\": \"<string>\",\n    \"workflowTaskId\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/cloud-dr-server-deployment",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"cloud-dr-server-deployment"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"taskId\": \"minim\"\n}"
								},
								{
									"name": "The request is not valid.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"adminPassword\": \"<string>\",\n    \"cidrBlockIp\": \"<string>\",\n    \"cloudTargetId\": \"<string>\",\n    \"deleteExisting\": \"<boolean>\",\n    \"email\": \"<string>\",\n    \"monitorPassword\": \"<string>\",\n    \"vpcId\": \"<string>\",\n    \"workflowTaskId\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/cloud-dr-server-deployment",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"cloud-dr-server-deployment"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "Any server error that prevented the completion of the request.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"adminPassword\": \"<string>\",\n    \"cidrBlockIp\": \"<string>\",\n    \"cloudTargetId\": \"<string>\",\n    \"deleteExisting\": \"<boolean>\",\n    \"email\": \"<string>\",\n    \"monitorPassword\": \"<string>\",\n    \"vpcId\": \"<string>\",\n    \"workflowTaskId\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/cloud-dr-server-deployment",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"cloud-dr-server-deployment"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "cloud-dr-sessions",
					"item": [
						{
							"name": "Get Cloud DR sessions.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/cloud-dr-sessions?page=1&pageSize=100&filter=<string>&orderby=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"cloud-dr-sessions"
									],
									"query": [
										{
											"key": "page",
											"value": "1",
											"description": "The page number to be returned. Must not be less than 1. See Tutorials - Page the List Result."
										},
										{
											"key": "pageSize",
											"value": "100",
											"description": "The number of resources to be returned. Must not be less than 1. See Tutorials - Page the List Result."
										},
										{
											"key": "filter",
											"value": "<string>",
											"description": "The filter string that is expressed using PowerProtect Data Manager filter syntax. See Tutorials - Filter the List Result."
										},
										{
											"key": "orderby",
											"value": "<string>",
											"description": "The attributes/fields to be sorted by. This parameter can combine with sort direction \"ASC\" or \"DESC\". Default direction is ASC. See Tutorials - Sort the List Result."
										}
									]
								},
								"description": "Retrieves Cloud Disaster Recovery sessions by pagination, order by, and filter.\n> This endpoint supports execution by the following roles: user\n"
							},
							"response": [
								{
									"name": "Any server error that prevented the completion of the request.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/cloud-dr-sessions?page=1&pageSize=100&filter=<string>&orderby=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"cloud-dr-sessions"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "<string>"
												},
												{
													"key": "orderby",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "The requestor is not authorized to perform this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/cloud-dr-sessions?page=1&pageSize=100&filter=<string>&orderby=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"cloud-dr-sessions"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "<string>"
												},
												{
													"key": "orderby",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "The request is not valid.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/cloud-dr-sessions?page=1&pageSize=100&filter=<string>&orderby=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"cloud-dr-sessions"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "<string>"
												},
												{
													"key": "orderby",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "The requestor is not authenticated to perform this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/cloud-dr-sessions?page=1&pageSize=100&filter=<string>&orderby=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"cloud-dr-sessions"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "<string>"
												},
												{
													"key": "orderby",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "Successfully returned available Cloud DR sessions resources.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/cloud-dr-sessions?page=1&pageSize=100&filter=<string>&orderby=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"cloud-dr-sessions"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "<string>"
												},
												{
													"key": "orderby",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"content\": [\n  {\n   \"assetName\": \"reprehenderit commodo\",\n   \"copyTime\": \"1980-06-11T16:40:03.087Z\",\n   \"drType\": \"amet mollit in ex\",\n   \"id\": \"in officia sed amet\",\n   \"instanceId\": \"qui\",\n   \"region\": \"ad sit\",\n   \"status\": \"tempor cillum\"\n  },\n  {\n   \"assetName\": \"minim Duis culpa ullamc\",\n   \"copyTime\": \"1984-06-23T22:30:37.006Z\",\n   \"drType\": \"veniam sint nisi dolor eu\",\n   \"id\": \"enim id\",\n   \"instanceId\": \"esse veniam\",\n   \"region\": \"fugiat Duis\",\n   \"status\": \"ut voluptate sint laborum\"\n  }\n ],\n \"pageInfo\": {\n  \"number\": -48950154,\n  \"queryState\": \"velit voluptate qui\",\n  \"size\": -12425198,\n  \"totalElements\": 16598210,\n  \"totalPages\": -61480892\n }\n}"
								}
							]
						},
						{
							"name": "End Cloud DR session.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/cloud-dr-sessions/:drId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"cloud-dr-sessions",
										":drId"
									],
									"variable": [
										{
											"id": "5cf65fa1-4d23-4a79-9d8c-8a2ce12bd9df",
											"key": "drId",
											"value": "<string>",
											"type": "string",
											"description": "(Required) Cloud DR session ID."
										}
									]
								},
								"description": "Ends the specified Cloud Disaster Recovery session by its ID.\n> This endpoint supports execution by the following roles: export-and-recovery-admin\n"
							},
							"response": [
								{
									"name": "The requestor is not authenticated to perform this operation.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/cloud-dr-sessions/:drId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"cloud-dr-sessions",
												":drId"
											],
											"variable": [
												{
													"key": "drId"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "The request is not valid.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/cloud-dr-sessions/:drId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"cloud-dr-sessions",
												":drId"
											],
											"variable": [
												{
													"key": "drId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "The requestor is not authorized to perform this operation.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/cloud-dr-sessions/:drId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"cloud-dr-sessions",
												":drId"
											],
											"variable": [
												{
													"key": "drId"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "Any server error that prevented the completion of the request.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/cloud-dr-sessions/:drId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"cloud-dr-sessions",
												":drId"
											],
											"variable": [
												{
													"key": "drId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "Successfully invoked ending of Cloud DR session.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/cloud-dr-sessions/:drId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"cloud-dr-sessions",
												":drId"
											],
											"variable": [
												{
													"key": "drId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "cloud-dr-vcenters",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Update vCenter configuration.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"dataStores\": [\n        {\n            \"moref\": {\n                \"morefId\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"name\": \"<string>\"\n        },\n        {\n            \"moref\": {\n                \"morefId\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"name\": \"<string>\"\n        }\n    ],\n    \"id\": \"<string>\",\n    \"isFailoverTarget\": \"<boolean>\",\n    \"networks\": [\n        {\n            \"gateway\": \"<string>\",\n            \"ipRanges\": [\n                {\n                    \"baseIp\": \"<string>\",\n                    \"range\": \"<integer>\"\n                },\n                {\n                    \"baseIp\": \"<string>\",\n                    \"range\": \"<integer>\"\n                }\n            ],\n            \"moref\": {\n                \"morefId\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"name\": \"<string>\",\n            \"netMask\": \"<string>\"\n        },\n        {\n            \"gateway\": \"<string>\",\n            \"ipRanges\": [\n                {\n                    \"baseIp\": \"<string>\",\n                    \"range\": \"<integer>\"\n                },\n                {\n                    \"baseIp\": \"<string>\",\n                    \"range\": \"<integer>\"\n                }\n            ],\n            \"moref\": {\n                \"morefId\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"name\": \"<string>\",\n            \"netMask\": \"<string>\"\n        }\n    ]\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/cloud-dr-vcenters/:id/configuration",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"cloud-dr-vcenters",
												":id",
												"configuration"
											],
											"variable": [
												{
													"id": "10a45ad9-9f6b-47e6-901b-9c2c72e94407",
													"key": "id",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The vCenter Server ID."
												}
											]
										},
										"description": "Updates the vCenter configuration for the specified vCenter Server.\n> This endpoint supports execution by the following roles: export-and-recovery-admin\n"
									},
									"response": [
										{
											"name": "Successfully updated vCenter configuration.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"dataStores\": [\n        {\n            \"moref\": {\n                \"morefId\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"name\": \"<string>\"\n        },\n        {\n            \"moref\": {\n                \"morefId\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"name\": \"<string>\"\n        }\n    ],\n    \"id\": \"<string>\",\n    \"isFailoverTarget\": \"<boolean>\",\n    \"networks\": [\n        {\n            \"gateway\": \"<string>\",\n            \"ipRanges\": [\n                {\n                    \"baseIp\": \"<string>\",\n                    \"range\": \"<integer>\"\n                },\n                {\n                    \"baseIp\": \"<string>\",\n                    \"range\": \"<integer>\"\n                }\n            ],\n            \"moref\": {\n                \"morefId\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"name\": \"<string>\",\n            \"netMask\": \"<string>\"\n        },\n        {\n            \"gateway\": \"<string>\",\n            \"ipRanges\": [\n                {\n                    \"baseIp\": \"<string>\",\n                    \"range\": \"<integer>\"\n                },\n                {\n                    \"baseIp\": \"<string>\",\n                    \"range\": \"<integer>\"\n                }\n            ],\n            \"moref\": {\n                \"morefId\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"name\": \"<string>\",\n            \"netMask\": \"<string>\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/cloud-dr-vcenters/:id/configuration",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"cloud-dr-vcenters",
														":id",
														"configuration"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{}"
										},
										{
											"name": "The requester is not authorized to perform this operation.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"dataStores\": [\n        {\n            \"moref\": {\n                \"morefId\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"name\": \"<string>\"\n        },\n        {\n            \"moref\": {\n                \"morefId\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"name\": \"<string>\"\n        }\n    ],\n    \"id\": \"<string>\",\n    \"isFailoverTarget\": \"<boolean>\",\n    \"networks\": [\n        {\n            \"gateway\": \"<string>\",\n            \"ipRanges\": [\n                {\n                    \"baseIp\": \"<string>\",\n                    \"range\": \"<integer>\"\n                },\n                {\n                    \"baseIp\": \"<string>\",\n                    \"range\": \"<integer>\"\n                }\n            ],\n            \"moref\": {\n                \"morefId\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"name\": \"<string>\",\n            \"netMask\": \"<string>\"\n        },\n        {\n            \"gateway\": \"<string>\",\n            \"ipRanges\": [\n                {\n                    \"baseIp\": \"<string>\",\n                    \"range\": \"<integer>\"\n                },\n                {\n                    \"baseIp\": \"<string>\",\n                    \"range\": \"<integer>\"\n                }\n            ],\n            \"moref\": {\n                \"morefId\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"name\": \"<string>\",\n            \"netMask\": \"<string>\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/cloud-dr-vcenters/:id/configuration",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"cloud-dr-vcenters",
														":id",
														"configuration"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "Any server error that prevented the completion of the request.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"dataStores\": [\n        {\n            \"moref\": {\n                \"morefId\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"name\": \"<string>\"\n        },\n        {\n            \"moref\": {\n                \"morefId\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"name\": \"<string>\"\n        }\n    ],\n    \"id\": \"<string>\",\n    \"isFailoverTarget\": \"<boolean>\",\n    \"networks\": [\n        {\n            \"gateway\": \"<string>\",\n            \"ipRanges\": [\n                {\n                    \"baseIp\": \"<string>\",\n                    \"range\": \"<integer>\"\n                },\n                {\n                    \"baseIp\": \"<string>\",\n                    \"range\": \"<integer>\"\n                }\n            ],\n            \"moref\": {\n                \"morefId\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"name\": \"<string>\",\n            \"netMask\": \"<string>\"\n        },\n        {\n            \"gateway\": \"<string>\",\n            \"ipRanges\": [\n                {\n                    \"baseIp\": \"<string>\",\n                    \"range\": \"<integer>\"\n                },\n                {\n                    \"baseIp\": \"<string>\",\n                    \"range\": \"<integer>\"\n                }\n            ],\n            \"moref\": {\n                \"morefId\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"name\": \"<string>\",\n            \"netMask\": \"<string>\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/cloud-dr-vcenters/:id/configuration",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"cloud-dr-vcenters",
														":id",
														"configuration"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The request is not valid.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"dataStores\": [\n        {\n            \"moref\": {\n                \"morefId\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"name\": \"<string>\"\n        },\n        {\n            \"moref\": {\n                \"morefId\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"name\": \"<string>\"\n        }\n    ],\n    \"id\": \"<string>\",\n    \"isFailoverTarget\": \"<boolean>\",\n    \"networks\": [\n        {\n            \"gateway\": \"<string>\",\n            \"ipRanges\": [\n                {\n                    \"baseIp\": \"<string>\",\n                    \"range\": \"<integer>\"\n                },\n                {\n                    \"baseIp\": \"<string>\",\n                    \"range\": \"<integer>\"\n                }\n            ],\n            \"moref\": {\n                \"morefId\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"name\": \"<string>\",\n            \"netMask\": \"<string>\"\n        },\n        {\n            \"gateway\": \"<string>\",\n            \"ipRanges\": [\n                {\n                    \"baseIp\": \"<string>\",\n                    \"range\": \"<integer>\"\n                },\n                {\n                    \"baseIp\": \"<string>\",\n                    \"range\": \"<integer>\"\n                }\n            ],\n            \"moref\": {\n                \"morefId\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"name\": \"<string>\",\n            \"netMask\": \"<string>\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/cloud-dr-vcenters/:id/configuration",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"cloud-dr-vcenters",
														":id",
														"configuration"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The vCenter id in the request is not found.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"dataStores\": [\n        {\n            \"moref\": {\n                \"morefId\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"name\": \"<string>\"\n        },\n        {\n            \"moref\": {\n                \"morefId\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"name\": \"<string>\"\n        }\n    ],\n    \"id\": \"<string>\",\n    \"isFailoverTarget\": \"<boolean>\",\n    \"networks\": [\n        {\n            \"gateway\": \"<string>\",\n            \"ipRanges\": [\n                {\n                    \"baseIp\": \"<string>\",\n                    \"range\": \"<integer>\"\n                },\n                {\n                    \"baseIp\": \"<string>\",\n                    \"range\": \"<integer>\"\n                }\n            ],\n            \"moref\": {\n                \"morefId\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"name\": \"<string>\",\n            \"netMask\": \"<string>\"\n        },\n        {\n            \"gateway\": \"<string>\",\n            \"ipRanges\": [\n                {\n                    \"baseIp\": \"<string>\",\n                    \"range\": \"<integer>\"\n                },\n                {\n                    \"baseIp\": \"<string>\",\n                    \"range\": \"<integer>\"\n                }\n            ],\n            \"moref\": {\n                \"morefId\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"name\": \"<string>\",\n            \"netMask\": \"<string>\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/cloud-dr-vcenters/:id/configuration",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"cloud-dr-vcenters",
														":id",
														"configuration"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The requester is not authenticated to perform this operation.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"dataStores\": [\n        {\n            \"moref\": {\n                \"morefId\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"name\": \"<string>\"\n        },\n        {\n            \"moref\": {\n                \"morefId\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"name\": \"<string>\"\n        }\n    ],\n    \"id\": \"<string>\",\n    \"isFailoverTarget\": \"<boolean>\",\n    \"networks\": [\n        {\n            \"gateway\": \"<string>\",\n            \"ipRanges\": [\n                {\n                    \"baseIp\": \"<string>\",\n                    \"range\": \"<integer>\"\n                },\n                {\n                    \"baseIp\": \"<string>\",\n                    \"range\": \"<integer>\"\n                }\n            ],\n            \"moref\": {\n                \"morefId\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"name\": \"<string>\",\n            \"netMask\": \"<string>\"\n        },\n        {\n            \"gateway\": \"<string>\",\n            \"ipRanges\": [\n                {\n                    \"baseIp\": \"<string>\",\n                    \"range\": \"<integer>\"\n                },\n                {\n                    \"baseIp\": \"<string>\",\n                    \"range\": \"<integer>\"\n                }\n            ],\n            \"moref\": {\n                \"morefId\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"name\": \"<string>\",\n            \"netMask\": \"<string>\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/cloud-dr-vcenters/:id/configuration",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"cloud-dr-vcenters",
														":id",
														"configuration"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										}
									]
								},
								{
									"name": "Get vCenter inventory.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/cloud-dr-vcenters/:id/inventory",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"cloud-dr-vcenters",
												":id",
												"inventory"
											],
											"variable": [
												{
													"id": "982e2a1d-c93e-4ca2-80f5-6a4be3c70c51",
													"key": "id",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The vCenter Server ID."
												}
											]
										},
										"description": "Retrieves vCenter inventory for the specified vCenter Server ID.\n> This endpoint supports execution by the following roles: user\n"
									},
									"response": [
										{
											"name": "The requester is not authorized to perform this operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/cloud-dr-vcenters/:id/inventory",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"cloud-dr-vcenters",
														":id",
														"inventory"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "Successfully returned vCenter inventory.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/cloud-dr-vcenters/:id/inventory",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"cloud-dr-vcenters",
														":id",
														"inventory"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"dataCenters\": [\n  {\n   \"dataStores\": [\n    {\n     \"availableNetworks\": [\n      {\n       \"morefId\": \"reprehenderit Ut laboris irure fugiat\",\n       \"type\": \"fugiat sed adipisicing\"\n      },\n      {\n       \"morefId\": \"incididunt ullamco cupidatat\",\n       \"type\": \"voluptate nisi dolore aliquip veniam\"\n      }\n     ],\n     \"moref\": {\n      \"morefId\": \"irure\",\n      \"type\": \"Excepteur sit in occaecat esse\"\n     },\n     \"name\": \"amet\"\n    },\n    {\n     \"availableNetworks\": [\n      {\n       \"morefId\": \"Lorem mollit\",\n       \"type\": \"dolore dolore aliquip\"\n      },\n      {\n       \"morefId\": \"pariatur dolor ut cillum\",\n       \"type\": \"nisi veniam consequat\"\n      }\n     ],\n     \"moref\": {\n      \"morefId\": \"proident adipisicing dolore est\",\n      \"type\": \"mollit consequat dolor\"\n     },\n     \"name\": \"exercitation ut\"\n    }\n   ],\n   \"moref\": {\n    \"morefId\": \"quis dolo\",\n    \"type\": \"velit consectetur in\"\n   },\n   \"name\": \"esse deserunt nulla quis\",\n   \"networks\": [\n    {\n     \"moref\": {\n      \"morefId\": \"quis consequat sunt\",\n      \"type\": \"fugiat ipsum ex\"\n     },\n     \"name\": \"laboris sed id est eiusmod\"\n    },\n    {\n     \"moref\": {\n      \"morefId\": \"commodo\",\n      \"type\": \"et non ex exercitation amet\"\n     },\n     \"name\": \"ut sunt ad\"\n    }\n   ]\n  },\n  {\n   \"dataStores\": [\n    {\n     \"availableNetworks\": [\n      {\n       \"morefId\": \"dolore elit magna\",\n       \"type\": \"voluptate nostrud\"\n      },\n      {\n       \"morefId\": \"voluptate proident nulla\",\n       \"type\": \"in deserunt\"\n      }\n     ],\n     \"moref\": {\n      \"morefId\": \"nostrud amet consectetur irure labore\",\n      \"type\": \"nulla commodo officia in\"\n     },\n     \"name\": \"proident enim Ut anim\"\n    },\n    {\n     \"availableNetworks\": [\n      {\n       \"morefId\": \"tempor officia laborum\",\n       \"type\": \"proident minim ipsum e\"\n      },\n      {\n       \"morefId\": \"ut nostrud sit quis\",\n       \"type\": \"nisi sed enim officia dolore\"\n      }\n     ],\n     \"moref\": {\n      \"morefId\": \"ut\",\n      \"type\": \"Ut anim minim ut nulla\"\n     },\n     \"name\": \"magna Lore\"\n    }\n   ],\n   \"moref\": {\n    \"morefId\": \"amet proident ullamco cillum Lorem\",\n    \"type\": \"ipsum minim\"\n   },\n   \"name\": \"tempor Lorem reprehenderit\",\n   \"networks\": [\n    {\n     \"moref\": {\n      \"morefId\": \"nulla dolore incididunt Duis dolor\",\n      \"type\": \"ex ut\"\n     },\n     \"name\": \"dolore\"\n    },\n    {\n     \"moref\": {\n      \"morefId\": \"magna dolore nisi et\",\n      \"type\": \"sed\"\n     },\n     \"name\": \"dolor in cillum sed aliquip\"\n    }\n   ]\n  }\n ],\n \"id\": \"adipisicing velit elit Lorem nisi\"\n}"
										},
										{
											"name": "The request is not valid.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/cloud-dr-vcenters/:id/inventory",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"cloud-dr-vcenters",
														":id",
														"inventory"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The vCenter id in the request is not found.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/cloud-dr-vcenters/:id/inventory",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"cloud-dr-vcenters",
														":id",
														"inventory"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The requester is not authenticated to perform this operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/cloud-dr-vcenters/:id/inventory",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"cloud-dr-vcenters",
														":id",
														"inventory"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "Any server error that prevented the completion of the request.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/cloud-dr-vcenters/:id/inventory",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"cloud-dr-vcenters",
														":id",
														"inventory"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Get Cloud DR vCenters list.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/cloud-dr-vcenters",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"cloud-dr-vcenters"
									]
								},
								"description": "Retrieves a list of Cloud Disaster Recovery vCenter Servers.\n> This endpoint supports execution by the following roles: user\n"
							},
							"response": [
								{
									"name": "Any server error that prevented the completion of the request.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/cloud-dr-vcenters",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"cloud-dr-vcenters"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "The requester is not authenticated to perform this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/cloud-dr-vcenters",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"cloud-dr-vcenters"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "The requester is not authorized to perform this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/cloud-dr-vcenters",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"cloud-dr-vcenters"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "Successfully returned vCenter Servers list.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/cloud-dr-vcenters",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"cloud-dr-vcenters"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"content\": [\n  {\n   \"cdrVcConfiguration\": {\n    \"dataStores\": [\n     {\n      \"moref\": {\n       \"morefId\": \"ut Ut\",\n       \"type\": \"aliquip laboris id\"\n      },\n      \"name\": \"aliquip qui in dolore\"\n     },\n     {\n      \"moref\": {\n       \"morefId\": \"sit minim aliquip\",\n       \"type\": \"ut\"\n      },\n      \"name\": \"nisi esse laboris Excepteur\"\n     }\n    ],\n    \"id\": \"dolor sunt anim Excepteu\",\n    \"isFailoverTarget\": false,\n    \"networks\": [\n     {\n      \"gateway\": \"in proident sit\",\n      \"ipRanges\": [\n       {\n        \"baseIp\": \"et\",\n        \"range\": 7282833\n       },\n       {\n        \"baseIp\": \"do id sint fugiat est\",\n        \"range\": -33083747\n       }\n      ],\n      \"moref\": {\n       \"morefId\": \"do aute Ut\",\n       \"type\": \"Excepteur irure el\"\n      },\n      \"name\": \"commodo Excepteur\",\n      \"netMask\": \"consectetur mollit ipsum\"\n     },\n     {\n      \"gateway\": \"dolor occaecat labore\",\n      \"ipRanges\": [\n       {\n        \"baseIp\": \"in nulla\",\n        \"range\": 18960118\n       },\n       {\n        \"baseIp\": \"Ut dolore Duis nulla\",\n        \"range\": 65977304\n       }\n      ],\n      \"moref\": {\n       \"morefId\": \"eiusmod ad officia\",\n       \"type\": \"laborum\"\n      },\n      \"name\": \"quis in\",\n      \"netMask\": \"cillum dolor tempor ea\"\n     }\n    ]\n   },\n   \"id\": \"ullamco id\",\n   \"isPartial\": false,\n   \"location\": {\n    \"LocationEnum\": [\n     \"id elit qui sed eu\",\n     \"fugiat officia\"\n    ]\n   },\n   \"model\": \"esse\",\n   \"serialId\": \"sit eu eiusmod nulla ex\",\n   \"serverParams\": {\n    \"address\": \"ad elit exercitation est\",\n    \"credentials\": {\n     \"certificate\": \"voluptate exercitation\",\n     \"password\": \"qui culpa Excepteur a\",\n     \"username\": \"aliquip Ut non dolor\"\n    },\n    \"ipv6Configured\": true,\n    \"mtreeId\": \"sint est incididunt labore\",\n    \"port\": -28503030\n   },\n   \"type\": {\n    \"RemoteServerType\": [\n     \"nostrud do esse\",\n     \"sed sunt\"\n    ]\n   },\n   \"version\": \"pariatur ex tempor incididunt\"\n  },\n  {\n   \"cdrVcConfiguration\": {\n    \"dataStores\": [\n     {\n      \"moref\": {\n       \"morefId\": \"nisi amet voluptate\",\n       \"type\": \"irure est\"\n      },\n      \"name\": \"tempor fugiat consectetur\"\n     },\n     {\n      \"moref\": {\n       \"morefId\": \"nostrud proident sint\",\n       \"type\": \"labore enim Excepteur culpa\"\n      },\n      \"name\": \"laborum commodo culpa ea\"\n     }\n    ],\n    \"id\": \"ipsum cillum quis Lorem laborum\",\n    \"isFailoverTarget\": false,\n    \"networks\": [\n     {\n      \"gateway\": \"aliqua\",\n      \"ipRanges\": [\n       {\n        \"baseIp\": \"quis eiusm\",\n        \"range\": -28718145\n       },\n       {\n        \"baseIp\": \"incididunt magna\",\n        \"range\": 11428272\n       }\n      ],\n      \"moref\": {\n       \"morefId\": \"ipsum cillum\",\n       \"type\": \"dolore est labore non\"\n      },\n      \"name\": \"sint in q\",\n      \"netMask\": \"consectetur laboris in\"\n     },\n     {\n      \"gateway\": \"enim exercitation laboris veniam ipsum\",\n      \"ipRanges\": [\n       {\n        \"baseIp\": \"qui velit sed\",\n        \"range\": -79099779\n       },\n       {\n        \"baseIp\": \"ad adipisicing\",\n        \"range\": -9550591\n       }\n      ],\n      \"moref\": {\n       \"morefId\": \"magna nulla\",\n       \"type\": \"commodo dolore sunt exercitation Lorem\"\n      },\n      \"name\": \"cupidatat sit dolore qui\",\n      \"netMask\": \"Excepteur fugiat\"\n     }\n    ]\n   },\n   \"id\": \"ea ipsum\",\n   \"isPartial\": true,\n   \"location\": {\n    \"LocationEnum\": [\n     \"cupidatat laboris id\",\n     \"velit exercitation\"\n    ]\n   },\n   \"model\": \"in in deserunt\",\n   \"serialId\": \"laboris id aliqua\",\n   \"serverParams\": {\n    \"address\": \"elit nulla commodo dolore\",\n    \"credentials\": {\n     \"certificate\": \"Ut aliqua laboris ea\",\n     \"password\": \"deserunt nisi sunt\",\n     \"username\": \"ad Ut ipsum irure\"\n    },\n    \"ipv6Configured\": false,\n    \"mtreeId\": \"voluptate qui sed mollit\",\n    \"port\": -13003353\n   },\n   \"type\": {\n    \"RemoteServerType\": [\n     \"do\",\n     \"Excepteur quis est elit\"\n    ]\n   },\n   \"version\": \"dolore est ullamco\"\n  }\n ],\n \"page\": {\n  \"number\": -68650775,\n  \"queryState\": \"ea ex Du\",\n  \"size\": -79659788,\n  \"totalElements\": 20674426,\n  \"totalPages\": -3739514\n }\n}"
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "cloud-recalled-copies",
					"item": [
						{
							"name": "Recall a copy from the cloud.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"protectionCopySetId\": \"<string>\",\n    \"retierRetentionTime\": \"<dateTime>\"\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/cloud-recalled-copies",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"cloud-recalled-copies"
									]
								},
								"description": "Runs a process to move back a copy set from the cloud to the active tier based on the specified protection copy set ID and retier retention time.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
							},
							"response": [
								{
									"name": "The requester is not authorized to perform this operation.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"protectionCopySetId\": \"<string>\",\n    \"retierRetentionTime\": \"<dateTime>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/cloud-recalled-copies",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"cloud-recalled-copies"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Asset has been moved back to Data Domain. ",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"protectionCopySetId\": \"<string>\",\n    \"retierRetentionTime\": \"<dateTime>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/cloud-recalled-copies",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"cloud-recalled-copies"
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"taskId\": \"magna velit\"\n}"
								},
								{
									"name": "Any server error that prevented the completion of the request.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"protectionCopySetId\": \"<string>\",\n    \"retierRetentionTime\": \"<dateTime>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/cloud-recalled-copies",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"cloud-recalled-copies"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "The requester is not authenticated to perform this operation.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"protectionCopySetId\": \"<string>\",\n    \"retierRetentionTime\": \"<dateTime>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/cloud-recalled-copies",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"cloud-recalled-copies"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "The request is not valid.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"protectionCopySetId\": \"<string>\",\n    \"retierRetentionTime\": \"<dateTime>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/cloud-recalled-copies",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"cloud-recalled-copies"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								}
							]
						},
						{
							"name": "Update a copy set retier time to the cloud.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"retierRetentionTime\": \"<dateTime>\"\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/cloud-recalled-copies/:copySetId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"cloud-recalled-copies",
										":copySetId"
									],
									"variable": [
										{
											"id": "51c83978-652d-47be-be3f-252e8318b590",
											"key": "copySetId",
											"value": "<string>",
											"type": "string",
											"description": "(Required) The asset ID of a copy on the Data Domain."
										}
									]
								},
								"description": "Updates the retier retention time for a specified copy set on a Data Domain based on the copy set ID.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
							},
							"response": [
								{
									"name": "The requester is not authenticated to perform this operation.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"retierRetentionTime\": \"<dateTime>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/cloud-recalled-copies/:copySetId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"cloud-recalled-copies",
												":copySetId"
											],
											"variable": [
												{
													"key": "copySetId"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Resource updated.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"retierRetentionTime\": \"<dateTime>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/cloud-recalled-copies/:copySetId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"cloud-recalled-copies",
												":copySetId"
											],
											"variable": [
												{
													"key": "copySetId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"taskId\": \"magna velit\"\n}"
								},
								{
									"name": "The request is not valid.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"retierRetentionTime\": \"<dateTime>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/cloud-recalled-copies/:copySetId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"cloud-recalled-copies",
												":copySetId"
											],
											"variable": [
												{
													"key": "copySetId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "Any server error that prevented the completion of the request.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"retierRetentionTime\": \"<dateTime>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/cloud-recalled-copies/:copySetId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"cloud-recalled-copies",
												":copySetId"
											],
											"variable": [
												{
													"key": "copySetId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "The requester is not authorized to perform this operation.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"retierRetentionTime\": \"<dateTime>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/cloud-recalled-copies/:copySetId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"cloud-recalled-copies",
												":copySetId"
											],
											"variable": [
												{
													"key": "copySetId"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "common-settings",
					"item": [
						{
							"name": "ASSET SETTING",
							"item": [
								{
									"name": "Get asset settings.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/common-settings/ASSET_SETTING",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"common-settings",
												"ASSET_SETTING"
											]
										},
										"description": "Get asset settings.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
									},
									"response": [
										{
											"name": "The requestor is not allowed to perform this operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/common-settings/ASSET_SETTING",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"common-settings",
														"ASSET_SETTING"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/common-settings/ASSET_SETTING",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"common-settings",
														"ASSET_SETTING"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/common-settings/ASSET_SETTING",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"common-settings",
														"ASSET_SETTING"
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The request is invalid.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/common-settings/ASSET_SETTING",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"common-settings",
														"ASSET_SETTING"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "Successfully returned the asset settings.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/common-settings/ASSET_SETTING",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"common-settings",
														"ASSET_SETTING"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"id\": \"aliqua\",\n \"properties\": [\n  {\n   \"name\": \"non labore in Duis\",\n   \"type\": \"non\",\n   \"value\": \"incididunt\"\n  },\n  {\n   \"name\": \"ipsum ut fugiat dolor et\",\n   \"type\": \"veniam aute aliqua cupidatat\",\n   \"value\": \"ullamco Ut\"\n  }\n ]\n}"
										}
									]
								},
								{
									"name": "Modify asset settings.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"<string>\",\n    \"properties\": [\n        {\n            \"name\": \"<string>\",\n            \"type\": \"<string>\",\n            \"value\": \"<string>\"\n        },\n        {\n            \"name\": \"<string>\",\n            \"type\": \"<string>\",\n            \"value\": \"<string>\"\n        }\n    ]\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/common-settings/ASSET_SETTING",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"common-settings",
												"ASSET_SETTING"
											]
										},
										"description": "Modify the current asset settings.\n> This endpoint supports execution by the following roles: admin\n"
									},
									"response": [
										{
											"name": "Invalid request to update Dynamic Filter setting.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\": \"<string>\",\n    \"properties\": [\n        {\n            \"name\": \"<string>\",\n            \"type\": \"<string>\",\n            \"value\": \"<string>\"\n        },\n        {\n            \"name\": \"<string>\",\n            \"type\": \"<string>\",\n            \"value\": \"<string>\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/common-settings/ASSET_SETTING",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"common-settings",
														"ASSET_SETTING"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The service is unavailable.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\": \"<string>\",\n    \"properties\": [\n        {\n            \"name\": \"<string>\",\n            \"type\": \"<string>\",\n            \"value\": \"<string>\"\n        },\n        {\n            \"name\": \"<string>\",\n            \"type\": \"<string>\",\n            \"value\": \"<string>\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/common-settings/ASSET_SETTING",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"common-settings",
														"ASSET_SETTING"
													]
												}
											},
											"status": "Service Unavailable",
											"code": 503,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\": \"<string>\",\n    \"properties\": [\n        {\n            \"name\": \"<string>\",\n            \"type\": \"<string>\",\n            \"value\": \"<string>\"\n        },\n        {\n            \"name\": \"<string>\",\n            \"type\": \"<string>\",\n            \"value\": \"<string>\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/common-settings/ASSET_SETTING",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"common-settings",
														"ASSET_SETTING"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "Successfully updated the asset settings.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\": \"<string>\",\n    \"properties\": [\n        {\n            \"name\": \"<string>\",\n            \"type\": \"<string>\",\n            \"value\": \"<string>\"\n        },\n        {\n            \"name\": \"<string>\",\n            \"type\": \"<string>\",\n            \"value\": \"<string>\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/common-settings/ASSET_SETTING",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"common-settings",
														"ASSET_SETTING"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"id\": \"aliqua\",\n \"properties\": [\n  {\n   \"name\": \"non labore in Duis\",\n   \"type\": \"non\",\n   \"value\": \"incididunt\"\n  },\n  {\n   \"name\": \"ipsum ut fugiat dolor et\",\n   \"type\": \"veniam aute aliqua cupidatat\",\n   \"value\": \"ullamco Ut\"\n  }\n ]\n}"
										},
										{
											"name": "The requestor is not authenticated to perform this operation.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\": \"<string>\",\n    \"properties\": [\n        {\n            \"name\": \"<string>\",\n            \"type\": \"<string>\",\n            \"value\": \"<string>\"\n        },\n        {\n            \"name\": \"<string>\",\n            \"type\": \"<string>\",\n            \"value\": \"<string>\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/common-settings/ASSET_SETTING",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"common-settings",
														"ASSET_SETTING"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\": \"<string>\",\n    \"properties\": [\n        {\n            \"name\": \"<string>\",\n            \"type\": \"<string>\",\n            \"value\": \"<string>\"\n        },\n        {\n            \"name\": \"<string>\",\n            \"type\": \"<string>\",\n            \"value\": \"<string>\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/common-settings/ASSET_SETTING",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"common-settings",
														"ASSET_SETTING"
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "DYNAMIC FILTER SETTING",
							"item": [
								{
									"name": "Get dynamic filter settings.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/common-settings/DYNAMIC_FILTER_SETTING",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"common-settings",
												"DYNAMIC_FILTER_SETTING"
											]
										},
										"description": "Retrieves dynamic filter settings.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
									},
									"response": [
										{
											"name": "The request is invalid.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/common-settings/DYNAMIC_FILTER_SETTING",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"common-settings",
														"DYNAMIC_FILTER_SETTING"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The requestor is not allowed to perform this operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/common-settings/DYNAMIC_FILTER_SETTING",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"common-settings",
														"DYNAMIC_FILTER_SETTING"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/common-settings/DYNAMIC_FILTER_SETTING",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"common-settings",
														"DYNAMIC_FILTER_SETTING"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/common-settings/DYNAMIC_FILTER_SETTING",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"common-settings",
														"DYNAMIC_FILTER_SETTING"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"id\": \"aliqua\",\n \"properties\": [\n  {\n   \"name\": \"non labore in Duis\",\n   \"type\": \"non\",\n   \"value\": \"incididunt\"\n  },\n  {\n   \"name\": \"ipsum ut fugiat dolor et\",\n   \"type\": \"veniam aute aliqua cupidatat\",\n   \"value\": \"ullamco Ut\"\n  }\n ]\n}"
										},
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/common-settings/DYNAMIC_FILTER_SETTING",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"common-settings",
														"DYNAMIC_FILTER_SETTING"
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										}
									]
								},
								{
									"name": "Update dynamic filter settings.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"<string>\",\n    \"properties\": [\n        {\n            \"name\": \"<string>\",\n            \"type\": \"<string>\",\n            \"value\": \"<string>\"\n        },\n        {\n            \"name\": \"<string>\",\n            \"type\": \"<string>\",\n            \"value\": \"<string>\"\n        }\n    ]\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/common-settings/DYNAMIC_FILTER_SETTING",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"common-settings",
												"DYNAMIC_FILTER_SETTING"
											]
										},
										"description": "Updates the dynamic filter settings (known as protection rules in the PowerProtect Data Manager UI). \n\nPowerProtect Data Manager supports migrating any assets across protection policies by default. If you want to migrate only *unprotected* assets across protection policies, remove the \"value\" from the supportMoveAssetsAcrossProtectionPolicy property when forming the request. Using the \"VMWARE_VIRTUAL_MACHINE\" value as an example, if you want to enable migrating only *unprotected* VMs across protection policies, remove the value \"VMWARE_VIRTUAL_MACHINE.\"\n> This endpoint supports execution by the following roles: admin\n"
									},
									"response": [
										{
											"name": "Successfully updated the dynamic filter settings.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\": \"<string>\",\n    \"properties\": [\n        {\n            \"name\": \"<string>\",\n            \"type\": \"<string>\",\n            \"value\": \"<string>\"\n        },\n        {\n            \"name\": \"<string>\",\n            \"type\": \"<string>\",\n            \"value\": \"<string>\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/common-settings/DYNAMIC_FILTER_SETTING",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"common-settings",
														"DYNAMIC_FILTER_SETTING"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"id\": \"aliqua\",\n \"properties\": [\n  {\n   \"name\": \"non labore in Duis\",\n   \"type\": \"non\",\n   \"value\": \"incididunt\"\n  },\n  {\n   \"name\": \"ipsum ut fugiat dolor et\",\n   \"type\": \"veniam aute aliqua cupidatat\",\n   \"value\": \"ullamco Ut\"\n  }\n ]\n}"
										},
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\": \"<string>\",\n    \"properties\": [\n        {\n            \"name\": \"<string>\",\n            \"type\": \"<string>\",\n            \"value\": \"<string>\"\n        },\n        {\n            \"name\": \"<string>\",\n            \"type\": \"<string>\",\n            \"value\": \"<string>\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/common-settings/DYNAMIC_FILTER_SETTING",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"common-settings",
														"DYNAMIC_FILTER_SETTING"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\": \"<string>\",\n    \"properties\": [\n        {\n            \"name\": \"<string>\",\n            \"type\": \"<string>\",\n            \"value\": \"<string>\"\n        },\n        {\n            \"name\": \"<string>\",\n            \"type\": \"<string>\",\n            \"value\": \"<string>\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/common-settings/DYNAMIC_FILTER_SETTING",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"common-settings",
														"DYNAMIC_FILTER_SETTING"
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The service is unavailable.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\": \"<string>\",\n    \"properties\": [\n        {\n            \"name\": \"<string>\",\n            \"type\": \"<string>\",\n            \"value\": \"<string>\"\n        },\n        {\n            \"name\": \"<string>\",\n            \"type\": \"<string>\",\n            \"value\": \"<string>\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/common-settings/DYNAMIC_FILTER_SETTING",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"common-settings",
														"DYNAMIC_FILTER_SETTING"
													]
												}
											},
											"status": "Service Unavailable",
											"code": 503,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "Invalid request to update the dynamic filter setting.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\": \"<string>\",\n    \"properties\": [\n        {\n            \"name\": \"<string>\",\n            \"type\": \"<string>\",\n            \"value\": \"<string>\"\n        },\n        {\n            \"name\": \"<string>\",\n            \"type\": \"<string>\",\n            \"value\": \"<string>\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/common-settings/DYNAMIC_FILTER_SETTING",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"common-settings",
														"DYNAMIC_FILTER_SETTING"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The requestor is not authenticated to perform this operation.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\": \"<string>\",\n    \"properties\": [\n        {\n            \"name\": \"<string>\",\n            \"type\": \"<string>\",\n            \"value\": \"<string>\"\n        },\n        {\n            \"name\": \"<string>\",\n            \"type\": \"<string>\",\n            \"value\": \"<string>\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/common-settings/DYNAMIC_FILTER_SETTING",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"common-settings",
														"DYNAMIC_FILTER_SETTING"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "TELEMETRY SETTING",
							"item": [
								{
									"name": "Get telemetry settings.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/common-settings/TELEMETRY_SETTING",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"common-settings",
												"TELEMETRY_SETTING"
											]
										},
										"description": "Retrieves the current telemetry settings.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
									},
									"response": [
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/common-settings/TELEMETRY_SETTING",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"common-settings",
														"TELEMETRY_SETTING"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The service is unavailable.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/common-settings/TELEMETRY_SETTING",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"common-settings",
														"TELEMETRY_SETTING"
													]
												}
											},
											"status": "Service Unavailable",
											"code": 503,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Found and returned the telemetry settings.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/common-settings/TELEMETRY_SETTING",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"common-settings",
														"TELEMETRY_SETTING"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"id\": \"aliqua\",\n \"properties\": [\n  {\n   \"name\": \"non labore in Duis\",\n   \"type\": \"non\",\n   \"value\": \"incididunt\"\n  },\n  {\n   \"name\": \"ipsum ut fugiat dolor et\",\n   \"type\": \"veniam aute aliqua cupidatat\",\n   \"value\": \"ullamco Ut\"\n  }\n ]\n}"
										},
										{
											"name": "The requestor is not authenticated to perform this operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/common-settings/TELEMETRY_SETTING",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"common-settings",
														"TELEMETRY_SETTING"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										}
									]
								},
								{
									"name": "Modify telemetry settings.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"<string>\",\n    \"properties\": [\n        {\n            \"name\": \"<string>\",\n            \"type\": \"<string>\",\n            \"value\": \"<string>\"\n        },\n        {\n            \"name\": \"<string>\",\n            \"type\": \"<string>\",\n            \"value\": \"<string>\"\n        }\n    ]\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/common-settings/TELEMETRY_SETTING",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"common-settings",
												"TELEMETRY_SETTING"
											]
										},
										"description": "Updates the current telemetry settings.\n> This endpoint supports execution by the following roles: admin\n"
									},
									"response": [
										{
											"name": "The requestor is not authenticated to perform this operation.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\": \"<string>\",\n    \"properties\": [\n        {\n            \"name\": \"<string>\",\n            \"type\": \"<string>\",\n            \"value\": \"<string>\"\n        },\n        {\n            \"name\": \"<string>\",\n            \"type\": \"<string>\",\n            \"value\": \"<string>\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/common-settings/TELEMETRY_SETTING",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"common-settings",
														"TELEMETRY_SETTING"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\": \"<string>\",\n    \"properties\": [\n        {\n            \"name\": \"<string>\",\n            \"type\": \"<string>\",\n            \"value\": \"<string>\"\n        },\n        {\n            \"name\": \"<string>\",\n            \"type\": \"<string>\",\n            \"value\": \"<string>\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/common-settings/TELEMETRY_SETTING",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"common-settings",
														"TELEMETRY_SETTING"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Successfully updated the telemetry settings.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\": \"<string>\",\n    \"properties\": [\n        {\n            \"name\": \"<string>\",\n            \"type\": \"<string>\",\n            \"value\": \"<string>\"\n        },\n        {\n            \"name\": \"<string>\",\n            \"type\": \"<string>\",\n            \"value\": \"<string>\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/common-settings/TELEMETRY_SETTING",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"common-settings",
														"TELEMETRY_SETTING"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"id\": \"aliqua\",\n \"properties\": [\n  {\n   \"name\": \"non labore in Duis\",\n   \"type\": \"non\",\n   \"value\": \"incididunt\"\n  },\n  {\n   \"name\": \"ipsum ut fugiat dolor et\",\n   \"type\": \"veniam aute aliqua cupidatat\",\n   \"value\": \"ullamco Ut\"\n  }\n ]\n}"
										},
										{
											"name": "Required fields are missing in the request payload.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\": \"<string>\",\n    \"properties\": [\n        {\n            \"name\": \"<string>\",\n            \"type\": \"<string>\",\n            \"value\": \"<string>\"\n        },\n        {\n            \"name\": \"<string>\",\n            \"type\": \"<string>\",\n            \"value\": \"<string>\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/common-settings/TELEMETRY_SETTING",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"common-settings",
														"TELEMETRY_SETTING"
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\": \"<string>\",\n    \"properties\": [\n        {\n            \"name\": \"<string>\",\n            \"type\": \"<string>\",\n            \"value\": \"<string>\"\n        },\n        {\n            \"name\": \"<string>\",\n            \"type\": \"<string>\",\n            \"value\": \"<string>\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/common-settings/TELEMETRY_SETTING",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"common-settings",
														"TELEMETRY_SETTING"
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The service is unavailable.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\": \"<string>\",\n    \"properties\": [\n        {\n            \"name\": \"<string>\",\n            \"type\": \"<string>\",\n            \"value\": \"<string>\"\n        },\n        {\n            \"name\": \"<string>\",\n            \"type\": \"<string>\",\n            \"value\": \"<string>\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/common-settings/TELEMETRY_SETTING",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"common-settings",
														"TELEMETRY_SETTING"
													]
												}
											},
											"status": "Service Unavailable",
											"code": 503,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The submitted settings payload has a syntax error.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\": \"<string>\",\n    \"properties\": [\n        {\n            \"name\": \"<string>\",\n            \"type\": \"<string>\",\n            \"value\": \"<string>\"\n        },\n        {\n            \"name\": \"<string>\",\n            \"type\": \"<string>\",\n            \"value\": \"<string>\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/common-settings/TELEMETRY_SETTING",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"common-settings",
														"TELEMETRY_SETTING"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "VM BACKUP SETTING",
							"item": [
								{
									"name": "Get VM backup settings.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/common-settings/VM_BACKUP_SETTING",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"common-settings",
												"VM_BACKUP_SETTING"
											]
										},
										"description": "Retrieves VM backup settings.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
									},
									"response": [
										{
											"name": "Successfully returned the VM backup settings.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/common-settings/VM_BACKUP_SETTING",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"common-settings",
														"VM_BACKUP_SETTING"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"id\": \"aliqua\",\n \"properties\": [\n  {\n   \"name\": \"non labore in Duis\",\n   \"type\": \"non\",\n   \"value\": \"incididunt\"\n  },\n  {\n   \"name\": \"ipsum ut fugiat dolor et\",\n   \"type\": \"veniam aute aliqua cupidatat\",\n   \"value\": \"ullamco Ut\"\n  }\n ]\n}"
										},
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/common-settings/VM_BACKUP_SETTING",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"common-settings",
														"VM_BACKUP_SETTING"
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The requestor is not allowed to perform this operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/common-settings/VM_BACKUP_SETTING",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"common-settings",
														"VM_BACKUP_SETTING"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/common-settings/VM_BACKUP_SETTING",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"common-settings",
														"VM_BACKUP_SETTING"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The request is invalid.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/common-settings/VM_BACKUP_SETTING",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"common-settings",
														"VM_BACKUP_SETTING"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										}
									]
								},
								{
									"name": "Update VM backup settings.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/common-settings/VM_BACKUP_SETTING",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"common-settings",
												"VM_BACKUP_SETTING"
											]
										},
										"description": "Updates the current VM backup settings.\n> This endpoint supports execution by the following roles: admin\n"
									},
									"response": [
										{
											"name": "Invalid request to update VM backup setting.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/common-settings/VM_BACKUP_SETTING",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"common-settings",
														"VM_BACKUP_SETTING"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "Successfully updated the VM backup settings.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/common-settings/VM_BACKUP_SETTING",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"common-settings",
														"VM_BACKUP_SETTING"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"id\": \"aliqua\",\n \"properties\": [\n  {\n   \"name\": \"non labore in Duis\",\n   \"type\": \"non\",\n   \"value\": \"incididunt\"\n  },\n  {\n   \"name\": \"ipsum ut fugiat dolor et\",\n   \"type\": \"veniam aute aliqua cupidatat\",\n   \"value\": \"ullamco Ut\"\n  }\n ]\n}"
										},
										{
											"name": "The service is unavailable.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/common-settings/VM_BACKUP_SETTING",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"common-settings",
														"VM_BACKUP_SETTING"
													]
												}
											},
											"status": "Service Unavailable",
											"code": 503,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/common-settings/VM_BACKUP_SETTING",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"common-settings",
														"VM_BACKUP_SETTING"
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/common-settings/VM_BACKUP_SETTING",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"common-settings",
														"VM_BACKUP_SETTING"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The requestor is not authenticated to perform this operation.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/common-settings/VM_BACKUP_SETTING",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"common-settings",
														"VM_BACKUP_SETTING"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "{id}",
							"item": [
								{
									"name": "Get common settings by ID.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/common-settings/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"common-settings",
												":id"
											],
											"variable": [
												{
													"id": "bca1575e-38d0-40a6-b121-f2699586bc24",
													"key": "id",
													"value": "<string>",
													"type": "string",
													"description": "(Required) \tCommon settings ID."
												}
											]
										},
										"description": "Retrieves common settings by ID.\n> This endpoint supports execution by the following roles: admin, user, export and recovery admin\n"
									},
									"response": [
										{
											"name": "Cannot find settings with the specified ID.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/common-settings/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"common-settings",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/common-settings/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"common-settings",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Found and returned all the settings with the specified common settings ID.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/common-settings/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"common-settings",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"id\": \"aliqua\",\n \"properties\": [\n  {\n   \"name\": \"non labore in Duis\",\n   \"type\": \"non\",\n   \"value\": \"incididunt\"\n  },\n  {\n   \"name\": \"ipsum ut fugiat dolor et\",\n   \"type\": \"veniam aute aliqua cupidatat\",\n   \"value\": \"ullamco Ut\"\n  }\n ]\n}"
										},
										{
											"name": "The requestor is not allowed to perform this operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/common-settings/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"common-settings",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Modify the settings by ID.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"<string>\",\n    \"properties\": [\n        {\n            \"name\": \"<string>\",\n            \"type\": \"<string>\",\n            \"value\": \"<string>\"\n        },\n        {\n            \"name\": \"<string>\",\n            \"type\": \"<string>\",\n            \"value\": \"<string>\"\n        }\n    ]\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/common-settings/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"common-settings",
												":id"
											],
											"variable": [
												{
													"id": "9e58b6a4-3935-4ccb-b711-f3ea75644c12",
													"key": "id",
													"value": "<string>",
													"type": "string",
													"description": "(Required) Common settings ID sent in request."
												}
											]
										},
										"description": "Modifies settings by ID.\n> This endpoint supports execution by the following roles: admin\n"
									},
									"response": [
										{
											"name": "The requestor is not allowed to perform this operation.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\": \"<string>\",\n    \"properties\": [\n        {\n            \"name\": \"<string>\",\n            \"type\": \"<string>\",\n            \"value\": \"<string>\"\n        },\n        {\n            \"name\": \"<string>\",\n            \"type\": \"<string>\",\n            \"value\": \"<string>\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/common-settings/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"common-settings",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Cannot find settings with the specified ID.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\": \"<string>\",\n    \"properties\": [\n        {\n            \"name\": \"<string>\",\n            \"type\": \"<string>\",\n            \"value\": \"<string>\"\n        },\n        {\n            \"name\": \"<string>\",\n            \"type\": \"<string>\",\n            \"value\": \"<string>\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/common-settings/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"common-settings",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The submitted settings payload has a syntax error.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\": \"<string>\",\n    \"properties\": [\n        {\n            \"name\": \"<string>\",\n            \"type\": \"<string>\",\n            \"value\": \"<string>\"\n        },\n        {\n            \"name\": \"<string>\",\n            \"type\": \"<string>\",\n            \"value\": \"<string>\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/common-settings/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"common-settings",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\": \"<string>\",\n    \"properties\": [\n        {\n            \"name\": \"<string>\",\n            \"type\": \"<string>\",\n            \"value\": \"<string>\"\n        },\n        {\n            \"name\": \"<string>\",\n            \"type\": \"<string>\",\n            \"value\": \"<string>\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/common-settings/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"common-settings",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Successfully updated the settings.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\": \"<string>\",\n    \"properties\": [\n        {\n            \"name\": \"<string>\",\n            \"type\": \"<string>\",\n            \"value\": \"<string>\"\n        },\n        {\n            \"name\": \"<string>\",\n            \"type\": \"<string>\",\n            \"value\": \"<string>\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/common-settings/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"common-settings",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"id\": \"aliqua\",\n \"properties\": [\n  {\n   \"name\": \"non labore in Duis\",\n   \"type\": \"non\",\n   \"value\": \"incididunt\"\n  },\n  {\n   \"name\": \"ipsum ut fugiat dolor et\",\n   \"type\": \"veniam aute aliqua cupidatat\",\n   \"value\": \"ullamco Ut\"\n  }\n ]\n}"
										},
										{
											"name": "Occurs when the required fields are missing in the request payload.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\": \"<string>\",\n    \"properties\": [\n        {\n            \"name\": \"<string>\",\n            \"type\": \"<string>\",\n            \"value\": \"<string>\"\n        },\n        {\n            \"name\": \"<string>\",\n            \"type\": \"<string>\",\n            \"value\": \"<string>\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/common-settings/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"common-settings",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Get all settings.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/common-settings",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"common-settings"
									]
								},
								"description": "Retrieves all common settings.\n> This endpoint supports execution by the following roles: admin, user, export and recovery admin\n"
							},
							"response": [
								{
									"name": "An unexpected error prevented the server from fulfilling your request.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/common-settings",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"common-settings"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Filter syntax is not valid.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/common-settings",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"common-settings"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "The requestor is not allowed to perform this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/common-settings",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"common-settings"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Located and returned the available settings successfully.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/common-settings",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"common-settings"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"content\": [\n  {\n   \"id\": \"occaecat consectetur\",\n   \"properties\": [\n    {\n     \"name\": \"et dolor ut ex\",\n     \"type\": \"nostrud ut ipsum mollit\",\n     \"value\": \"exercitati\"\n    },\n    {\n     \"name\": \"est consequat Lorem qui irure\",\n     \"type\": \"minim Ut\",\n     \"value\": \"adipi\"\n    }\n   ]\n  },\n  {\n   \"id\": \"culpa cillum\",\n   \"properties\": [\n    {\n     \"name\": \"deserunt\",\n     \"type\": \"dolor labori\",\n     \"value\": \"anim do Lorem ad\"\n    },\n    {\n     \"name\": \"sunt proident eiusmod do\",\n     \"type\": \"ipsum su\",\n     \"value\": \"cupidatat fugiat voluptate sunt\"\n    }\n   ]\n  }\n ],\n \"page\": {\n  \"number\": 9899741,\n  \"queryState\": \"nulla culpa irure\",\n  \"size\": -55375703,\n  \"totalElements\": 29715447,\n  \"totalPages\": 51693188\n }\n}"
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "compliance-results",
					"item": [
						{
							"name": "Get all compliance results.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/compliance-results?page=1&pageSize=100&filter=<string>&orderby=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"compliance-results"
									],
									"query": [
										{
											"key": "page",
											"value": "1",
											"description": "The page number to be returned. Must not be less than 1. See Tutorials - Page the List Result."
										},
										{
											"key": "pageSize",
											"value": "100",
											"description": "The number of resources to be returned. Must not be less than 1. See Tutorials - Page the List Result."
										},
										{
											"key": "filter",
											"value": "<string>",
											"description": "The filter string that is expressed using PowerProtect Data Manager filter syntax. See Tutorials - Filter the List Result."
										},
										{
											"key": "orderby",
											"value": "<string>",
											"description": "The attributes/fields to be sorted by. This parameter can combine with sort direction \"ASC\" or \"DESC\". Default direction is ASC. See Tutorials - Sort the List Result."
										}
									]
								},
								"description": "Retrieves the compliance results. The compliance result is one run of compliance verification for one asset for all SLAs that are assigned to the asset.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
							},
							"response": [
								{
									"name": "Successfully returned available compliance result.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/compliance-results?page=1&pageSize=100&filter=<string>&orderby=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"compliance-results"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "<string>"
												},
												{
													"key": "orderby",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"content\": [\n  {\n   \"completionTime\": \"1978-08-26T17:46:30.304Z\",\n   \"id\": \"anim in\",\n   \"nextStartTime\": \"1996-03-29T01:36:19.120Z\",\n   \"startTime\": \"1992-08-20T04:09:04.571Z\",\n   \"state\": \"COMPLETED\",\n   \"status\": \"UNKNOWN\",\n   \"verifiedObjectives\": [\n    {\n     \"endTime\": \"2004-05-19T11:55:06.358Z\",\n     \"failure\": {\n      \"reason\": \"magna occaecat\",\n      \"remediation\": \"reprehenderit eiusmod\"\n     },\n     \"name\": \"esse Lorem\",\n     \"slaId\": \"nisi dolore in\",\n     \"stageId\": \"aute aliquip laboris\",\n     \"startTime\": \"2011-07-04T22:03:26.678Z\",\n     \"success\": false\n    },\n    {\n     \"endTime\": \"1952-07-18T03:07:52.694Z\",\n     \"failure\": {\n      \"reason\": \"aute dolore veniam Lorem\",\n      \"remediation\": \"officia cupidatat\"\n     },\n     \"name\": \"mollit voluptate commodo dolore\",\n     \"slaId\": \"laboris ex\",\n     \"stageId\": \"incididunt\",\n     \"startTime\": \"1949-11-01T12:48:28.986Z\",\n     \"success\": false\n    }\n   ],\n   \"windowEndTime\": \"1985-04-06T07:21:19.766Z\"\n  },\n  {\n   \"completionTime\": \"2006-02-06T12:50:13.527Z\",\n   \"id\": \"velit cupidatat dolor quis\",\n   \"nextStartTime\": \"1962-02-03T18:26:35.438Z\",\n   \"startTime\": \"1947-08-28T17:48:35.678Z\",\n   \"state\": \"WAITING\",\n   \"status\": \"FAILED\",\n   \"verifiedObjectives\": [\n    {\n     \"endTime\": \"1965-04-14T20:51:53.162Z\",\n     \"failure\": {\n      \"reason\": \"anim\",\n      \"remediation\": \"nisi cupidatat\"\n     },\n     \"name\": \"aliqua ea eiusmod sunt\",\n     \"slaId\": \"esse ut incididunt reprehenderit voluptate\",\n     \"stageId\": \"commodo tempor Duis voluptate\",\n     \"startTime\": \"1978-09-12T22:15:11.565Z\",\n     \"success\": true\n    },\n    {\n     \"endTime\": \"2007-12-15T16:54:40.377Z\",\n     \"failure\": {\n      \"reason\": \"in aute\",\n      \"remediation\": \"proident eu deserunt dolor dolore\"\n     },\n     \"name\": \"Excepteur Ut anim\",\n     \"slaId\": \"et dolore ullamco\",\n     \"stageId\": \"sed amet enim\",\n     \"startTime\": \"1942-10-05T13:27:06.294Z\",\n     \"success\": true\n    }\n   ],\n   \"windowEndTime\": \"1995-07-24T16:31:09.750Z\"\n  }\n ],\n \"page\": {\n  \"number\": -18750120,\n  \"queryState\": \"commodo in sed repreh\",\n  \"size\": -66945695,\n  \"totalElements\": -69036328,\n  \"totalPages\": -23852824\n }\n}"
								},
								{
									"name": "An unexpected error prevented the server from fulfilling your request.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/compliance-results?page=1&pageSize=100&filter=<string>&orderby=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"compliance-results"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "<string>"
												},
												{
													"key": "orderby",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "The requestor is not allowed to perform this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/compliance-results?page=1&pageSize=100&filter=<string>&orderby=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"compliance-results"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "<string>"
												},
												{
													"key": "orderby",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "The request is not valid.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/compliance-results?page=1&pageSize=100&filter=<string>&orderby=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"compliance-results"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "<string>"
												},
												{
													"key": "orderby",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "The requestor is not authorized to perform this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/compliance-results?page=1&pageSize=100&filter=<string>&orderby=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"compliance-results"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "<string>"
												},
												{
													"key": "orderby",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								}
							]
						},
						{
							"name": "Get  compliance results by ID.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/compliance-results/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"compliance-results",
										":id"
									],
									"variable": [
										{
											"id": "ebd0a62e-8003-41f5-8724-a88a4f6192af",
											"key": "id",
											"value": "<string>",
											"type": "string",
											"description": "(Required) ID of the compliance result."
										}
									]
								},
								"description": "Retrieves the compliance result with the specified ID. The compliance result is one run of compliance verification for one asset for all SLAs that are assigned to the asset.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
							},
							"response": [
								{
									"name": "The requested compliance result does not exist.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/compliance-results/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"compliance-results",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "The requestor is not allowed to perform this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/compliance-results/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"compliance-results",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "Successfully returned the compliance result.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/compliance-results/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"compliance-results",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"completionTime\": \"2000-01-26T04:32:29.674Z\",\n \"id\": \"laboris cillum occaecat\",\n \"nextStartTime\": \"1952-12-29T22:48:39.132Z\",\n \"startTime\": \"1984-11-17T13:58:45.614Z\",\n \"state\": \"RUNNING\",\n \"status\": \"FAILED\",\n \"verifiedObjectives\": [\n  {\n   \"endTime\": \"1999-01-20T15:06:16.444Z\",\n   \"failure\": {\n    \"reason\": \"aliquip id nostrud\",\n    \"remediation\": \"aliqua\"\n   },\n   \"name\": \"sint in\",\n   \"slaId\": \"cupidatat cillum anim ipsum\",\n   \"stageId\": \"nul\",\n   \"startTime\": \"1968-12-15T06:27:32.944Z\",\n   \"success\": false\n  },\n  {\n   \"endTime\": \"2016-12-02T07:48:32.705Z\",\n   \"failure\": {\n    \"reason\": \"ipsum\",\n    \"remediation\": \"quis ipsum\"\n   },\n   \"name\": \"voluptate ullamco enim nisi\",\n   \"slaId\": \"velit ea\",\n   \"stageId\": \"proident in exercitation consequat\",\n   \"startTime\": \"1963-08-30T19:53:57.904Z\",\n   \"success\": false\n  }\n ],\n \"windowEndTime\": \"1977-10-31T10:33:22.044Z\"\n}"
								},
								{
									"name": "The request is not valid.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/compliance-results/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"compliance-results",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "An unexpected error prevented the server from fulfilling your request.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/compliance-results/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"compliance-results",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "The requestor is not authorized to perform this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/compliance-results/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"compliance-results",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "components",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Get component by ID.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/components/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"components",
												":id"
											],
											"variable": [
												{
													"id": "387a7e7b-541f-48ad-b485-345889cd1553",
													"key": "id",
													"value": "<string>",
													"type": "string",
													"description": "(Required) Component ID."
												}
											]
										},
										"description": "Retrieves component by ID.\n> This endpoint supports execution by the following roles: admin, user, export and recovery admin\n"
									},
									"response": [
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/components/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"components",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Found and returned the component with the specified ID.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/components/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"components",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"componentDisplayName\": \"Lorem commodo dol\",\n \"componentServiceName\": \"dolore dolor laboris qui enim\",\n \"componentType\": \"exercitation dolore reprehenderit qui\",\n \"id\": \"velit Ut ut Duis\",\n \"logging\": {\n  \"configurable\": false,\n  \"logLocation\": \"enim\"\n },\n \"monitored\": true,\n \"status\": \"DISABLED\"\n}"
										},
										{
											"name": "Cannot find a component with the specified ID.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/components/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"components",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The requestor is not allowed to perform this operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/components/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"components",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Update component by ID.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/components/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"components",
												":id"
											],
											"variable": [
												{
													"id": "3daa12f7-9511-4f7d-aa18-061d0327780e",
													"key": "id",
													"value": "<string>",
													"type": "string",
													"description": "(Required) Component ID."
												}
											]
										},
										"description": "Updates a component by ID.\n> This endpoint supports execution by the following roles: admin\n"
									},
									"response": [
										{
											"name": "The update operation is successful.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/components/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"components",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"componentDisplayName\": \"Lorem commodo dol\",\n \"componentServiceName\": \"dolore dolor laboris qui enim\",\n \"componentType\": \"exercitation dolore reprehenderit qui\",\n \"id\": \"velit Ut ut Duis\",\n \"logging\": {\n  \"configurable\": false,\n  \"logLocation\": \"enim\"\n },\n \"monitored\": true,\n \"status\": \"DISABLED\"\n}"
										},
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/components/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"components",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Cannot find a component with the specified ID.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/components/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"components",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The requestor is not allowed to perform this operation.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/components/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"components",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Bad request.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/components/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"components",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Manage CDRA component.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "\"<string>\"",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/components/:id/management",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"components",
												":id",
												"management"
											],
											"variable": [
												{
													"id": "b7625756-890c-4d03-a945-699e104d6c31",
													"key": "id",
													"value": "<string>",
													"type": "string",
													"description": "(Required) ID"
												}
											]
										},
										"description": "Manages the Cloud Disaster Recovery Appliance (CDRA) component.\n> This endpoint supports execution by the following roles: admin\n"
									},
									"response": [
										{
											"name": "The POST operation is successful.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "\"<string>\""
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/components/:id/management",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"components",
														":id",
														"management"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Successful operation.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "\"<string>\""
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/components/:id/management",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"components",
														":id",
														"management"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"consequat commodo\""
										},
										{
											"name": "Bad request.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "\"<string>\""
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/components/:id/management",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"components",
														":id",
														"management"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "\"<string>\""
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/components/:id/management",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"components",
														":id",
														"management"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The requestor is not allowed to perform this operation.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "\"<string>\""
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/components/:id/management",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"components",
														":id",
														"management"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Cannot find a component with the specified ID.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "\"<string>\""
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/components/:id/management",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"components",
														":id",
														"management"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Get all components.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/components",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"components"
									]
								},
								"description": "Retrieves all components.\n> This endpoint supports execution by the following roles: admin, user, export and recovery admin\n"
							},
							"response": [
								{
									"name": "Successfully returned available resources.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/components",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"components"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"content\": [\n  {\n   \"componentDisplayName\": \"esse est laboris\",\n   \"componentServiceName\": \"quis culpa mollit Ut\",\n   \"componentType\": \"adipisicing\",\n   \"id\": \"magna eu elit reprehenderit\",\n   \"logging\": {\n    \"configurable\": false,\n    \"logLocation\": \"nisi laborum officia qui\"\n   },\n   \"monitored\": true,\n   \"status\": \"SHUTTING_DOWN\"\n  },\n  {\n   \"componentDisplayName\": \"mollit ullamco ut sunt minim\",\n   \"componentServiceName\": \"exercitation reprehenderit esse\",\n   \"componentType\": \"mol\",\n   \"id\": \"irure consequat laboris sit\",\n   \"logging\": {\n    \"configurable\": true,\n    \"logLocation\": \"pariatur\"\n   },\n   \"monitored\": false,\n   \"status\": \"UNKNOWN\"\n  }\n ],\n \"page\": {\n  \"number\": -78245060,\n  \"queryState\": \"sint\",\n  \"size\": 56184610,\n  \"totalElements\": 62886923,\n  \"totalPages\": 3223178\n }\n}"
								},
								{
									"name": "An unexpected error prevented the server from fulfilling your request.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/components",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"components"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Filter syntax is not valid.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/components",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"components"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "The requestor is not allowed to perform this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/components",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"components"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "configurations",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Get configuration by ID.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/configurations/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"configurations",
												":id"
											],
											"variable": [
												{
													"id": "6366006d-4518-44ea-abac-05a11d0a3a93",
													"key": "id",
													"value": "<string>",
													"type": "string",
													"description": "(Required) id"
												}
											]
										},
										"description": "Retrieves a PowerProtect Data Manager appliance configuration by its ID. Running GET on this API returns an array of configurations objects with which the PowerProtect Data Manager appliance can be configured.\n> This endpoint supports execution by the following roles: admin, user, export and recovery admin\n"
									},
									"response": [
										{
											"name": "Cannot find a configuration with the specified ID.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/configurations/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"configurations",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/configurations/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"configurations",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The requestor is not allowed to perform this operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/configurations/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"configurations",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Found and returned the configuration with the specified ID.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/configurations/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"configurations",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"id\": \"cillum laboris qui commodo\",\n \"applicationUserPassword\": \"id\",\n \"timeZone\": \"cillum eu id\",\n \"lockbox\": {\n  \"newPassphrase\": \"consectetur dolore\",\n  \"passphrase\": \"in adipisicing Ut\",\n  \"lastUpdatedTime\": \"et do\",\n  \"name\": \"proident minim ad culpa\"\n },\n \"osUsers\": [\n  {\n   \"newPassword\": \"anim tempor non\",\n   \"password\": \"Duis Lorem\",\n   \"userName\": \"sint tempor veniam\",\n   \"description\": \"ullamco\",\n   \"numberOfDaysToExpire\": 87932719\n  },\n  {\n   \"newPassword\": \"in ut quis culpa\",\n   \"password\": \"consequat deserunt\",\n   \"userName\": \"tempor adipisicing sint\",\n   \"description\": \"consequat\",\n   \"numberOfDaysToExpire\": -43116349\n  }\n ],\n \"autoSupport\": true,\n \"configType\": \"ut\",\n \"deployedPlatform\": \"VMC\",\n \"firewall\": {\n  \"outbounds\": [\n   {\n    \"usedBy\": \"sint fugiat\",\n    \"destination\": \"culpa\",\n    \"port\": \"pariatur minim\",\n    \"rule\": \"ACCEPT\"\n   },\n   {\n    \"usedBy\": \"Duis Lorem culpa\",\n    \"destination\": \"ad\",\n    \"port\": \"laboris occaecat Duis magna\",\n    \"rule\": \"ACCEPT\"\n   }\n  ]\n },\n \"gettingStartedCompleted\": true,\n \"integratedStorageSecuritySetupCompleted\": true,\n \"networks\": [\n  {\n   \"dnsServers\": [\n    \"ipsum sed sint\",\n    \"pa\"\n   ],\n   \"fqdn\": \"voluptate cillum nisi do\",\n   \"gateway\": \"Lorem irur\",\n   \"interfaceName\": \"in in ipsum ullamco\",\n   \"ipAddress\": [\n    \"occaecat voluptate\",\n    \"aliqua proident reprehenderit\"\n   ],\n   \"ipAddressFamily\": \"officia sed cupidatat do\",\n   \"netMask\": \"voluptate in\",\n   \"nslookupSuccess\": true,\n   \"prefix\": \"Ut tempor nisi magna\"\n  },\n  {\n   \"dnsServers\": [\n    \"ipsum dolore mollit\",\n    \"ut laboris dolore fugiat\"\n   ],\n   \"fqdn\": \"proident ullamco ipsum u\",\n   \"gateway\": \"voluptate\",\n   \"interfaceName\": \"ut adipisicing anim sit dolor\",\n   \"ipAddress\": [\n    \"minim aliqua adipisicing\",\n    \"in incididunt reprehenderit deserunt nisi\"\n   ],\n   \"ipAddressFamily\": \"occaecat minim fugiat id\",\n   \"netMask\": \"consequat occaecat culpa dolor\",\n   \"nslookupSuccess\": false,\n   \"prefix\": \"ea\"\n  }\n ],\n \"nodeId\": \"sunt\",\n \"ntpServers\": [\n  \"velit sit dolore fug\",\n  \"Ut ut eu\"\n ]\n}"
										}
									]
								},
								{
									"name": "Start the initial configuration.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"<string>\",\n    \"applicationUserPassword\": \"<string>\",\n    \"timeZone\": \"<string>\",\n    \"lockbox\": {\n        \"newPassphrase\": \"<string>\",\n        \"passphrase\": \"<string>\",\n        \"lastUpdatedTime\": \"<string>\",\n        \"name\": \"<string>\"\n    },\n    \"osUsers\": [\n        {\n            \"newPassword\": \"<string>\",\n            \"password\": \"<string>\",\n            \"userName\": \"<string>\",\n            \"description\": \"<string>\",\n            \"numberOfDaysToExpire\": \"<integer>\"\n        },\n        {\n            \"newPassword\": \"<string>\",\n            \"password\": \"<string>\",\n            \"userName\": \"<string>\",\n            \"description\": \"<string>\",\n            \"numberOfDaysToExpire\": \"<integer>\"\n        }\n    ],\n    \"autoSupport\": \"<boolean>\",\n    \"configType\": \"<string>\",\n    \"deployedPlatform\": \"<string>\",\n    \"firewall\": {\n        \"outbounds\": [\n            {\n                \"usedBy\": \"<string>\",\n                \"destination\": \"<string>\",\n                \"port\": \"<string>\",\n                \"rule\": \"<string>\"\n            },\n            {\n                \"usedBy\": \"<string>\",\n                \"destination\": \"<string>\",\n                \"port\": \"<string>\",\n                \"rule\": \"<string>\"\n            }\n        ]\n    },\n    \"gettingStartedCompleted\": \"<boolean>\",\n    \"integratedStorageSecuritySetupCompleted\": \"<boolean>\",\n    \"networks\": [\n        {\n            \"dnsServers\": [\n                \"<string>\",\n                \"<string>\"\n            ],\n            \"fqdn\": \"<string>\",\n            \"gateway\": \"<string>\",\n            \"interfaceName\": \"<string>\",\n            \"ipAddress\": [\n                \"<string>\",\n                \"<string>\"\n            ],\n            \"ipAddressFamily\": \"<string>\",\n            \"netMask\": \"<string>\",\n            \"nslookupSuccess\": \"<boolean>\",\n            \"prefix\": \"<string>\"\n        },\n        {\n            \"dnsServers\": [\n                \"<string>\",\n                \"<string>\"\n            ],\n            \"fqdn\": \"<string>\",\n            \"gateway\": \"<string>\",\n            \"interfaceName\": \"<string>\",\n            \"ipAddress\": [\n                \"<string>\",\n                \"<string>\"\n            ],\n            \"ipAddressFamily\": \"<string>\",\n            \"netMask\": \"<string>\",\n            \"nslookupSuccess\": \"<boolean>\",\n            \"prefix\": \"<string>\"\n        }\n    ],\n    \"nodeId\": \"<string>\",\n    \"ntpServers\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/configurations/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"configurations",
												":id"
											],
											"variable": [
												{
													"id": "bcbc5445-c4c3-49e2-a80a-628bfcace560",
													"key": "id",
													"value": "<string>",
													"type": "string",
													"description": "(Required) Configuration ID sent in request."
												}
											]
										},
										"description": "The initial configuration request is allowed only when the appliance state is PENDING or RESTORE. You can only perform the request once.\n> This endpoint supports execution by the following roles: admin\n"
									},
									"response": [
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\": \"<string>\",\n    \"applicationUserPassword\": \"<string>\",\n    \"timeZone\": \"<string>\",\n    \"lockbox\": {\n        \"newPassphrase\": \"<string>\",\n        \"passphrase\": \"<string>\",\n        \"lastUpdatedTime\": \"<string>\",\n        \"name\": \"<string>\"\n    },\n    \"osUsers\": [\n        {\n            \"newPassword\": \"<string>\",\n            \"password\": \"<string>\",\n            \"userName\": \"<string>\",\n            \"description\": \"<string>\",\n            \"numberOfDaysToExpire\": \"<integer>\"\n        },\n        {\n            \"newPassword\": \"<string>\",\n            \"password\": \"<string>\",\n            \"userName\": \"<string>\",\n            \"description\": \"<string>\",\n            \"numberOfDaysToExpire\": \"<integer>\"\n        }\n    ],\n    \"autoSupport\": \"<boolean>\",\n    \"configType\": \"<string>\",\n    \"deployedPlatform\": \"<string>\",\n    \"firewall\": {\n        \"outbounds\": [\n            {\n                \"usedBy\": \"<string>\",\n                \"destination\": \"<string>\",\n                \"port\": \"<string>\",\n                \"rule\": \"<string>\"\n            },\n            {\n                \"usedBy\": \"<string>\",\n                \"destination\": \"<string>\",\n                \"port\": \"<string>\",\n                \"rule\": \"<string>\"\n            }\n        ]\n    },\n    \"gettingStartedCompleted\": \"<boolean>\",\n    \"integratedStorageSecuritySetupCompleted\": \"<boolean>\",\n    \"networks\": [\n        {\n            \"dnsServers\": [\n                \"<string>\",\n                \"<string>\"\n            ],\n            \"fqdn\": \"<string>\",\n            \"gateway\": \"<string>\",\n            \"interfaceName\": \"<string>\",\n            \"ipAddress\": [\n                \"<string>\",\n                \"<string>\"\n            ],\n            \"ipAddressFamily\": \"<string>\",\n            \"netMask\": \"<string>\",\n            \"nslookupSuccess\": \"<boolean>\",\n            \"prefix\": \"<string>\"\n        },\n        {\n            \"dnsServers\": [\n                \"<string>\",\n                \"<string>\"\n            ],\n            \"fqdn\": \"<string>\",\n            \"gateway\": \"<string>\",\n            \"interfaceName\": \"<string>\",\n            \"ipAddress\": [\n                \"<string>\",\n                \"<string>\"\n            ],\n            \"ipAddressFamily\": \"<string>\",\n            \"netMask\": \"<string>\",\n            \"nslookupSuccess\": \"<boolean>\",\n            \"prefix\": \"<string>\"\n        }\n    ],\n    \"nodeId\": \"<string>\",\n    \"ntpServers\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/configurations/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"configurations",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Successful operation.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\": \"<string>\",\n    \"applicationUserPassword\": \"<string>\",\n    \"timeZone\": \"<string>\",\n    \"lockbox\": {\n        \"newPassphrase\": \"<string>\",\n        \"passphrase\": \"<string>\",\n        \"lastUpdatedTime\": \"<string>\",\n        \"name\": \"<string>\"\n    },\n    \"osUsers\": [\n        {\n            \"newPassword\": \"<string>\",\n            \"password\": \"<string>\",\n            \"userName\": \"<string>\",\n            \"description\": \"<string>\",\n            \"numberOfDaysToExpire\": \"<integer>\"\n        },\n        {\n            \"newPassword\": \"<string>\",\n            \"password\": \"<string>\",\n            \"userName\": \"<string>\",\n            \"description\": \"<string>\",\n            \"numberOfDaysToExpire\": \"<integer>\"\n        }\n    ],\n    \"autoSupport\": \"<boolean>\",\n    \"configType\": \"<string>\",\n    \"deployedPlatform\": \"<string>\",\n    \"firewall\": {\n        \"outbounds\": [\n            {\n                \"usedBy\": \"<string>\",\n                \"destination\": \"<string>\",\n                \"port\": \"<string>\",\n                \"rule\": \"<string>\"\n            },\n            {\n                \"usedBy\": \"<string>\",\n                \"destination\": \"<string>\",\n                \"port\": \"<string>\",\n                \"rule\": \"<string>\"\n            }\n        ]\n    },\n    \"gettingStartedCompleted\": \"<boolean>\",\n    \"integratedStorageSecuritySetupCompleted\": \"<boolean>\",\n    \"networks\": [\n        {\n            \"dnsServers\": [\n                \"<string>\",\n                \"<string>\"\n            ],\n            \"fqdn\": \"<string>\",\n            \"gateway\": \"<string>\",\n            \"interfaceName\": \"<string>\",\n            \"ipAddress\": [\n                \"<string>\",\n                \"<string>\"\n            ],\n            \"ipAddressFamily\": \"<string>\",\n            \"netMask\": \"<string>\",\n            \"nslookupSuccess\": \"<boolean>\",\n            \"prefix\": \"<string>\"\n        },\n        {\n            \"dnsServers\": [\n                \"<string>\",\n                \"<string>\"\n            ],\n            \"fqdn\": \"<string>\",\n            \"gateway\": \"<string>\",\n            \"interfaceName\": \"<string>\",\n            \"ipAddress\": [\n                \"<string>\",\n                \"<string>\"\n            ],\n            \"ipAddressFamily\": \"<string>\",\n            \"netMask\": \"<string>\",\n            \"nslookupSuccess\": \"<boolean>\",\n            \"prefix\": \"<string>\"\n        }\n    ],\n    \"nodeId\": \"<string>\",\n    \"ntpServers\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/configurations/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"configurations",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"id\": \"cillum laboris qui commodo\",\n \"applicationUserPassword\": \"id\",\n \"timeZone\": \"cillum eu id\",\n \"lockbox\": {\n  \"newPassphrase\": \"consectetur dolore\",\n  \"passphrase\": \"in adipisicing Ut\",\n  \"lastUpdatedTime\": \"et do\",\n  \"name\": \"proident minim ad culpa\"\n },\n \"osUsers\": [\n  {\n   \"newPassword\": \"anim tempor non\",\n   \"password\": \"Duis Lorem\",\n   \"userName\": \"sint tempor veniam\",\n   \"description\": \"ullamco\",\n   \"numberOfDaysToExpire\": 87932719\n  },\n  {\n   \"newPassword\": \"in ut quis culpa\",\n   \"password\": \"consequat deserunt\",\n   \"userName\": \"tempor adipisicing sint\",\n   \"description\": \"consequat\",\n   \"numberOfDaysToExpire\": -43116349\n  }\n ],\n \"autoSupport\": true,\n \"configType\": \"ut\",\n \"deployedPlatform\": \"VMC\",\n \"firewall\": {\n  \"outbounds\": [\n   {\n    \"usedBy\": \"sint fugiat\",\n    \"destination\": \"culpa\",\n    \"port\": \"pariatur minim\",\n    \"rule\": \"ACCEPT\"\n   },\n   {\n    \"usedBy\": \"Duis Lorem culpa\",\n    \"destination\": \"ad\",\n    \"port\": \"laboris occaecat Duis magna\",\n    \"rule\": \"ACCEPT\"\n   }\n  ]\n },\n \"gettingStartedCompleted\": true,\n \"integratedStorageSecuritySetupCompleted\": true,\n \"networks\": [\n  {\n   \"dnsServers\": [\n    \"ipsum sed sint\",\n    \"pa\"\n   ],\n   \"fqdn\": \"voluptate cillum nisi do\",\n   \"gateway\": \"Lorem irur\",\n   \"interfaceName\": \"in in ipsum ullamco\",\n   \"ipAddress\": [\n    \"occaecat voluptate\",\n    \"aliqua proident reprehenderit\"\n   ],\n   \"ipAddressFamily\": \"officia sed cupidatat do\",\n   \"netMask\": \"voluptate in\",\n   \"nslookupSuccess\": true,\n   \"prefix\": \"Ut tempor nisi magna\"\n  },\n  {\n   \"dnsServers\": [\n    \"ipsum dolore mollit\",\n    \"ut laboris dolore fugiat\"\n   ],\n   \"fqdn\": \"proident ullamco ipsum u\",\n   \"gateway\": \"voluptate\",\n   \"interfaceName\": \"ut adipisicing anim sit dolor\",\n   \"ipAddress\": [\n    \"minim aliqua adipisicing\",\n    \"in incididunt reprehenderit deserunt nisi\"\n   ],\n   \"ipAddressFamily\": \"occaecat minim fugiat id\",\n   \"netMask\": \"consequat occaecat culpa dolor\",\n   \"nslookupSuccess\": false,\n   \"prefix\": \"ea\"\n  }\n ],\n \"nodeId\": \"sunt\",\n \"ntpServers\": [\n  \"velit sit dolore fug\",\n  \"Ut ut eu\"\n ]\n}"
										},
										{
											"name": "Cannot find a configuration with the specified ID.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\": \"<string>\",\n    \"applicationUserPassword\": \"<string>\",\n    \"timeZone\": \"<string>\",\n    \"lockbox\": {\n        \"newPassphrase\": \"<string>\",\n        \"passphrase\": \"<string>\",\n        \"lastUpdatedTime\": \"<string>\",\n        \"name\": \"<string>\"\n    },\n    \"osUsers\": [\n        {\n            \"newPassword\": \"<string>\",\n            \"password\": \"<string>\",\n            \"userName\": \"<string>\",\n            \"description\": \"<string>\",\n            \"numberOfDaysToExpire\": \"<integer>\"\n        },\n        {\n            \"newPassword\": \"<string>\",\n            \"password\": \"<string>\",\n            \"userName\": \"<string>\",\n            \"description\": \"<string>\",\n            \"numberOfDaysToExpire\": \"<integer>\"\n        }\n    ],\n    \"autoSupport\": \"<boolean>\",\n    \"configType\": \"<string>\",\n    \"deployedPlatform\": \"<string>\",\n    \"firewall\": {\n        \"outbounds\": [\n            {\n                \"usedBy\": \"<string>\",\n                \"destination\": \"<string>\",\n                \"port\": \"<string>\",\n                \"rule\": \"<string>\"\n            },\n            {\n                \"usedBy\": \"<string>\",\n                \"destination\": \"<string>\",\n                \"port\": \"<string>\",\n                \"rule\": \"<string>\"\n            }\n        ]\n    },\n    \"gettingStartedCompleted\": \"<boolean>\",\n    \"integratedStorageSecuritySetupCompleted\": \"<boolean>\",\n    \"networks\": [\n        {\n            \"dnsServers\": [\n                \"<string>\",\n                \"<string>\"\n            ],\n            \"fqdn\": \"<string>\",\n            \"gateway\": \"<string>\",\n            \"interfaceName\": \"<string>\",\n            \"ipAddress\": [\n                \"<string>\",\n                \"<string>\"\n            ],\n            \"ipAddressFamily\": \"<string>\",\n            \"netMask\": \"<string>\",\n            \"nslookupSuccess\": \"<boolean>\",\n            \"prefix\": \"<string>\"\n        },\n        {\n            \"dnsServers\": [\n                \"<string>\",\n                \"<string>\"\n            ],\n            \"fqdn\": \"<string>\",\n            \"gateway\": \"<string>\",\n            \"interfaceName\": \"<string>\",\n            \"ipAddress\": [\n                \"<string>\",\n                \"<string>\"\n            ],\n            \"ipAddressFamily\": \"<string>\",\n            \"netMask\": \"<string>\",\n            \"nslookupSuccess\": \"<boolean>\",\n            \"prefix\": \"<string>\"\n        }\n    ],\n    \"nodeId\": \"<string>\",\n    \"ntpServers\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/configurations/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"configurations",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The submitted configuration has a syntax error.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\": \"<string>\",\n    \"applicationUserPassword\": \"<string>\",\n    \"timeZone\": \"<string>\",\n    \"lockbox\": {\n        \"newPassphrase\": \"<string>\",\n        \"passphrase\": \"<string>\",\n        \"lastUpdatedTime\": \"<string>\",\n        \"name\": \"<string>\"\n    },\n    \"osUsers\": [\n        {\n            \"newPassword\": \"<string>\",\n            \"password\": \"<string>\",\n            \"userName\": \"<string>\",\n            \"description\": \"<string>\",\n            \"numberOfDaysToExpire\": \"<integer>\"\n        },\n        {\n            \"newPassword\": \"<string>\",\n            \"password\": \"<string>\",\n            \"userName\": \"<string>\",\n            \"description\": \"<string>\",\n            \"numberOfDaysToExpire\": \"<integer>\"\n        }\n    ],\n    \"autoSupport\": \"<boolean>\",\n    \"configType\": \"<string>\",\n    \"deployedPlatform\": \"<string>\",\n    \"firewall\": {\n        \"outbounds\": [\n            {\n                \"usedBy\": \"<string>\",\n                \"destination\": \"<string>\",\n                \"port\": \"<string>\",\n                \"rule\": \"<string>\"\n            },\n            {\n                \"usedBy\": \"<string>\",\n                \"destination\": \"<string>\",\n                \"port\": \"<string>\",\n                \"rule\": \"<string>\"\n            }\n        ]\n    },\n    \"gettingStartedCompleted\": \"<boolean>\",\n    \"integratedStorageSecuritySetupCompleted\": \"<boolean>\",\n    \"networks\": [\n        {\n            \"dnsServers\": [\n                \"<string>\",\n                \"<string>\"\n            ],\n            \"fqdn\": \"<string>\",\n            \"gateway\": \"<string>\",\n            \"interfaceName\": \"<string>\",\n            \"ipAddress\": [\n                \"<string>\",\n                \"<string>\"\n            ],\n            \"ipAddressFamily\": \"<string>\",\n            \"netMask\": \"<string>\",\n            \"nslookupSuccess\": \"<boolean>\",\n            \"prefix\": \"<string>\"\n        },\n        {\n            \"dnsServers\": [\n                \"<string>\",\n                \"<string>\"\n            ],\n            \"fqdn\": \"<string>\",\n            \"gateway\": \"<string>\",\n            \"interfaceName\": \"<string>\",\n            \"ipAddress\": [\n                \"<string>\",\n                \"<string>\"\n            ],\n            \"ipAddressFamily\": \"<string>\",\n            \"netMask\": \"<string>\",\n            \"nslookupSuccess\": \"<boolean>\",\n            \"prefix\": \"<string>\"\n        }\n    ],\n    \"nodeId\": \"<string>\",\n    \"ntpServers\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/configurations/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"configurations",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Cannot change the configuration in the current node state.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\": \"<string>\",\n    \"applicationUserPassword\": \"<string>\",\n    \"timeZone\": \"<string>\",\n    \"lockbox\": {\n        \"newPassphrase\": \"<string>\",\n        \"passphrase\": \"<string>\",\n        \"lastUpdatedTime\": \"<string>\",\n        \"name\": \"<string>\"\n    },\n    \"osUsers\": [\n        {\n            \"newPassword\": \"<string>\",\n            \"password\": \"<string>\",\n            \"userName\": \"<string>\",\n            \"description\": \"<string>\",\n            \"numberOfDaysToExpire\": \"<integer>\"\n        },\n        {\n            \"newPassword\": \"<string>\",\n            \"password\": \"<string>\",\n            \"userName\": \"<string>\",\n            \"description\": \"<string>\",\n            \"numberOfDaysToExpire\": \"<integer>\"\n        }\n    ],\n    \"autoSupport\": \"<boolean>\",\n    \"configType\": \"<string>\",\n    \"deployedPlatform\": \"<string>\",\n    \"firewall\": {\n        \"outbounds\": [\n            {\n                \"usedBy\": \"<string>\",\n                \"destination\": \"<string>\",\n                \"port\": \"<string>\",\n                \"rule\": \"<string>\"\n            },\n            {\n                \"usedBy\": \"<string>\",\n                \"destination\": \"<string>\",\n                \"port\": \"<string>\",\n                \"rule\": \"<string>\"\n            }\n        ]\n    },\n    \"gettingStartedCompleted\": \"<boolean>\",\n    \"integratedStorageSecuritySetupCompleted\": \"<boolean>\",\n    \"networks\": [\n        {\n            \"dnsServers\": [\n                \"<string>\",\n                \"<string>\"\n            ],\n            \"fqdn\": \"<string>\",\n            \"gateway\": \"<string>\",\n            \"interfaceName\": \"<string>\",\n            \"ipAddress\": [\n                \"<string>\",\n                \"<string>\"\n            ],\n            \"ipAddressFamily\": \"<string>\",\n            \"netMask\": \"<string>\",\n            \"nslookupSuccess\": \"<boolean>\",\n            \"prefix\": \"<string>\"\n        },\n        {\n            \"dnsServers\": [\n                \"<string>\",\n                \"<string>\"\n            ],\n            \"fqdn\": \"<string>\",\n            \"gateway\": \"<string>\",\n            \"interfaceName\": \"<string>\",\n            \"ipAddress\": [\n                \"<string>\",\n                \"<string>\"\n            ],\n            \"ipAddressFamily\": \"<string>\",\n            \"netMask\": \"<string>\",\n            \"nslookupSuccess\": \"<boolean>\",\n            \"prefix\": \"<string>\"\n        }\n    ],\n    \"nodeId\": \"<string>\",\n    \"ntpServers\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/configurations/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"configurations",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Accepted and processing the initial configuration request.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\": \"<string>\",\n    \"applicationUserPassword\": \"<string>\",\n    \"timeZone\": \"<string>\",\n    \"lockbox\": {\n        \"newPassphrase\": \"<string>\",\n        \"passphrase\": \"<string>\",\n        \"lastUpdatedTime\": \"<string>\",\n        \"name\": \"<string>\"\n    },\n    \"osUsers\": [\n        {\n            \"newPassword\": \"<string>\",\n            \"password\": \"<string>\",\n            \"userName\": \"<string>\",\n            \"description\": \"<string>\",\n            \"numberOfDaysToExpire\": \"<integer>\"\n        },\n        {\n            \"newPassword\": \"<string>\",\n            \"password\": \"<string>\",\n            \"userName\": \"<string>\",\n            \"description\": \"<string>\",\n            \"numberOfDaysToExpire\": \"<integer>\"\n        }\n    ],\n    \"autoSupport\": \"<boolean>\",\n    \"configType\": \"<string>\",\n    \"deployedPlatform\": \"<string>\",\n    \"firewall\": {\n        \"outbounds\": [\n            {\n                \"usedBy\": \"<string>\",\n                \"destination\": \"<string>\",\n                \"port\": \"<string>\",\n                \"rule\": \"<string>\"\n            },\n            {\n                \"usedBy\": \"<string>\",\n                \"destination\": \"<string>\",\n                \"port\": \"<string>\",\n                \"rule\": \"<string>\"\n            }\n        ]\n    },\n    \"gettingStartedCompleted\": \"<boolean>\",\n    \"integratedStorageSecuritySetupCompleted\": \"<boolean>\",\n    \"networks\": [\n        {\n            \"dnsServers\": [\n                \"<string>\",\n                \"<string>\"\n            ],\n            \"fqdn\": \"<string>\",\n            \"gateway\": \"<string>\",\n            \"interfaceName\": \"<string>\",\n            \"ipAddress\": [\n                \"<string>\",\n                \"<string>\"\n            ],\n            \"ipAddressFamily\": \"<string>\",\n            \"netMask\": \"<string>\",\n            \"nslookupSuccess\": \"<boolean>\",\n            \"prefix\": \"<string>\"\n        },\n        {\n            \"dnsServers\": [\n                \"<string>\",\n                \"<string>\"\n            ],\n            \"fqdn\": \"<string>\",\n            \"gateway\": \"<string>\",\n            \"interfaceName\": \"<string>\",\n            \"ipAddress\": [\n                \"<string>\",\n                \"<string>\"\n            ],\n            \"ipAddressFamily\": \"<string>\",\n            \"netMask\": \"<string>\",\n            \"nslookupSuccess\": \"<boolean>\",\n            \"prefix\": \"<string>\"\n        }\n    ],\n    \"nodeId\": \"<string>\",\n    \"ntpServers\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/configurations/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"configurations",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The requestor is not allowed to perform this operation.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\": \"<string>\",\n    \"applicationUserPassword\": \"<string>\",\n    \"timeZone\": \"<string>\",\n    \"lockbox\": {\n        \"newPassphrase\": \"<string>\",\n        \"passphrase\": \"<string>\",\n        \"lastUpdatedTime\": \"<string>\",\n        \"name\": \"<string>\"\n    },\n    \"osUsers\": [\n        {\n            \"newPassword\": \"<string>\",\n            \"password\": \"<string>\",\n            \"userName\": \"<string>\",\n            \"description\": \"<string>\",\n            \"numberOfDaysToExpire\": \"<integer>\"\n        },\n        {\n            \"newPassword\": \"<string>\",\n            \"password\": \"<string>\",\n            \"userName\": \"<string>\",\n            \"description\": \"<string>\",\n            \"numberOfDaysToExpire\": \"<integer>\"\n        }\n    ],\n    \"autoSupport\": \"<boolean>\",\n    \"configType\": \"<string>\",\n    \"deployedPlatform\": \"<string>\",\n    \"firewall\": {\n        \"outbounds\": [\n            {\n                \"usedBy\": \"<string>\",\n                \"destination\": \"<string>\",\n                \"port\": \"<string>\",\n                \"rule\": \"<string>\"\n            },\n            {\n                \"usedBy\": \"<string>\",\n                \"destination\": \"<string>\",\n                \"port\": \"<string>\",\n                \"rule\": \"<string>\"\n            }\n        ]\n    },\n    \"gettingStartedCompleted\": \"<boolean>\",\n    \"integratedStorageSecuritySetupCompleted\": \"<boolean>\",\n    \"networks\": [\n        {\n            \"dnsServers\": [\n                \"<string>\",\n                \"<string>\"\n            ],\n            \"fqdn\": \"<string>\",\n            \"gateway\": \"<string>\",\n            \"interfaceName\": \"<string>\",\n            \"ipAddress\": [\n                \"<string>\",\n                \"<string>\"\n            ],\n            \"ipAddressFamily\": \"<string>\",\n            \"netMask\": \"<string>\",\n            \"nslookupSuccess\": \"<boolean>\",\n            \"prefix\": \"<string>\"\n        },\n        {\n            \"dnsServers\": [\n                \"<string>\",\n                \"<string>\"\n            ],\n            \"fqdn\": \"<string>\",\n            \"gateway\": \"<string>\",\n            \"interfaceName\": \"<string>\",\n            \"ipAddress\": [\n                \"<string>\",\n                \"<string>\"\n            ],\n            \"ipAddressFamily\": \"<string>\",\n            \"netMask\": \"<string>\",\n            \"nslookupSuccess\": \"<boolean>\",\n            \"prefix\": \"<string>\"\n        }\n    ],\n    \"nodeId\": \"<string>\",\n    \"ntpServers\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/configurations/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"configurations",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Get all configurations.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/configurations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"configurations"
									]
								},
								"description": "Retrieves all PowerProtect Data Manager appliance configurations. Running GET on this API endpoint returns an array of configurations objects with which the PowerProtect Data Manager appliance can be configured.\n> This endpoint supports execution by the following roles: admin, user, export and recovery admin\n"
							},
							"response": [
								{
									"name": "Filter syntax is not valid.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/configurations",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"configurations"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "The requestor is not allowed to perform this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/configurations",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"configurations"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "An unexpected error prevented the server from fulfilling your request.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/configurations",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"configurations"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Successfully returned available resources.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/configurations",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"configurations"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"content\": [\n  {\n   \"id\": \"aliqua fugiat\",\n   \"applicationUserPassword\": \"enim\",\n   \"timeZone\": \"amet dolor tempor sed\",\n   \"lockbox\": {\n    \"newPassphrase\": \"dolor tempor\",\n    \"passphrase\": \"sed esse quis officia ex\",\n    \"lastUpdatedTime\": \"consequat\",\n    \"name\": \"cillum magna dolore\"\n   },\n   \"osUsers\": [\n    {\n     \"newPassword\": \"reprehenderit esse consectetur ipsum Lorem\",\n     \"password\": \"amet et reprehenderit id\",\n     \"userName\": \"dolor elit anim ad do\",\n     \"description\": \"pariatur in amet\",\n     \"numberOfDaysToExpire\": 33841504\n    },\n    {\n     \"newPassword\": \"et deserunt Excepteur irure\",\n     \"password\": \"irure\",\n     \"userName\": \"Ex\",\n     \"description\": \"laborum\",\n     \"numberOfDaysToExpire\": 73589555\n    }\n   ],\n   \"autoSupport\": false,\n   \"configType\": \"tempor magna ullamco\",\n   \"deployedPlatform\": \"AZURE\",\n   \"firewall\": {\n    \"outbounds\": [\n     {\n      \"usedBy\": \"culpa\",\n      \"destination\": \"nulla cupidatat dolore cillum\",\n      \"port\": \"mollit fugiat nisi deserunt\",\n      \"rule\": \"ACCEPT\"\n     },\n     {\n      \"usedBy\": \"in eiusmod ea\",\n      \"destination\": \"aute Lorem sed\",\n      \"port\": \"quis\",\n      \"rule\": \"ACCEPT\"\n     }\n    ]\n   },\n   \"gettingStartedCompleted\": true,\n   \"integratedStorageSecuritySetupCompleted\": true,\n   \"networks\": [\n    {\n     \"dnsServers\": [\n      \"laboris id\",\n      \"enim labore cillum exercitation\"\n     ],\n     \"fqdn\": \"dolore cupidatat ad\",\n     \"gateway\": \"labore do id\",\n     \"interfaceName\": \"eiusmod qui\",\n     \"ipAddress\": [\n      \"cupidatat cillum\",\n      \"adipisicing in sit\"\n     ],\n     \"ipAddressFamily\": \"Ut amet culpa\",\n     \"netMask\": \"consequat velit aute sunt\",\n     \"nslookupSuccess\": true,\n     \"prefix\": \"Ut amet\"\n    },\n    {\n     \"dnsServers\": [\n      \"minim\",\n      \"ex consequat\"\n     ],\n     \"fqdn\": \"nulla\",\n     \"gateway\": \"dolore sint irure Lorem ea\",\n     \"interfaceName\": \"esse culpa quis dolor\",\n     \"ipAddress\": [\n      \"amet laboris incididunt\",\n      \"adipisicing incididunt e\"\n     ],\n     \"ipAddressFamily\": \"irure fugiat mollit laborum\",\n     \"netMask\": \"tempor deserunt\",\n     \"nslookupSuccess\": false,\n     \"prefix\": \"aliqua magna\"\n    }\n   ],\n   \"nodeId\": \"quis dolore proident\",\n   \"ntpServers\": [\n    \"ea in voluptate laboris\",\n    \"proident et minim culpa labore\"\n   ]\n  },\n  {\n   \"id\": \"ipsum e\",\n   \"applicationUserPassword\": \"aute officia reprehenderit Excepteur\",\n   \"timeZone\": \"labore\",\n   \"lockbox\": {\n    \"newPassphrase\": \"enim ipsum dolor non\",\n    \"passphrase\": \"veniam\",\n    \"lastUpdatedTime\": \"deserunt proident ex\",\n    \"name\": \"in\"\n   },\n   \"osUsers\": [\n    {\n     \"newPassword\": \"fugiat quis est\",\n     \"password\": \"fugiat laboris mollit\",\n     \"userName\": \"culpa amet\",\n     \"description\": \"in reprehenderit ipsum\",\n     \"numberOfDaysToExpire\": 3504910\n    },\n    {\n     \"newPassword\": \"culpa commodo reprehenderit\",\n     \"password\": \"Ut sed in ipsum do\",\n     \"userName\": \"veniam cupidatat sit aliqua irure\",\n     \"description\": \"velit cupidatat exercitation aute do\",\n     \"numberOfDaysToExpire\": -63486918\n    }\n   ],\n   \"autoSupport\": true,\n   \"configType\": \"amet consequat dolore ad\",\n   \"deployedPlatform\": \"AWS\",\n   \"firewall\": {\n    \"outbounds\": [\n     {\n      \"usedBy\": \"in consectetur Lorem\",\n      \"destination\": \"voluptate occaecat et\",\n      \"port\": \"minim Duis labore ad\",\n      \"rule\": \"ACCEPT\"\n     },\n     {\n      \"usedBy\": \"nulla ullamco\",\n      \"destination\": \"non amet enim cupidatat\",\n      \"port\": \"dolore dolor laboris nisi officia\",\n      \"rule\": \"ACCEPT\"\n     }\n    ]\n   },\n   \"gettingStartedCompleted\": false,\n   \"integratedStorageSecuritySetupCompleted\": false,\n   \"networks\": [\n    {\n     \"dnsServers\": [\n      \"occaecat\",\n      \"cupidatat tempor ex\"\n     ],\n     \"fqdn\": \"quis ipsum\",\n     \"gateway\": \"esse proident\",\n     \"interfaceName\": \"incididunt non veniam nostrud\",\n     \"ipAddress\": [\n      \"minim voluptate occaecat esse proident\",\n      \"non cillum incididunt fugiat\"\n     ],\n     \"ipAddressFamily\": \"officia labore\",\n     \"netMask\": \"Excepteur officia eiusmod nisi dolor\",\n     \"nslookupSuccess\": false,\n     \"prefix\": \"aute dolor adipisicing\"\n    },\n    {\n     \"dnsServers\": [\n      \"incididunt enim exercitation\",\n      \"elit laborum exercitation et ut\"\n     ],\n     \"fqdn\": \"ut aliqua ipsum dolore aute\",\n     \"gateway\": \"labore dolore in voluptate\",\n     \"interfaceName\": \"veniam sit\",\n     \"ipAddress\": [\n      \"Lorem sunt\",\n      \"officia veniam magna\"\n     ],\n     \"ipAddressFamily\": \"mollit eu culpa dolor\",\n     \"netMask\": \"dolore consequat\",\n     \"nslookupSuccess\": true,\n     \"prefix\": \"magna\"\n    }\n   ],\n   \"nodeId\": \"consectetur in reprehenderit ipsum\",\n   \"ntpServers\": [\n    \"dolor eiusmod Excepteur sed\",\n    \"commodo consequat dolor\"\n   ]\n  }\n ],\n \"page\": {\n  \"number\": -20416874,\n  \"queryState\": \"id nulla\",\n  \"size\": -11831110,\n  \"totalElements\": -78238536,\n  \"totalPages\": 26934992\n }\n}"
								}
							]
						},
						{
							"name": "Get the progress of initial configuration.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/configurations/:configurationId/config-status",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"configurations",
										":configurationId",
										"config-status"
									],
									"variable": [
										{
											"id": "9d888f5c-d0cc-4e31-b0a6-629ff646042a",
											"key": "configurationId",
											"value": "<string>",
											"type": "string",
											"description": "(Required) Configuration ID."
										}
									]
								},
								"description": "Retrieves the progress of the initial configuration. The configuration ID must first be obtained by running GET on the configurations API, which returns an array of configurations objects with which the PowerProtect Data Manager appliance can be configured.\n> This endpoint supports execution by the following roles: admin, user, export and recovery admin\n"
							},
							"response": [
								{
									"name": "Located and returned the available configuration status successfully.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/configurations/:configurationId/config-status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"configurations",
												":configurationId",
												"config-status"
											],
											"variable": [
												{
													"key": "configurationId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n {\n  \"completedStage\": [\n   {\n    \"description\": \"amet veniam non et\",\n    \"endTime\": \"1955-05-26T09:52:16.599Z\",\n    \"startTime\": \"1981-09-03T18:07:00.091Z\",\n    \"status\": \"SUCCESS\"\n   },\n   {\n    \"description\": \"minim in\",\n    \"endTime\": \"1970-09-13T20:18:36.325Z\",\n    \"startTime\": \"1944-01-15T10:06:32.203Z\",\n    \"status\": \"PROGRESS\"\n   }\n  ],\n  \"currentStage\": {\n   \"description\": \"anim aute\",\n   \"endTime\": \"1960-08-06T20:27:05.456Z\",\n   \"startTime\": \"1997-01-18T10:54:39.627Z\",\n   \"status\": \"FAILED\"\n  },\n  \"endTime\": \"ipsum eiusmod ut\",\n  \"percentageCompleted\": 85096967,\n  \"startTime\": \"incididunt\",\n  \"status\": \"SUCCESS\"\n },\n {\n  \"completedStage\": [\n   {\n    \"description\": \"ad Ut aliqua\",\n    \"endTime\": \"1953-09-21T15:46:08.971Z\",\n    \"startTime\": \"2019-01-13T20:44:34.439Z\",\n    \"status\": \"SUCCESS\"\n   },\n   {\n    \"description\": \"cupidatat in qui in nisi\",\n    \"endTime\": \"1942-11-26T14:00:10.261Z\",\n    \"startTime\": \"1970-07-25T09:13:41.683Z\",\n    \"status\": \"SUCCESS\"\n   }\n  ],\n  \"currentStage\": {\n   \"description\": \"sint dolor \",\n   \"endTime\": \"1969-06-30T20:22:53.710Z\",\n   \"startTime\": \"1978-09-16T11:48:26.877Z\",\n   \"status\": \"FAILED\"\n  },\n  \"endTime\": \"eu adipisicing nostrud\",\n  \"percentageCompleted\": 40885552,\n  \"startTime\": \"pariatur fugiat mollit quis do\",\n  \"status\": \"FAILED\"\n }\n]"
								},
								{
									"name": "An unexpected error prevented the server from fulfilling your request.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/configurations/:configurationId/config-status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"configurations",
												":configurationId",
												"config-status"
											],
											"variable": [
												{
													"key": "configurationId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Cannot find a configuration status with the given ID.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/configurations/:configurationId/config-status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"configurations",
												":configurationId",
												"config-status"
											],
											"variable": [
												{
													"key": "configurationId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "The requestor is not allowed to perform this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/configurations/:configurationId/config-status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"configurations",
												":configurationId",
												"config-status"
											],
											"variable": [
												{
													"key": "configurationId"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Filter syntax is not valid.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/configurations/:configurationId/config-status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"configurations",
												":configurationId",
												"config-status"
											],
											"variable": [
												{
													"key": "configurationId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "copies/{id}",
					"item": [
						{
							"name": "cloud",
							"item": [
								{
									"name": "Recall and retier a copy from cloud.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"action\": \"<string>\"\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/copies/:id/cloud",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"copies",
												":id",
												"cloud"
											],
											"variable": [
												{
													"id": "9b0e48dd-e988-4627-a0b9-dc4327476f66",
													"key": "id",
													"value": "<string>",
													"type": "string",
													"description": "(Required) ID of the copy."
												}
											]
										},
										"description": "Recall and retier a copy from cloud. The header should contain a valid authentication token. Retier and retention time is required.\n> This endpoint supports execution by the following roles: admin,export-and-recovery-admin\n"
									},
									"response": [
										{
											"name": "The requestor is not allowed to perform this operation.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/copies/:id/cloud",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"copies",
														":id",
														"cloud"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "Successfully create the copy.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/copies/:id/cloud",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"copies",
														":id",
														"cloud"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"action\": \"RETIER\",\n \"retierRetentionTime\": \"sint cupidatat ex\"\n}"
										},
										{
											"name": "The request is not valid.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/copies/:id/cloud",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"copies",
														":id",
														"cloud"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/copies/:id/cloud",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"copies",
														":id",
														"cloud"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/copies/:id/cloud",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"copies",
														":id",
														"cloud"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										}
									]
								},
								{
									"name": "Update recall and retier a copy retier time from cloud.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"action\": \"<string>\"\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/copies/:id/cloud",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"copies",
												":id",
												"cloud"
											],
											"variable": [
												{
													"id": "bc6973a3-8204-4f7f-82fb-8353b9405c65",
													"key": "id",
													"value": "<string>",
													"type": "string",
													"description": "(Required) ID of the copy."
												}
											]
										},
										"description": "Update recall and retier a copy retier time from cloud. Only retier retention time can be updated. Retier retention time is required.\n> This endpoint supports execution by the following roles: admin,export-and-recovery-admin\n"
									},
									"response": [
										{
											"name": "The request is not valid.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/copies/:id/cloud",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"copies",
														":id",
														"cloud"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/copies/:id/cloud",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"copies",
														":id",
														"cloud"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The requestor is not allowed to perform this operation.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/copies/:id/cloud",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"copies",
														":id",
														"cloud"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "Successfully updated the copy.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/copies/:id/cloud",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"copies",
														":id",
														"cloud"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"action\": \"RETIER\",\n \"retierRetentionTime\": \"sint cupidatat ex\"\n}"
										},
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/copies/:id/cloud",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"copies",
														":id",
														"cloud"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Delete copy by ID.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/copies/:id?cascadeDelete=false&removeConfigurationOnly=false&forceRemoveLatestBackup=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"copies",
										":id"
									],
									"query": [
										{
											"key": "cascadeDelete",
											"value": "false",
											"description": "For asset type without dependency, this option makes no difference. For asset type with dependency between copies:\n- cascadeDelete=true deletes all copies in the dependency chain.\n- cascadeDelete=false does not delete any copy with HTTP status code of 409 (Conflict).\n- By default, when cascadeDelete is not specified, it operates as if cascadeDelete is false."
										},
										{
											"key": "removeConfigurationOnly",
											"value": "false",
											"description": "- removeConfigurationOnly=true only deletes metadata from PowerProtect Data Manager without physically deleting from storage or application agent.\n- removeConfigurationOnly=false deletes copy from storage and application agent (if any). If successfully deleted from storage and application agent, then it deletes metadata from PowerProtect Data Manager.\n- By default, when removeConfigurationOnly is not specified, it operates as if removeConfigurationOnly is false."
										},
										{
											"key": "forceRemoveLatestBackup",
											"value": "false",
											"description": "- forceRemoveLatestBackup=true enables deleting the latest backup. It may break the later chain, or for VM CBT backup, it may break the in-progress backup.\n- forceRemoveLatestBackup=false, if the specified copy is the latest backup, produces HTTP error 409 (Conflict).\n- By default, when forceRemoveLatestBackup is not specified, it operates as if removeConfigurationOnly is false."
										}
									],
									"variable": [
										{
											"id": "8725bc5a-0ebc-403e-b66a-0a1dd6800da4",
											"key": "id",
											"value": "<string>",
											"type": "string",
											"description": "(Required) ID of the copy."
										}
									]
								},
								"description": "Deletes copy by ID.\n> This endpoint supports execution by the following roles: user,export-and-recovery-admin\n"
							},
							"response": [
								{
									"name": "Success.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/copies/:id?cascadeDelete=false&removeConfigurationOnly=false&forceRemoveLatestBackup=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"copies",
												":id"
											],
											"query": [
												{
													"key": "cascadeDelete",
													"value": "false"
												},
												{
													"key": "removeConfigurationOnly",
													"value": "false"
												},
												{
													"key": "forceRemoveLatestBackup",
													"value": "false"
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"copyIds\": [\n  \"labore\",\n  \"ex ut\"\n ],\n \"activityId\": \"sint deserunt esse\"\n}"
								},
								{
									"name": "An unexpected error prevented the server from fulfilling your request.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/copies/:id?cascadeDelete=false&removeConfigurationOnly=false&forceRemoveLatestBackup=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"copies",
												":id"
											],
											"query": [
												{
													"key": "cascadeDelete",
													"value": "false"
												},
												{
													"key": "removeConfigurationOnly",
													"value": "false"
												},
												{
													"key": "forceRemoveLatestBackup",
													"value": "false"
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "The requestor is not allowed to perform this operation.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/copies/:id?cascadeDelete=false&removeConfigurationOnly=false&forceRemoveLatestBackup=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"copies",
												":id"
											],
											"query": [
												{
													"key": "cascadeDelete",
													"value": "false"
												},
												{
													"key": "removeConfigurationOnly",
													"value": "false"
												},
												{
													"key": "forceRemoveLatestBackup",
													"value": "false"
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "The copy could not be deleted because of a dependency issue. Examples of dependency issues include retention lock, dependency copies could not be deleted, restoring, or cloud tiering, or cloud recalling.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/copies/:id?cascadeDelete=false&removeConfigurationOnly=false&forceRemoveLatestBackup=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"copies",
												":id"
											],
											"query": [
												{
													"key": "cascadeDelete",
													"value": "false"
												},
												{
													"key": "removeConfigurationOnly",
													"value": "false"
												},
												{
													"key": "forceRemoveLatestBackup",
													"value": "false"
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Conflict",
									"code": 409,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "The copy to be deleted is not found.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/copies/:id?cascadeDelete=false&removeConfigurationOnly=false&forceRemoveLatestBackup=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"copies",
												":id"
											],
											"query": [
												{
													"key": "cascadeDelete",
													"value": "false"
												},
												{
													"key": "removeConfigurationOnly",
													"value": "false"
												},
												{
													"key": "forceRemoveLatestBackup",
													"value": "false"
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "The request is not valid.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/copies/:id?cascadeDelete=false&removeConfigurationOnly=false&forceRemoveLatestBackup=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"copies",
												":id"
											],
											"query": [
												{
													"key": "cascadeDelete",
													"value": "false"
												},
												{
													"key": "removeConfigurationOnly",
													"value": "false"
												},
												{
													"key": "forceRemoveLatestBackup",
													"value": "false"
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "The requestor is not authorized to perform this operation.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/copies/:id?cascadeDelete=false&removeConfigurationOnly=false&forceRemoveLatestBackup=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"copies",
												":id"
											],
											"query": [
												{
													"key": "cascadeDelete",
													"value": "false"
												},
												{
													"key": "removeConfigurationOnly",
													"value": "false"
												},
												{
													"key": "forceRemoveLatestBackup",
													"value": "false"
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								}
							]
						},
						{
							"name": "Get copy by ID.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/copies/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"copies",
										":id"
									],
									"variable": [
										{
											"id": "9e3fd852-d73f-4f56-9e93-f135096fac23",
											"key": "id",
											"value": "<string>",
											"type": "string",
											"description": "(Required) ID of the copy."
										}
									]
								},
								"description": "Retrieves a copy by its ID. The copy defines asset backup. Each copy is assigned to an asset. A asset can correspond to many copies.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
							},
							"response": [
								{
									"name": "Successfully returned copy.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/copies/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"copies",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"adhocBackup\": false,\n \"assetId\": \"dolore\",\n \"backupTransactionId\": \"irure minim consectetur\",\n \"baseCopyId\": \"in ad eius\",\n \"copyConsistency\": \"APPLICATION_CONSISTENT\",\n \"copyType\": \"INCR_1_DIFFERENTIAL\",\n \"createTime\": \"2009-03-11T17:31:21.792Z\",\n \"details\": {\n  \"k8sBackup\": {\n   \"backupId\": \"cupidatat in\",\n   \"persistentVolumeClaims\": [\n    {\n     \"appConsistentType\": \"nulla officia dolore\",\n     \"dataMover\": \"ut mollit dolore\",\n     \"excluded\": \"dolor elit\",\n     \"name\": \"ut irure\",\n     \"size\": 18456789.669649825,\n     \"storageClass\": \"cupidatat nisi voluptate aliquip sit\",\n     \"uid\": \"dolor voluptate\"\n    },\n    {\n     \"appConsistentType\": \"nisi aliquip deserunt pariatur\",\n     \"dataMover\": \"deserunt fugiat\",\n     \"excluded\": \"sunt qui eiusmod laborum\",\n     \"name\": \"et sit nisi minim\",\n     \"size\": 31734461.03559558,\n     \"storageClass\": \"nisi\",\n     \"uid\": \"est cillum ad mollit\"\n    }\n   ]\n  },\n  \"mssqlBackup\": {\n   \"protectionFlowEngine\": \"APPDIRECT\"\n  },\n  \"nasBackup\": {\n   \"directoryCount\": \"non ipsum aliquip\",\n   \"fileCount\": \"anim cupidatat\",\n   \"snapshotMetadata\": {\n    \"id\": \"pariatur amet consectetur\",\n    \"name\": \"ea sit esse\",\n    \"path\": \"eu ad occaecat aute\",\n    \"pathId\": \"proident enim veniam\"\n   }\n  },\n  \"vmBackup\": {\n   \"dataMoverType\": \"VADP\"\n  }\n },\n \"exportedCopyCount\": 40146351,\n \"externalId\": \"ani\",\n \"id\": \"in sed\",\n \"location\": \"LOCAL\",\n \"logCount\": \"cupidatat enim magna\",\n \"metadataIndexingStatus\": \"RUNNING, FAILED, PARTIAL_SUCCESS,  SUCCESS, null\",\n \"partialCopy\": true,\n \"partialCopyDescription\": \"dolor pariatur\",\n \"protectionCreated\": false,\n \"replicatedCopy\": false,\n \"restoreTargetCompatibilities\": [\n  {\n   \"compatibilityFailureReason\": \"in sunt\",\n   \"targetName\": \"in id ad\",\n   \"type\": \"UNKNOWN\"\n  },\n  {\n   \"compatibilityFailureReason\": \"in aut\",\n   \"targetName\": \"tempor aliqua ad velit\",\n   \"type\": \"INCOMPATIBLE\"\n  }\n ],\n \"retentionLock\": \"ALL_COPIES_LOCKED\",\n \"retentionTime\": \"2004-07-18T13:53:24.121Z\",\n \"retierTime\": \"1952-04-25T02:57:47.957Z\",\n \"size\": -65325113,\n \"state\": \"IDLE\",\n \"storageSystemId\": \"minim ad aliqua\",\n \"validationResult\": {\n  \"status\": \"dolore aute ullamco\",\n  \"time\": \"1976-01-04T15:36:05.627Z\"\n }\n}"
								},
								{
									"name": "The requestor is not allowed to perform this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/copies/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"copies",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "The request is not valid.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/copies/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"copies",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "An unexpected error prevented the server from fulfilling your request.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/copies/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"copies",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "The requestor is not authorized to perform this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/copies/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"copies",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								}
							]
						},
						{
							"name": "Get copy logs by ID.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/copies/:id/logs?page=1&pageSize=100&filter=<string>&orderby=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"copies",
										":id",
										"logs"
									],
									"query": [
										{
											"key": "page",
											"value": "1",
											"description": "The page number to be returned. Must not be less than 1. See Tutorials - Page the List Result."
										},
										{
											"key": "pageSize",
											"value": "100",
											"description": "The number of resources to be returned. Must not be less than 1. See Tutorials - Page the List Result."
										},
										{
											"key": "filter",
											"value": "<string>",
											"description": "The filter string that is expressed using PowerProtect Data Manager filter syntax. See Tutorials - Filter the List Result."
										},
										{
											"key": "orderby",
											"value": "<string>",
											"description": "The attributes/fields to be sorted by. This parameter can combine with sort direction \"ASC\" or \"DESC\". Default direction is ASC. See Tutorials - Sort the List Result."
										}
									],
									"variable": [
										{
											"id": "84c53cca-ec85-4964-a69c-1e525b0a4112",
											"key": "id",
											"value": "<string>",
											"type": "string",
											"description": "(Required) ID of the copy."
										}
									]
								},
								"description": "Retrieves copy logs by ID. The parameter ID is the ID of a full copy. It returns BAD_REQUEST if parameter ID is invalid.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
							},
							"response": [
								{
									"name": "An unexpected error prevented the server from fulfilling your request.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/copies/:id/logs?page=1&pageSize=100&filter=<string>&orderby=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"copies",
												":id",
												"logs"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "<string>"
												},
												{
													"key": "orderby",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "The requestor is not allowed to perform this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/copies/:id/logs?page=1&pageSize=100&filter=<string>&orderby=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"copies",
												":id",
												"logs"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "<string>"
												},
												{
													"key": "orderby",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "The request is not valid.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/copies/:id/logs?page=1&pageSize=100&filter=<string>&orderby=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"copies",
												":id",
												"logs"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "<string>"
												},
												{
													"key": "orderby",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "Successfully returned copy logs.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/copies/:id/logs?page=1&pageSize=100&filter=<string>&orderby=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"copies",
												":id",
												"logs"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "<string>"
												},
												{
													"key": "orderby",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"content\": [\n  {\n   \"date\": \"1965-11-15T23:11:53.971Z\",\n   \"id\": \"occaecat voluptate Ut aliquip id\",\n   \"partialCopy\": false,\n   \"partialCopyDescription\": \"ea Duis id\",\n   \"sizeBytes\": -95597274\n  },\n  {\n   \"date\": \"1973-04-05T19:55:54.242Z\",\n   \"id\": \"Lorem qui\",\n   \"partialCopy\": false,\n   \"partialCopyDescription\": \"consequat aute\",\n   \"sizeBytes\": -19854553\n  }\n ],\n \"page\": {\n  \"number\": -12021708,\n  \"queryState\": \"eiusmod magna elit commodo\",\n  \"size\": -97627673,\n  \"totalElements\": 20021906,\n  \"totalPages\": -74598802\n }\n}"
								},
								{
									"name": "The requestor is not authorized to perform this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/copies/:id/logs?page=1&pageSize=100&filter=<string>&orderby=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"copies",
												":id",
												"logs"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "<string>"
												},
												{
													"key": "orderby",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "credentials",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Delete credential by ID.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/credentials/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"credentials",
												":id"
											],
											"variable": [
												{
													"id": "efc41da0-9b1d-4068-a1e8-46c68bb2bdbe",
													"key": "id",
													"value": "<string>",
													"type": "string",
													"description": "(Required) ID of the credential."
												}
											]
										},
										"description": "Deletes a **Credential** by ID from PowerProtect Data Manager. The deleted **Credential** is removed from PowerProtect Data Manager.\n> This endpoint supports execution by the following roles: admin\n"
									},
									"response": [
										{
											"name": "Successfully deleted the credential.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/credentials/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"credentials",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The request is not valid.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/credentials/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"credentials",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The requestor is not allowed to perform this operation.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/credentials/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"credentials",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/credentials/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"credentials",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/credentials/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"credentials",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										}
									]
								},
								{
									"name": "Get a credential by ID.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/credentials/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"credentials",
												":id"
											],
											"variable": [
												{
													"id": "8e600665-78a0-4a4f-a8fa-497c3b44124e",
													"key": "id",
													"value": "<string>",
													"type": "string",
													"description": "(Required) ID of the credential."
												}
											]
										},
										"description": "Retrieves a **Credential** by ID. **Credential** contains username and password. The password is securely stored in the lockbox of PowerProtect Data Manager.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
									},
									"response": [
										{
											"name": "The requestor is not allowed to perform this operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/credentials/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"credentials",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The requested credential does not exist.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/credentials/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"credentials",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Successfully returned the credential.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/credentials/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"credentials",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"name\": \"ex elit\",\n \"username\": \"non consequat\",\n \"password\": \"in id\",\n \"type\": \"RMAN\",\n \"id\": \"ipsum dolor enim id\",\n \"internal\": false,\n \"method\": \"USER_KEY\",\n \"secretId\": \"Excepteur elit\"\n}"
										},
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/credentials/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"credentials",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/credentials/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"credentials",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The request is not valid.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/credentials/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"credentials",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										}
									]
								},
								{
									"name": "Update credential by ID.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"<string>\",\n    \"username\": \"<string>\",\n    \"password\": \"<string>\",\n    \"type\": \"<string>\",\n    \"id\": \"<string>\",\n    \"internal\": \"<boolean>\",\n    \"method\": \"<string>\"\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/credentials/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"credentials",
												":id"
											],
											"variable": [
												{
													"id": "1f3b3bf3-b46b-478a-96aa-7b1b9a9fec15",
													"key": "id",
													"value": "<string>",
													"type": "string",
													"description": "(Required) ID of the credential."
												}
											]
										},
										"description": "Updates a **Credential** by ID. **Credential** contains username and password. The password is securely stored in the lockbox of PowerProtect Data Manager.\n> This endpoint supports execution by the following roles: admin\n"
									},
									"response": [
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"<string>\",\n    \"username\": \"<string>\",\n    \"password\": \"<string>\",\n    \"type\": \"<string>\",\n    \"id\": \"<string>\",\n    \"internal\": \"<boolean>\",\n    \"method\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/credentials/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"credentials",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The requestor is not allowed to perform this operation.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"<string>\",\n    \"username\": \"<string>\",\n    \"password\": \"<string>\",\n    \"type\": \"<string>\",\n    \"id\": \"<string>\",\n    \"internal\": \"<boolean>\",\n    \"method\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/credentials/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"credentials",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"<string>\",\n    \"username\": \"<string>\",\n    \"password\": \"<string>\",\n    \"type\": \"<string>\",\n    \"id\": \"<string>\",\n    \"internal\": \"<boolean>\",\n    \"method\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/credentials/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"credentials",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The request is not valid.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"<string>\",\n    \"username\": \"<string>\",\n    \"password\": \"<string>\",\n    \"type\": \"<string>\",\n    \"id\": \"<string>\",\n    \"internal\": \"<boolean>\",\n    \"method\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/credentials/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"credentials",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "Successfully updated the credential.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"<string>\",\n    \"username\": \"<string>\",\n    \"password\": \"<string>\",\n    \"type\": \"<string>\",\n    \"id\": \"<string>\",\n    \"internal\": \"<boolean>\",\n    \"method\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/credentials/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"credentials",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"name\": \"ex elit\",\n \"username\": \"non consequat\",\n \"password\": \"in id\",\n \"type\": \"RMAN\",\n \"id\": \"ipsum dolor enim id\",\n \"internal\": false,\n \"method\": \"USER_KEY\",\n \"secretId\": \"Excepteur elit\"\n}"
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Get all credentials.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/credentials?page=1&pageSize=100&filter=<string>&orderby=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"credentials"
									],
									"query": [
										{
											"key": "page",
											"value": "1",
											"description": "The page number to be returned. Must not be less than 1. See Tutorials - Page the List Result."
										},
										{
											"key": "pageSize",
											"value": "100",
											"description": "The number of resources to be returned. Must not be less than 1. See Tutorials - Page the List Result."
										},
										{
											"key": "filter",
											"value": "<string>",
											"description": "The filter string that is expressed using PowerProtect Data Manager filter syntax. See Tutorials - Filter the List Result."
										},
										{
											"key": "orderby",
											"value": "<string>",
											"description": "The attributes/fields to be sorted by. This parameter can combine with sort direction \"ASC\" or \"DESC\". Default direction is ASC. See Tutorials - Sort the List Result."
										}
									]
								},
								"description": "Retrieves all **Credentials** in PowerProtect Data Manager. **Credentials** contains username and password or token. The password is securely stored in the lockbox of PowerProtect Data Manager.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
							},
							"response": [
								{
									"name": "Successfully returned available credentials.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/credentials?page=1&pageSize=100&filter=<string>&orderby=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"credentials"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "<string>"
												},
												{
													"key": "orderby",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"content\": [\n  {\n   \"name\": \"nisi laborum adipisicing mollit\",\n   \"username\": \"labore veni\",\n   \"password\": \"aliqua adipisicing mollit\",\n   \"type\": \"CDR\",\n   \"id\": \"sit ad ea sed\",\n   \"internal\": true,\n   \"method\": \"CONFIG\",\n   \"secretId\": \"minim consectetur id\"\n  },\n  {\n   \"name\": \"consectetur\",\n   \"username\": \"nulla\",\n   \"password\": \"nulla aliquip\",\n   \"type\": \"DDBOOST\",\n   \"id\": \"ullamco cupidatat labore\",\n   \"internal\": false,\n   \"method\": \"BASIC\",\n   \"secretId\": \"mollit non\"\n  }\n ],\n \"page\": {\n  \"number\": -34406034,\n  \"queryState\": \"Lorem fugiat\",\n  \"size\": 77080782,\n  \"totalElements\": 94758229,\n  \"totalPages\": 49534920\n }\n}"
								},
								{
									"name": "The request is not valid.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/credentials?page=1&pageSize=100&filter=<string>&orderby=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"credentials"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "<string>"
												},
												{
													"key": "orderby",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "The requestor is not authorized to perform this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/credentials?page=1&pageSize=100&filter=<string>&orderby=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"credentials"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "<string>"
												},
												{
													"key": "orderby",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "The requestor is not allowed to perform this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/credentials?page=1&pageSize=100&filter=<string>&orderby=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"credentials"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "<string>"
												},
												{
													"key": "orderby",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "An unexpected error prevented the server from fulfilling your request.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/credentials?page=1&pageSize=100&filter=<string>&orderby=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"credentials"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "<string>"
												},
												{
													"key": "orderby",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								}
							]
						},
						{
							"name": "Create a credential.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<string>\",\n    \"username\": \"<string>\",\n    \"password\": \"<string>\",\n    \"type\": \"<string>\",\n    \"id\": \"<string>\",\n    \"internal\": \"<boolean>\",\n    \"method\": \"<string>\"\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/credentials",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"credentials"
									]
								},
								"description": "Creates a **Credential** in PowerProtect Data Manager. **Credential** contains username and password. The password is securely stored in the lockbox of PowerProtect Data Manager.\n> This endpoint supports execution by the following roles: admin\n"
							},
							"response": [
								{
									"name": "The requestor is not authorized to perform this operation.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"<string>\",\n    \"username\": \"<string>\",\n    \"password\": \"<string>\",\n    \"type\": \"<string>\",\n    \"id\": \"<string>\",\n    \"internal\": \"<boolean>\",\n    \"method\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/credentials",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"credentials"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "Successfully created the credential.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"<string>\",\n    \"username\": \"<string>\",\n    \"password\": \"<string>\",\n    \"type\": \"<string>\",\n    \"id\": \"<string>\",\n    \"internal\": \"<boolean>\",\n    \"method\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/credentials",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"credentials"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"name\": \"ex elit\",\n \"username\": \"non consequat\",\n \"password\": \"in id\",\n \"type\": \"RMAN\",\n \"id\": \"ipsum dolor enim id\",\n \"internal\": false,\n \"method\": \"USER_KEY\",\n \"secretId\": \"Excepteur elit\"\n}"
								},
								{
									"name": "Successful operation.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"<string>\",\n    \"username\": \"<string>\",\n    \"password\": \"<string>\",\n    \"type\": \"<string>\",\n    \"id\": \"<string>\",\n    \"internal\": \"<boolean>\",\n    \"method\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/credentials",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"credentials"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"name\": \"ex elit\",\n \"username\": \"non consequat\",\n \"password\": \"in id\",\n \"type\": \"RMAN\",\n \"id\": \"ipsum dolor enim id\",\n \"internal\": false,\n \"method\": \"USER_KEY\",\n \"secretId\": \"Excepteur elit\"\n}"
								},
								{
									"name": "An unexpected error prevented the server from fulfilling your request.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"<string>\",\n    \"username\": \"<string>\",\n    \"password\": \"<string>\",\n    \"type\": \"<string>\",\n    \"id\": \"<string>\",\n    \"internal\": \"<boolean>\",\n    \"method\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/credentials",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"credentials"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "The requestor is not allowed to perform this operation.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"<string>\",\n    \"username\": \"<string>\",\n    \"password\": \"<string>\",\n    \"type\": \"<string>\",\n    \"id\": \"<string>\",\n    \"internal\": \"<boolean>\",\n    \"method\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/credentials",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"credentials"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "The request is not valid.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"<string>\",\n    \"username\": \"<string>\",\n    \"password\": \"<string>\",\n    \"type\": \"<string>\",\n    \"id\": \"<string>\",\n    \"internal\": \"<boolean>\",\n    \"method\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/credentials",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"credentials"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "data-targets",
					"item": [
						{
							"name": "Get all data targets.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/data-targets?page=1&pageSize=100&filter=<string>&orderby=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"data-targets"
									],
									"query": [
										{
											"key": "page",
											"value": "1",
											"description": "The page number to be returned. Must not be less than 1. See Tutorials - Page the List Result."
										},
										{
											"key": "pageSize",
											"value": "100",
											"description": "The number of resources to be returned. Must not be less than 1. See Tutorials - Page the List Result."
										},
										{
											"key": "filter",
											"value": "<string>",
											"description": "The filter string that is expressed using PowerProtect Data Manager filter syntax. See Tutorials - Filter the List Result."
										},
										{
											"key": "orderby",
											"value": "<string>",
											"description": "The attributes/fields to be sorted by. This parameter can combine with sort direction \"ASC\" or \"DESC\". Default direction is ASC. See Tutorials - Sort the List Result."
										}
									]
								},
								"description": "Retrieves all data targets. These data targets are automatically generated by storage systems. This API request returns a list of data targets.  An empty list is returned if there are no data sources. Filtering is supported for asterisked properties. Paging is supported.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
							},
							"response": [
								{
									"name": "The request completed successfully.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/data-targets?page=1&pageSize=100&filter=<string>&orderby=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"data-targets"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "<string>"
												},
												{
													"key": "orderby",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"details\": {\n  \"replica\": false\n },\n \"externalId\": \"irure sunt amet dolor\",\n \"id\": \"culpa\",\n \"lastDiscovered\": \"1983-05-05T17:31:25.193Z\",\n \"lastDiscoveryStatus\": \"DELETED\",\n \"name\": \"mollit dolor\",\n \"storageArrayId\": \"sunt cupidatat culpa\",\n \"subtype\": \"DDV_DISK_SERVICE\",\n \"type\": \"DR\",\n \"vendor\": \"XTREMIO\"\n}"
								},
								{
									"name": "The request is not valid.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/data-targets?page=1&pageSize=100&filter=<string>&orderby=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"data-targets"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "<string>"
												},
												{
													"key": "orderby",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "An unexpected error prevented the server from fulfilling your request.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/data-targets?page=1&pageSize=100&filter=<string>&orderby=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"data-targets"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "<string>"
												},
												{
													"key": "orderby",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "The requestor is not allowed to perform this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/data-targets?page=1&pageSize=100&filter=<string>&orderby=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"data-targets"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "<string>"
												},
												{
													"key": "orderby",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "The requestor is not authorized to perform this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/data-targets?page=1&pageSize=100&filter=<string>&orderby=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"data-targets"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "<string>"
												},
												{
													"key": "orderby",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								}
							]
						},
						{
							"name": "Get a data target by ID.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/data-targets/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"data-targets",
										":id"
									],
									"variable": [
										{
											"id": "1ecda7d4-a64c-42d4-abab-033e2dbd546c",
											"key": "id",
											"value": "<string>",
											"type": "string",
											"description": "(Required) id of the data target"
										}
									]
								},
								"description": "Retrieves a data target by its ID. This API request returns a data target. If the data target ID does not exist, 404 is returned.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
							},
							"response": [
								{
									"name": "An unexpected error prevented the server from fulfilling your request.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/data-targets/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"data-targets",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "The requestor is not allowed to perform this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/data-targets/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"data-targets",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "The requested resource was not found.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/data-targets/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"data-targets",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "The requestor is not authorized to perform this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/data-targets/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"data-targets",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "The request completed successfully.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/data-targets/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"data-targets",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"details\": {\n  \"replica\": false\n },\n \"externalId\": \"irure sunt amet dolor\",\n \"id\": \"culpa\",\n \"lastDiscovered\": \"1983-05-05T17:31:25.193Z\",\n \"lastDiscoveryStatus\": \"DELETED\",\n \"name\": \"mollit dolor\",\n \"storageArrayId\": \"sunt cupidatat culpa\",\n \"subtype\": \"DDV_DISK_SERVICE\",\n \"type\": \"DR\",\n \"vendor\": \"XTREMIO\"\n}"
								},
								{
									"name": "The request is not valid.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/data-targets/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"data-targets",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "datadomain-ddboost-encryption-settings",
					"item": [
						{
							"name": "Get Data Domain system encryption setting.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/datadomain-ddboost-encryption-settings?hostname=<string>&port=<integer>&type=<string>&credentialId=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"datadomain-ddboost-encryption-settings"
									],
									"query": [
										{
											"key": "hostname",
											"value": "<string>",
											"description": "(Required) The hostname."
										},
										{
											"key": "port",
											"value": "<integer>",
											"description": "(Required) The port number."
										},
										{
											"key": "type",
											"value": "<string>",
											"description": "(Required) The encrytion type."
										},
										{
											"key": "credentialId",
											"value": "<string>",
											"description": "(Required) The credential ID."
										}
									]
								},
								"description": "Retrieves Data Domain system encryption setting information of the specified Data Domain system or PowerProtect Data Manager. The result contains the authentication mode and the encryption strength information.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
							},
							"response": [
								{
									"name": "The requestor is not allowed to perform this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/datadomain-ddboost-encryption-settings?hostname=<string>&port=<integer>&type=<string>&credentialId=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"datadomain-ddboost-encryption-settings"
											],
											"query": [
												{
													"key": "hostname",
													"value": "<string>"
												},
												{
													"key": "port",
													"value": "<integer>"
												},
												{
													"key": "type",
													"value": "<string>"
												},
												{
													"key": "credentialId",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "The request completed successfully.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/datadomain-ddboost-encryption-settings?hostname=<string>&port=<integer>&type=<string>&credentialId=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"datadomain-ddboost-encryption-settings"
											],
											"query": [
												{
													"key": "hostname",
													"value": "<string>"
												},
												{
													"key": "port",
													"value": "<integer>"
												},
												{
													"key": "type",
													"value": "<string>"
												},
												{
													"key": "credentialId",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"ddboostOptions\": {\n  \"globalAuthenticationMode\": \"tempor\",\n  \"globalEncryptionStrength\": \"incididunt mollit\"\n },\n \"hostname\": \"proident\",\n \"replicationOptions\": {\n  \"authenticationMode\": \"officia su\",\n  \"encryption\": \"velit voluptate\"\n }\n}"
								},
								{
									"name": "The requestor is not authorized to perform this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/datadomain-ddboost-encryption-settings?hostname=<string>&port=<integer>&type=<string>&credentialId=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"datadomain-ddboost-encryption-settings"
											],
											"query": [
												{
													"key": "hostname",
													"value": "<string>"
												},
												{
													"key": "port",
													"value": "<integer>"
												},
												{
													"key": "type",
													"value": "<string>"
												},
												{
													"key": "credentialId",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "An unexpected error prevented the server from fulfilling your request.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/datadomain-ddboost-encryption-settings?hostname=<string>&port=<integer>&type=<string>&credentialId=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"datadomain-ddboost-encryption-settings"
											],
											"query": [
												{
													"key": "hostname",
													"value": "<string>"
												},
												{
													"key": "port",
													"value": "<integer>"
												},
												{
													"key": "type",
													"value": "<string>"
												},
												{
													"key": "credentialId",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "The request is not valid.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/datadomain-ddboost-encryption-settings?hostname=<string>&port=<integer>&type=<string>&credentialId=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"datadomain-ddboost-encryption-settings"
											],
											"query": [
												{
													"key": "hostname",
													"value": "<string>"
												},
												{
													"key": "port",
													"value": "<integer>"
												},
												{
													"key": "type",
													"value": "<string>"
												},
												{
													"key": "credentialId",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Update Data Domain system encryption setting.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"ddboostOptions\": {\n        \"globalAuthenticationMode\": \"<string>\",\n        \"globalEncryptionStrength\": \"<string>\"\n    },\n    \"hostname\": \"<string>\",\n    \"replicationOptions\": {\n        \"authenticationMode\": \"<string>\",\n        \"encryption\": \"<string>\"\n    }\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/datadomain-ddboost-encryption-settings",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"datadomain-ddboost-encryption-settings"
									]
								},
								"description": "Updates Data Domain system encryption setting of the local PowerProtect Data Manager. The encryption settings will be updated on the local Intergrated Storage system.\n> This endpoint supports execution by the following roles: admin\n"
							},
							"response": [
								{
									"name": "An unexpected error prevented the server from fulfilling your request.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"ddboostOptions\": {\n        \"globalAuthenticationMode\": \"<string>\",\n        \"globalEncryptionStrength\": \"<string>\"\n    },\n    \"hostname\": \"<string>\",\n    \"replicationOptions\": {\n        \"authenticationMode\": \"<string>\",\n        \"encryption\": \"<string>\"\n    }\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/datadomain-ddboost-encryption-settings",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"datadomain-ddboost-encryption-settings"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "The requestor is not allowed to perform this operation.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"ddboostOptions\": {\n        \"globalAuthenticationMode\": \"<string>\",\n        \"globalEncryptionStrength\": \"<string>\"\n    },\n    \"hostname\": \"<string>\",\n    \"replicationOptions\": {\n        \"authenticationMode\": \"<string>\",\n        \"encryption\": \"<string>\"\n    }\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/datadomain-ddboost-encryption-settings",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"datadomain-ddboost-encryption-settings"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "The request is not valid.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"ddboostOptions\": {\n        \"globalAuthenticationMode\": \"<string>\",\n        \"globalEncryptionStrength\": \"<string>\"\n    },\n    \"hostname\": \"<string>\",\n    \"replicationOptions\": {\n        \"authenticationMode\": \"<string>\",\n        \"encryption\": \"<string>\"\n    }\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/datadomain-ddboost-encryption-settings",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"datadomain-ddboost-encryption-settings"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "The requestor is not authorized to perform this operation.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"ddboostOptions\": {\n        \"globalAuthenticationMode\": \"<string>\",\n        \"globalEncryptionStrength\": \"<string>\"\n    },\n    \"hostname\": \"<string>\",\n    \"replicationOptions\": {\n        \"authenticationMode\": \"<string>\",\n        \"encryption\": \"<string>\"\n    }\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/datadomain-ddboost-encryption-settings",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"datadomain-ddboost-encryption-settings"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "The request completed successfully.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"ddboostOptions\": {\n        \"globalAuthenticationMode\": \"<string>\",\n        \"globalEncryptionStrength\": \"<string>\"\n    },\n    \"hostname\": \"<string>\",\n    \"replicationOptions\": {\n        \"authenticationMode\": \"<string>\",\n        \"encryption\": \"<string>\"\n    }\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/datadomain-ddboost-encryption-settings",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"datadomain-ddboost-encryption-settings"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"ddboostOptions\": {\n  \"globalAuthenticationMode\": \"tempor\",\n  \"globalEncryptionStrength\": \"incididunt mollit\"\n },\n \"hostname\": \"proident\",\n \"replicationOptions\": {\n  \"authenticationMode\": \"officia su\",\n  \"encryption\": \"velit voluptate\"\n }\n}"
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "discoveries",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Delete a discovery by ID.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/discoveries/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"discoveries",
												":id"
											],
											"variable": [
												{
													"id": "08118c5c-705d-475a-95e6-ec96a012b3a1",
													"key": "id",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The UUID of the internal discovery model stored in Elasticsearch."
												}
											]
										},
										"description": "Deletes a discovery that is identified by a specified ID. If the discovery that is identified by the specified ID is already running, the API returns an error with HTTP status code 409 (CONFLICT). If the discovery is deleted successfully, this API returns the HTTP status code 204 (NO CONTENT).\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
									},
									"response": [
										{
											"name": "A similar discovery request is currently processing.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/discoveries/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"discoveries",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Conflict",
											"code": 409,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Any server error that prevented the completion of the request.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/discoveries/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"discoveries",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/discoveries/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"discoveries",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "Successfully deleted the discovery.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/discoveries/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"discoveries",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The request is not valid.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/discoveries/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"discoveries",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The requestor is not authenticated to perform this operation.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/discoveries/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"discoveries",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										}
									]
								},
								{
									"name": "Update a discovery by ID.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"start\": \"<string>\",\n    \"description\": \"<string>\",\n    \"id\": \"<string>\",\n    \"level\": \"DataCopies\",\n    \"name\": \"<string>\",\n    \"schedule\": {\n        \"enabled\": false,\n        \"startHour\": 2,\n        \"startMinute\": 0\n    },\n    \"taskId\": \"<string>\"\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/discoveries/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"discoveries",
												":id"
											],
											"variable": [
												{
													"id": "28b05c63-7dd7-470e-a6c8-449945fadba2",
													"key": "id",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The UUID of the internal discovery model stored in Elasticsearch."
												}
											]
										},
										"description": "Updates a discovery that is identified by a specified ID. Use this API to update the scheduled start time (hour and minute) when a discovery re-runs each day or set whether that scheduled discovery is enabled. If the server is in the quiesce state before a backup, the API returns the HTTP status code 503 (SERVICE UNAVAILABLE). If the discovery is updated successfully, the API returns the HTTP status code 200 (OK).\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
									},
									"response": [
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"start\": \"<string>\",\n    \"description\": \"<string>\",\n    \"id\": \"<string>\",\n    \"level\": \"DataCopies\",\n    \"name\": \"<string>\",\n    \"schedule\": {\n        \"enabled\": false,\n        \"startHour\": 2,\n        \"startMinute\": 0\n    },\n    \"taskId\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/discoveries/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"discoveries",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "Successfully updated the discovery.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"start\": \"<string>\",\n    \"description\": \"<string>\",\n    \"id\": \"<string>\",\n    \"level\": \"DataCopies\",\n    \"name\": \"<string>\",\n    \"schedule\": {\n        \"enabled\": false,\n        \"startHour\": 2,\n        \"startMinute\": 0\n    },\n    \"taskId\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/discoveries/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"discoveries",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"start\": \"et magna sit\",\n \"description\": \"ex laborum pariatur\",\n \"id\": \"aute in\",\n \"level\": \"DataCopies\",\n \"name\": \"officia minim in est dolor\",\n \"schedule\": {\n  \"enabled\": false,\n  \"startHour\": 2,\n  \"startMinute\": 0\n },\n \"taskId\": \"magna culpa amet dolore\"\n}"
										},
										{
											"name": "The requestor is not authenticated to perform this operation.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"start\": \"<string>\",\n    \"description\": \"<string>\",\n    \"id\": \"<string>\",\n    \"level\": \"DataCopies\",\n    \"name\": \"<string>\",\n    \"schedule\": {\n        \"enabled\": false,\n        \"startHour\": 2,\n        \"startMinute\": 0\n    },\n    \"taskId\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/discoveries/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"discoveries",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "Server in quiesce state prior to a backup.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"start\": \"<string>\",\n    \"description\": \"<string>\",\n    \"id\": \"<string>\",\n    \"level\": \"DataCopies\",\n    \"name\": \"<string>\",\n    \"schedule\": {\n        \"enabled\": false,\n        \"startHour\": 2,\n        \"startMinute\": 0\n    },\n    \"taskId\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/discoveries/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"discoveries",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Service Unavailable",
											"code": 503,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The request is not valid.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"start\": \"<string>\",\n    \"description\": \"<string>\",\n    \"id\": \"<string>\",\n    \"level\": \"DataCopies\",\n    \"name\": \"<string>\",\n    \"schedule\": {\n        \"enabled\": false,\n        \"startHour\": 2,\n        \"startMinute\": 0\n    },\n    \"taskId\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/discoveries/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"discoveries",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "Any server error that prevented the completion of the request.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"start\": \"<string>\",\n    \"description\": \"<string>\",\n    \"id\": \"<string>\",\n    \"level\": \"DataCopies\",\n    \"name\": \"<string>\",\n    \"schedule\": {\n        \"enabled\": false,\n        \"startHour\": 2,\n        \"startMinute\": 0\n    },\n    \"taskId\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/discoveries/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"discoveries",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Get all discoveries.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/discoveries?page=1&pageSize=100&filter=<string>&orderby=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"discoveries"
									],
									"query": [
										{
											"key": "page",
											"value": "1",
											"description": "The page number to be returned. Must not be less than 1. See Tutorials - Page the List Result."
										},
										{
											"key": "pageSize",
											"value": "100",
											"description": "The number of resources to be returned. Must not be less than 1. See Tutorials - Page the List Result."
										},
										{
											"key": "filter",
											"value": "<string>",
											"description": "The filter string that is expressed using PowerProtect Data Manager filter syntax. See Tutorials - Filter the List Result."
										},
										{
											"key": "orderby",
											"value": "<string>",
											"description": "The attributes/fields to be sorted by. This parameter can combine with sort direction \"ASC\" or \"DESC\". Default direction is ASC. See Tutorials - Sort the List Result."
										}
									]
								},
								"description": "Retrieves a paginated list of discoveries. You can specify the page number and the page size by using **page** and **pageSize** query parameters respectively. By default, a list of all discovery objects is returned. This API also supports a **filter** query parameter that returns discovery objects that match a specified set of conditions. This API supports an **orderby** query parameter to specify how the returned list of discovery objects is sorted. When successful, the API returns the HTTP status code 200 (OK).\n\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n\n> This endpoint supports pagination with types: random\n"
							},
							"response": [
								{
									"name": "Any server error that prevented the completion of the request.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/discoveries?page=1&pageSize=100&filter=<string>&orderby=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"discoveries"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "<string>"
												},
												{
													"key": "orderby",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "Successfully returned known discoveries.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/discoveries?page=1&pageSize=100&filter=<string>&orderby=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"discoveries"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "<string>"
												},
												{
													"key": "orderby",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"content\": [\n  {\n   \"start\": \"qui\",\n   \"description\": \"Lorem ipsum\",\n   \"id\": \"cupidatat dolor commodo dolore\",\n   \"level\": \"DataCopies\",\n   \"name\": \"laboris\",\n   \"schedule\": {\n    \"enabled\": false,\n    \"startHour\": 2,\n    \"startMinute\": 0\n   },\n   \"taskId\": \"velit dolor voluptate\"\n  },\n  {\n   \"start\": \"minim sunt\",\n   \"description\": \"dolor enim anim\",\n   \"id\": \"id ut\",\n   \"level\": \"DataCopies\",\n   \"name\": \"aute sunt et laboris\",\n   \"schedule\": {\n    \"enabled\": false,\n    \"startHour\": 2,\n    \"startMinute\": 0\n   },\n   \"taskId\": \"nostrud ea\"\n  }\n ],\n \"page\": {\n  \"number\": -29388703,\n  \"queryState\": \"eiusmod anim quis\",\n  \"size\": -40459584,\n  \"totalElements\": -40089018,\n  \"totalPages\": -64078457\n }\n}"
								},
								{
									"name": "The requestor is not authorized to perform this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/discoveries?page=1&pageSize=100&filter=<string>&orderby=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"discoveries"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "<string>"
												},
												{
													"key": "orderby",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "The requestor is not authenticated to perform this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/discoveries?page=1&pageSize=100&filter=<string>&orderby=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"discoveries"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "<string>"
												},
												{
													"key": "orderby",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								}
							]
						},
						{
							"name": "Request a discovery.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"start\": \"<string>\",\n    \"description\": \"<string>\",\n    \"id\": \"<string>\",\n    \"level\": \"DataCopies\",\n    \"name\": \"<string>\",\n    \"schedule\": {\n        \"enabled\": false,\n        \"startHour\": 2,\n        \"startMinute\": 0\n    },\n    \"taskId\": \"<string>\"\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/discoveries",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"discoveries"
									]
								},
								"description": "Runs a discovery that is identified by a specified **start** value. If the discovery that is identified by the specified **start** value is already running, the API returns an error with HTTP status code 409 (CONFLICT). If the discovery starts successfully, the API returns the HTTP status code 202 (ACCEPTED).\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
							},
							"response": [
								{
									"name": "Successfully accepted the discovery request.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"start\": \"<string>\",\n    \"description\": \"<string>\",\n    \"id\": \"<string>\",\n    \"level\": \"DataCopies\",\n    \"name\": \"<string>\",\n    \"schedule\": {\n        \"enabled\": false,\n        \"startHour\": 2,\n        \"startMinute\": 0\n    },\n    \"taskId\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/discoveries",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"discoveries"
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"start\": \"et magna sit\",\n \"description\": \"ex laborum pariatur\",\n \"id\": \"aute in\",\n \"level\": \"DataCopies\",\n \"name\": \"officia minim in est dolor\",\n \"schedule\": {\n  \"enabled\": false,\n  \"startHour\": 2,\n  \"startMinute\": 0\n },\n \"taskId\": \"magna culpa amet dolore\"\n}"
								},
								{
									"name": "The request is not valid.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"start\": \"<string>\",\n    \"description\": \"<string>\",\n    \"id\": \"<string>\",\n    \"level\": \"DataCopies\",\n    \"name\": \"<string>\",\n    \"schedule\": {\n        \"enabled\": false,\n        \"startHour\": 2,\n        \"startMinute\": 0\n    },\n    \"taskId\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/discoveries",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"discoveries"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "A similar discovery request is currently processing.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"start\": \"<string>\",\n    \"description\": \"<string>\",\n    \"id\": \"<string>\",\n    \"level\": \"DataCopies\",\n    \"name\": \"<string>\",\n    \"schedule\": {\n        \"enabled\": false,\n        \"startHour\": 2,\n        \"startMinute\": 0\n    },\n    \"taskId\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/discoveries",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"discoveries"
											]
										}
									},
									"status": "Conflict",
									"code": 409,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "The requestor is not authorized to perform this operation.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"start\": \"<string>\",\n    \"description\": \"<string>\",\n    \"id\": \"<string>\",\n    \"level\": \"DataCopies\",\n    \"name\": \"<string>\",\n    \"schedule\": {\n        \"enabled\": false,\n        \"startHour\": 2,\n        \"startMinute\": 0\n    },\n    \"taskId\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/discoveries",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"discoveries"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "The requestor is not authenticated to perform this operation.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"start\": \"<string>\",\n    \"description\": \"<string>\",\n    \"id\": \"<string>\",\n    \"level\": \"DataCopies\",\n    \"name\": \"<string>\",\n    \"schedule\": {\n        \"enabled\": false,\n        \"startHour\": 2,\n        \"startMinute\": 0\n    },\n    \"taskId\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/discoveries",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"discoveries"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "Any server error that prevented the completion of the request.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"start\": \"<string>\",\n    \"description\": \"<string>\",\n    \"id\": \"<string>\",\n    \"level\": \"DataCopies\",\n    \"name\": \"<string>\",\n    \"schedule\": {\n        \"enabled\": false,\n        \"startHour\": 2,\n        \"startMinute\": 0\n    },\n    \"taskId\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/discoveries",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"discoveries"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "disks",
					"item": [
						{
							"name": "Get all disks in the appliance.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/disks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"disks"
									]
								},
								"description": "Retrieves all disks in the appliance.\n> This endpoint supports execution by the following roles: admin, user, export and recovery admin\n"
							},
							"response": [
								{
									"name": "Located and returned the available disks successfully.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/disks",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"disks"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"content\": [\n  {\n   \"availableSize\": 35544174,\n   \"id\": \"est dolor dolore dolore\",\n   \"name\": \"sint nisi\",\n   \"nodeId\": \"dolore quis nulla\",\n   \"partitions\": [\n    {\n     \"availableSize\": 1127265,\n     \"fileSystem\": \"dolor o\",\n     \"mount\": \"ut voluptate aliquip Ut\",\n     \"name\": \"consequat qui id in\",\n     \"totalSize\": 18566670\n    },\n    {\n     \"availableSize\": -3934255,\n     \"fileSystem\": \"deserunt magna aliquip sed\",\n     \"mount\": \"proident qui\",\n     \"name\": \"dolore\",\n     \"totalSize\": -35150330\n    }\n   ],\n   \"totalSize\": -5283338\n  },\n  {\n   \"availableSize\": 37391063,\n   \"id\": \"enim dolor officia\",\n   \"name\": \"et sit non Lorem\",\n   \"nodeId\": \"ea non commodo\",\n   \"partitions\": [\n    {\n     \"availableSize\": 48446873,\n     \"fileSystem\": \"et officia in non\",\n     \"mount\": \"proident ad \",\n     \"name\": \"laboris Excepteur pariatur Duis\",\n     \"totalSize\": -80062689\n    },\n    {\n     \"availableSize\": 15303096,\n     \"fileSystem\": \"in ut consequat eu\",\n     \"mount\": \"sed quis elit ad\",\n     \"name\": \"veniam\",\n     \"totalSize\": 36835153\n    }\n   ],\n   \"totalSize\": 81061254\n  }\n ],\n \"page\": {\n  \"number\": 50304771,\n  \"queryState\": \"deserunt consequat anim sunt\",\n  \"size\": -30105943,\n  \"totalElements\": 76058885,\n  \"totalPages\": 66834113\n }\n}"
								},
								{
									"name": "An unexpected error prevented the server from fulfilling your request.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/disks",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"disks"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "The requestor is not allowed to perform this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/disks",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"disks"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Filter syntax is not valid.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/disks",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"disks"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get disk by ID.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/disks/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"disks",
										":id"
									],
									"variable": [
										{
											"id": "fe0b4bac-be60-4404-b994-ef8d17873940",
											"key": "id",
											"value": "<string>",
											"type": "string",
											"description": "(Required) Disk ID."
										}
									]
								},
								"description": "Retrieves a disk by ID.\n> This endpoint supports execution by the following roles: admin, user, export and recovery admin\n"
							},
							"response": [
								{
									"name": "Cannot find a disk with the specified ID.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/disks/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"disks",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "The requestor is not allowed to perform this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/disks/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"disks",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "An unexpected error prevented the server from fulfilling your request.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/disks/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"disks",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Found and returned the disk with the specified ID.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/disks/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"disks",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"availableSize\": -79555104,\n \"id\": \"cupidatat culpa\",\n \"name\": \"nostrud nulla magna\",\n \"nodeId\": \"esse occaecat in\",\n \"partitions\": [\n  {\n   \"availableSize\": -49744091,\n   \"fileSystem\": \"cillum non magna officia\",\n   \"mount\": \"minim enim nisi Ut exercitation\",\n   \"name\": \"mollit est aliqua\",\n   \"totalSize\": 8054422\n  },\n  {\n   \"availableSize\": -44636169,\n   \"fileSystem\": \"in veniam\",\n   \"mount\": \"aute occaecat\",\n   \"name\": \"quis labore dolore fugiat nisi\",\n   \"totalSize\": -39200448\n  }\n ],\n \"totalSize\": -57943516\n}"
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "dynamic-filters",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Delete dynamic filter by ID.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/dynamic-filters/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"dynamic-filters",
												":id"
											],
											"variable": [
												{
													"id": "4603ac6c-0a07-452f-991b-b4fee00a9d89",
													"key": "id",
													"value": "<string>",
													"type": "string",
													"description": "(Required) ID of the dynamic filter."
												}
											]
										},
										"description": "Deletes dynamic filter by specified ID.\n> This endpoint supports execution by the following roles: admin\n"
									},
									"response": [
										{
											"name": "The requestor is not allowed to perform this operation.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/dynamic-filters/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"dynamic-filters",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "Successfully deleted the dynamic filter.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/dynamic-filters/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"dynamic-filters",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/dynamic-filters/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"dynamic-filters",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/dynamic-filters/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"dynamic-filters",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The request is not valid.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/dynamic-filters/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"dynamic-filters",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										}
									]
								},
								{
									"name": "Get a dynamic filter by ID.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/dynamic-filters/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"dynamic-filters",
												":id"
											],
											"variable": [
												{
													"id": "97a55c55-b941-4333-ad5a-94ca32276b32",
													"key": "id",
													"value": "<string>",
													"type": "string",
													"description": "(Required) ID of the dynamic filter."
												}
											]
										},
										"description": "Retrieves a dynamic filter by ID.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
									},
									"response": [
										{
											"name": "The requestor is not allowed to perform this operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/dynamic-filters/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"dynamic-filters",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The requested dynamic filter does not exist.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/dynamic-filters/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"dynamic-filters",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Successfully returned the dynamic filter.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/dynamic-filters/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"dynamic-filters",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"name\": \"nulla enim\",\n \"action\": \"MOVE_TO_GROUP\",\n \"actionResult\": \"ut laborum\",\n \"conditions\": [\n  {\n   \"inclusionIndicator\": \"BEGINS_WITH\",\n   \"inventorySourceAttribute\": \"culpa ipsum ad commodo\",\n   \"inventorySourceAttributeCompareValue\": \"magna\"\n  },\n  {\n   \"inclusionIndicator\": \"LESS_THAN\",\n   \"inventorySourceAttribute\": \"Lorem culpa elit deserunt nulla\",\n   \"inventorySourceAttributeCompareValue\": \"nulla elit dolore est\"\n  }\n ],\n \"conditionConnector\": \"AND\",\n \"inventorySourceType\": \"MICROSOFT_SQL_DATABASE\",\n \"priority\": -52478585,\n \"_embedded\": {\n  \"protectionPolicy\": {\n   \"id\": \"quis magna officia do\",\n   \"name\": \"consectetur\",\n   \"protectionEngine\": \"enim ut est fugiat\",\n   \"type\": \"n\"\n  },\n  \"protectionlifeCycle\": {\n   \"id\": \"sunt quis\",\n   \"name\": \"irure elit deserunt\",\n   \"protectionEngine\": \"ad Duis\",\n   \"type\": \"velit qui\"\n  },\n  \"storageSystem\": {\n   \"id\": \"dolor in Excepteur sit\",\n   \"name\": \"esse minim\"\n  }\n },\n \"assignedAssetsCount\": 9158082,\n \"description\": \"sunt et veniam culpa in\",\n \"displayDescription\": \"ut\",\n \"id\": \"ipsum nostrud reprehenderit\",\n \"lastRunAt\": \"1979-04-30T15:19:34.435Z\",\n \"managedBy\": \"null\",\n \"tenant\": {\n  \"id\": \"ullamco Ut\"\n }\n}"
										},
										{
											"name": "The request is not valid.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/dynamic-filters/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"dynamic-filters",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/dynamic-filters/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"dynamic-filters",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/dynamic-filters/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"dynamic-filters",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										}
									]
								},
								{
									"name": "Update dynamic filter by ID.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"<string>\",\n    \"action\": \"<string>\",\n    \"actionResult\": \"<string>\",\n    \"conditions\": [\n        {\n            \"inclusionIndicator\": \"<string>\",\n            \"inventorySourceAttribute\": \"<string>\",\n            \"inventorySourceAttributeCompareValue\": \"<string>\"\n        },\n        {\n            \"inclusionIndicator\": \"<string>\",\n            \"inventorySourceAttribute\": \"<string>\",\n            \"inventorySourceAttributeCompareValue\": \"<string>\"\n        }\n    ],\n    \"conditionConnector\": \"<string>\",\n    \"inventorySourceType\": \"<string>\",\n    \"priority\": \"<integer>\",\n    \"assignedAssetsCount\": \"<integer>\",\n    \"description\": \"<string>\",\n    \"displayDescription\": \"<string>\",\n    \"id\": \"<string>\",\n    \"lastRunAt\": \"<dateTime>\",\n    \"managedBy\": \"null\",\n    \"tenant\": {\n        \"id\": \"<string>\"\n    }\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/dynamic-filters/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"dynamic-filters",
												":id"
											],
											"variable": [
												{
													"id": "c867ee83-314d-4b0a-aa4f-e459945d7fab",
													"key": "id",
													"value": "<string>",
													"type": "string",
													"description": "(Required) ID of the dynamic filter."
												}
											]
										},
										"description": "Update dynamic filter by ID.\n> This endpoint supports execution by the following roles: admin\n"
									},
									"response": [
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"<string>\",\n    \"action\": \"<string>\",\n    \"actionResult\": \"<string>\",\n    \"conditions\": [\n        {\n            \"inclusionIndicator\": \"<string>\",\n            \"inventorySourceAttribute\": \"<string>\",\n            \"inventorySourceAttributeCompareValue\": \"<string>\"\n        },\n        {\n            \"inclusionIndicator\": \"<string>\",\n            \"inventorySourceAttribute\": \"<string>\",\n            \"inventorySourceAttributeCompareValue\": \"<string>\"\n        }\n    ],\n    \"conditionConnector\": \"<string>\",\n    \"inventorySourceType\": \"<string>\",\n    \"priority\": \"<integer>\",\n    \"assignedAssetsCount\": \"<integer>\",\n    \"description\": \"<string>\",\n    \"displayDescription\": \"<string>\",\n    \"id\": \"<string>\",\n    \"lastRunAt\": \"<dateTime>\",\n    \"managedBy\": \"null\",\n    \"tenant\": {\n        \"id\": \"<string>\"\n    }\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/dynamic-filters/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"dynamic-filters",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The requestor is not allowed to perform this operation.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"<string>\",\n    \"action\": \"<string>\",\n    \"actionResult\": \"<string>\",\n    \"conditions\": [\n        {\n            \"inclusionIndicator\": \"<string>\",\n            \"inventorySourceAttribute\": \"<string>\",\n            \"inventorySourceAttributeCompareValue\": \"<string>\"\n        },\n        {\n            \"inclusionIndicator\": \"<string>\",\n            \"inventorySourceAttribute\": \"<string>\",\n            \"inventorySourceAttributeCompareValue\": \"<string>\"\n        }\n    ],\n    \"conditionConnector\": \"<string>\",\n    \"inventorySourceType\": \"<string>\",\n    \"priority\": \"<integer>\",\n    \"assignedAssetsCount\": \"<integer>\",\n    \"description\": \"<string>\",\n    \"displayDescription\": \"<string>\",\n    \"id\": \"<string>\",\n    \"lastRunAt\": \"<dateTime>\",\n    \"managedBy\": \"null\",\n    \"tenant\": {\n        \"id\": \"<string>\"\n    }\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/dynamic-filters/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"dynamic-filters",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"<string>\",\n    \"action\": \"<string>\",\n    \"actionResult\": \"<string>\",\n    \"conditions\": [\n        {\n            \"inclusionIndicator\": \"<string>\",\n            \"inventorySourceAttribute\": \"<string>\",\n            \"inventorySourceAttributeCompareValue\": \"<string>\"\n        },\n        {\n            \"inclusionIndicator\": \"<string>\",\n            \"inventorySourceAttribute\": \"<string>\",\n            \"inventorySourceAttributeCompareValue\": \"<string>\"\n        }\n    ],\n    \"conditionConnector\": \"<string>\",\n    \"inventorySourceType\": \"<string>\",\n    \"priority\": \"<integer>\",\n    \"assignedAssetsCount\": \"<integer>\",\n    \"description\": \"<string>\",\n    \"displayDescription\": \"<string>\",\n    \"id\": \"<string>\",\n    \"lastRunAt\": \"<dateTime>\",\n    \"managedBy\": \"null\",\n    \"tenant\": {\n        \"id\": \"<string>\"\n    }\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/dynamic-filters/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"dynamic-filters",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "Successfully updated the dynamic filter.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"<string>\",\n    \"action\": \"<string>\",\n    \"actionResult\": \"<string>\",\n    \"conditions\": [\n        {\n            \"inclusionIndicator\": \"<string>\",\n            \"inventorySourceAttribute\": \"<string>\",\n            \"inventorySourceAttributeCompareValue\": \"<string>\"\n        },\n        {\n            \"inclusionIndicator\": \"<string>\",\n            \"inventorySourceAttribute\": \"<string>\",\n            \"inventorySourceAttributeCompareValue\": \"<string>\"\n        }\n    ],\n    \"conditionConnector\": \"<string>\",\n    \"inventorySourceType\": \"<string>\",\n    \"priority\": \"<integer>\",\n    \"assignedAssetsCount\": \"<integer>\",\n    \"description\": \"<string>\",\n    \"displayDescription\": \"<string>\",\n    \"id\": \"<string>\",\n    \"lastRunAt\": \"<dateTime>\",\n    \"managedBy\": \"null\",\n    \"tenant\": {\n        \"id\": \"<string>\"\n    }\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/dynamic-filters/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"dynamic-filters",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"name\": \"nulla enim\",\n \"action\": \"MOVE_TO_GROUP\",\n \"actionResult\": \"ut laborum\",\n \"conditions\": [\n  {\n   \"inclusionIndicator\": \"BEGINS_WITH\",\n   \"inventorySourceAttribute\": \"culpa ipsum ad commodo\",\n   \"inventorySourceAttributeCompareValue\": \"magna\"\n  },\n  {\n   \"inclusionIndicator\": \"LESS_THAN\",\n   \"inventorySourceAttribute\": \"Lorem culpa elit deserunt nulla\",\n   \"inventorySourceAttributeCompareValue\": \"nulla elit dolore est\"\n  }\n ],\n \"conditionConnector\": \"AND\",\n \"inventorySourceType\": \"MICROSOFT_SQL_DATABASE\",\n \"priority\": -52478585,\n \"_embedded\": {\n  \"protectionPolicy\": {\n   \"id\": \"quis magna officia do\",\n   \"name\": \"consectetur\",\n   \"protectionEngine\": \"enim ut est fugiat\",\n   \"type\": \"n\"\n  },\n  \"protectionlifeCycle\": {\n   \"id\": \"sunt quis\",\n   \"name\": \"irure elit deserunt\",\n   \"protectionEngine\": \"ad Duis\",\n   \"type\": \"velit qui\"\n  },\n  \"storageSystem\": {\n   \"id\": \"dolor in Excepteur sit\",\n   \"name\": \"esse minim\"\n  }\n },\n \"assignedAssetsCount\": 9158082,\n \"description\": \"sunt et veniam culpa in\",\n \"displayDescription\": \"ut\",\n \"id\": \"ipsum nostrud reprehenderit\",\n \"lastRunAt\": \"1979-04-30T15:19:34.435Z\",\n \"managedBy\": \"null\",\n \"tenant\": {\n  \"id\": \"ullamco Ut\"\n }\n}"
										},
										{
											"name": "The request is not valid.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"<string>\",\n    \"action\": \"<string>\",\n    \"actionResult\": \"<string>\",\n    \"conditions\": [\n        {\n            \"inclusionIndicator\": \"<string>\",\n            \"inventorySourceAttribute\": \"<string>\",\n            \"inventorySourceAttributeCompareValue\": \"<string>\"\n        },\n        {\n            \"inclusionIndicator\": \"<string>\",\n            \"inventorySourceAttribute\": \"<string>\",\n            \"inventorySourceAttributeCompareValue\": \"<string>\"\n        }\n    ],\n    \"conditionConnector\": \"<string>\",\n    \"inventorySourceType\": \"<string>\",\n    \"priority\": \"<integer>\",\n    \"assignedAssetsCount\": \"<integer>\",\n    \"description\": \"<string>\",\n    \"displayDescription\": \"<string>\",\n    \"id\": \"<string>\",\n    \"lastRunAt\": \"<dateTime>\",\n    \"managedBy\": \"null\",\n    \"tenant\": {\n        \"id\": \"<string>\"\n    }\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/dynamic-filters/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"dynamic-filters",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Get all dynamic filters.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/dynamic-filters?page=1&pageSize=100&filter=<string>&orderby=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"dynamic-filters"
									],
									"query": [
										{
											"key": "page",
											"value": "1",
											"description": "The page number to be returned. Must not be less than 1. See Tutorials - Page the List Result."
										},
										{
											"key": "pageSize",
											"value": "100",
											"description": "The number of resources to be returned. Must not be less than 1. See Tutorials - Page the List Result."
										},
										{
											"key": "filter",
											"value": "<string>",
											"description": "The filter string that is expressed using PowerProtect Data Manager filter syntax. See Tutorials - Filter the List Result."
										},
										{
											"key": "orderby",
											"value": "<string>",
											"description": "The attributes/fields to be sorted by. This parameter can combine with sort direction \"ASC\" or \"DESC\". Default direction is ASC. See Tutorials - Sort the List Result."
										}
									]
								},
								"description": "Retrieves all dynamic filters\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
							},
							"response": [
								{
									"name": "The request is not valid.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/dynamic-filters?page=1&pageSize=100&filter=<string>&orderby=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"dynamic-filters"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "<string>"
												},
												{
													"key": "orderby",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "The requestor is not authorized to perform this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/dynamic-filters?page=1&pageSize=100&filter=<string>&orderby=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"dynamic-filters"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "<string>"
												},
												{
													"key": "orderby",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "Successfully returned available dynamic filters.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/dynamic-filters?page=1&pageSize=100&filter=<string>&orderby=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"dynamic-filters"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "<string>"
												},
												{
													"key": "orderby",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"content\": [\n  {\n   \"name\": \"qui cillum\",\n   \"action\": \"NOT_SUPPORTED\",\n   \"actionResult\": \"pariatur deserunt dolore\",\n   \"conditions\": [\n    {\n     \"inclusionIndicator\": \"ENDS_WITH\",\n     \"inventorySourceAttribute\": \"reprehenderit est\",\n     \"inventorySourceAttributeCompareValue\": \"ullamco eu\"\n    },\n    {\n     \"inclusionIndicator\": \"BEGINS_WITH\",\n     \"inventorySourceAttribute\": \"incididunt eiusmod aliquip\",\n     \"inventorySourceAttributeCompareValue\": \"\"\n    }\n   ],\n   \"conditionConnector\": \"AND\",\n   \"inventorySourceType\": \"MICROSOFT_EXCHANGE_DATABASE\",\n   \"priority\": 81116914,\n   \"_embedded\": {\n    \"protectionPolicy\": {\n     \"id\": \"aliqua consequat\",\n     \"name\": \"tempor reprehenderit Ut ad\",\n     \"protectionEngine\": \"deserunt reprehenderit\",\n     \"type\": \"ven\"\n    },\n    \"protectionlifeCycle\": {\n     \"id\": \"ex exercitation mollit id\",\n     \"name\": \"exercitation do consectetur\",\n     \"protectionEngine\": \"id commodo sed quis\",\n     \"type\": \"deserunt enim\"\n    },\n    \"storageSystem\": {\n     \"id\": \"in et irure voluptate velit\",\n     \"name\": \"consectetur\"\n    }\n   },\n   \"assignedAssetsCount\": 43801243,\n   \"description\": \"sed ullamco\",\n   \"displayDescription\": \"reprehenderit culpa\",\n   \"id\": \"labore Duis\",\n   \"lastRunAt\": \"1993-05-17T10:38:47.446Z\",\n   \"managedBy\": \"null\",\n   \"tenant\": {\n    \"id\": \"laborum ea est adipisicing nostrud\"\n   }\n  },\n  {\n   \"name\": \"elit consectetur veniam\",\n   \"action\": \"NOT_SUPPORTED\",\n   \"actionResult\": \"magna nulla\",\n   \"conditions\": [\n    {\n     \"inclusionIndicator\": \"GREATER_THAN\",\n     \"inventorySourceAttribute\": \"cupidatat nisi consectetur in aute\",\n     \"inventorySourceAttributeCompareValue\": \"ea eiusmod in\"\n    },\n    {\n     \"inclusionIndicator\": \"LESS_THAN\",\n     \"inventorySourceAttribute\": \"Ut et labore Excepteur\",\n     \"inventorySourceAttributeCompareValue\": \"ad irure elit\"\n    }\n   ],\n   \"conditionConnector\": \"AND\",\n   \"inventorySourceType\": \"VMAX_STORAGE_GROUP\",\n   \"priority\": 1493360,\n   \"_embedded\": {\n    \"protectionPolicy\": {\n     \"id\": \"ut ullamco exercitation magna\",\n     \"name\": \"mollit consequat Excepteur\",\n     \"protectionEngine\": \"reprehenderit Ut dolor in ad\",\n     \"type\": \"eu dolor\"\n    },\n    \"protectionlifeCycle\": {\n     \"id\": \"ea cillum enim\",\n     \"name\": \"Lorem fugiat commodo\",\n     \"protectionEngine\": \"esse ea proident nisi\",\n     \"type\": \"sed anim do officia\"\n    },\n    \"storageSystem\": {\n     \"id\": \"sed laboris culpa magna\",\n     \"name\": \"Excepteur ad sint\"\n    }\n   },\n   \"assignedAssetsCount\": -46409327,\n   \"description\": \"culpa velit anim\",\n   \"displayDescription\": \"ut\",\n   \"id\": \"ut fugiat labore\",\n   \"lastRunAt\": \"1973-02-23T00:22:44.964Z\",\n   \"managedBy\": \"null\",\n   \"tenant\": {\n    \"id\": \"qui esse consectetur\"\n   }\n  }\n ],\n \"page\": {\n  \"number\": -88061678,\n  \"queryState\": \"deserunt incididunt\",\n  \"size\": -55121168,\n  \"totalElements\": -67956679,\n  \"totalPages\": -37947037\n }\n}"
								},
								{
									"name": "The requestor is not allowed to perform this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/dynamic-filters?page=1&pageSize=100&filter=<string>&orderby=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"dynamic-filters"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "<string>"
												},
												{
													"key": "orderby",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "An unexpected error prevented the server from fulfilling your request.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/dynamic-filters?page=1&pageSize=100&filter=<string>&orderby=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"dynamic-filters"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "<string>"
												},
												{
													"key": "orderby",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								}
							]
						},
						{
							"name": "Create a dynamic filter.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<string>\",\n    \"action\": \"<string>\",\n    \"actionResult\": \"<string>\",\n    \"conditions\": [\n        {\n            \"inclusionIndicator\": \"<string>\",\n            \"inventorySourceAttribute\": \"<string>\",\n            \"inventorySourceAttributeCompareValue\": \"<string>\"\n        },\n        {\n            \"inclusionIndicator\": \"<string>\",\n            \"inventorySourceAttribute\": \"<string>\",\n            \"inventorySourceAttributeCompareValue\": \"<string>\"\n        }\n    ],\n    \"conditionConnector\": \"<string>\",\n    \"inventorySourceType\": \"<string>\",\n    \"priority\": \"<integer>\",\n    \"assignedAssetsCount\": \"<integer>\",\n    \"description\": \"<string>\",\n    \"displayDescription\": \"<string>\",\n    \"id\": \"<string>\",\n    \"lastRunAt\": \"<dateTime>\",\n    \"managedBy\": \"null\",\n    \"tenant\": {\n        \"id\": \"<string>\"\n    }\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/dynamic-filters",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"dynamic-filters"
									]
								},
								"description": "Create a dynamic filter.\n> This endpoint supports execution by the following roles: admin\n"
							},
							"response": [
								{
									"name": "The request is not valid.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"<string>\",\n    \"action\": \"<string>\",\n    \"actionResult\": \"<string>\",\n    \"conditions\": [\n        {\n            \"inclusionIndicator\": \"<string>\",\n            \"inventorySourceAttribute\": \"<string>\",\n            \"inventorySourceAttributeCompareValue\": \"<string>\"\n        },\n        {\n            \"inclusionIndicator\": \"<string>\",\n            \"inventorySourceAttribute\": \"<string>\",\n            \"inventorySourceAttributeCompareValue\": \"<string>\"\n        }\n    ],\n    \"conditionConnector\": \"<string>\",\n    \"inventorySourceType\": \"<string>\",\n    \"priority\": \"<integer>\",\n    \"assignedAssetsCount\": \"<integer>\",\n    \"description\": \"<string>\",\n    \"displayDescription\": \"<string>\",\n    \"id\": \"<string>\",\n    \"lastRunAt\": \"<dateTime>\",\n    \"managedBy\": \"null\",\n    \"tenant\": {\n        \"id\": \"<string>\"\n    }\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/dynamic-filters",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"dynamic-filters"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "The requestor is not allowed to perform this operation.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"<string>\",\n    \"action\": \"<string>\",\n    \"actionResult\": \"<string>\",\n    \"conditions\": [\n        {\n            \"inclusionIndicator\": \"<string>\",\n            \"inventorySourceAttribute\": \"<string>\",\n            \"inventorySourceAttributeCompareValue\": \"<string>\"\n        },\n        {\n            \"inclusionIndicator\": \"<string>\",\n            \"inventorySourceAttribute\": \"<string>\",\n            \"inventorySourceAttributeCompareValue\": \"<string>\"\n        }\n    ],\n    \"conditionConnector\": \"<string>\",\n    \"inventorySourceType\": \"<string>\",\n    \"priority\": \"<integer>\",\n    \"assignedAssetsCount\": \"<integer>\",\n    \"description\": \"<string>\",\n    \"displayDescription\": \"<string>\",\n    \"id\": \"<string>\",\n    \"lastRunAt\": \"<dateTime>\",\n    \"managedBy\": \"null\",\n    \"tenant\": {\n        \"id\": \"<string>\"\n    }\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/dynamic-filters",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"dynamic-filters"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "Successful operation. ",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"<string>\",\n    \"action\": \"<string>\",\n    \"actionResult\": \"<string>\",\n    \"conditions\": [\n        {\n            \"inclusionIndicator\": \"<string>\",\n            \"inventorySourceAttribute\": \"<string>\",\n            \"inventorySourceAttributeCompareValue\": \"<string>\"\n        },\n        {\n            \"inclusionIndicator\": \"<string>\",\n            \"inventorySourceAttribute\": \"<string>\",\n            \"inventorySourceAttributeCompareValue\": \"<string>\"\n        }\n    ],\n    \"conditionConnector\": \"<string>\",\n    \"inventorySourceType\": \"<string>\",\n    \"priority\": \"<integer>\",\n    \"assignedAssetsCount\": \"<integer>\",\n    \"description\": \"<string>\",\n    \"displayDescription\": \"<string>\",\n    \"id\": \"<string>\",\n    \"lastRunAt\": \"<dateTime>\",\n    \"managedBy\": \"null\",\n    \"tenant\": {\n        \"id\": \"<string>\"\n    }\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/dynamic-filters",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"dynamic-filters"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"name\": \"nulla enim\",\n \"action\": \"MOVE_TO_GROUP\",\n \"actionResult\": \"ut laborum\",\n \"conditions\": [\n  {\n   \"inclusionIndicator\": \"BEGINS_WITH\",\n   \"inventorySourceAttribute\": \"culpa ipsum ad commodo\",\n   \"inventorySourceAttributeCompareValue\": \"magna\"\n  },\n  {\n   \"inclusionIndicator\": \"LESS_THAN\",\n   \"inventorySourceAttribute\": \"Lorem culpa elit deserunt nulla\",\n   \"inventorySourceAttributeCompareValue\": \"nulla elit dolore est\"\n  }\n ],\n \"conditionConnector\": \"AND\",\n \"inventorySourceType\": \"MICROSOFT_SQL_DATABASE\",\n \"priority\": -52478585,\n \"_embedded\": {\n  \"protectionPolicy\": {\n   \"id\": \"quis magna officia do\",\n   \"name\": \"consectetur\",\n   \"protectionEngine\": \"enim ut est fugiat\",\n   \"type\": \"n\"\n  },\n  \"protectionlifeCycle\": {\n   \"id\": \"sunt quis\",\n   \"name\": \"irure elit deserunt\",\n   \"protectionEngine\": \"ad Duis\",\n   \"type\": \"velit qui\"\n  },\n  \"storageSystem\": {\n   \"id\": \"dolor in Excepteur sit\",\n   \"name\": \"esse minim\"\n  }\n },\n \"assignedAssetsCount\": 9158082,\n \"description\": \"sunt et veniam culpa in\",\n \"displayDescription\": \"ut\",\n \"id\": \"ipsum nostrud reprehenderit\",\n \"lastRunAt\": \"1979-04-30T15:19:34.435Z\",\n \"managedBy\": \"null\",\n \"tenant\": {\n  \"id\": \"ullamco Ut\"\n }\n}"
								},
								{
									"name": "An unexpected error prevented the server from fulfilling your request.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"<string>\",\n    \"action\": \"<string>\",\n    \"actionResult\": \"<string>\",\n    \"conditions\": [\n        {\n            \"inclusionIndicator\": \"<string>\",\n            \"inventorySourceAttribute\": \"<string>\",\n            \"inventorySourceAttributeCompareValue\": \"<string>\"\n        },\n        {\n            \"inclusionIndicator\": \"<string>\",\n            \"inventorySourceAttribute\": \"<string>\",\n            \"inventorySourceAttributeCompareValue\": \"<string>\"\n        }\n    ],\n    \"conditionConnector\": \"<string>\",\n    \"inventorySourceType\": \"<string>\",\n    \"priority\": \"<integer>\",\n    \"assignedAssetsCount\": \"<integer>\",\n    \"description\": \"<string>\",\n    \"displayDescription\": \"<string>\",\n    \"id\": \"<string>\",\n    \"lastRunAt\": \"<dateTime>\",\n    \"managedBy\": \"null\",\n    \"tenant\": {\n        \"id\": \"<string>\"\n    }\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/dynamic-filters",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"dynamic-filters"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "Successfully created the dynamic filter.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"<string>\",\n    \"action\": \"<string>\",\n    \"actionResult\": \"<string>\",\n    \"conditions\": [\n        {\n            \"inclusionIndicator\": \"<string>\",\n            \"inventorySourceAttribute\": \"<string>\",\n            \"inventorySourceAttributeCompareValue\": \"<string>\"\n        },\n        {\n            \"inclusionIndicator\": \"<string>\",\n            \"inventorySourceAttribute\": \"<string>\",\n            \"inventorySourceAttributeCompareValue\": \"<string>\"\n        }\n    ],\n    \"conditionConnector\": \"<string>\",\n    \"inventorySourceType\": \"<string>\",\n    \"priority\": \"<integer>\",\n    \"assignedAssetsCount\": \"<integer>\",\n    \"description\": \"<string>\",\n    \"displayDescription\": \"<string>\",\n    \"id\": \"<string>\",\n    \"lastRunAt\": \"<dateTime>\",\n    \"managedBy\": \"null\",\n    \"tenant\": {\n        \"id\": \"<string>\"\n    }\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/dynamic-filters",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"dynamic-filters"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"name\": \"nulla enim\",\n \"action\": \"MOVE_TO_GROUP\",\n \"actionResult\": \"ut laborum\",\n \"conditions\": [\n  {\n   \"inclusionIndicator\": \"BEGINS_WITH\",\n   \"inventorySourceAttribute\": \"culpa ipsum ad commodo\",\n   \"inventorySourceAttributeCompareValue\": \"magna\"\n  },\n  {\n   \"inclusionIndicator\": \"LESS_THAN\",\n   \"inventorySourceAttribute\": \"Lorem culpa elit deserunt nulla\",\n   \"inventorySourceAttributeCompareValue\": \"nulla elit dolore est\"\n  }\n ],\n \"conditionConnector\": \"AND\",\n \"inventorySourceType\": \"MICROSOFT_SQL_DATABASE\",\n \"priority\": -52478585,\n \"_embedded\": {\n  \"protectionPolicy\": {\n   \"id\": \"quis magna officia do\",\n   \"name\": \"consectetur\",\n   \"protectionEngine\": \"enim ut est fugiat\",\n   \"type\": \"n\"\n  },\n  \"protectionlifeCycle\": {\n   \"id\": \"sunt quis\",\n   \"name\": \"irure elit deserunt\",\n   \"protectionEngine\": \"ad Duis\",\n   \"type\": \"velit qui\"\n  },\n  \"storageSystem\": {\n   \"id\": \"dolor in Excepteur sit\",\n   \"name\": \"esse minim\"\n  }\n },\n \"assignedAssetsCount\": 9158082,\n \"description\": \"sunt et veniam culpa in\",\n \"displayDescription\": \"ut\",\n \"id\": \"ipsum nostrud reprehenderit\",\n \"lastRunAt\": \"1979-04-30T15:19:34.435Z\",\n \"managedBy\": \"null\",\n \"tenant\": {\n  \"id\": \"ullamco Ut\"\n }\n}"
								},
								{
									"name": "The requestor is not authorized to perform this operation.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"<string>\",\n    \"action\": \"<string>\",\n    \"actionResult\": \"<string>\",\n    \"conditions\": [\n        {\n            \"inclusionIndicator\": \"<string>\",\n            \"inventorySourceAttribute\": \"<string>\",\n            \"inventorySourceAttributeCompareValue\": \"<string>\"\n        },\n        {\n            \"inclusionIndicator\": \"<string>\",\n            \"inventorySourceAttribute\": \"<string>\",\n            \"inventorySourceAttributeCompareValue\": \"<string>\"\n        }\n    ],\n    \"conditionConnector\": \"<string>\",\n    \"inventorySourceType\": \"<string>\",\n    \"priority\": \"<integer>\",\n    \"assignedAssetsCount\": \"<integer>\",\n    \"description\": \"<string>\",\n    \"displayDescription\": \"<string>\",\n    \"id\": \"<string>\",\n    \"lastRunAt\": \"<dateTime>\",\n    \"managedBy\": \"null\",\n    \"tenant\": {\n        \"id\": \"<string>\"\n    }\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/dynamic-filters",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"dynamic-filters"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "eulas",
					"item": [
						{
							"name": "PPDM",
							"item": [
								{
									"name": "Get PowerProtect Data Manager EULA.",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/eulas/PPDM",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"eulas",
												"PPDM"
											]
										},
										"description": "Retrieves the current PowerProtect Data Manager end user license agreement (EULA).\n> This endpoint supports execution by the following roles: admin, user, export and recovery admin\n"
									},
									"response": [
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/v2/eulas/PPDM",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"eulas",
														"PPDM"
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "Found and returned the PowerProtect Data Manager EULA.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/v2/eulas/PPDM",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"eulas",
														"PPDM"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"accepted\": true,\n \"acceptedTime\": \"laborum ex consectetur in\",\n \"link\": \"nisi nulla ut fugiat dolore\"\n}"
										},
										{
											"name": "The requestor is not authenticated to perform this operation.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/v2/eulas/PPDM",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"eulas",
														"PPDM"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The service is unavailable.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/v2/eulas/PPDM",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"eulas",
														"PPDM"
													]
												}
											},
											"status": "Service Unavailable",
											"code": 503,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/v2/eulas/PPDM",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"eulas",
														"PPDM"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										}
									]
								},
								{
									"name": "Accept PowerProtect Data Manager EULA.",
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"accepted\": \"<boolean>\"\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/eulas/PPDM",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"eulas",
												"PPDM"
											]
										},
										"description": "Accepts PowerProtect Data Manager end user license agreement (EULA).\n> This endpoint supports execution by the following roles: admin\n"
									},
									"response": [
										{
											"name": "The submitted settings payload has a syntax error.",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"accepted\": \"<boolean>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/eulas/PPDM",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"eulas",
														"PPDM"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The service is unavailable.",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"accepted\": \"<boolean>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/eulas/PPDM",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"eulas",
														"PPDM"
													]
												}
											},
											"status": "Service Unavailable",
											"code": 503,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The requestor is not authenticated to perform this operation.",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"accepted\": \"<boolean>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/eulas/PPDM",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"eulas",
														"PPDM"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "Successfully updated the PowerProtect Data Manager EULA.",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"accepted\": \"<boolean>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/eulas/PPDM",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"eulas",
														"PPDM"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"accepted\": true,\n \"acceptedTime\": \"laborum ex consectetur in\",\n \"link\": \"nisi nulla ut fugiat dolore\"\n}"
										},
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"accepted\": \"<boolean>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/eulas/PPDM",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"eulas",
														"PPDM"
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "Required fields are missing in the request payload.",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"accepted\": \"<boolean>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/eulas/PPDM",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"eulas",
														"PPDM"
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"accepted\": \"<boolean>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/eulas/PPDM",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"eulas",
														"PPDM"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "TELEMETRY",
							"item": [
								{
									"name": "Get telemetry EULA.",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/eulas/TELEMETRY",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"eulas",
												"TELEMETRY"
											]
										},
										"description": "Retrieves the current telemetry end user license agreement (EULA).\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
									},
									"response": [
										{
											"name": "The service is unavailable.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/v2/eulas/TELEMETRY",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"eulas",
														"TELEMETRY"
													]
												}
											},
											"status": "Service Unavailable",
											"code": 503,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "Found and returned the telemetry EULA.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/v2/eulas/TELEMETRY",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"eulas",
														"TELEMETRY"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"accepted\": true,\n \"acceptedTime\": \"dolore ad ea\",\n \"link\": \"ut proident dolore nulla\"\n}"
										},
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/v2/eulas/TELEMETRY",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"eulas",
														"TELEMETRY"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/v2/eulas/TELEMETRY",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"eulas",
														"TELEMETRY"
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The requestor is not authenticated to perform this operation.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/v2/eulas/TELEMETRY",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"eulas",
														"TELEMETRY"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										}
									]
								},
								{
									"name": "Accept telemetry EULA.",
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"accepted\": \"<boolean>\"\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/eulas/TELEMETRY",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"eulas",
												"TELEMETRY"
											]
										},
										"description": "Accepts telemetry end user license agreement (EULA).\n> This endpoint supports execution by the following roles: admin\n"
									},
									"response": [
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"accepted\": \"<boolean>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/eulas/TELEMETRY",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"eulas",
														"TELEMETRY"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The service is unavailable.",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"accepted\": \"<boolean>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/eulas/TELEMETRY",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"eulas",
														"TELEMETRY"
													]
												}
											},
											"status": "Service Unavailable",
											"code": 503,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "Successfully updated the telemetry EULA.",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"accepted\": \"<boolean>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/eulas/TELEMETRY",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"eulas",
														"TELEMETRY"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"accepted\": true,\n \"acceptedTime\": \"dolore ad ea\",\n \"link\": \"ut proident dolore nulla\"\n}"
										},
										{
											"name": "The requestor is not authenticated to perform this operation.",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"accepted\": \"<boolean>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/eulas/TELEMETRY",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"eulas",
														"TELEMETRY"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The submitted settings payload has a syntax error.",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"accepted\": \"<boolean>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/eulas/TELEMETRY",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"eulas",
														"TELEMETRY"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "Required fields are missing in the request payload.",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"accepted\": \"<boolean>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/eulas/TELEMETRY",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"eulas",
														"TELEMETRY"
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"accepted\": \"<boolean>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/eulas/TELEMETRY",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"eulas",
														"TELEMETRY"
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "exported-copies",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Delete an exported copy by ID.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/exported-copies/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"exported-copies",
												":id"
											],
											"variable": [
												{
													"id": "bda53f29-b394-41cd-9cd7-94b25f820bf4",
													"key": "id",
													"value": "<string>",
													"type": "string",
													"description": "(Required) ID of exported copy."
												}
											]
										},
										"description": "Deletes an exported copy by parameter ID. This API request defines which copy is already mounted.\n> This endpoint supports execution by the following roles: admin,export-and-recovery-admin\n"
									},
									"response": [
										{
											"name": "Successfully initiated deletion of the exported copy.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/exported-copies/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"exported-copies",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{}"
										},
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/exported-copies/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"exported-copies",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/exported-copies/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"exported-copies",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The requestor is not allowed to perform this operation.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/exported-copies/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"exported-copies",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The request is not valid.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/exported-copies/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"exported-copies",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Get an exported copy by ID.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/exported-copies/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"exported-copies",
												":id"
											],
											"variable": [
												{
													"id": "11e795ab-5cb2-47ea-8858-58e17bc11c92",
													"key": "id",
													"value": "<string>",
													"type": "string",
													"description": "(Required) ID of copy."
												}
											]
										},
										"description": "Retrieves an exported copy by parameter ID. This API request defines which copy is already mounted. Exported copies are deleted after use.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
									},
									"response": [
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/exported-copies/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"exported-copies",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The request is not valid.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/exported-copies/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"exported-copies",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The requested exported copies do not exist.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/exported-copies/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"exported-copies",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Any server error that prevented the completion of the request.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/exported-copies/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"exported-copies",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The requestor is not authenticated to perform this operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/exported-copies/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"exported-copies",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "Successfully returned the exported copies.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/exported-copies/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"exported-copies",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"description\": \"in ea dolore cupid\",\n \"exportType\": \"RESTORED_COPIES\",\n \"assetId\": \"et veniam sunt\",\n \"copyId\": \"non occaecat sunt\",\n \"completionTime\": \"1986-03-16T23:51:03.454Z\",\n \"expirationTime\": \"2009-01-29T04:57:20.857Z\",\n \"exportedCopiesDetails\": {\n  \"targetExportedStorageInfo\": {\n   \"exportDevices\": [\n    \"cupidatat\",\n    \"aute proident reprehenderit sed\"\n   ],\n   \"initiatorGroups\": \"ut aute\",\n   \"lunMaps\": \"Excepteur exercitation Ut\",\n   \"restoredCopyId\": \"est\",\n   \"targetArray\": \"nisi\",\n   \"targetGroupName\": \"enim au\",\n   \"targetHosts\": [\n    \"est ea aute\",\n    \"eu laboris\"\n   ]\n  },\n  \"targetExportedVmInfo\": {\n   \"restoredCopyId\": \"\\\"4c348821-5bc7-4268-95ae-21795dcceea6\\\"\",\n   \"targetAssetId\": \"fugiat\",\n   \"targetVmName\": \"tempor\"\n  }\n },\n \"id\": \"eiusmod ex est\",\n \"startTime\": \"1988-12-18T08:47:55.376Z\",\n \"state\": \"VMOTIONING\",\n \"storageSystem\": \"dolor proident in Ut\"\n}"
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Get all exported copies.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/exported-copies?page=1&pageSize=100&filter=<string>&orderby=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"exported-copies"
									],
									"query": [
										{
											"key": "page",
											"value": "1",
											"description": "The page number to be returned. Must not be less than 1. See Tutorials - Page the List Result."
										},
										{
											"key": "pageSize",
											"value": "100",
											"description": "The number of resources to be returned. Must not be less than 1. See Tutorials - Page the List Result."
										},
										{
											"key": "filter",
											"value": "<string>",
											"description": "The filter string that is expressed using PowerProtect Data Manager filter syntax. See Tutorials - Filter the List Result."
										},
										{
											"key": "orderby",
											"value": "<string>",
											"description": "The attributes/fields to be sorted by. This parameter can combine with sort direction \"ASC\" or \"DESC\". Default direction is ASC. See Tutorials - Sort the List Result."
										}
									]
								},
								"description": "Retrieves all the exported copies. This API request defines which copy is already mounted. Exported copies are deleted after use.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n\n> This endpoint supports pagination with types: random\n"
							},
							"response": [
								{
									"name": "The requestor is not authorized to perform this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/exported-copies?page=1&pageSize=100&filter=<string>&orderby=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"exported-copies"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "<string>"
												},
												{
													"key": "orderby",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "The request is not valid.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/exported-copies?page=1&pageSize=100&filter=<string>&orderby=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"exported-copies"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "<string>"
												},
												{
													"key": "orderby",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "The requestor is not authenticated to perform this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/exported-copies?page=1&pageSize=100&filter=<string>&orderby=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"exported-copies"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "<string>"
												},
												{
													"key": "orderby",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "Any server error that prevented the completion of the request.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/exported-copies?page=1&pageSize=100&filter=<string>&orderby=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"exported-copies"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "<string>"
												},
												{
													"key": "orderby",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "Successfully returned available exported copy resources.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/exported-copies?page=1&pageSize=100&filter=<string>&orderby=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"exported-copies"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "<string>"
												},
												{
													"key": "orderby",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"content\": [\n  {\n   \"description\": \"eiusmod fugiat ullamco\",\n   \"exportType\": \"SD_EXPORT\",\n   \"assetId\": \"eu \",\n   \"copyId\": \"quis ut\",\n   \"completionTime\": \"2002-02-10T05:07:41.359Z\",\n   \"expirationTime\": \"1990-09-28T00:21:57.509Z\",\n   \"exportedCopiesDetails\": {\n    \"targetExportedStorageInfo\": {\n     \"exportDevices\": [\n      \"sit et minim\",\n      \"commodo consectetur cillum tempor\"\n     ],\n     \"initiatorGroups\": \"Duis aute enim dolore velit\",\n     \"lunMaps\": \"laboris\",\n     \"restoredCopyId\": \"esse incididunt nisi officia e\",\n     \"targetArray\": \"esse nisi repr\",\n     \"targetGroupName\": \"et quis dolor\",\n     \"targetHosts\": [\n      \"cupidatat commodo labore enim sed\",\n      \"laborum\"\n     ]\n    },\n    \"targetExportedVmInfo\": {\n     \"restoredCopyId\": \"\\\"4c348821-5bc7-4268-95ae-21795dcceea6\\\"\",\n     \"targetAssetId\": \"sint ad\",\n     \"targetVmName\": \"des\"\n    }\n   },\n   \"id\": \"Ut labore aute in\",\n   \"startTime\": \"1941-11-10T17:30:30.921Z\",\n   \"state\": \"WAITING\",\n   \"storageSystem\": \"in nulla cillum dolor ad\"\n  },\n  {\n   \"description\": \"qui in elit\",\n   \"exportType\": \"RESTORED_COPIES\",\n   \"assetId\": \"labore ad amet\",\n   \"copyId\": \"exercitation\",\n   \"completionTime\": \"1972-09-24T01:20:35.336Z\",\n   \"expirationTime\": \"1982-10-07T12:19:41.569Z\",\n   \"exportedCopiesDetails\": {\n    \"targetExportedStorageInfo\": {\n     \"exportDevices\": [\n      \"in dolor irure culpa\",\n      \"exercita\"\n     ],\n     \"initiatorGroups\": \"est ut\",\n     \"lunMaps\": \"laborum sed Ut qui\",\n     \"restoredCopyId\": \"cupidatat esse\",\n     \"targetArray\": \"sint do\",\n     \"targetGroupName\": \"dolore ut eu velit\",\n     \"targetHosts\": [\n      \"velit veniam nostrud incididunt sed\",\n      \"Lorem\"\n     ]\n    },\n    \"targetExportedVmInfo\": {\n     \"restoredCopyId\": \"\\\"4c348821-5bc7-4268-95ae-21795dcceea6\\\"\",\n     \"targetAssetId\": \"et deserunt minim\",\n     \"targetVmName\": \"qui elit cupidatat\"\n    }\n   },\n   \"id\": \"aliqua ad dolor Lorem\",\n   \"startTime\": \"2017-03-20T02:13:50.427Z\",\n   \"state\": \"VMOTIONING\",\n   \"storageSystem\": \"commodo nulla\"\n  }\n ],\n \"page\": {\n  \"number\": -57864132,\n  \"queryState\": \"sit mollit dolor\",\n  \"size\": 46328564,\n  \"totalElements\": -45468754,\n  \"totalPages\": 29634981\n }\n}"
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "external-notifications",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Delete an external notification by ID.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/external-notifications/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"external-notifications",
												":id"
											],
											"variable": [
												{
													"id": "c222c0a2-8dec-47c5-8b03-805bfadcb858",
													"key": "id",
													"value": "<string>",
													"type": "string",
													"description": "(Required) ID of the external notification resource."
												}
											]
										},
										"description": "Deletes an existing notification configuration by UUID.\n> This endpoint supports execution by the following roles: admin\n"
									},
									"response": [
										{
											"name": "Successfully returned with no content.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/external-notifications/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"external-notifications",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{}"
										},
										{
											"name": "The requestor is not authenticated to perform this operation.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/external-notifications/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"external-notifications",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The requested resource is not found.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/external-notifications/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"external-notifications",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "Any server error that prevented the completion of the request.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/external-notifications/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"external-notifications",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/external-notifications/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"external-notifications",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The request is not valid.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/external-notifications/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"external-notifications",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										}
									]
								},
								{
									"name": "Get an external notification by ID.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/external-notifications/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"external-notifications",
												":id"
											],
											"variable": [
												{
													"id": "7313b124-f2fb-46da-995f-3cc37a76b781",
													"key": "id",
													"value": "<string>",
													"type": "string",
													"description": "(Required) ID of the external notification resource."
												}
											]
										},
										"description": "Retrieves an external notification by UUID.\n> This endpoint supports execution by the following roles: admin\n"
									},
									"response": [
										{
											"name": "The requestor is not authenticated to perform this operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/external-notifications/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"external-notifications",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/external-notifications/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"external-notifications",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The requested resource is not found.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/external-notifications/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"external-notifications",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "Successfully returned the event.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/external-notifications/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"external-notifications",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"categoryList\": [\n  \"PROTECTION\",\n  \"SYSTEM\"\n ],\n \"disabled\": false,\n \"emails\": [\n  \"dominic.vu@dell.com\",\n  \"test@dell.com\"\n ],\n \"id\": \"63e7a8cf-7175-4175-b62d-d4e18a604317\",\n \"lastAlertMatchTime\": \"2019-10-25T16:20:53Z\",\n \"lastNotificationTime\": \"2019-10-25T16:20:53Z\",\n \"messageIdList\": [\n  \"ABA0005\",\n  \"SYS0006\",\n  \"ABD0005\",\n  \"ABD0002\",\n  \"SYS0007\",\n  \"ABV0003\",\n  \"ABV0002\",\n  \"ABV0005\",\n  \"SYS0004\",\n  \"SYS0008\",\n  \"ABA0002\",\n  \"ABA0003\",\n  \"ABA0004\",\n  \"SYS0001\",\n  \"ABV0004\",\n  \"ABD0004\",\n  \"ABD0003\",\n  \"ABA0006\",\n  \"CDR0003\",\n  \"CDR0002\",\n  \"UPG0047\"\n ],\n \"name\": \"Test Notification\",\n \"notificationWindow\": 60,\n \"severityList\": [\n  \"CRITICAL\"\n ],\n \"source\": {\n  \"type\": \"DATA_MANAGER\"\n },\n \"subjectOverride\": \"test mail \"\n}"
										},
										{
											"name": "The request is not valid.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/external-notifications/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"external-notifications",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "Any server error that prevented the completion of the request.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/external-notifications/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"external-notifications",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										}
									]
								},
								{
									"name": "Update external notification by ID.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"<string>\",\n    \"emails\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<string>\",\n    \"categoryList\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"disabled\": \"<boolean>\",\n    \"lastAlertMatchTime\": \"<dateTime>\",\n    \"lastNotificationTime\": \"<dateTime>\",\n    \"messageIdList\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"notificationWindow\": \"<integer>\",\n    \"severityList\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"source\": {\n        \"type\": \"<string>\"\n    },\n    \"subjectOverride\": \"<string>\"\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/external-notifications/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"external-notifications",
												":id"
											],
											"variable": [
												{
													"id": "c583ae78-d8f9-4242-8b22-03367716e476",
													"key": "id",
													"value": "<string>",
													"type": "string",
													"description": "(Required) ID of the external notification resource."
												}
											]
										},
										"description": "Updates an external notification by UUID.\n> This endpoint supports execution by the following roles: admin\n"
									},
									"response": [
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"Test Notification\",\n    \"emails\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"63e7a8cf-7175-4175-b62d-d4e18a604317\",\n    \"categoryList\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"disabled\": false,\n    \"lastAlertMatchTime\": \"2019-10-25T16:20:53Z\",\n    \"lastNotificationTime\": \"2019-10-25T16:20:53Z\",\n    \"messageIdList\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"notificationWindow\": 60,\n    \"severityList\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"source\": {\n        \"type\": \"<string>\"\n    },\n    \"subjectOverride\": \"test mail\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/external-notifications/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"external-notifications",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The request is not valid.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"Test Notification\",\n    \"emails\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"63e7a8cf-7175-4175-b62d-d4e18a604317\",\n    \"categoryList\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"disabled\": false,\n    \"lastAlertMatchTime\": \"2019-10-25T16:20:53Z\",\n    \"lastNotificationTime\": \"2019-10-25T16:20:53Z\",\n    \"messageIdList\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"notificationWindow\": 60,\n    \"severityList\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"source\": {\n        \"type\": \"<string>\"\n    },\n    \"subjectOverride\": \"test mail\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/external-notifications/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"external-notifications",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The requestor is not authenticated to perform this operation.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"Test Notification\",\n    \"emails\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"63e7a8cf-7175-4175-b62d-d4e18a604317\",\n    \"categoryList\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"disabled\": false,\n    \"lastAlertMatchTime\": \"2019-10-25T16:20:53Z\",\n    \"lastNotificationTime\": \"2019-10-25T16:20:53Z\",\n    \"messageIdList\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"notificationWindow\": 60,\n    \"severityList\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"source\": {\n        \"type\": \"<string>\"\n    },\n    \"subjectOverride\": \"test mail\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/external-notifications/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"external-notifications",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Resource updated.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"Test Notification\",\n    \"emails\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"63e7a8cf-7175-4175-b62d-d4e18a604317\",\n    \"categoryList\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"disabled\": false,\n    \"lastAlertMatchTime\": \"2019-10-25T16:20:53Z\",\n    \"lastNotificationTime\": \"2019-10-25T16:20:53Z\",\n    \"messageIdList\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"notificationWindow\": 60,\n    \"severityList\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"source\": {\n        \"type\": \"<string>\"\n    },\n    \"subjectOverride\": \"test mail\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/external-notifications/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"external-notifications",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"categoryList\": [\n  \"PROTECTION\",\n  \"SYSTEM\"\n ],\n \"disabled\": false,\n \"emails\": [\n  \"test@dell.com\"\n ],\n \"id\": \"069ffa5b-5c88-4529-b5eb-054f2bee651d\",\n \"lastAlertMatchTime\": \"2019-10-25T19:41:14Z\",\n \"lastNotificationTime\": \"2019-10-25T19:41:14Z\",\n \"messageIdList\": [\n  \"ABA0005\",\n  \"SYS0006\",\n  \"ABD0005\",\n  \"ABD0002\",\n  \"SYS0007\",\n  \"ABV0003\",\n  \"ABV0002\",\n  \"ABV0005\",\n  \"SYS0004\",\n  \"SYS0008\",\n  \"ABA0002\",\n  \"ABA0003\",\n  \"ABA0004\",\n  \"SYS0001\",\n  \"ABV0004\",\n  \"ABD0004\",\n  \"ABD0003\",\n  \"ABA0006\",\n  \"CDR0003\",\n  \"CDR0002\",\n  \"UPG0047\"\n ],\n \"name\": \"Test Notification\",\n \"notificationWindow\": 60,\n \"severityList\": [\n  \"CRITICAL\"\n ],\n \"source\": {\n  \"type\": \"DATA_MANAGER\"\n },\n \"subjectOverride\": \"test mail \"\n}"
										},
										{
											"name": "Any server error that prevented the completion of the request.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"Test Notification\",\n    \"emails\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"63e7a8cf-7175-4175-b62d-d4e18a604317\",\n    \"categoryList\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"disabled\": false,\n    \"lastAlertMatchTime\": \"2019-10-25T16:20:53Z\",\n    \"lastNotificationTime\": \"2019-10-25T16:20:53Z\",\n    \"messageIdList\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"notificationWindow\": 60,\n    \"severityList\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"source\": {\n        \"type\": \"<string>\"\n    },\n    \"subjectOverride\": \"test mail\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/external-notifications/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"external-notifications",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The requested resource is not found.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"Test Notification\",\n    \"emails\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"63e7a8cf-7175-4175-b62d-d4e18a604317\",\n    \"categoryList\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"disabled\": false,\n    \"lastAlertMatchTime\": \"2019-10-25T16:20:53Z\",\n    \"lastNotificationTime\": \"2019-10-25T16:20:53Z\",\n    \"messageIdList\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"notificationWindow\": 60,\n    \"severityList\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"source\": {\n        \"type\": \"<string>\"\n    },\n    \"subjectOverride\": \"test mail\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/external-notifications/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"external-notifications",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Get all configured external notifications.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/external-notifications?page=1&pageSize=100&filter=<string>&orderby=<string>&queryState=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"external-notifications"
									],
									"query": [
										{
											"key": "page",
											"value": "1",
											"description": "The page number to be returned. Must not be less than 1. See Tutorials - Page the List Result."
										},
										{
											"key": "pageSize",
											"value": "100",
											"description": "The number of resources to be returned. Must not be less than 1. See Tutorials - Page the List Result."
										},
										{
											"key": "filter",
											"value": "<string>",
											"description": "The filter string that is expressed using PowerProtect Data Manager filter syntax. See Tutorials - Filter the List Result."
										},
										{
											"key": "orderby",
											"value": "<string>",
											"description": "The attributes/fields to be sorted by. This parameter can combine with sort direction \"ASC\" or \"DESC\". Default direction is ASC. See Tutorials - Sort the List Result."
										},
										{
											"key": "queryState",
											"value": "<string>",
											"description": "Token string to use to retrieve the next page of a result. The initial search request with queryState must be queryState=BEGIN and a pageSize. After a search begins, subsequent responses include a token string to pass as a parameter for the next page retrieval. When the query state in the response that is returned from the previous search is END, no further results can be retrieved from this query. More details see Tutorials - Page the List Result."
										}
									]
								},
								"description": "Retrieves all configured external notifications.\n> This endpoint supports execution by the following roles: admin\n\n> This endpoint supports pagination with types: random,serial\n"
							},
							"response": [
								{
									"name": "The requestor is not authenticated to perform this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/external-notifications?page=1&pageSize=100&filter=<string>&orderby=<string>&queryState=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"external-notifications"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "<string>"
												},
												{
													"key": "orderby",
													"value": "<string>"
												},
												{
													"key": "queryState",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "The request is not valid.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/external-notifications?page=1&pageSize=100&filter=<string>&orderby=<string>&queryState=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"external-notifications"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "<string>"
												},
												{
													"key": "orderby",
													"value": "<string>"
												},
												{
													"key": "queryState",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "Successfully returned available external notification.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/external-notifications?page=1&pageSize=100&filter=<string>&orderby=<string>&queryState=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"external-notifications"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "<string>"
												},
												{
													"key": "orderby",
													"value": "<string>"
												},
												{
													"key": "queryState",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"content\": [\n  {\n   \"categoryList\": [\n    \"PROTECTION\",\n    \"SYSTEM\"\n   ],\n   \"disabled\": false,\n   \"emails\": [\n    \"test@dell.com\"\n   ],\n   \"id\": \"63e7a8cf-7175-4175-b62d-d4e18a604317\",\n   \"lastAlertMatchTime\": \"2019-10-25T16:20:53Z\",\n   \"lastNotificationTime\": \"2019-10-25T16:20:53Z\",\n   \"messageIdList\": [\n    \"ABA0005\",\n    \"SYS0006\",\n    \"ABD0005\",\n    \"ABD0002\",\n    \"SYS0007\",\n    \"ABV0003\",\n    \"ABV0002\",\n    \"ABV0005\",\n    \"SYS0004\",\n    \"SYS0008\",\n    \"ABA0002\",\n    \"ABA0003\",\n    \"ABA0004\",\n    \"SYS0001\",\n    \"ABV0004\",\n    \"ABD0004\",\n    \"ABD0003\",\n    \"ABA0006\",\n    \"CDR0003\",\n    \"CDR0002\",\n    \"UPG0047\"\n   ],\n   \"name\": \"Test Notification\",\n   \"notificationWindow\": 60,\n   \"severityList\": [\n    \"CRITICAL\"\n   ],\n   \"source\": {\n    \"type\": \"DATA_MANAGER\"\n   },\n   \"subjectOverride\": \"test mail \"\n  }\n ],\n \"page\": {\n  \"number\": 1,\n  \"size\": 1,\n  \"totalElements\": 1,\n  \"totalPages\": 1\n }\n}"
								},
								{
									"name": "The requestor is not authorized to perform this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/external-notifications?page=1&pageSize=100&filter=<string>&orderby=<string>&queryState=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"external-notifications"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "<string>"
												},
												{
													"key": "orderby",
													"value": "<string>"
												},
												{
													"key": "queryState",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "Any server error that prevented the completion of the request.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/external-notifications?page=1&pageSize=100&filter=<string>&orderby=<string>&queryState=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"external-notifications"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "<string>"
												},
												{
													"key": "orderby",
													"value": "<string>"
												},
												{
													"key": "queryState",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								}
							]
						},
						{
							"name": "Create external notification.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<string>\",\n    \"emails\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<string>\",\n    \"categoryList\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"disabled\": \"<boolean>\",\n    \"lastAlertMatchTime\": \"<dateTime>\",\n    \"lastNotificationTime\": \"<dateTime>\",\n    \"messageIdList\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"notificationWindow\": \"<integer>\",\n    \"severityList\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"source\": {\n        \"type\": \"<string>\"\n    },\n    \"subjectOverride\": \"<string>\"\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/external-notifications",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"external-notifications"
									]
								},
								"description": "Create a new notification configuration.\n> This endpoint supports execution by the following roles: admin\n"
							},
							"response": [
								{
									"name": "Any server error that prevented the completion of the request.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Test Notification\",\n    \"emails\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"63e7a8cf-7175-4175-b62d-d4e18a604317\",\n    \"categoryList\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"disabled\": false,\n    \"lastAlertMatchTime\": \"2019-10-25T16:20:53Z\",\n    \"lastNotificationTime\": \"2019-10-25T16:20:53Z\",\n    \"messageIdList\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"notificationWindow\": 60,\n    \"severityList\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"source\": {\n        \"type\": \"<string>\"\n    },\n    \"subjectOverride\": \"test mail\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/external-notifications",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"external-notifications"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "The requestor is not authorized to perform this operation.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Test Notification\",\n    \"emails\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"63e7a8cf-7175-4175-b62d-d4e18a604317\",\n    \"categoryList\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"disabled\": false,\n    \"lastAlertMatchTime\": \"2019-10-25T16:20:53Z\",\n    \"lastNotificationTime\": \"2019-10-25T16:20:53Z\",\n    \"messageIdList\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"notificationWindow\": 60,\n    \"severityList\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"source\": {\n        \"type\": \"<string>\"\n    },\n    \"subjectOverride\": \"test mail\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/external-notifications",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"external-notifications"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "The request is not valid.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Test Notification\",\n    \"emails\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"63e7a8cf-7175-4175-b62d-d4e18a604317\",\n    \"categoryList\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"disabled\": false,\n    \"lastAlertMatchTime\": \"2019-10-25T16:20:53Z\",\n    \"lastNotificationTime\": \"2019-10-25T16:20:53Z\",\n    \"messageIdList\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"notificationWindow\": 60,\n    \"severityList\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"source\": {\n        \"type\": \"<string>\"\n    },\n    \"subjectOverride\": \"test mail\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/external-notifications",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"external-notifications"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "The requestor is not authenticated to perform this operation.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Test Notification\",\n    \"emails\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"63e7a8cf-7175-4175-b62d-d4e18a604317\",\n    \"categoryList\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"disabled\": false,\n    \"lastAlertMatchTime\": \"2019-10-25T16:20:53Z\",\n    \"lastNotificationTime\": \"2019-10-25T16:20:53Z\",\n    \"messageIdList\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"notificationWindow\": 60,\n    \"severityList\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"source\": {\n        \"type\": \"<string>\"\n    },\n    \"subjectOverride\": \"test mail\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/external-notifications",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"external-notifications"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "Resource created.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Test Notification\",\n    \"emails\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"63e7a8cf-7175-4175-b62d-d4e18a604317\",\n    \"categoryList\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"disabled\": false,\n    \"lastAlertMatchTime\": \"2019-10-25T16:20:53Z\",\n    \"lastNotificationTime\": \"2019-10-25T16:20:53Z\",\n    \"messageIdList\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"notificationWindow\": 60,\n    \"severityList\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"source\": {\n        \"type\": \"<string>\"\n    },\n    \"subjectOverride\": \"test mail\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/external-notifications",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"external-notifications"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"categoryList\": [\n  \"PROTECTION\",\n  \"SYSTEM\"\n ],\n \"disabled\": false,\n \"emails\": [\n  \"test@dell.com\"\n ],\n \"id\": \"069ffa5b-5c88-4529-b5eb-054f2bee651d\",\n \"lastAlertMatchTime\": \"2019-10-25T19:41:14Z\",\n \"lastNotificationTime\": \"2019-10-25T19:41:14Z\",\n \"messageIdList\": [\n  \"ABA0005\",\n  \"SYS0006\",\n  \"ABD0005\",\n  \"ABD0002\",\n  \"SYS0007\",\n  \"ABV0003\",\n  \"ABV0002\",\n  \"ABV0005\",\n  \"SYS0004\",\n  \"SYS0008\",\n  \"ABA0002\",\n  \"ABA0003\",\n  \"ABA0004\",\n  \"SYS0001\",\n  \"ABV0004\",\n  \"ABD0004\",\n  \"ABD0003\",\n  \"ABA0006\",\n  \"CDR0003\",\n  \"CDR0002\",\n  \"UPG0047\"\n ],\n \"name\": \"Test Notification\",\n \"notificationWindow\": 60,\n \"severityList\": [\n  \"CRITICAL\"\n ],\n \"source\": {\n  \"type\": \"DATA_MANAGER\"\n },\n \"subjectOverride\": \"test mail \"\n}"
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "flr-sessions",
					"item": [
						{
							"name": "{flr Session Id}",
							"item": [
								{
									"name": "Delete the specified FLR session.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/flr-sessions/:flrSessionId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"flr-sessions",
												":flrSessionId"
											],
											"variable": [
												{
													"id": "c45f3c59-80db-4aac-a3be-e45d6a7da66b",
													"key": "flrSessionId",
													"value": "<string>",
													"type": "string",
													"description": "(Required) Restored files ID."
												}
											]
										},
										"description": "Unmounts the disks from the target VM and deletes the FLR session resource. A prerequisite is that an flrSessionId be created by creating a new FLR session (POST /api/v2/flr-sessions).  The usual workflow is to browse the directories after creating the session, and collect a list (on the client side) of the file paths to be restored.\n\nThe final step of the restore files API is to automatically delete the FLR session. Calling this API after the restore files API is called is not necessary.\n\nDeleting the FLR session is typically the last (cleanup) step of the workflow, which will release the resources allocated to maintain the FLR browse session.\n\nUnmounting the disks from the target VM is an asynchronous operation. The response from this API contains a PowerProtect Data Manager task API reference. The task API can be called to determine the progress of this operation.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
									},
									"response": [
										{
											"name": "The request is not valid.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/flr-sessions/:flrSessionId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"flr-sessions",
														":flrSessionId"
													],
													"variable": [
														{
															"key": "flrSessionId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/flr-sessions/:flrSessionId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"flr-sessions",
														":flrSessionId"
													],
													"variable": [
														{
															"key": "flrSessionId"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/flr-sessions/:flrSessionId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"flr-sessions",
														":flrSessionId"
													],
													"variable": [
														{
															"key": "flrSessionId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The requestor is not allowed to perform this operation.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/flr-sessions/:flrSessionId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"flr-sessions",
														":flrSessionId"
													],
													"variable": [
														{
															"key": "flrSessionId"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The requested resource was not found.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/flr-sessions/:flrSessionId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"flr-sessions",
														":flrSessionId"
													],
													"variable": [
														{
															"key": "flrSessionId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "Unmounted.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/flr-sessions/:flrSessionId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"flr-sessions",
														":flrSessionId"
													],
													"variable": [
														{
															"key": "flrSessionId"
														}
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"flrSessionId\": \"Duis ipsum pariatur\",\n \"taskId\": \"qui proident\"\n}"
										}
									]
								},
								{
									"name": "Get FLR session state.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/flr-sessions/:flrSessionId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"flr-sessions",
												":flrSessionId"
											],
											"variable": [
												{
													"id": "0024d521-21e5-41ad-b330-0fba30d9c1fa",
													"key": "flrSessionId",
													"value": "<string>",
													"type": "string",
													"description": "(Required) Restored files ID."
												}
											]
										},
										"description": "Returns the current settings (the UpdateBrowseRequest) for the specified FLR Session ID.\n\nA prerequisite is that an flrSessionId be created by creating a new FLR session (POST /api/v2/flr-sessions). The usual workflow is to browse the directories after creating the session, and collect a list (on the client side) of the file paths to be restored (and browsing would be done, in part, by this API).\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
									},
									"response": [
										{
											"name": "The request is not valid.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/flr-sessions/:flrSessionId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"flr-sessions",
														":flrSessionId"
													],
													"variable": [
														{
															"key": "flrSessionId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The requested resource was not found.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/flr-sessions/:flrSessionId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"flr-sessions",
														":flrSessionId"
													],
													"variable": [
														{
															"key": "flrSessionId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/flr-sessions/:flrSessionId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"flr-sessions",
														":flrSessionId"
													],
													"variable": [
														{
															"key": "flrSessionId"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The requestor is not allowed to perform this operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/flr-sessions/:flrSessionId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"flr-sessions",
														":flrSessionId"
													],
													"variable": [
														{
															"key": "flrSessionId"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "Get browse session.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/flr-sessions/:flrSessionId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"flr-sessions",
														":flrSessionId"
													],
													"variable": [
														{
															"key": "flrSessionId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"browseDest\": false,\n \"directory\": \"/\"\n}"
										},
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/flr-sessions/:flrSessionId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"flr-sessions",
														":flrSessionId"
													],
													"variable": [
														{
															"key": "flrSessionId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										}
									]
								},
								{
									"name": "Modify FLR session.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"browseDest\": \"<boolean>\",\n    \"directory\": \"<string>\"\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/flr-sessions/:flrSessionId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"flr-sessions",
												":flrSessionId"
											],
											"variable": [
												{
													"id": "93f2327f-c29a-492e-9c1c-5e981e118eaa",
													"key": "flrSessionId",
													"value": "<string>",
													"type": "string",
													"description": "(Required) Restored files ID."
												}
											]
										},
										"description": "Changes the directories on the target or in the backup for the specified FLR session ID.\n\nA prerequisite is that an flrSessionId be created by creating a new FLR session (POST /api/v2/flr-sessions).  The usual workflow is to browse the directories after creating the session (where changing directories is part of the browsing, and would be achieved by calling this API).\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
									},
									"response": [
										{
											"name": "The request is not valid.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"browseDest\": \"<boolean>\",\n    \"directory\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/flr-sessions/:flrSessionId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"flr-sessions",
														":flrSessionId"
													],
													"variable": [
														{
															"key": "flrSessionId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"browseDest\": \"<boolean>\",\n    \"directory\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/flr-sessions/:flrSessionId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"flr-sessions",
														":flrSessionId"
													],
													"variable": [
														{
															"key": "flrSessionId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The requested resource was not found.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"browseDest\": \"<boolean>\",\n    \"directory\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/flr-sessions/:flrSessionId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"flr-sessions",
														":flrSessionId"
													],
													"variable": [
														{
															"key": "flrSessionId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The requestor is not allowed to perform this operation.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"browseDest\": \"<boolean>\",\n    \"directory\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/flr-sessions/:flrSessionId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"flr-sessions",
														":flrSessionId"
													],
													"variable": [
														{
															"key": "flrSessionId"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The response includes two fields: A flag indicating whether the copy or the destination VM is being browsed and the name directory currently being browsed.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"browseDest\": \"<boolean>\",\n    \"directory\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/flr-sessions/:flrSessionId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"flr-sessions",
														":flrSessionId"
													],
													"variable": [
														{
															"key": "flrSessionId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"browseDest\": false,\n \"directory\": \"/etc\"\n}"
										},
										{
											"name": "The request could not be completed due to a conflict with the current state of the target resource.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"browseDest\": \"<boolean>\",\n    \"directory\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/flr-sessions/:flrSessionId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"flr-sessions",
														":flrSessionId"
													],
													"variable": [
														{
															"key": "flrSessionId"
														}
													]
												}
											},
											"status": "Conflict",
											"code": 409,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"browseDest\": \"<boolean>\",\n    \"directory\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/flr-sessions/:flrSessionId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"flr-sessions",
														":flrSessionId"
													],
													"variable": [
														{
															"key": "flrSessionId"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										}
									]
								},
								{
									"name": "Get directory file list.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/flr-sessions/:flrSessionId/files?page=1&pageSize=100&filter=<string>&orderby=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"flr-sessions",
												":flrSessionId",
												"files"
											],
											"query": [
												{
													"key": "page",
													"value": "1",
													"description": "The page number to be returned. Must not be less than 1. See Tutorials - Page the List Result."
												},
												{
													"key": "pageSize",
													"value": "100",
													"description": "The number of resources to be returned. Must not be less than 1. See Tutorials - Page the List Result."
												},
												{
													"key": "filter",
													"value": "<string>",
													"description": "The filter string that is expressed using PowerProtect Data Manager filter syntax. See Tutorials - Filter the List Result."
												},
												{
													"key": "orderby",
													"value": "<string>",
													"description": "The attributes/fields to be sorted by. This parameter can combine with sort direction \"ASC\" or \"DESC\". Default direction is ASC. See Tutorials - Sort the List Result."
												}
											],
											"variable": [
												{
													"id": "704db8e3-ed05-45ac-92c1-51352888618d",
													"key": "flrSessionId",
													"value": "<string>",
													"type": "string",
													"description": "(Required) Restored files ID."
												}
											]
										},
										"description": "Retrieves the directory file list for the specified FLR session ID. The file list can be filtered based on the optional filter and paging query parameters.\n\nA prerequisite is that an flrSessionId be created by creating a new FLR session (POST /api/v2/flr-sessions). The usual workflow is to browse the directories after creating the session, and collect a list (on the client side) of the file paths to be restored.\n\nThis API call allows the caller to retrieve the file list corresponding to the current directory in the FLR browse session. Finally, the caller calls the flr-sessions/{flrSessionId}/tasks API with the desired file list to restore those files on the target VM. The FLR session is automatically closed down when the restore task API is called. Otherwise, the session is be terminated by calling the DELETE API.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
									},
									"response": [
										{
											"name": "The request is not valid.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/flr-sessions/:flrSessionId/files?page=1&pageSize=100&filter=<string>&orderby=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"flr-sessions",
														":flrSessionId",
														"files"
													],
													"query": [
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "pageSize",
															"value": "100"
														},
														{
															"key": "filter",
															"value": "<string>"
														},
														{
															"key": "orderby",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "flrSessionId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The requestor is not allowed to perform this operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/flr-sessions/:flrSessionId/files?page=1&pageSize=100&filter=<string>&orderby=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"flr-sessions",
														":flrSessionId",
														"files"
													],
													"query": [
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "pageSize",
															"value": "100"
														},
														{
															"key": "filter",
															"value": "<string>"
														},
														{
															"key": "orderby",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "flrSessionId"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/flr-sessions/:flrSessionId/files?page=1&pageSize=100&filter=<string>&orderby=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"flr-sessions",
														":flrSessionId",
														"files"
													],
													"query": [
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "pageSize",
															"value": "100"
														},
														{
															"key": "filter",
															"value": "<string>"
														},
														{
															"key": "orderby",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "flrSessionId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/flr-sessions/:flrSessionId/files?page=1&pageSize=100&filter=<string>&orderby=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"flr-sessions",
														":flrSessionId",
														"files"
													],
													"query": [
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "pageSize",
															"value": "100"
														},
														{
															"key": "filter",
															"value": "<string>"
														},
														{
															"key": "orderby",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "flrSessionId"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The requested resource was not found.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/flr-sessions/:flrSessionId/files?page=1&pageSize=100&filter=<string>&orderby=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"flr-sessions",
														":flrSessionId",
														"files"
													],
													"query": [
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "pageSize",
															"value": "100"
														},
														{
															"key": "filter",
															"value": "<string>"
														},
														{
															"key": "orderby",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "flrSessionId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The request could not be completed because of a conflict with the current state of the target resource.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/flr-sessions/:flrSessionId/files?page=1&pageSize=100&filter=<string>&orderby=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"flr-sessions",
														":flrSessionId",
														"files"
													],
													"query": [
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "pageSize",
															"value": "100"
														},
														{
															"key": "filter",
															"value": "<string>"
														},
														{
															"key": "orderby",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "flrSessionId"
														}
													]
												}
											},
											"status": "Conflict",
											"code": 409,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The response is a list of files formatted by the filter and page information specified in the request.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/flr-sessions/:flrSessionId/files?page=1&pageSize=100&filter=<string>&orderby=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"flr-sessions",
														":flrSessionId",
														"files"
													],
													"query": [
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "pageSize",
															"value": "100"
														},
														{
															"key": "filter",
															"value": "<string>"
														},
														{
															"key": "orderby",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "flrSessionId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"content\": [\n  {\n   \"name\": \"boot\",\n   \"size\": 6,\n   \"type\": \"directory\"\n  },\n  {\n   \"name\": \"dev\",\n   \"size\": 6,\n   \"type\": \"directory\"\n  },\n  {\n   \"name\": \"proc\",\n   \"size\": 6,\n   \"type\": \"directory\"\n  },\n  {\n   \"name\": \"run\",\n   \"size\": 6,\n   \"type\": \"directory\"\n  },\n  {\n   \"name\": \"sys\",\n   \"size\": 6,\n   \"type\": \"directory\"\n  },\n  {\n   \"name\": \"etc\",\n   \"size\": 8192,\n   \"type\": \"directory\"\n  },\n  {\n   \"name\": \"root\",\n   \"size\": 4096,\n   \"type\": \"directory\"\n  },\n  {\n   \"name\": \"tmp\",\n   \"size\": 4096,\n   \"type\": \"directory\"\n  },\n  {\n   \"name\": \"var\",\n   \"size\": 4096,\n   \"type\": \"directory\"\n  },\n  {\n   \"name\": \"usr\",\n   \"size\": 4096,\n   \"type\": \"directory\"\n  },\n  {\n   \"name\": \"bin\",\n   \"size\": 7,\n   \"type\": \"symlink\"\n  },\n  {\n   \"name\": \"sbin\",\n   \"size\": 8,\n   \"type\": \"symlink\"\n  },\n  {\n   \"name\": \"lib\",\n   \"size\": 7,\n   \"type\": \"symlink\"\n  },\n  {\n   \"name\": \"lib64\",\n   \"size\": 9,\n   \"type\": \"symlink\"\n  },\n  {\n   \"name\": \"home\",\n   \"size\": 6,\n   \"type\": \"directory\"\n  },\n  {\n   \"name\": \"media\",\n   \"size\": 6,\n   \"type\": \"directory\"\n  },\n  {\n   \"name\": \"mnt\",\n   \"size\": 6,\n   \"type\": \"directory\"\n  },\n  {\n   \"name\": \"opt\",\n   \"size\": 6,\n   \"type\": \"directory\"\n  },\n  {\n   \"name\": \"srv\",\n   \"size\": 6,\n   \"type\": \"directory\"\n  }\n ],\n \"page\": {\n  \"number\": 1,\n  \"size\": 100,\n  \"totalElements\": 19,\n  \"totalPages\": 1\n }\n}"
										}
									]
								},
								{
									"name": "Restore files picked during the browse.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"filePaths\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"overwriteExisting\": true,\n    \"restoreToOriginalPath\": false,\n    \"targetDirectory\": \"<string>\"\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/flr-sessions/:flrSessionId/tasks",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"flr-sessions",
												":flrSessionId",
												"tasks"
											],
											"variable": [
												{
													"id": "2800f4e2-d528-4f24-8cca-3956eda0f4e9",
													"key": "flrSessionId",
													"value": "<string>",
													"type": "string",
													"description": "(Required) Restored files ID."
												}
											]
										},
										"description": "Restores the files specified in the request body. Once the files are restored, the FLR session is deleted. It is not necessary to call the DELETE API after calling this API.\n\nA prerequisite is that an flrSessionId be created by creating a new FLR session (POST /api/v2/flr-sessions).  The usual workflow is to then browse the directories after creating the session, and collect a list (on the client side) of the file paths to be restored, and then call this API to restore the files.\n\nRestoring the files is an asynchronous operation. The response from this API contains a PowerProtect Data Manager task ID and API reference. The task API can be called to determine the progress of this operation.\n\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
									},
									"response": [
										{
											"name": "The request is not valid.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"filePaths\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"overwriteExisting\": true,\n    \"restoreToOriginalPath\": false,\n    \"targetDirectory\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/flr-sessions/:flrSessionId/tasks",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"flr-sessions",
														":flrSessionId",
														"tasks"
													],
													"variable": [
														{
															"key": "flrSessionId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "FLR initiated.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"filePaths\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"overwriteExisting\": true,\n    \"restoreToOriginalPath\": false,\n    \"targetDirectory\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/flr-sessions/:flrSessionId/tasks",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"flr-sessions",
														":flrSessionId",
														"tasks"
													],
													"variable": [
														{
															"key": "flrSessionId"
														}
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"taskId\": \"Ut culpa\"\n}"
										},
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"filePaths\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"overwriteExisting\": true,\n    \"restoreToOriginalPath\": false,\n    \"targetDirectory\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/flr-sessions/:flrSessionId/tasks",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"flr-sessions",
														":flrSessionId",
														"tasks"
													],
													"variable": [
														{
															"key": "flrSessionId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The requested resource was not found.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"filePaths\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"overwriteExisting\": true,\n    \"restoreToOriginalPath\": false,\n    \"targetDirectory\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/flr-sessions/:flrSessionId/tasks",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"flr-sessions",
														":flrSessionId",
														"tasks"
													],
													"variable": [
														{
															"key": "flrSessionId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"filePaths\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"overwriteExisting\": true,\n    \"restoreToOriginalPath\": false,\n    \"targetDirectory\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/flr-sessions/:flrSessionId/tasks",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"flr-sessions",
														":flrSessionId",
														"tasks"
													],
													"variable": [
														{
															"key": "flrSessionId"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The requestor is not allowed to perform this operation.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"filePaths\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"overwriteExisting\": true,\n    \"restoreToOriginalPath\": false,\n    \"targetDirectory\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/flr-sessions/:flrSessionId/tasks",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"flr-sessions",
														":flrSessionId",
														"tasks"
													],
													"variable": [
														{
															"key": "flrSessionId"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Create a new FLR Session.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"copyId\": \"<string>\",\n    \"targetVmAssetId\": \"<string>\",\n    \"removeAgent\": false,\n    \"targetPassword\": \"<string>\",\n    \"targetUser\": \"<string>\",\n    \"timeout\": \"300\"\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/flr-sessions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"flr-sessions"
									]
								},
								"description": "Establishes a File-Level-Restore (FLR) session. An FLR session is used to restore individual files or directories as opposed to performing an Image-Level-Restore (that is, restoring entire VMs).\n\nCalling this API mounts the disks of a copy to a target VM. The ID of the copy and the ID of the target VM are acquired by browsing the PowerProtect Data Manager inventory. The mount operation will make the files present on the mounted disk available for selection to be restored. Once the disks are mounted onto the target VM, the disk file system (or systems) may be browsed directory-by-directory. The caller may select files within each directory to be restored.\n\nThe mounting of the disk from the copy is an asynchronous operation, so the response from this API contains a PowerProtect Data Manager task ID and a hyperlink. The task API can be called to monitor the progress of of the operation.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
							},
							"response": [
								{
									"name": "An unexpected error prevented the server from fulfilling your request.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"copyId\": \"<string>\",\n    \"targetVmAssetId\": \"<string>\",\n    \"removeAgent\": true,\n    \"targetPassword\": \"<string>\",\n    \"targetUser\": \"<string>\",\n    \"timeout\": \"300\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/flr-sessions",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"flr-sessions"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "FLR session create task started.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"copyId\": \"<string>\",\n    \"targetVmAssetId\": \"<string>\",\n    \"removeAgent\": true,\n    \"targetPassword\": \"<string>\",\n    \"targetUser\": \"<string>\",\n    \"timeout\": \"300\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/flr-sessions",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"flr-sessions"
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"flrSessionId\": \"Duis ipsum pariatur\",\n \"taskId\": \"qui proident\"\n}"
								},
								{
									"name": "The request is not valid.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"copyId\": \"<string>\",\n    \"targetVmAssetId\": \"<string>\",\n    \"removeAgent\": true,\n    \"targetPassword\": \"<string>\",\n    \"targetUser\": \"<string>\",\n    \"timeout\": \"300\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/flr-sessions",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"flr-sessions"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "The requestor is not authorized to perform this operation.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"copyId\": \"<string>\",\n    \"targetVmAssetId\": \"<string>\",\n    \"removeAgent\": true,\n    \"targetPassword\": \"<string>\",\n    \"targetUser\": \"<string>\",\n    \"timeout\": \"300\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/flr-sessions",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"flr-sessions"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "The requestor is not allowed to perform this operation.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"copyId\": \"<string>\",\n    \"targetVmAssetId\": \"<string>\",\n    \"removeAgent\": true,\n    \"targetPassword\": \"<string>\",\n    \"targetUser\": \"<string>\",\n    \"timeout\": \"300\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/flr-sessions",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"flr-sessions"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "The request precondition failed.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"copyId\": \"<string>\",\n    \"targetVmAssetId\": \"<string>\",\n    \"removeAgent\": true,\n    \"targetPassword\": \"<string>\",\n    \"targetUser\": \"<string>\",\n    \"timeout\": \"300\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/flr-sessions",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"flr-sessions"
											]
										}
									},
									"status": "Precondition Failed",
									"code": 412,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "hosts",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Get a host by ID.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/hosts/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"hosts",
												":id"
											],
											"variable": [
												{
													"id": "85cd7530-2402-4359-802c-047d61172d14",
													"key": "id",
													"value": "<string>",
													"type": "string",
													"description": "(Required) ID of the host."
												}
											]
										},
										"description": "Retrieves **Hosts** like PRIMARY, GROUP, APP_HOST, ESX_HOST, ESX_CLUSTER, MSSQL, ORACLE, Filesystem by ID.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
									},
									"response": [
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/hosts/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"hosts",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The requested host does not exist.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/hosts/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"hosts",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/hosts/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"hosts",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "Successfully returned the host.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/hosts/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"hosts",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"addresses\": {\n  \"ipv4\": [\n   \"sit et amet do ut\",\n   \"id occaecat Excepteur\"\n  ],\n  \"ipv6\": [\n   \"labore nulla voluptate laboris Lorem\",\n   \"in\"\n  ],\n  \"wwpn\": [\n   \"proident esse s\",\n   \"eiusmod\"\n  ]\n },\n \"cluster\": {\n  \"id\": \"proident volup\",\n  \"name\": \"enim nisi deserunt laboris eu\"\n },\n \"details\": {\n  \"appHost\": {\n   \"appServers\": [\n    {\n     \"databaseCount\": 9089311,\n     \"name\": \"eiusmod officia cillum\"\n    },\n    {\n     \"databaseCount\": 91172558,\n     \"name\": \"veni\"\n    }\n   ],\n   \"dbConnection\": {\n    \"credentialId\": \"ullamco consequat adipisicing velit\",\n    \"tnsAdmin\": \"cupidatat incididunt esse reprehenderit ut\",\n    \"tnsName\": \"labore officia enim in velit\",\n    \"type\": \"DB_SYSTEM_USER\"\n   },\n   \"dbCredentialId\": \"eiusmod aute dolore\",\n   \"oracleDBProperties\": {\n    \"rmanProperties\": {\n     \"rmanCredentialId\": \"sint consequat anim\",\n     \"rmanTnsAdmin\": \"Ut quis culpa ut\",\n     \"rmanTnsName\": \"culpa mollit\"\n    },\n    \"tnsAdmin\": \"mollit pariatur ullamco anim do\",\n    \"tnsName\": \"in do reprehen\"\n   },\n   \"os\": \"incididunt nostrud\",\n   \"phase\": \"PARTIALCREATE\",\n   \"protectionEngineFlow\": \"APPDIRECT\",\n   \"rmanConnection\": {\n    \"credentialId\": \"m\",\n    \"tnsAdmin\": \"in occaecat\",\n    \"tnsName\": \"elit mollit deserunt\",\n    \"type\": \"OS\"\n   },\n   \"subTypes\": \"SAP_HANA_DATABASE_SYSTEM\"\n  },\n  \"esxCluster\": {\n   \"clusterMoref\": \"Ut ut velit consectetur\",\n   \"networks\": [\n    {\n     \"moref\": \"eu aliquip\",\n     \"name\": \"deserunt officia\"\n    },\n    {\n     \"moref\": \"ad cillum\",\n     \"name\": \"laboris qui minim esse\"\n    }\n   ],\n   \"vCenterUuid\": \"deserunt cupidatat amet\"\n  },\n  \"esxHost\": {\n   \"configScratchLocation\": \"dolor ipsum ullamco laboris\",\n   \"hostMoref\": \"dolor\",\n   \"hostUuid\": \"consectetur magna enim\",\n   \"hostVersion\": \"deserunt sint commodo ut\",\n   \"networks\": [\n    {\n     \"moref\": \"ipsum\",\n     \"name\": \"fugiat tempor\"\n    },\n    {\n     \"moref\": \"et commodo\",\n     \"name\": \"veniam cillum\"\n    }\n   ],\n   \"scsiAdapter\": true,\n   \"splitterInfo\": {\n    \"numberOfAttachedRPAClusters\": -39340323,\n    \"rpaConnectivityInfo\": [\n     {\n      \"rpaUid\": 5326389,\n      \"status\": \"UNKNOWN\"\n     },\n     {\n      \"rpaUid\": 67941718,\n      \"status\": \"WARNING\"\n     }\n    ],\n    \"status\": \"sint in in\",\n    \"uid\": \"ex exercitation\",\n    \"version\": \"in min\"\n   },\n   \"vCenterUuid\": \"id et elit in eiusmod\"\n  }\n },\n \"hostname\": \"in sit quis Excepteur\",\n \"id\": \"in\",\n \"includedInDiscovery\": true,\n \"inventorySourceId\": \"id sint dolor elit\",\n \"lastDiscovered\": \"voluptate in mollit ad\",\n \"lastDiscoveryAt\": \"1959-05-28T04:14:42.708Z\",\n \"lastDiscoveryResult\": {\n  \"error\": \"dolor esse in\",\n  \"messageID\": \"dolore in do ex deserunt\",\n  \"remediation\": \"aliqua in esse\",\n  \"status\": \"FAILED\",\n  \"summaries\": [\n   \"vo\",\n   \"velit elit minim\"\n  ]\n },\n \"lastDiscoveryStatus\": \"ut sint\",\n \"lastDiscoveryTaskId\": \"in nulla\",\n \"lastUpdated\": \"dolore sint ipsum Excepteur\",\n \"name\": \"Duis cillum\",\n \"type\": \"APP_HOST\"\n}"
										},
										{
											"name": "The requestor is not allowed to perform this operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/hosts/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"hosts",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The request is not valid.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/hosts/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"hosts",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										}
									]
								},
								{
									"name": "Update host credential and TNS values by ID.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"addresses\": {\n        \"ipv4\": [\n            \"<string>\",\n            \"<string>\"\n        ],\n        \"ipv6\": [\n            \"<string>\",\n            \"<string>\"\n        ],\n        \"wwpn\": [\n            \"<string>\",\n            \"<string>\"\n        ]\n    },\n    \"details\": {\n        \"appHost\": {\n            \"appServers\": [\n                {\n                    \"databaseCount\": \"<integer>\",\n                    \"name\": \"<string>\"\n                }\n            ],\n            \"dbConnection\": {\n                \"credentialId\": \"<string>\",\n                \"tnsAdmin\": \"<string>\",\n                \"tnsName\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"dbCredentialId\": \"<string>\",\n            \"oracleDBProperties\": {\n                \"rmanProperties\": {\n                    \"rmanCredentialId\": \"<string>\",\n                    \"rmanTnsAdmin\": \"<string>\",\n                    \"rmanTnsName\": \"<string>\"\n                },\n                \"tnsAdmin\": \"<string>\",\n                \"tnsName\": \"<string>\"\n            },\n            \"os\": \"<string>\",\n            \"phase\": \"<string>\",\n            \"protectionEngineFlow\": \"<string>\",\n            \"rmanConnection\": {\n                \"credentialId\": \"<string>\",\n                \"tnsAdmin\": \"<string>\",\n                \"tnsName\": \"<string>\",\n                \"type\": \"<string>\"\n            }\n        },\n        \"esxCluster\": {\n            \"clusterMoref\": \"<string>\",\n            \"networks\": [\n                {\n                    \"moref\": \"<string>\",\n                    \"name\": \"<string>\"\n                },\n                {\n                    \"moref\": \"<string>\",\n                    \"name\": \"<string>\"\n                }\n            ],\n            \"vCenterUuid\": \"<string>\"\n        },\n        \"esxHost\": {\n            \"configScratchLocation\": \"<string>\",\n            \"hostMoref\": \"<string>\",\n            \"hostUuid\": \"<string>\",\n            \"hostVersion\": \"<string>\",\n            \"networks\": [\n                {\n                    \"moref\": \"<string>\",\n                    \"name\": \"<string>\"\n                },\n                {\n                    \"moref\": \"<string>\",\n                    \"name\": \"<string>\"\n                }\n            ],\n            \"scsiAdapter\": \"<boolean>\",\n            \"splitterInfo\": {\n                \"numberOfAttachedRPAClusters\": \"<integer>\",\n                \"rpaConnectivityInfo\": [\n                    {\n                        \"rpaUid\": \"<long>\",\n                        \"status\": \"<string>\"\n                    }\n                ],\n                \"status\": \"<string>\",\n                \"uid\": \"<string>\",\n                \"version\": \"<string>\"\n            },\n            \"vCenterUuid\": \"<string>\"\n        }\n    },\n    \"hostname\": \"<string>\",\n    \"id\": \"<string>\",\n    \"includedInDiscovery\": \"<boolean>\",\n    \"inventorySourceId\": \"<string>\",\n    \"lastDiscovered\": \"<string>\",\n    \"lastDiscoveryResult\": {\n        \"error\": \"<string>\",\n        \"messageID\": \"<string>\",\n        \"remediation\": \"<string>\",\n        \"status\": \"<string>\",\n        \"summaries\": [\n            \"<string>\",\n            \"<string>\"\n        ]\n    },\n    \"lastDiscoveryStatus\": \"<string>\",\n    \"lastUpdated\": \"<string>\",\n    \"name\": \"<string>\",\n    \"type\": \"<string>\"\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/hosts/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"hosts",
												":id"
											],
											"variable": [
												{
													"id": "003076d2-f5e3-41ea-94d6-371f4b1dfb1d",
													"key": "id",
													"value": "<string>",
													"type": "string",
													"description": "(Required) ID of the host."
												}
											]
										},
										"description": "Update credentail and TNS for host by ID.\n> This endpoint supports execution by the following roles: admin,export-and-recovery-admin\n"
									},
									"response": [
										{
											"name": "The requestor is not allowed to perform this operation.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"addresses\": {\n        \"ipv4\": [\n            \"<string>\",\n            \"<string>\"\n        ],\n        \"ipv6\": [\n            \"<string>\",\n            \"<string>\"\n        ],\n        \"wwpn\": [\n            \"<string>\",\n            \"<string>\"\n        ]\n    },\n    \"details\": {\n        \"appHost\": {\n            \"appServers\": [\n                {\n                    \"databaseCount\": \"<integer>\",\n                    \"name\": \"<string>\"\n                }\n            ],\n            \"dbConnection\": {\n                \"credentialId\": \"<string>\",\n                \"tnsAdmin\": \"<string>\",\n                \"tnsName\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"dbCredentialId\": \"<string>\",\n            \"oracleDBProperties\": {\n                \"rmanProperties\": {\n                    \"rmanCredentialId\": \"<string>\",\n                    \"rmanTnsAdmin\": \"<string>\",\n                    \"rmanTnsName\": \"<string>\"\n                },\n                \"tnsAdmin\": \"<string>\",\n                \"tnsName\": \"<string>\"\n            },\n            \"os\": \"<string>\",\n            \"phase\": \"<string>\",\n            \"protectionEngineFlow\": \"<string>\",\n            \"rmanConnection\": {\n                \"credentialId\": \"<string>\",\n                \"tnsAdmin\": \"<string>\",\n                \"tnsName\": \"<string>\",\n                \"type\": \"<string>\"\n            }\n        },\n        \"esxCluster\": {\n            \"clusterMoref\": \"<string>\",\n            \"networks\": [\n                {\n                    \"moref\": \"<string>\",\n                    \"name\": \"<string>\"\n                },\n                {\n                    \"moref\": \"<string>\",\n                    \"name\": \"<string>\"\n                }\n            ],\n            \"vCenterUuid\": \"<string>\"\n        },\n        \"esxHost\": {\n            \"configScratchLocation\": \"<string>\",\n            \"hostMoref\": \"<string>\",\n            \"hostUuid\": \"<string>\",\n            \"hostVersion\": \"<string>\",\n            \"networks\": [\n                {\n                    \"moref\": \"<string>\",\n                    \"name\": \"<string>\"\n                },\n                {\n                    \"moref\": \"<string>\",\n                    \"name\": \"<string>\"\n                }\n            ],\n            \"scsiAdapter\": \"<boolean>\",\n            \"splitterInfo\": {\n                \"numberOfAttachedRPAClusters\": \"<integer>\",\n                \"rpaConnectivityInfo\": [\n                    {\n                        \"rpaUid\": \"<long>\",\n                        \"status\": \"<string>\"\n                    }\n                ],\n                \"status\": \"<string>\",\n                \"uid\": \"<string>\",\n                \"version\": \"<string>\"\n            },\n            \"vCenterUuid\": \"<string>\"\n        }\n    },\n    \"hostname\": \"<string>\",\n    \"id\": \"<string>\",\n    \"includedInDiscovery\": \"<boolean>\",\n    \"inventorySourceId\": \"<string>\",\n    \"lastDiscovered\": \"<string>\",\n    \"lastDiscoveryResult\": {\n        \"error\": \"<string>\",\n        \"messageID\": \"<string>\",\n        \"remediation\": \"<string>\",\n        \"status\": \"<string>\",\n        \"summaries\": [\n            \"<string>\",\n            \"<string>\"\n        ]\n    },\n    \"lastDiscoveryStatus\": \"<string>\",\n    \"lastUpdated\": \"<string>\",\n    \"name\": \"<string>\",\n    \"type\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/hosts/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"hosts",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"addresses\": {\n        \"ipv4\": [\n            \"<string>\",\n            \"<string>\"\n        ],\n        \"ipv6\": [\n            \"<string>\",\n            \"<string>\"\n        ],\n        \"wwpn\": [\n            \"<string>\",\n            \"<string>\"\n        ]\n    },\n    \"details\": {\n        \"appHost\": {\n            \"appServers\": [\n                {\n                    \"databaseCount\": \"<integer>\",\n                    \"name\": \"<string>\"\n                }\n            ],\n            \"dbConnection\": {\n                \"credentialId\": \"<string>\",\n                \"tnsAdmin\": \"<string>\",\n                \"tnsName\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"dbCredentialId\": \"<string>\",\n            \"oracleDBProperties\": {\n                \"rmanProperties\": {\n                    \"rmanCredentialId\": \"<string>\",\n                    \"rmanTnsAdmin\": \"<string>\",\n                    \"rmanTnsName\": \"<string>\"\n                },\n                \"tnsAdmin\": \"<string>\",\n                \"tnsName\": \"<string>\"\n            },\n            \"os\": \"<string>\",\n            \"phase\": \"<string>\",\n            \"protectionEngineFlow\": \"<string>\",\n            \"rmanConnection\": {\n                \"credentialId\": \"<string>\",\n                \"tnsAdmin\": \"<string>\",\n                \"tnsName\": \"<string>\",\n                \"type\": \"<string>\"\n            }\n        },\n        \"esxCluster\": {\n            \"clusterMoref\": \"<string>\",\n            \"networks\": [\n                {\n                    \"moref\": \"<string>\",\n                    \"name\": \"<string>\"\n                },\n                {\n                    \"moref\": \"<string>\",\n                    \"name\": \"<string>\"\n                }\n            ],\n            \"vCenterUuid\": \"<string>\"\n        },\n        \"esxHost\": {\n            \"configScratchLocation\": \"<string>\",\n            \"hostMoref\": \"<string>\",\n            \"hostUuid\": \"<string>\",\n            \"hostVersion\": \"<string>\",\n            \"networks\": [\n                {\n                    \"moref\": \"<string>\",\n                    \"name\": \"<string>\"\n                },\n                {\n                    \"moref\": \"<string>\",\n                    \"name\": \"<string>\"\n                }\n            ],\n            \"scsiAdapter\": \"<boolean>\",\n            \"splitterInfo\": {\n                \"numberOfAttachedRPAClusters\": \"<integer>\",\n                \"rpaConnectivityInfo\": [\n                    {\n                        \"rpaUid\": \"<long>\",\n                        \"status\": \"<string>\"\n                    }\n                ],\n                \"status\": \"<string>\",\n                \"uid\": \"<string>\",\n                \"version\": \"<string>\"\n            },\n            \"vCenterUuid\": \"<string>\"\n        }\n    },\n    \"hostname\": \"<string>\",\n    \"id\": \"<string>\",\n    \"includedInDiscovery\": \"<boolean>\",\n    \"inventorySourceId\": \"<string>\",\n    \"lastDiscovered\": \"<string>\",\n    \"lastDiscoveryResult\": {\n        \"error\": \"<string>\",\n        \"messageID\": \"<string>\",\n        \"remediation\": \"<string>\",\n        \"status\": \"<string>\",\n        \"summaries\": [\n            \"<string>\",\n            \"<string>\"\n        ]\n    },\n    \"lastDiscoveryStatus\": \"<string>\",\n    \"lastUpdated\": \"<string>\",\n    \"name\": \"<string>\",\n    \"type\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/hosts/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"hosts",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "Successfully updated the host.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"addresses\": {\n        \"ipv4\": [\n            \"<string>\",\n            \"<string>\"\n        ],\n        \"ipv6\": [\n            \"<string>\",\n            \"<string>\"\n        ],\n        \"wwpn\": [\n            \"<string>\",\n            \"<string>\"\n        ]\n    },\n    \"details\": {\n        \"appHost\": {\n            \"appServers\": [\n                {\n                    \"databaseCount\": \"<integer>\",\n                    \"name\": \"<string>\"\n                }\n            ],\n            \"dbConnection\": {\n                \"credentialId\": \"<string>\",\n                \"tnsAdmin\": \"<string>\",\n                \"tnsName\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"dbCredentialId\": \"<string>\",\n            \"oracleDBProperties\": {\n                \"rmanProperties\": {\n                    \"rmanCredentialId\": \"<string>\",\n                    \"rmanTnsAdmin\": \"<string>\",\n                    \"rmanTnsName\": \"<string>\"\n                },\n                \"tnsAdmin\": \"<string>\",\n                \"tnsName\": \"<string>\"\n            },\n            \"os\": \"<string>\",\n            \"phase\": \"<string>\",\n            \"protectionEngineFlow\": \"<string>\",\n            \"rmanConnection\": {\n                \"credentialId\": \"<string>\",\n                \"tnsAdmin\": \"<string>\",\n                \"tnsName\": \"<string>\",\n                \"type\": \"<string>\"\n            }\n        },\n        \"esxCluster\": {\n            \"clusterMoref\": \"<string>\",\n            \"networks\": [\n                {\n                    \"moref\": \"<string>\",\n                    \"name\": \"<string>\"\n                },\n                {\n                    \"moref\": \"<string>\",\n                    \"name\": \"<string>\"\n                }\n            ],\n            \"vCenterUuid\": \"<string>\"\n        },\n        \"esxHost\": {\n            \"configScratchLocation\": \"<string>\",\n            \"hostMoref\": \"<string>\",\n            \"hostUuid\": \"<string>\",\n            \"hostVersion\": \"<string>\",\n            \"networks\": [\n                {\n                    \"moref\": \"<string>\",\n                    \"name\": \"<string>\"\n                },\n                {\n                    \"moref\": \"<string>\",\n                    \"name\": \"<string>\"\n                }\n            ],\n            \"scsiAdapter\": \"<boolean>\",\n            \"splitterInfo\": {\n                \"numberOfAttachedRPAClusters\": \"<integer>\",\n                \"rpaConnectivityInfo\": [\n                    {\n                        \"rpaUid\": \"<long>\",\n                        \"status\": \"<string>\"\n                    }\n                ],\n                \"status\": \"<string>\",\n                \"uid\": \"<string>\",\n                \"version\": \"<string>\"\n            },\n            \"vCenterUuid\": \"<string>\"\n        }\n    },\n    \"hostname\": \"<string>\",\n    \"id\": \"<string>\",\n    \"includedInDiscovery\": \"<boolean>\",\n    \"inventorySourceId\": \"<string>\",\n    \"lastDiscovered\": \"<string>\",\n    \"lastDiscoveryResult\": {\n        \"error\": \"<string>\",\n        \"messageID\": \"<string>\",\n        \"remediation\": \"<string>\",\n        \"status\": \"<string>\",\n        \"summaries\": [\n            \"<string>\",\n            \"<string>\"\n        ]\n    },\n    \"lastDiscoveryStatus\": \"<string>\",\n    \"lastUpdated\": \"<string>\",\n    \"name\": \"<string>\",\n    \"type\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/hosts/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"hosts",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"addresses\": {\n  \"ipv4\": [\n   \"sit et amet do ut\",\n   \"id occaecat Excepteur\"\n  ],\n  \"ipv6\": [\n   \"labore nulla voluptate laboris Lorem\",\n   \"in\"\n  ],\n  \"wwpn\": [\n   \"proident esse s\",\n   \"eiusmod\"\n  ]\n },\n \"cluster\": {\n  \"id\": \"proident volup\",\n  \"name\": \"enim nisi deserunt laboris eu\"\n },\n \"details\": {\n  \"appHost\": {\n   \"appServers\": [\n    {\n     \"databaseCount\": 9089311,\n     \"name\": \"eiusmod officia cillum\"\n    },\n    {\n     \"databaseCount\": 91172558,\n     \"name\": \"veni\"\n    }\n   ],\n   \"dbConnection\": {\n    \"credentialId\": \"ullamco consequat adipisicing velit\",\n    \"tnsAdmin\": \"cupidatat incididunt esse reprehenderit ut\",\n    \"tnsName\": \"labore officia enim in velit\",\n    \"type\": \"DB_SYSTEM_USER\"\n   },\n   \"dbCredentialId\": \"eiusmod aute dolore\",\n   \"oracleDBProperties\": {\n    \"rmanProperties\": {\n     \"rmanCredentialId\": \"sint consequat anim\",\n     \"rmanTnsAdmin\": \"Ut quis culpa ut\",\n     \"rmanTnsName\": \"culpa mollit\"\n    },\n    \"tnsAdmin\": \"mollit pariatur ullamco anim do\",\n    \"tnsName\": \"in do reprehen\"\n   },\n   \"os\": \"incididunt nostrud\",\n   \"phase\": \"PARTIALCREATE\",\n   \"protectionEngineFlow\": \"APPDIRECT\",\n   \"rmanConnection\": {\n    \"credentialId\": \"m\",\n    \"tnsAdmin\": \"in occaecat\",\n    \"tnsName\": \"elit mollit deserunt\",\n    \"type\": \"OS\"\n   },\n   \"subTypes\": \"SAP_HANA_DATABASE_SYSTEM\"\n  },\n  \"esxCluster\": {\n   \"clusterMoref\": \"Ut ut velit consectetur\",\n   \"networks\": [\n    {\n     \"moref\": \"eu aliquip\",\n     \"name\": \"deserunt officia\"\n    },\n    {\n     \"moref\": \"ad cillum\",\n     \"name\": \"laboris qui minim esse\"\n    }\n   ],\n   \"vCenterUuid\": \"deserunt cupidatat amet\"\n  },\n  \"esxHost\": {\n   \"configScratchLocation\": \"dolor ipsum ullamco laboris\",\n   \"hostMoref\": \"dolor\",\n   \"hostUuid\": \"consectetur magna enim\",\n   \"hostVersion\": \"deserunt sint commodo ut\",\n   \"networks\": [\n    {\n     \"moref\": \"ipsum\",\n     \"name\": \"fugiat tempor\"\n    },\n    {\n     \"moref\": \"et commodo\",\n     \"name\": \"veniam cillum\"\n    }\n   ],\n   \"scsiAdapter\": true,\n   \"splitterInfo\": {\n    \"numberOfAttachedRPAClusters\": -39340323,\n    \"rpaConnectivityInfo\": [\n     {\n      \"rpaUid\": 5326389,\n      \"status\": \"UNKNOWN\"\n     },\n     {\n      \"rpaUid\": 67941718,\n      \"status\": \"WARNING\"\n     }\n    ],\n    \"status\": \"sint in in\",\n    \"uid\": \"ex exercitation\",\n    \"version\": \"in min\"\n   },\n   \"vCenterUuid\": \"id et elit in eiusmod\"\n  }\n },\n \"hostname\": \"in sit quis Excepteur\",\n \"id\": \"in\",\n \"includedInDiscovery\": true,\n \"inventorySourceId\": \"id sint dolor elit\",\n \"lastDiscovered\": \"voluptate in mollit ad\",\n \"lastDiscoveryAt\": \"1959-05-28T04:14:42.708Z\",\n \"lastDiscoveryResult\": {\n  \"error\": \"dolor esse in\",\n  \"messageID\": \"dolore in do ex deserunt\",\n  \"remediation\": \"aliqua in esse\",\n  \"status\": \"FAILED\",\n  \"summaries\": [\n   \"vo\",\n   \"velit elit minim\"\n  ]\n },\n \"lastDiscoveryStatus\": \"ut sint\",\n \"lastDiscoveryTaskId\": \"in nulla\",\n \"lastUpdated\": \"dolore sint ipsum Excepteur\",\n \"name\": \"Duis cillum\",\n \"type\": \"APP_HOST\"\n}"
										},
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"addresses\": {\n        \"ipv4\": [\n            \"<string>\",\n            \"<string>\"\n        ],\n        \"ipv6\": [\n            \"<string>\",\n            \"<string>\"\n        ],\n        \"wwpn\": [\n            \"<string>\",\n            \"<string>\"\n        ]\n    },\n    \"details\": {\n        \"appHost\": {\n            \"appServers\": [\n                {\n                    \"databaseCount\": \"<integer>\",\n                    \"name\": \"<string>\"\n                }\n            ],\n            \"dbConnection\": {\n                \"credentialId\": \"<string>\",\n                \"tnsAdmin\": \"<string>\",\n                \"tnsName\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"dbCredentialId\": \"<string>\",\n            \"oracleDBProperties\": {\n                \"rmanProperties\": {\n                    \"rmanCredentialId\": \"<string>\",\n                    \"rmanTnsAdmin\": \"<string>\",\n                    \"rmanTnsName\": \"<string>\"\n                },\n                \"tnsAdmin\": \"<string>\",\n                \"tnsName\": \"<string>\"\n            },\n            \"os\": \"<string>\",\n            \"phase\": \"<string>\",\n            \"protectionEngineFlow\": \"<string>\",\n            \"rmanConnection\": {\n                \"credentialId\": \"<string>\",\n                \"tnsAdmin\": \"<string>\",\n                \"tnsName\": \"<string>\",\n                \"type\": \"<string>\"\n            }\n        },\n        \"esxCluster\": {\n            \"clusterMoref\": \"<string>\",\n            \"networks\": [\n                {\n                    \"moref\": \"<string>\",\n                    \"name\": \"<string>\"\n                },\n                {\n                    \"moref\": \"<string>\",\n                    \"name\": \"<string>\"\n                }\n            ],\n            \"vCenterUuid\": \"<string>\"\n        },\n        \"esxHost\": {\n            \"configScratchLocation\": \"<string>\",\n            \"hostMoref\": \"<string>\",\n            \"hostUuid\": \"<string>\",\n            \"hostVersion\": \"<string>\",\n            \"networks\": [\n                {\n                    \"moref\": \"<string>\",\n                    \"name\": \"<string>\"\n                },\n                {\n                    \"moref\": \"<string>\",\n                    \"name\": \"<string>\"\n                }\n            ],\n            \"scsiAdapter\": \"<boolean>\",\n            \"splitterInfo\": {\n                \"numberOfAttachedRPAClusters\": \"<integer>\",\n                \"rpaConnectivityInfo\": [\n                    {\n                        \"rpaUid\": \"<long>\",\n                        \"status\": \"<string>\"\n                    }\n                ],\n                \"status\": \"<string>\",\n                \"uid\": \"<string>\",\n                \"version\": \"<string>\"\n            },\n            \"vCenterUuid\": \"<string>\"\n        }\n    },\n    \"hostname\": \"<string>\",\n    \"id\": \"<string>\",\n    \"includedInDiscovery\": \"<boolean>\",\n    \"inventorySourceId\": \"<string>\",\n    \"lastDiscovered\": \"<string>\",\n    \"lastDiscoveryResult\": {\n        \"error\": \"<string>\",\n        \"messageID\": \"<string>\",\n        \"remediation\": \"<string>\",\n        \"status\": \"<string>\",\n        \"summaries\": [\n            \"<string>\",\n            \"<string>\"\n        ]\n    },\n    \"lastDiscoveryStatus\": \"<string>\",\n    \"lastUpdated\": \"<string>\",\n    \"name\": \"<string>\",\n    \"type\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/hosts/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"hosts",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The request is not valid.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"addresses\": {\n        \"ipv4\": [\n            \"<string>\",\n            \"<string>\"\n        ],\n        \"ipv6\": [\n            \"<string>\",\n            \"<string>\"\n        ],\n        \"wwpn\": [\n            \"<string>\",\n            \"<string>\"\n        ]\n    },\n    \"details\": {\n        \"appHost\": {\n            \"appServers\": [\n                {\n                    \"databaseCount\": \"<integer>\",\n                    \"name\": \"<string>\"\n                }\n            ],\n            \"dbConnection\": {\n                \"credentialId\": \"<string>\",\n                \"tnsAdmin\": \"<string>\",\n                \"tnsName\": \"<string>\",\n                \"type\": \"<string>\"\n            },\n            \"dbCredentialId\": \"<string>\",\n            \"oracleDBProperties\": {\n                \"rmanProperties\": {\n                    \"rmanCredentialId\": \"<string>\",\n                    \"rmanTnsAdmin\": \"<string>\",\n                    \"rmanTnsName\": \"<string>\"\n                },\n                \"tnsAdmin\": \"<string>\",\n                \"tnsName\": \"<string>\"\n            },\n            \"os\": \"<string>\",\n            \"phase\": \"<string>\",\n            \"protectionEngineFlow\": \"<string>\",\n            \"rmanConnection\": {\n                \"credentialId\": \"<string>\",\n                \"tnsAdmin\": \"<string>\",\n                \"tnsName\": \"<string>\",\n                \"type\": \"<string>\"\n            }\n        },\n        \"esxCluster\": {\n            \"clusterMoref\": \"<string>\",\n            \"networks\": [\n                {\n                    \"moref\": \"<string>\",\n                    \"name\": \"<string>\"\n                },\n                {\n                    \"moref\": \"<string>\",\n                    \"name\": \"<string>\"\n                }\n            ],\n            \"vCenterUuid\": \"<string>\"\n        },\n        \"esxHost\": {\n            \"configScratchLocation\": \"<string>\",\n            \"hostMoref\": \"<string>\",\n            \"hostUuid\": \"<string>\",\n            \"hostVersion\": \"<string>\",\n            \"networks\": [\n                {\n                    \"moref\": \"<string>\",\n                    \"name\": \"<string>\"\n                },\n                {\n                    \"moref\": \"<string>\",\n                    \"name\": \"<string>\"\n                }\n            ],\n            \"scsiAdapter\": \"<boolean>\",\n            \"splitterInfo\": {\n                \"numberOfAttachedRPAClusters\": \"<integer>\",\n                \"rpaConnectivityInfo\": [\n                    {\n                        \"rpaUid\": \"<long>\",\n                        \"status\": \"<string>\"\n                    }\n                ],\n                \"status\": \"<string>\",\n                \"uid\": \"<string>\",\n                \"version\": \"<string>\"\n            },\n            \"vCenterUuid\": \"<string>\"\n        }\n    },\n    \"hostname\": \"<string>\",\n    \"id\": \"<string>\",\n    \"includedInDiscovery\": \"<boolean>\",\n    \"inventorySourceId\": \"<string>\",\n    \"lastDiscovered\": \"<string>\",\n    \"lastDiscoveryResult\": {\n        \"error\": \"<string>\",\n        \"messageID\": \"<string>\",\n        \"remediation\": \"<string>\",\n        \"status\": \"<string>\",\n        \"summaries\": [\n            \"<string>\",\n            \"<string>\"\n        ]\n    },\n    \"lastDiscoveryStatus\": \"<string>\",\n    \"lastUpdated\": \"<string>\",\n    \"name\": \"<string>\",\n    \"type\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/hosts/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"hosts",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Get all hosts.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/hosts?page=1&pageSize=100&filter=<string>&orderby=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"hosts"
									],
									"query": [
										{
											"key": "page",
											"value": "1",
											"description": "The page number to be returned. Must not be less than 1. See Tutorials - Page the List Result."
										},
										{
											"key": "pageSize",
											"value": "100",
											"description": "The number of resources to be returned. Must not be less than 1. See Tutorials - Page the List Result."
										},
										{
											"key": "filter",
											"value": "<string>",
											"description": "The filter string that is expressed using PowerProtect Data Manager filter syntax. See Tutorials - Filter the List Result."
										},
										{
											"key": "orderby",
											"value": "<string>",
											"description": "The attributes/fields to be sorted by. This parameter can combine with sort direction \"ASC\" or \"DESC\". Default direction is ASC. See Tutorials - Sort the List Result."
										}
									]
								},
								"description": "Retrieves all **Hosts** including PRIMARY, GROUP, APP_HOST, ESX_HOST, ESX_CLUSTER, MSSQL, ORACLE, and Filesystem.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
							},
							"response": [
								{
									"name": "An unexpected error prevented the server from fulfilling your request.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/hosts?page=1&pageSize=100&filter=<string>&orderby=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"hosts"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "<string>"
												},
												{
													"key": "orderby",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "The requestor is not allowed to perform this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/hosts?page=1&pageSize=100&filter=<string>&orderby=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"hosts"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "<string>"
												},
												{
													"key": "orderby",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "The request is not valid.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/hosts?page=1&pageSize=100&filter=<string>&orderby=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"hosts"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "<string>"
												},
												{
													"key": "orderby",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "The requestor is not authorized to perform this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/hosts?page=1&pageSize=100&filter=<string>&orderby=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"hosts"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "<string>"
												},
												{
													"key": "orderby",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "Successfully returned available host.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/hosts?page=1&pageSize=100&filter=<string>&orderby=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"hosts"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "<string>"
												},
												{
													"key": "orderby",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"content\": [\n  {\n   \"addresses\": {\n    \"ipv4\": [\n     \"mollit do ad fugiat\",\n     \"in ut aliquip laborum esse\"\n    ],\n    \"ipv6\": [\n     \"et voluptate qui id occaecat\",\n     \"fugiat Excepteur\"\n    ],\n    \"wwpn\": [\n     \"eiusmod Lorem aute\",\n     \"occaecat ipsum Lorem\"\n    ]\n   },\n   \"cluster\": {\n    \"id\": \"irure sed\",\n    \"name\": \"ea cupidatat\"\n   },\n   \"details\": {\n    \"appHost\": {\n     \"appServers\": [\n      {\n       \"databaseCount\": -23522808,\n       \"name\": \"in consequat elit aliqua\"\n      },\n      {\n       \"databaseCount\": -73870364,\n       \"name\": \"occaecat pariatur\"\n      }\n     ],\n     \"dbConnection\": {\n      \"credentialId\": \"Lorem in sint\",\n      \"tnsAdmin\": \"sunt fugiat exercitation velit aliquip\",\n      \"tnsName\": \"quis non\",\n      \"type\": \"RMAN\"\n     },\n     \"dbCredentialId\": \"sed elit\",\n     \"oracleDBProperties\": {\n      \"rmanProperties\": {\n       \"rmanCredentialId\": \"enim\",\n       \"rmanTnsAdmin\": \"anim\",\n       \"rmanTnsName\": \"quis proident\"\n      },\n      \"tnsAdmin\": \"incididunt \",\n      \"tnsName\": \"ipsum cillum\"\n     },\n     \"os\": \"adipisicing occaecat id Lorem co\",\n     \"phase\": \"SENDCERT\",\n     \"protectionEngineFlow\": \"APPDIRECT\",\n     \"rmanConnection\": {\n      \"credentialId\": \"\",\n      \"tnsAdmin\": \"culpa ut\",\n      \"tnsName\": \"pariatur velit non\",\n      \"type\": \"DB_WALLET\"\n     },\n     \"subTypes\": \"FS\"\n    },\n    \"esxCluster\": {\n     \"clusterMoref\": \"ex occaecat \",\n     \"networks\": [\n      {\n       \"moref\": \"dolor non do esse\",\n       \"name\": \"veniam labore\"\n      },\n      {\n       \"moref\": \"proident ullamco\",\n       \"name\": \"aute\"\n      }\n     ],\n     \"vCenterUuid\": \"nostrud cupidatat sint dolor u\"\n    },\n    \"esxHost\": {\n     \"configScratchLocation\": \"reprehenderit ad qui Duis\",\n     \"hostMoref\": \"occaec\",\n     \"hostUuid\": \"velit non\",\n     \"hostVersion\": \"consectetur Duis\",\n     \"networks\": [\n      {\n       \"moref\": \"cupidatat nisi Ut ipsum\",\n       \"name\": \"laborum qui reprehenderit\"\n      },\n      {\n       \"moref\": \"aute ex sit officia\",\n       \"name\": \"ad\"\n      }\n     ],\n     \"scsiAdapter\": true,\n     \"splitterInfo\": {\n      \"numberOfAttachedRPAClusters\": 26180304,\n      \"rpaConnectivityInfo\": [\n       {\n        \"rpaUid\": 21069793,\n        \"status\": \"OK\"\n       },\n       {\n        \"rpaUid\": 64081436,\n        \"status\": \"WARNING\"\n       }\n      ],\n      \"status\": \"nostrud in est Lorem\",\n      \"uid\": \"dolore adipisicing dolor\",\n      \"version\": \"fugiat enim\"\n     },\n     \"vCenterUuid\": \"ut dolore eu officia velit\"\n    }\n   },\n   \"hostname\": \"tempor consequat\",\n   \"id\": \"eiusmod in enim\",\n   \"includedInDiscovery\": false,\n   \"inventorySourceId\": \"sunt sed\",\n   \"lastDiscovered\": \"ipsum\",\n   \"lastDiscoveryAt\": \"1998-06-12T15:18:48.286Z\",\n   \"lastDiscoveryResult\": {\n    \"error\": \"proident dolor et\",\n    \"messageID\": \"officia irure in consectetur\",\n    \"remediation\": \"dolor occaecat commodo tempor\",\n    \"status\": \"UNKNOWN\",\n    \"summaries\": [\n     \"proident sint laborum sunt aute\",\n     \"esse eu ullamco\"\n    ]\n   },\n   \"lastDiscoveryStatus\": \"Excepteur qui in\",\n   \"lastDiscoveryTaskId\": \"incididunt consequat\",\n   \"lastUpdated\": \"aliqua incididunt nulla\",\n   \"name\": \"do quis qui eiusmod\",\n   \"type\": \"PRIMARY\"\n  },\n  {\n   \"addresses\": {\n    \"ipv4\": [\n     \"anim velit sint Duis\",\n     \"Duis nostrud Ut\"\n    ],\n    \"ipv6\": [\n     \"aliquip ad\",\n     \"pariatur dolore in in et\"\n    ],\n    \"wwpn\": [\n     \"aute cupidatat tempor sit\",\n     \"aliqua deserunt veniam sunt\"\n    ]\n   },\n   \"cluster\": {\n    \"id\": \"Lorem ullamco anim\",\n    \"name\": \"in qui tempor\"\n   },\n   \"details\": {\n    \"appHost\": {\n     \"appServers\": [\n      {\n       \"databaseCount\": 79508069,\n       \"name\": \"adipisicing cup\"\n      },\n      {\n       \"databaseCount\": 8861622,\n       \"name\": \"Duis elit ut ea Lorem\"\n      }\n     ],\n     \"dbConnection\": {\n      \"credentialId\": \"minim aute\",\n      \"tnsAdmin\": \"amet\",\n      \"tnsName\": \"ut nisi minim\",\n      \"type\": \"RMAN_WALLET\"\n     },\n     \"dbCredentialId\": \"irure quis\",\n     \"oracleDBProperties\": {\n      \"rmanProperties\": {\n       \"rmanCredentialId\": \"incididunt laboris ea enim\",\n       \"rmanTnsAdmin\": \"et fugiat\",\n       \"rmanTnsName\": \"enim anim Lorem\"\n      },\n      \"tnsAdmin\": \"Duis elit ea\",\n      \"tnsName\": \"nostrud ut dolore non commodo\"\n     },\n     \"os\": \"enim ex voluptate\",\n     \"phase\": \"NONE\",\n     \"protectionEngineFlow\": \"VMDIRECT\",\n     \"rmanConnection\": {\n      \"credentialId\": \"Duis eu reprehenderit incididunt\",\n      \"tnsAdmin\": \"nostrud dolore velit irure labore\",\n      \"tnsName\": \"tempor fugiat\",\n      \"type\": \"RMAN\"\n     },\n     \"subTypes\": \"MSSQL\"\n    },\n    \"esxCluster\": {\n     \"clusterMoref\": \"irure\",\n     \"networks\": [\n      {\n       \"moref\": \"deserunt exercitation do nostrud\",\n       \"name\": \"dolor ex laborum\"\n      },\n      {\n       \"moref\": \"dolor reprehenderit\",\n       \"name\": \"cillum proident\"\n      }\n     ],\n     \"vCenterUuid\": \"culpa enim veniam ex\"\n    },\n    \"esxHost\": {\n     \"configScratchLocation\": \"est id minim cupidatat\",\n     \"hostMoref\": \"consectetur anim ex fugiat\",\n     \"hostUuid\": \"Duis o\",\n     \"hostVersion\": \"laborum ea Ut\",\n     \"networks\": [\n      {\n       \"moref\": \"voluptate consectetur ut quis\",\n       \"name\": \"ad labore culpa\"\n      },\n      {\n       \"moref\": \"enim\",\n       \"name\": \"esse v\"\n      }\n     ],\n     \"scsiAdapter\": true,\n     \"splitterInfo\": {\n      \"numberOfAttachedRPAClusters\": -58413829,\n      \"rpaConnectivityInfo\": [\n       {\n        \"rpaUid\": -61672073,\n        \"status\": \"OK\"\n       },\n       {\n        \"rpaUid\": 83703107,\n        \"status\": \"WARNING\"\n       }\n      ],\n      \"status\": \"commodo\",\n      \"uid\": \"aliquip \",\n      \"version\": \"non adipisicing Excepteur sunt\"\n     },\n     \"vCenterUuid\": \"nulla incididunt nisi reprehenderit commodo\"\n    }\n   },\n   \"hostname\": \"est ex\",\n   \"id\": \"dolor quis\",\n   \"includedInDiscovery\": true,\n   \"inventorySourceId\": \"aliquip do deserunt\",\n   \"lastDiscovered\": \"in\",\n   \"lastDiscoveryAt\": \"2008-03-28T22:34:06.894Z\",\n   \"lastDiscoveryResult\": {\n    \"error\": \"labore nostrud in dolor\",\n    \"messageID\": \"est pariatur eiusmod qui\",\n    \"remediation\": \"pariatur incididunt labore adipisicing esse\",\n    \"status\": \"OK_WITH_ERRORS\",\n    \"summaries\": [\n     \"commodo consequat Lorem\",\n     \"id est\"\n    ]\n   },\n   \"lastDiscoveryStatus\": \"reprehenderit\",\n   \"lastDiscoveryTaskId\": \"aliqua labore\",\n   \"lastUpdated\": \"veniam quis eu\",\n   \"name\": \"fugiat dolor in exercitation sint\",\n   \"type\": \"GROUP\"\n  }\n ],\n \"page\": {\n  \"number\": 99866065,\n  \"queryState\": \"in sunt nulla reprehenderit\",\n  \"size\": -77287157,\n  \"totalElements\": -16571898,\n  \"totalPages\": -59501420\n }\n}"
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "identity-sources",
					"item": [
						{
							"name": "{Id Source Id}",
							"item": [
								{
									"name": "groups",
									"item": [
										{
											"name": "Get groups belonging to the identity source.",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": true,
															"type": "boolean"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/v2/identity-sources/:IdSourceId/groups?filter=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"identity-sources",
														":IdSourceId",
														"groups"
													],
													"query": [
														{
															"key": "filter",
															"value": "<string>",
															"description": "The filter string that is expressed using PowerProtect Data Manager filter syntax. See Tutorials - Filter the List Result."
														}
													],
													"variable": [
														{
															"id": "ea80188b-a1b3-4554-91eb-4eeab60db9e8",
															"key": "IdSourceId",
															"value": "<string>",
															"type": "string",
															"description": "(Required) Identity source ID."
														}
													]
												},
												"description": "Retrieves the groups belonging to the identity source. These groups can be mapped to roles to provide access to the system and perform operations.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
											},
											"response": [
												{
													"name": "An internal server error occurred. Please contact the system administrator.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: apikey",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/identity-sources/:IdSourceId/groups?filter=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"identity-sources",
																":IdSourceId",
																"groups"
															],
															"query": [
																{
																	"key": "filter",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "IdSourceId"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "The authorization token is either invalid or expired.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: apikey",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/identity-sources/:IdSourceId/groups?filter=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"identity-sources",
																":IdSourceId",
																"groups"
															],
															"query": [
																{
																	"key": "filter",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "IdSourceId"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "The request body is either invalid or is missing the required fields.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: apikey",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/identity-sources/:IdSourceId/groups?filter=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"identity-sources",
																":IdSourceId",
																"groups"
															],
															"query": [
																{
																	"key": "filter",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "IdSourceId"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "The user does not have the proper privileges to perform the action.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: apikey",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/identity-sources/:IdSourceId/groups?filter=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"identity-sources",
																":IdSourceId",
																"groups"
															],
															"query": [
																{
																	"key": "filter",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "IdSourceId"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "The operation is currently unavailable. The system may currently be in maintenance mode.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: apikey",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/identity-sources/:IdSourceId/groups?filter=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"identity-sources",
																":IdSourceId",
																"groups"
															],
															"query": [
																{
																	"key": "filter",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "IdSourceId"
																}
															]
														}
													},
													"status": "Service Unavailable",
													"code": 503,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Successfully retrieved all identity source group names.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: apikey",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/identity-sources/:IdSourceId/groups?filter=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"identity-sources",
																":IdSourceId",
																"groups"
															],
															"query": [
																{
																	"key": "filter",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "IdSourceId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"content\": [\n  {\n   \"name\": \"est\"\n  },\n  {\n   \"name\": \"tempor\"\n  }\n ]\n}"
												}
											]
										},
										{
											"name": "Get users belonging to an identity source group.",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": true,
															"type": "boolean"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/v2/identity-sources/:IdSourceId/groups/:groupName/users",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"identity-sources",
														":IdSourceId",
														"groups",
														":groupName",
														"users"
													],
													"variable": [
														{
															"id": "a34e58d9-015f-4973-8d64-bb8cc747d186",
															"key": "IdSourceId",
															"value": "<string>",
															"type": "string",
															"description": "(Required) The ID of the identity source."
														},
														{
															"id": "4a883190-c122-489f-b4dd-3e887097447e",
															"key": "groupName",
															"value": "<string>",
															"type": "string",
															"description": "(Required) The group name of the identity source."
														}
													]
												},
												"description": "Retrieves the users belonging to an identity source group. This information helps administrators know which users are in each group. The information is useful when creating group-to-role mappings.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
											},
											"response": [
												{
													"name": "The operation is currently unavailable. The system may currently be in maintenance mode.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: apikey",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/identity-sources/:IdSourceId/groups/:groupName/users",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"identity-sources",
																":IdSourceId",
																"groups",
																":groupName",
																"users"
															],
															"variable": [
																{
																	"key": "IdSourceId"
																},
																{
																	"key": "groupName"
																}
															]
														}
													},
													"status": "Service Unavailable",
													"code": 503,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "The request body is either invalid or is missing the required fields.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: apikey",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/identity-sources/:IdSourceId/groups/:groupName/users",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"identity-sources",
																":IdSourceId",
																"groups",
																":groupName",
																"users"
															],
															"variable": [
																{
																	"key": "IdSourceId"
																},
																{
																	"key": "groupName"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Successfully retrieved the usernames within the specified identity source group.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: apikey",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/identity-sources/:IdSourceId/groups/:groupName/users",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"identity-sources",
																":IdSourceId",
																"groups",
																":groupName",
																"users"
															],
															"variable": [
																{
																	"key": "IdSourceId"
																},
																{
																	"key": "groupName"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"content\": [\n  {\n   \"name\": \"deserunt occaecat ut officia\"\n  },\n  {\n   \"name\": \"aliqua consequat qui\"\n  }\n ]\n}"
												},
												{
													"name": "An internal server error occurred. Please contact the system administrator.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: apikey",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/identity-sources/:IdSourceId/groups/:groupName/users",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"identity-sources",
																":IdSourceId",
																"groups",
																":groupName",
																"users"
															],
															"variable": [
																{
																	"key": "IdSourceId"
																},
																{
																	"key": "groupName"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "The authorization token is either invalid or expired.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: apikey",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/identity-sources/:IdSourceId/groups/:groupName/users",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"identity-sources",
																":IdSourceId",
																"groups",
																":groupName",
																"users"
															],
															"variable": [
																{
																	"key": "IdSourceId"
																},
																{
																	"key": "groupName"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "The user does not have the proper privileges to perform the action.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: apikey",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/identity-sources/:IdSourceId/groups/:groupName/users",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"identity-sources",
																":IdSourceId",
																"groups",
																":groupName",
																"users"
															],
															"variable": [
																{
																	"key": "IdSourceId"
																},
																{
																	"key": "groupName"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Delete an identity source.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/identity-sources/:IdSourceId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"identity-sources",
												":IdSourceId"
											],
											"variable": [
												{
													"id": "b737f1fd-3abc-4990-9258-45119fa4c81e",
													"key": "IdSourceId",
													"value": "<string>",
													"type": "string",
													"description": "(Required) Identity source ID."
												}
											]
										},
										"description": "Deletes an identity source by ID. When the identity source is deleted, if any groups are mapped to roles, the users in those groups are no longer able to access the system or perform any operations.\n> This endpoint supports execution by the following roles: admin\n"
									},
									"response": [
										{
											"name": "Conflict.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/identity-sources/:IdSourceId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"identity-sources",
														":IdSourceId"
													],
													"variable": [
														{
															"key": "IdSourceId"
														}
													]
												}
											},
											"status": "Conflict",
											"code": 409,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The request body is either invalid or is missing the required fields.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/identity-sources/:IdSourceId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"identity-sources",
														":IdSourceId"
													],
													"variable": [
														{
															"key": "IdSourceId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The operation is currently unavailable. The system may currently be in maintenance mode.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/identity-sources/:IdSourceId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"identity-sources",
														":IdSourceId"
													],
													"variable": [
														{
															"key": "IdSourceId"
														}
													]
												}
											},
											"status": "Service Unavailable",
											"code": 503,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The authorization token is either invalid or expired.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/identity-sources/:IdSourceId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"identity-sources",
														":IdSourceId"
													],
													"variable": [
														{
															"key": "IdSourceId"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "An internal server error occurred. Please contact the system administrator.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/identity-sources/:IdSourceId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"identity-sources",
														":IdSourceId"
													],
													"variable": [
														{
															"key": "IdSourceId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The user does not have the proper privileges to perform the action.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/identity-sources/:IdSourceId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"identity-sources",
														":IdSourceId"
													],
													"variable": [
														{
															"key": "IdSourceId"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Successfully deleted the identity source.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/identity-sources/:IdSourceId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"identity-sources",
														":IdSourceId"
													],
													"variable": [
														{
															"key": "IdSourceId"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Get an identity source by ID.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/identity-sources/:IdSourceId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"identity-sources",
												":IdSourceId"
											],
											"variable": [
												{
													"id": "9d02b46f-adec-4640-96ab-0392743ba7e2",
													"key": "IdSourceId",
													"value": "<string>",
													"type": "string",
													"description": "(Required) Identity source ID."
												}
											]
										},
										"description": "Retrieves an identity source by ID. When the identity source is retrieved, groups can be mapped to roles to provide access to the system and perform operations.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
									},
									"response": [
										{
											"name": "The identity source was not found.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/identity-sources/:IdSourceId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"identity-sources",
														":IdSourceId"
													],
													"variable": [
														{
															"key": "IdSourceId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The authorization token is either invalid or expired.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/identity-sources/:IdSourceId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"identity-sources",
														":IdSourceId"
													],
													"variable": [
														{
															"key": "IdSourceId"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The operation is currently unavailable. The system may currently be in maintenance mode.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/identity-sources/:IdSourceId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"identity-sources",
														":IdSourceId"
													],
													"variable": [
														{
															"key": "IdSourceId"
														}
													]
												}
											},
											"status": "Service Unavailable",
											"code": 503,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "An internal server error occurred. Please contact the system administrator.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/identity-sources/:IdSourceId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"identity-sources",
														":IdSourceId"
													],
													"variable": [
														{
															"key": "IdSourceId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The user does not have the proper privileges to perform the action.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/identity-sources/:IdSourceId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"identity-sources",
														":IdSourceId"
													],
													"variable": [
														{
															"key": "IdSourceId"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The request body is either invalid or is missing the required fields.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/identity-sources/:IdSourceId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"identity-sources",
														":IdSourceId"
													],
													"variable": [
														{
															"key": "IdSourceId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Successfully retrieved the specified identity source.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/identity-sources/:IdSourceId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"identity-sources",
														":IdSourceId"
													],
													"variable": [
														{
															"key": "IdSourceId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"base\": \"et incididunt amet Ut cupidatat\",\n \"configPassword\": \"et pariatur cupidatat nostrud\",\n \"configUser\": \"consectetur ea\",\n \"createdDate\": \"1945-02-01T07:19:25.609Z\",\n \"description\": \"nu\",\n \"groupMemberAttribute\": \"voluptate ea aute\",\n \"groupNameAttribute\": \"incididunt elit\",\n \"groupObjectTypeName\": \"deserunt adipisicing\",\n \"groupSearchPath\": \"veniam Lorem\",\n \"id\": \"cillum tempor laborum\",\n \"port\": \"reprehenderit ea anim \",\n \"serverAddress\": \"proident\",\n \"serverType\": \"LDAP\",\n \"userIdAttribute\": \"aute anim\",\n \"userObjectTypeName\": \"adipisi\",\n \"userSearchPath\": \"aliqua dolore Excepteur\"\n}"
										}
									]
								},
								{
									"name": "Update an identity source.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"base\": \"<string>\",\n    \"configPassword\": \"<string>\",\n    \"configUser\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"description\": \"<string>\",\n    \"groupMemberAttribute\": \"<string>\",\n    \"groupNameAttribute\": \"<string>\",\n    \"groupObjectTypeName\": \"<string>\",\n    \"groupSearchPath\": \"<string>\",\n    \"id\": \"<string>\",\n    \"port\": \"<string>\",\n    \"serverAddress\": \"<string>\",\n    \"serverType\": \"<string>\",\n    \"userIdAttribute\": \"<string>\",\n    \"userObjectTypeName\": \"<string>\",\n    \"userSearchPath\": \"<string>\"\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/identity-sources/:IdSourceId?validateOnly=<boolean>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"identity-sources",
												":IdSourceId"
											],
											"query": [
												{
													"key": "validateOnly",
													"value": "<boolean>",
													"description": "Checks the connection of the identity source with the provided credentials."
												}
											],
											"variable": [
												{
													"id": "a808b5bf-b6e5-4451-8ceb-4d8b27729df5",
													"key": "IdSourceId",
													"value": "<string>",
													"type": "string",
													"description": "(Required) Identity source ID."
												}
											]
										},
										"description": "Updates an identity source by ID. When updated, the identity source uses the new information to access the LDAP or Windows Active Directory, including the retrieval of groups.\n> This endpoint supports execution by the following roles: admin\n"
									},
									"response": [
										{
											"name": "The operation is currently unavailable. The system may currently be in maintenance mode.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/identity-sources/:IdSourceId?validateOnly=<boolean>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"identity-sources",
														":IdSourceId"
													],
													"query": [
														{
															"key": "validateOnly",
															"value": "<boolean>"
														}
													],
													"variable": [
														{
															"key": "IdSourceId"
														}
													]
												}
											},
											"status": "Service Unavailable",
											"code": 503,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Successfully updated the identity source.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/identity-sources/:IdSourceId?validateOnly=<boolean>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"identity-sources",
														":IdSourceId"
													],
													"query": [
														{
															"key": "validateOnly",
															"value": "<boolean>"
														}
													],
													"variable": [
														{
															"key": "IdSourceId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"base\": \"et incididunt amet Ut cupidatat\",\n \"configPassword\": \"et pariatur cupidatat nostrud\",\n \"configUser\": \"consectetur ea\",\n \"createdDate\": \"1945-02-01T07:19:25.609Z\",\n \"description\": \"nu\",\n \"groupMemberAttribute\": \"voluptate ea aute\",\n \"groupNameAttribute\": \"incididunt elit\",\n \"groupObjectTypeName\": \"deserunt adipisicing\",\n \"groupSearchPath\": \"veniam Lorem\",\n \"id\": \"cillum tempor laborum\",\n \"port\": \"reprehenderit ea anim \",\n \"serverAddress\": \"proident\",\n \"serverType\": \"LDAP\",\n \"userIdAttribute\": \"aute anim\",\n \"userObjectTypeName\": \"adipisi\",\n \"userSearchPath\": \"aliqua dolore Excepteur\"\n}"
										},
										{
											"name": "An internal server error occurred. Please contact the system administrator.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/identity-sources/:IdSourceId?validateOnly=<boolean>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"identity-sources",
														":IdSourceId"
													],
													"query": [
														{
															"key": "validateOnly",
															"value": "<boolean>"
														}
													],
													"variable": [
														{
															"key": "IdSourceId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Conflict. The system may already have an identity source.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/identity-sources/:IdSourceId?validateOnly=<boolean>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"identity-sources",
														":IdSourceId"
													],
													"query": [
														{
															"key": "validateOnly",
															"value": "<boolean>"
														}
													],
													"variable": [
														{
															"key": "IdSourceId"
														}
													]
												}
											},
											"status": "Conflict",
											"code": 409,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The user does not have the proper privileges to perform the action.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/identity-sources/:IdSourceId?validateOnly=<boolean>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"identity-sources",
														":IdSourceId"
													],
													"query": [
														{
															"key": "validateOnly",
															"value": "<boolean>"
														}
													],
													"variable": [
														{
															"key": "IdSourceId"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The authorization token is either invalid or expired.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/identity-sources/:IdSourceId?validateOnly=<boolean>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"identity-sources",
														":IdSourceId"
													],
													"query": [
														{
															"key": "validateOnly",
															"value": "<boolean>"
														}
													],
													"variable": [
														{
															"key": "IdSourceId"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The request body is either invalid or is missing the required fields.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/identity-sources/:IdSourceId?validateOnly=<boolean>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"identity-sources",
														":IdSourceId"
													],
													"query": [
														{
															"key": "validateOnly",
															"value": "<boolean>"
														}
													],
													"variable": [
														{
															"key": "IdSourceId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Connection to the identity source timed out.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/identity-sources/:IdSourceId?validateOnly=<boolean>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"identity-sources",
														":IdSourceId"
													],
													"query": [
														{
															"key": "validateOnly",
															"value": "<boolean>"
														}
													],
													"variable": [
														{
															"key": "IdSourceId"
														}
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The identity source was not found.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/identity-sources/:IdSourceId?validateOnly=<boolean>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"identity-sources",
														":IdSourceId"
													],
													"query": [
														{
															"key": "validateOnly",
															"value": "<boolean>"
														}
													],
													"variable": [
														{
															"key": "IdSourceId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Get all identity sources.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/identity-sources",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"identity-sources"
									]
								},
								"description": "Retrieves all identity sources. When filtering with createdDate, if the value contains a plus sign (+), replace it with %2B. Not replacing the plus sign can cause an unexpected response.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n\n> This endpoint supports pagination with types: random\n"
							},
							"response": [
								{
									"name": "The request body is either invalid or is missing the required fields.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/identity-sources",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"identity-sources"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "The authorization token (access token) is either invalid or expired.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/identity-sources",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"identity-sources"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "The operation is currently unavailable. The system may currently be in maintenance mode.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/identity-sources",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"identity-sources"
											]
										}
									},
									"status": "Service Unavailable",
									"code": 503,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Successfully retrieved the list of identity sources.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/identity-sources",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"identity-sources"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"content\": [\n  {\n   \"base\": \"cons\",\n   \"configPassword\": \"anim quis esse Duis\",\n   \"configUser\": \"aute magna\",\n   \"createdDate\": \"1989-04-03T04:59:39.660Z\",\n   \"description\": \"velit non\",\n   \"groupMemberAttribute\": \"dolor Lorem\",\n   \"groupNameAttribute\": \"irure est\",\n   \"groupObjectTypeName\": \"nisi fugiat ullamco officia\",\n   \"groupSearchPath\": \"cupidatat dolor anim\",\n   \"id\": \"magna dolore ea\",\n   \"port\": \"id fugiat\",\n   \"serverAddress\": \"adipi\",\n   \"serverType\": \"LDAP\",\n   \"userIdAttribute\": \"laboris\",\n   \"userObjectTypeName\": \"non\",\n   \"userSearchPath\": \"proident culpa\"\n  },\n  {\n   \"base\": \"enim veniam commod\",\n   \"configPassword\": \"commodo exercitation\",\n   \"configUser\": \"consectetur consequat commodo\",\n   \"createdDate\": \"1976-10-30T20:59:24.476Z\",\n   \"description\": \"fugiat qui amet est\",\n   \"groupMemberAttribute\": \"ame\",\n   \"groupNameAttribute\": \"in labore et\",\n   \"groupObjectTypeName\": \"Ut sunt ea\",\n   \"groupSearchPath\": \"mollit sit ut\",\n   \"id\": \"magna\",\n   \"port\": \"in laborum reprehenderit magna\",\n   \"serverAddress\": \"cupidatat elit non voluptate\",\n   \"serverType\": \"AD\",\n   \"userIdAttribute\": \"labore laboris\",\n   \"userObjectTypeName\": \"culpa\",\n   \"userSearchPath\": \"non enim \"\n  }\n ],\n \"page\": {\n  \"number\": 65661125,\n  \"queryState\": \"proident ut sint\",\n  \"size\": 59447051,\n  \"totalElements\": -51427085,\n  \"totalPages\": -24153866\n }\n}"
								},
								{
									"name": "An internal server error occurred. Please contact the system administrator.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/identity-sources",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"identity-sources"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "The user does not have the proper privileges to perform the action.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/identity-sources",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"identity-sources"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Create an identity source.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"base\": \"<string>\",\n    \"configPassword\": \"<string>\",\n    \"configUser\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"description\": \"<string>\",\n    \"groupMemberAttribute\": \"<string>\",\n    \"groupNameAttribute\": \"<string>\",\n    \"groupObjectTypeName\": \"<string>\",\n    \"groupSearchPath\": \"<string>\",\n    \"id\": \"<string>\",\n    \"port\": \"<string>\",\n    \"serverAddress\": \"<string>\",\n    \"serverType\": \"<string>\",\n    \"userIdAttribute\": \"<string>\",\n    \"userObjectTypeName\": \"<string>\",\n    \"userSearchPath\": \"<string>\"\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/identity-sources?validateOnly=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"identity-sources"
									],
									"query": [
										{
											"key": "validateOnly",
											"value": "false",
											"description": "Checks the connection of the identity source with the provided credentials."
										}
									]
								},
								"description": "Creates an identity source. The identity source provides login credentials for LDAP or Windows Active Directory users, after mapping groups to roles.\n> This endpoint supports execution by the following roles: admin\n"
							},
							"response": [
								{
									"name": "An internal server error occurred. Please contact the system administrator.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/identity-sources?validateOnly=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"identity-sources"
											],
											"query": [
												{
													"key": "validateOnly",
													"value": "false"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "The user does not have the proper privileges to perform the action.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/identity-sources?validateOnly=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"identity-sources"
											],
											"query": [
												{
													"key": "validateOnly",
													"value": "false"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Connection to the identity source timed out.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/identity-sources?validateOnly=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"identity-sources"
											],
											"query": [
												{
													"key": "validateOnly",
													"value": "false"
												}
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Successfully created the identity source.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/identity-sources?validateOnly=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"identity-sources"
											],
											"query": [
												{
													"key": "validateOnly",
													"value": "false"
												}
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"base\": \"et incididunt amet Ut cupidatat\",\n \"configPassword\": \"et pariatur cupidatat nostrud\",\n \"configUser\": \"consectetur ea\",\n \"createdDate\": \"1945-02-01T07:19:25.609Z\",\n \"description\": \"nu\",\n \"groupMemberAttribute\": \"voluptate ea aute\",\n \"groupNameAttribute\": \"incididunt elit\",\n \"groupObjectTypeName\": \"deserunt adipisicing\",\n \"groupSearchPath\": \"veniam Lorem\",\n \"id\": \"cillum tempor laborum\",\n \"port\": \"reprehenderit ea anim \",\n \"serverAddress\": \"proident\",\n \"serverType\": \"LDAP\",\n \"userIdAttribute\": \"aute anim\",\n \"userObjectTypeName\": \"adipisi\",\n \"userSearchPath\": \"aliqua dolore Excepteur\"\n}"
								},
								{
									"name": "The authorization token (access token) is either invalid or expired.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/identity-sources?validateOnly=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"identity-sources"
											],
											"query": [
												{
													"key": "validateOnly",
													"value": "false"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "The request body is either invalid or is missing the required fields.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/identity-sources?validateOnly=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"identity-sources"
											],
											"query": [
												{
													"key": "validateOnly",
													"value": "false"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "The operation is currently unavailable. The system may currently be in maintenance mode.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/identity-sources?validateOnly=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"identity-sources"
											],
											"query": [
												{
													"key": "validateOnly",
													"value": "false"
												}
											]
										}
									},
									"status": "Service Unavailable",
									"code": 503,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Conflict.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/identity-sources?validateOnly=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"identity-sources"
											],
											"query": [
												{
													"key": "validateOnly",
													"value": "false"
												}
											]
										}
									},
									"status": "Conflict",
									"code": 409,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "inventory-sources",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Delete an inventory source by ID.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"description": "With header \"Prefer: respond-async\", returns HTTP status 202 with 'activityId' in response body.",
												"key": "Prefer",
												"value": "<string>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/inventory-sources/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"inventory-sources",
												":id"
											],
											"variable": [
												{
													"id": "81374ff4-a3ab-4917-9378-53201f0b2e25",
													"key": "id",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The inventory source ID."
												}
											]
										},
										"description": "Deletes an inventory source by the specified ID.\nThese inventory source types are supported: VCENTER, KUBERNETES, DATADOMAINMANAGEMENTCENTER, EXTERNALDATADOMAIN, POWERPROTECTSYSTEM\n> This endpoint supports execution by the following roles: admin\n"
									},
									"response": [
										{
											"name": "Successfully deleted the inventory source.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													},
													{
														"description": "With header \"Prefer: respond-async\", returns HTTP status 202 with 'activityId' in response body.",
														"key": "Prefer",
														"value": "<string>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/inventory-sources/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"inventory-sources",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The requestor is not allowed to perform this operation.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													},
													{
														"description": "With header \"Prefer: respond-async\", returns HTTP status 202 with 'activityId' in response body.",
														"key": "Prefer",
														"value": "<string>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/inventory-sources/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"inventory-sources",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													},
													{
														"description": "With header \"Prefer: respond-async\", returns HTTP status 202 with 'activityId' in response body.",
														"key": "Prefer",
														"value": "<string>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/inventory-sources/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"inventory-sources",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The request is not valid.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													},
													{
														"description": "With header \"Prefer: respond-async\", returns HTTP status 202 with 'activityId' in response body.",
														"key": "Prefer",
														"value": "<string>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/inventory-sources/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"inventory-sources",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													},
													{
														"description": "With header \"Prefer: respond-async\", returns HTTP status 202 with 'activityId' in response body.",
														"key": "Prefer",
														"value": "<string>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/inventory-sources/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"inventory-sources",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "When request with header \"Prefer: respond-async\", the delete inventory source action runs as an asynchronous operation. The response contains the tracking 'activityId'.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													},
													{
														"description": "With header \"Prefer: respond-async\", returns HTTP status 202 with 'activityId' in response body.",
														"key": "Prefer",
														"value": "<string>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/inventory-sources/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"inventory-sources",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"activityId\": \"anim sit amet\"\n}"
										}
									]
								},
								{
									"name": "Get an inventory source by ID.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/inventory-sources/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"inventory-sources",
												":id"
											],
											"variable": [
												{
													"id": "d81cd488-bd92-4def-a6f8-9a4ed306eb0f",
													"key": "id",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The inventory source ID."
												}
											]
										},
										"description": "Retrieves an inventory source by ID.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
									},
									"response": [
										{
											"name": "Successfully returned requested inventory source.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/inventory-sources/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"inventory-sources",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"name\": \"minim cillum\",\n \"type\": \"DEFAULTAPPGROUP\",\n \"address\": \"labore do\",\n \"_embedded\": {\n  \"location\": {\n   \"id\": \"id commodo reprehenderit\",\n   \"name\": \"do sint\"\n  }\n },\n \"credentials\": {\n  \"id\": \"velit minim anim voluptate\"\n },\n \"details\": {\n  \"customAppGroup\": {\n   \"defaultGroup\": true,\n   \"ipRules\": {\n    \"ipList\": [\n     \"ullamco quis\",\n     \"sunt sit elit\"\n    ],\n    \"ipRanges\": [\n     {\n      \"max\": \"tempor fugiat\",\n      \"min\": \"dolor\"\n     },\n     {\n      \"max\": \"dolor reprehenderit Exc\",\n      \"min\": \"mollit\"\n     }\n    ],\n    \"subnetworks\": [\n     {\n      \"ipAddress\": \"Lorem\",\n      \"netmask\": {\n       \"notation\": \"DECIMAL\",\n       \"value\": \"magna deserunt Lorem tempor occaecat\"\n      }\n     },\n     {\n      \"ipAddress\": \"ea ex do\",\n      \"netmask\": {\n       \"notation\": \"DECIMAL\",\n       \"value\": \"dolor tempor laboris\"\n      }\n     }\n    ]\n   },\n   \"oracle\": {\n    \"rman\": {\n     \"rmanCredsId\": \"nisi est Ut ea\",\n     \"rmanTnsAlias\": \"ullamco aliqua Ut\",\n     \"rmanTnsLocation\": \"fugiat pariatur mollit dolore dolo\"\n    },\n    \"tnsAlias\": \"Duis Excepteur\",\n    \"tnsLocation\": \"eu officia Lorem proident cupidatat\"\n   },\n   \"unapprovedHostCount\": -17092643\n  },\n  \"customStorageGroup\": {\n   \"vcmAttributes\": {\n    \"ddboostUserCredsId\": \"cupidatat dolo\",\n    \"external\": true\n   }\n  },\n  \"ppdm\": {\n   \"direction\": \"id mollit\",\n   \"systemId\": \"minim sit nulla\"\n  },\n  \"vCenter\": {\n   \"cloudType\": \"NONE\",\n   \"hosting\": false,\n   \"internal\": true,\n   \"vSphereUiIntegration\": true\n  }\n },\n \"id\": \"consectetur in\",\n \"lastDiscovered\": \"1946-06-10T21:59:46.055Z\",\n \"lastDiscoveryResult\": {\n  \"error\": \"ea esse mollit\",\n  \"messageID\": \"adipisicing mollit\",\n  \"remediation\": \"deserunt nulla aliqua ullam\",\n  \"status\": \"OK_WITH_ERRORS\",\n  \"summaries\": [\n   \"Ut eiusmod voluptate dolor\",\n   \"in\"\n  ]\n },\n \"lastDiscoveryTaskId\": \"aute\",\n \"local\": true,\n \"port\": 79416589,\n \"version\": \"nostrud reprehenderit consequat culpa\"\n}"
										},
										{
											"name": "The requestor is not allowed to perform this operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/inventory-sources/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"inventory-sources",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/inventory-sources/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"inventory-sources",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/inventory-sources/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"inventory-sources",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The requested inventory source does not exist.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/inventory-sources/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"inventory-sources",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Update an inventory source by ID.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"<string>\",\n    \"type\": \"<string>\",\n    \"address\": \"<string>\",\n    \"credentials\": {\n        \"id\": \"<string>\"\n    },\n    \"details\": {\n        \"customAppGroup\": {\n            \"defaultGroup\": \"<boolean>\",\n            \"ipRules\": {\n                \"ipList\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"ipRanges\": [\n                    {\n                        \"max\": \"<string>\",\n                        \"min\": \"<string>\"\n                    },\n                    {\n                        \"max\": \"<string>\",\n                        \"min\": \"<string>\"\n                    }\n                ],\n                \"subnetworks\": [\n                    {\n                        \"ipAddress\": \"<string>\",\n                        \"netmask\": {\n                            \"notation\": \"<string>\",\n                            \"value\": \"<string>\"\n                        }\n                    },\n                    {\n                        \"ipAddress\": \"<string>\",\n                        \"netmask\": {\n                            \"notation\": \"<string>\",\n                            \"value\": \"<string>\"\n                        }\n                    }\n                ]\n            },\n            \"oracle\": {\n                \"rman\": {\n                    \"rmanCredsId\": \"<string>\",\n                    \"rmanTnsAlias\": \"<string>\",\n                    \"rmanTnsLocation\": \"<string>\"\n                },\n                \"tnsAlias\": \"<string>\",\n                \"tnsLocation\": \"<string>\"\n            },\n            \"unapprovedHostCount\": \"<integer>\"\n        },\n        \"customStorageGroup\": {\n            \"vcmAttributes\": {\n                \"ddboostUserCredsId\": \"<string>\",\n                \"external\": \"<boolean>\"\n            }\n        },\n        \"ppdm\": {\n            \"direction\": \"<string>\",\n            \"systemId\": \"<string>\"\n        },\n        \"vCenter\": {\n            \"cloudType\": \"<string>\",\n            \"hosting\": \"<boolean>\",\n            \"internal\": \"<boolean>\",\n            \"vSphereUiIntegration\": \"<boolean>\"\n        }\n    },\n    \"id\": \"<string>\",\n    \"lastDiscoveryResult\": {\n        \"error\": \"<string>\",\n        \"messageID\": \"<string>\",\n        \"remediation\": \"<string>\",\n        \"status\": \"<string>\",\n        \"summaries\": [\n            \"<string>\",\n            \"<string>\"\n        ]\n    },\n    \"local\": \"<boolean>\",\n    \"port\": \"<integer>\"\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/inventory-sources/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"inventory-sources",
												":id"
											],
											"variable": [
												{
													"id": "898cb985-e853-4bfc-98ee-d47e9001f15c",
													"key": "id",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The inventory source ID."
												}
											]
										},
										"description": "Updates an inventory source by ID.\n> This endpoint supports execution by the following roles: admin\n"
									},
									"response": [
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"<string>\",\n    \"type\": \"<string>\",\n    \"address\": \"<string>\",\n    \"credentials\": {\n        \"id\": \"<string>\"\n    },\n    \"details\": {\n        \"customAppGroup\": {\n            \"defaultGroup\": \"<boolean>\",\n            \"ipRules\": {\n                \"ipList\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"ipRanges\": [\n                    {\n                        \"max\": \"<string>\",\n                        \"min\": \"<string>\"\n                    },\n                    {\n                        \"max\": \"<string>\",\n                        \"min\": \"<string>\"\n                    }\n                ],\n                \"subnetworks\": [\n                    {\n                        \"ipAddress\": \"<string>\",\n                        \"netmask\": {\n                            \"notation\": \"<string>\",\n                            \"value\": \"<string>\"\n                        }\n                    },\n                    {\n                        \"ipAddress\": \"<string>\",\n                        \"netmask\": {\n                            \"notation\": \"<string>\",\n                            \"value\": \"<string>\"\n                        }\n                    }\n                ]\n            },\n            \"oracle\": {\n                \"rman\": {\n                    \"rmanCredsId\": \"<string>\",\n                    \"rmanTnsAlias\": \"<string>\",\n                    \"rmanTnsLocation\": \"<string>\"\n                },\n                \"tnsAlias\": \"<string>\",\n                \"tnsLocation\": \"<string>\"\n            },\n            \"unapprovedHostCount\": \"<integer>\"\n        },\n        \"customStorageGroup\": {\n            \"vcmAttributes\": {\n                \"ddboostUserCredsId\": \"<string>\",\n                \"external\": \"<boolean>\"\n            }\n        },\n        \"ppdm\": {\n            \"direction\": \"<string>\",\n            \"systemId\": \"<string>\"\n        },\n        \"vCenter\": {\n            \"cloudType\": \"<string>\",\n            \"hosting\": \"<boolean>\",\n            \"internal\": \"<boolean>\",\n            \"vSphereUiIntegration\": \"<boolean>\"\n        }\n    },\n    \"id\": \"<string>\",\n    \"lastDiscoveryResult\": {\n        \"error\": \"<string>\",\n        \"messageID\": \"<string>\",\n        \"remediation\": \"<string>\",\n        \"status\": \"<string>\",\n        \"summaries\": [\n            \"<string>\",\n            \"<string>\"\n        ]\n    },\n    \"local\": \"<boolean>\",\n    \"port\": \"<integer>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/inventory-sources/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"inventory-sources",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The requestor is not allowed to perform this operation.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"<string>\",\n    \"type\": \"<string>\",\n    \"address\": \"<string>\",\n    \"credentials\": {\n        \"id\": \"<string>\"\n    },\n    \"details\": {\n        \"customAppGroup\": {\n            \"defaultGroup\": \"<boolean>\",\n            \"ipRules\": {\n                \"ipList\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"ipRanges\": [\n                    {\n                        \"max\": \"<string>\",\n                        \"min\": \"<string>\"\n                    },\n                    {\n                        \"max\": \"<string>\",\n                        \"min\": \"<string>\"\n                    }\n                ],\n                \"subnetworks\": [\n                    {\n                        \"ipAddress\": \"<string>\",\n                        \"netmask\": {\n                            \"notation\": \"<string>\",\n                            \"value\": \"<string>\"\n                        }\n                    },\n                    {\n                        \"ipAddress\": \"<string>\",\n                        \"netmask\": {\n                            \"notation\": \"<string>\",\n                            \"value\": \"<string>\"\n                        }\n                    }\n                ]\n            },\n            \"oracle\": {\n                \"rman\": {\n                    \"rmanCredsId\": \"<string>\",\n                    \"rmanTnsAlias\": \"<string>\",\n                    \"rmanTnsLocation\": \"<string>\"\n                },\n                \"tnsAlias\": \"<string>\",\n                \"tnsLocation\": \"<string>\"\n            },\n            \"unapprovedHostCount\": \"<integer>\"\n        },\n        \"customStorageGroup\": {\n            \"vcmAttributes\": {\n                \"ddboostUserCredsId\": \"<string>\",\n                \"external\": \"<boolean>\"\n            }\n        },\n        \"ppdm\": {\n            \"direction\": \"<string>\",\n            \"systemId\": \"<string>\"\n        },\n        \"vCenter\": {\n            \"cloudType\": \"<string>\",\n            \"hosting\": \"<boolean>\",\n            \"internal\": \"<boolean>\",\n            \"vSphereUiIntegration\": \"<boolean>\"\n        }\n    },\n    \"id\": \"<string>\",\n    \"lastDiscoveryResult\": {\n        \"error\": \"<string>\",\n        \"messageID\": \"<string>\",\n        \"remediation\": \"<string>\",\n        \"status\": \"<string>\",\n        \"summaries\": [\n            \"<string>\",\n            \"<string>\"\n        ]\n    },\n    \"local\": \"<boolean>\",\n    \"port\": \"<integer>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/inventory-sources/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"inventory-sources",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The request is not valid.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"<string>\",\n    \"type\": \"<string>\",\n    \"address\": \"<string>\",\n    \"credentials\": {\n        \"id\": \"<string>\"\n    },\n    \"details\": {\n        \"customAppGroup\": {\n            \"defaultGroup\": \"<boolean>\",\n            \"ipRules\": {\n                \"ipList\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"ipRanges\": [\n                    {\n                        \"max\": \"<string>\",\n                        \"min\": \"<string>\"\n                    },\n                    {\n                        \"max\": \"<string>\",\n                        \"min\": \"<string>\"\n                    }\n                ],\n                \"subnetworks\": [\n                    {\n                        \"ipAddress\": \"<string>\",\n                        \"netmask\": {\n                            \"notation\": \"<string>\",\n                            \"value\": \"<string>\"\n                        }\n                    },\n                    {\n                        \"ipAddress\": \"<string>\",\n                        \"netmask\": {\n                            \"notation\": \"<string>\",\n                            \"value\": \"<string>\"\n                        }\n                    }\n                ]\n            },\n            \"oracle\": {\n                \"rman\": {\n                    \"rmanCredsId\": \"<string>\",\n                    \"rmanTnsAlias\": \"<string>\",\n                    \"rmanTnsLocation\": \"<string>\"\n                },\n                \"tnsAlias\": \"<string>\",\n                \"tnsLocation\": \"<string>\"\n            },\n            \"unapprovedHostCount\": \"<integer>\"\n        },\n        \"customStorageGroup\": {\n            \"vcmAttributes\": {\n                \"ddboostUserCredsId\": \"<string>\",\n                \"external\": \"<boolean>\"\n            }\n        },\n        \"ppdm\": {\n            \"direction\": \"<string>\",\n            \"systemId\": \"<string>\"\n        },\n        \"vCenter\": {\n            \"cloudType\": \"<string>\",\n            \"hosting\": \"<boolean>\",\n            \"internal\": \"<boolean>\",\n            \"vSphereUiIntegration\": \"<boolean>\"\n        }\n    },\n    \"id\": \"<string>\",\n    \"lastDiscoveryResult\": {\n        \"error\": \"<string>\",\n        \"messageID\": \"<string>\",\n        \"remediation\": \"<string>\",\n        \"status\": \"<string>\",\n        \"summaries\": [\n            \"<string>\",\n            \"<string>\"\n        ]\n    },\n    \"local\": \"<boolean>\",\n    \"port\": \"<integer>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/inventory-sources/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"inventory-sources",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"<string>\",\n    \"type\": \"<string>\",\n    \"address\": \"<string>\",\n    \"credentials\": {\n        \"id\": \"<string>\"\n    },\n    \"details\": {\n        \"customAppGroup\": {\n            \"defaultGroup\": \"<boolean>\",\n            \"ipRules\": {\n                \"ipList\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"ipRanges\": [\n                    {\n                        \"max\": \"<string>\",\n                        \"min\": \"<string>\"\n                    },\n                    {\n                        \"max\": \"<string>\",\n                        \"min\": \"<string>\"\n                    }\n                ],\n                \"subnetworks\": [\n                    {\n                        \"ipAddress\": \"<string>\",\n                        \"netmask\": {\n                            \"notation\": \"<string>\",\n                            \"value\": \"<string>\"\n                        }\n                    },\n                    {\n                        \"ipAddress\": \"<string>\",\n                        \"netmask\": {\n                            \"notation\": \"<string>\",\n                            \"value\": \"<string>\"\n                        }\n                    }\n                ]\n            },\n            \"oracle\": {\n                \"rman\": {\n                    \"rmanCredsId\": \"<string>\",\n                    \"rmanTnsAlias\": \"<string>\",\n                    \"rmanTnsLocation\": \"<string>\"\n                },\n                \"tnsAlias\": \"<string>\",\n                \"tnsLocation\": \"<string>\"\n            },\n            \"unapprovedHostCount\": \"<integer>\"\n        },\n        \"customStorageGroup\": {\n            \"vcmAttributes\": {\n                \"ddboostUserCredsId\": \"<string>\",\n                \"external\": \"<boolean>\"\n            }\n        },\n        \"ppdm\": {\n            \"direction\": \"<string>\",\n            \"systemId\": \"<string>\"\n        },\n        \"vCenter\": {\n            \"cloudType\": \"<string>\",\n            \"hosting\": \"<boolean>\",\n            \"internal\": \"<boolean>\",\n            \"vSphereUiIntegration\": \"<boolean>\"\n        }\n    },\n    \"id\": \"<string>\",\n    \"lastDiscoveryResult\": {\n        \"error\": \"<string>\",\n        \"messageID\": \"<string>\",\n        \"remediation\": \"<string>\",\n        \"status\": \"<string>\",\n        \"summaries\": [\n            \"<string>\",\n            \"<string>\"\n        ]\n    },\n    \"local\": \"<boolean>\",\n    \"port\": \"<integer>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/inventory-sources/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"inventory-sources",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "Successfully updated the inventory source.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"<string>\",\n    \"type\": \"<string>\",\n    \"address\": \"<string>\",\n    \"credentials\": {\n        \"id\": \"<string>\"\n    },\n    \"details\": {\n        \"customAppGroup\": {\n            \"defaultGroup\": \"<boolean>\",\n            \"ipRules\": {\n                \"ipList\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"ipRanges\": [\n                    {\n                        \"max\": \"<string>\",\n                        \"min\": \"<string>\"\n                    },\n                    {\n                        \"max\": \"<string>\",\n                        \"min\": \"<string>\"\n                    }\n                ],\n                \"subnetworks\": [\n                    {\n                        \"ipAddress\": \"<string>\",\n                        \"netmask\": {\n                            \"notation\": \"<string>\",\n                            \"value\": \"<string>\"\n                        }\n                    },\n                    {\n                        \"ipAddress\": \"<string>\",\n                        \"netmask\": {\n                            \"notation\": \"<string>\",\n                            \"value\": \"<string>\"\n                        }\n                    }\n                ]\n            },\n            \"oracle\": {\n                \"rman\": {\n                    \"rmanCredsId\": \"<string>\",\n                    \"rmanTnsAlias\": \"<string>\",\n                    \"rmanTnsLocation\": \"<string>\"\n                },\n                \"tnsAlias\": \"<string>\",\n                \"tnsLocation\": \"<string>\"\n            },\n            \"unapprovedHostCount\": \"<integer>\"\n        },\n        \"customStorageGroup\": {\n            \"vcmAttributes\": {\n                \"ddboostUserCredsId\": \"<string>\",\n                \"external\": \"<boolean>\"\n            }\n        },\n        \"ppdm\": {\n            \"direction\": \"<string>\",\n            \"systemId\": \"<string>\"\n        },\n        \"vCenter\": {\n            \"cloudType\": \"<string>\",\n            \"hosting\": \"<boolean>\",\n            \"internal\": \"<boolean>\",\n            \"vSphereUiIntegration\": \"<boolean>\"\n        }\n    },\n    \"id\": \"<string>\",\n    \"lastDiscoveryResult\": {\n        \"error\": \"<string>\",\n        \"messageID\": \"<string>\",\n        \"remediation\": \"<string>\",\n        \"status\": \"<string>\",\n        \"summaries\": [\n            \"<string>\",\n            \"<string>\"\n        ]\n    },\n    \"local\": \"<boolean>\",\n    \"port\": \"<integer>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/inventory-sources/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"inventory-sources",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"name\": \"minim cillum\",\n \"type\": \"DEFAULTAPPGROUP\",\n \"address\": \"labore do\",\n \"_embedded\": {\n  \"location\": {\n   \"id\": \"id commodo reprehenderit\",\n   \"name\": \"do sint\"\n  }\n },\n \"credentials\": {\n  \"id\": \"velit minim anim voluptate\"\n },\n \"details\": {\n  \"customAppGroup\": {\n   \"defaultGroup\": true,\n   \"ipRules\": {\n    \"ipList\": [\n     \"ullamco quis\",\n     \"sunt sit elit\"\n    ],\n    \"ipRanges\": [\n     {\n      \"max\": \"tempor fugiat\",\n      \"min\": \"dolor\"\n     },\n     {\n      \"max\": \"dolor reprehenderit Exc\",\n      \"min\": \"mollit\"\n     }\n    ],\n    \"subnetworks\": [\n     {\n      \"ipAddress\": \"Lorem\",\n      \"netmask\": {\n       \"notation\": \"DECIMAL\",\n       \"value\": \"magna deserunt Lorem tempor occaecat\"\n      }\n     },\n     {\n      \"ipAddress\": \"ea ex do\",\n      \"netmask\": {\n       \"notation\": \"DECIMAL\",\n       \"value\": \"dolor tempor laboris\"\n      }\n     }\n    ]\n   },\n   \"oracle\": {\n    \"rman\": {\n     \"rmanCredsId\": \"nisi est Ut ea\",\n     \"rmanTnsAlias\": \"ullamco aliqua Ut\",\n     \"rmanTnsLocation\": \"fugiat pariatur mollit dolore dolo\"\n    },\n    \"tnsAlias\": \"Duis Excepteur\",\n    \"tnsLocation\": \"eu officia Lorem proident cupidatat\"\n   },\n   \"unapprovedHostCount\": -17092643\n  },\n  \"customStorageGroup\": {\n   \"vcmAttributes\": {\n    \"ddboostUserCredsId\": \"cupidatat dolo\",\n    \"external\": true\n   }\n  },\n  \"ppdm\": {\n   \"direction\": \"id mollit\",\n   \"systemId\": \"minim sit nulla\"\n  },\n  \"vCenter\": {\n   \"cloudType\": \"NONE\",\n   \"hosting\": false,\n   \"internal\": true,\n   \"vSphereUiIntegration\": true\n  }\n },\n \"id\": \"consectetur in\",\n \"lastDiscovered\": \"1946-06-10T21:59:46.055Z\",\n \"lastDiscoveryResult\": {\n  \"error\": \"ea esse mollit\",\n  \"messageID\": \"adipisicing mollit\",\n  \"remediation\": \"deserunt nulla aliqua ullam\",\n  \"status\": \"OK_WITH_ERRORS\",\n  \"summaries\": [\n   \"Ut eiusmod voluptate dolor\",\n   \"in\"\n  ]\n },\n \"lastDiscoveryTaskId\": \"aute\",\n \"local\": true,\n \"port\": 79416589,\n \"version\": \"nostrud reprehenderit consequat culpa\"\n}"
										}
									]
								},
								{
									"name": "Get all storage systems associated to the inventory source.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/inventory-sources/:id/storage-systems?page=1&pageSize=100&filter=<string>&orderby=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"inventory-sources",
												":id",
												"storage-systems"
											],
											"query": [
												{
													"key": "page",
													"value": "1",
													"description": "The page number to be returned. Must not be less than 1. See Tutorials - Page the List Result."
												},
												{
													"key": "pageSize",
													"value": "100",
													"description": "The number of resources to be returned. Must not be less than 1. See Tutorials - Page the List Result."
												},
												{
													"key": "filter",
													"value": "<string>",
													"description": "The filter string that is expressed using PowerProtect Data Manager filter syntax. See Tutorials - Filter the List Result."
												},
												{
													"key": "orderby",
													"value": "<string>",
													"description": "The attributes/fields to be sorted by. This parameter can combine with sort direction \"ASC\" or \"DESC\". Default direction is ASC. See Tutorials - Sort the List Result."
												}
											],
											"variable": [
												{
													"id": "54defa1f-eed2-4b86-8101-36a235751544",
													"key": "id",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The inventory source ID."
												}
											]
										},
										"description": "Retrieves all storage systems associated to the inventory source.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n\n> This endpoint supports pagination with types: random\n"
									},
									"response": [
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/inventory-sources/:id/storage-systems?page=1&pageSize=100&filter=<string>&orderby=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"inventory-sources",
														":id",
														"storage-systems"
													],
													"query": [
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "pageSize",
															"value": "100"
														},
														{
															"key": "filter",
															"value": "<string>"
														},
														{
															"key": "orderby",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "Successfully returned available storage systems.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/inventory-sources/:id/storage-systems?page=1&pageSize=100&filter=<string>&orderby=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"inventory-sources",
														":id",
														"storage-systems"
													],
													"query": [
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "pageSize",
															"value": "100"
														},
														{
															"key": "filter",
															"value": "<string>"
														},
														{
															"key": "orderby",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"_embedded\": {\n  \"inventorySource\": {\n   \"id\": \"ut pr\",\n   \"name\": \"in aliqua laborum velit ut\"\n  },\n  \"location\": {\n   \"id\": \"minim velit occaec\",\n   \"name\": \"eu enim incididunt\"\n  }\n },\n \"capacityUtilization\": -10461531.186664835,\n \"createdAt\": \"1947-06-29T04:30:05.258Z\",\n \"ddLocationId\": \"qui eu magna nulla exercitation\",\n \"details\": {\n  \"dataDomain\": {\n   \"capacityQuotasSupported\": false,\n   \"cloudEnabled\": true,\n   \"cloudTierLicensed\": true,\n   \"compressionFactor\": -80016863.0041794,\n   \"ddboostLicensed\": false,\n   \"encryptionLicensed\": false,\n   \"model\": \"velit\",\n   \"percentUsed\": -26061162.54359816,\n   \"preferredInterfaces\": [\n    {\n     \"networkAddress\": \"commodo ex\",\n     \"networkLabel\": \"est Ut\",\n     \"networkName\": \"mollit consectetur\",\n     \"speed\": -96360334.24576315\n    },\n    {\n     \"networkAddress\": \"enim eu qui irure\",\n     \"networkLabel\": \"nostrud id\",\n     \"networkName\": \"deserunt proiden\",\n     \"speed\": -67616312.84497796\n    }\n   ],\n   \"preferredNetworkSupported\": false,\n   \"replicationEncryptionEnabled\": true,\n   \"replicationLicensed\": false,\n   \"retentionLockComplianceLicensed\": true,\n   \"retentionLockGovernanceLicensed\": true,\n   \"retentionLockSupported\": true,\n   \"serialNumber\": \"ea nulla cillum\",\n   \"streamQuotasSupported\": false,\n   \"totalSize\": 82853756.64297944,\n   \"totalUsed\": -94007944.63676578,\n   \"vdiskEnabled\": false,\n   \"version\": \"dolore labore consequat in\"\n  },\n  \"recoverPoint\": {\n   \"protectedSpace\": -31529236.89296134,\n   \"serialNumber\": \"culpa cillum\",\n   \"totalCapacityManaged\": -73517781.32602616,\n   \"version\": \"mollit dolor dolor\"\n  },\n  \"vmax\": {\n   \"cacheSize\": 56940815,\n   \"model\": \"eu occaecat do ad in\",\n   \"serialNumber\": \"sint minim\",\n   \"totalSize\": -45955760.6183774,\n   \"totalUsed\": -74854195.70268928\n  },\n  \"xio\": {\n   \"serialNumber\": \"ea aliqua\",\n   \"totalSize\": -79904799.89000642,\n   \"totalUsed\": 11255428.16673772,\n   \"version\": \"irure in\"\n  }\n },\n \"id\": \"est laborum esse qui\",\n \"lastDiscovered\": \"1967-05-15T21:23:49.633Z\",\n \"lastDiscoveryAt\": \"2001-10-09T08:31:03.052Z\",\n \"lastDiscoveryResult\": {\n  \"error\": \"irure nostrud aute consectetur consequat\",\n  \"messageID\": \"cillum officia incididunt\",\n  \"remediation\": \"amet voluptate in\",\n  \"status\": \"UNKNOWN\",\n  \"summaries\": [\n   \"laborum cillum\",\n   \"dolore deserunt minim\"\n  ]\n },\n \"lastDiscoveryStatus\": \"DETECTED\",\n \"lastDiscoveryTaskId\": \"occaecat proident et\",\n \"local\": true,\n \"locationId\": \"deserunt consectetur esse nisi\",\n \"name\": \"labore sit incididunt\",\n \"operatingSystem\": {\n  \"name\": \"est\",\n  \"version\": \"cupidatat et sed laborum\"\n },\n \"type\": \"CDR_REGION_SYSTEM\",\n \"updatedAt\": \"2004-03-28T10:12:22.259Z\"\n}"
										},
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/inventory-sources/:id/storage-systems?page=1&pageSize=100&filter=<string>&orderby=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"inventory-sources",
														":id",
														"storage-systems"
													],
													"query": [
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "pageSize",
															"value": "100"
														},
														{
															"key": "filter",
															"value": "<string>"
														},
														{
															"key": "orderby",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The requestor is not allowed to perform this operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/inventory-sources/:id/storage-systems?page=1&pageSize=100&filter=<string>&orderby=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"inventory-sources",
														":id",
														"storage-systems"
													],
													"query": [
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "pageSize",
															"value": "100"
														},
														{
															"key": "filter",
															"value": "<string>"
														},
														{
															"key": "orderby",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Get all inventory sources.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/inventory-sources?page=1&pageSize=100&filter=<string>&orderby=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"inventory-sources"
									],
									"query": [
										{
											"key": "page",
											"value": "1",
											"description": "The page number to be returned. Must not be less than 1. See Tutorials - Page the List Result."
										},
										{
											"key": "pageSize",
											"value": "100",
											"description": "The number of resources to be returned. Must not be less than 1. See Tutorials - Page the List Result."
										},
										{
											"key": "filter",
											"value": "<string>",
											"description": "The filter string that is expressed using PowerProtect Data Manager filter syntax. See Tutorials - Filter the List Result."
										},
										{
											"key": "orderby",
											"value": "<string>",
											"description": "The attributes/fields to be sorted by. This parameter can combine with sort direction \"ASC\" or \"DESC\". Default direction is ASC. See Tutorials - Sort the List Result."
										}
									]
								},
								"description": "Retrieves all inventory sources in the PowerProtect Data Manager.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n\n> This endpoint supports pagination with types: random\n"
							},
							"response": [
								{
									"name": "An unexpected error prevented the server from fulfilling your request.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/inventory-sources?page=1&pageSize=100&filter=<string>&orderby=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"inventory-sources"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "<string>"
												},
												{
													"key": "orderby",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "The requestor is not authorized to perform this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/inventory-sources?page=1&pageSize=100&filter=<string>&orderby=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"inventory-sources"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "<string>"
												},
												{
													"key": "orderby",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "The requestor is not allowed to perform this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/inventory-sources?page=1&pageSize=100&filter=<string>&orderby=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"inventory-sources"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "<string>"
												},
												{
													"key": "orderby",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "Successfully returned available inventory sources.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/inventory-sources?page=1&pageSize=100&filter=<string>&orderby=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"inventory-sources"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "<string>"
												},
												{
													"key": "orderby",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"content\": [\n  {\n   \"name\": \"nulla ipsum exercitation\",\n   \"type\": \"DEFAULTAPPGROUP\",\n   \"address\": \"sed occaecat\",\n   \"_embedded\": {\n    \"location\": {\n     \"id\": \"sint\",\n     \"name\": \"minim ad sit\"\n    }\n   },\n   \"credentials\": {\n    \"id\": \"nisi Duis ullamco velit sunt\"\n   },\n   \"details\": {\n    \"customAppGroup\": {\n     \"defaultGroup\": false,\n     \"ipRules\": {\n      \"ipList\": [\n       \"sed\",\n       \"ad\"\n      ],\n      \"ipRanges\": [\n       {\n        \"max\": \"reprehenderit commodo qui occaecat aute\",\n        \"min\": \"commodo Duis\"\n       },\n       {\n        \"max\": \"nostrud voluptate proi\",\n        \"min\": \"adipisicing ipsum enim est\"\n       }\n      ],\n      \"subnetworks\": [\n       {\n        \"ipAddress\": \"magna mollit eiusmod ea\",\n        \"netmask\": {\n         \"notation\": \"DECIMAL\",\n         \"value\": \"dolor tempor officia qui\"\n        }\n       },\n       {\n        \"ipAddress\": \"adipisicing esse ipsum in occaecat\",\n        \"netmask\": {\n         \"notation\": \"CIDR\",\n         \"value\": \"enim nisi culpa\"\n        }\n       }\n      ]\n     },\n     \"oracle\": {\n      \"rman\": {\n       \"rmanCredsId\": \"est ad\",\n       \"rmanTnsAlias\": \"est Duis cillum\",\n       \"rmanTnsLocation\": \"fugiat\"\n      },\n      \"tnsAlias\": \"Ut magna nisi\",\n      \"tnsLocation\": \"veniam et Duis voluptate in\"\n     },\n     \"unapprovedHostCount\": -78683744\n    },\n    \"customStorageGroup\": {\n     \"vcmAttributes\": {\n      \"ddboostUserCredsId\": \"consectetur\",\n      \"external\": false\n     }\n    },\n    \"ppdm\": {\n     \"direction\": \"ipsum aute\",\n     \"systemId\": \"nulla Lorem laborum dolor et\"\n    },\n    \"vCenter\": {\n     \"cloudType\": \"NONE\",\n     \"hosting\": false,\n     \"internal\": false,\n     \"vSphereUiIntegration\": true\n    }\n   },\n   \"id\": \"dolore tempor velit\",\n   \"lastDiscovered\": \"1983-10-14T00:00:35.010Z\",\n   \"lastDiscoveryResult\": {\n    \"error\": \"labore reprehenderit nostrud\",\n    \"messageID\": \"veniam sunt esse sed\",\n    \"remediation\": \"dolore incididunt\",\n    \"status\": \"UNKNOWN\",\n    \"summaries\": [\n     \"eu commodo\",\n     \"eiusmod irure\"\n    ]\n   },\n   \"lastDiscoveryTaskId\": \"exercitation mollit occaecat ad\",\n   \"local\": true,\n   \"port\": 18479925,\n   \"version\": \"nulla quis\"\n  },\n  {\n   \"name\": \"officia velit eu\",\n   \"type\": \"DATADOMAINMANAGEMENTCENTER\",\n   \"address\": \"amet eu irure ut aliquip\",\n   \"_embedded\": {\n    \"location\": {\n     \"id\": \"qui Duis Ut non\",\n     \"name\": \"fugiat id dolor\"\n    }\n   },\n   \"credentials\": {\n    \"id\": \"ad amet\"\n   },\n   \"details\": {\n    \"customAppGroup\": {\n     \"defaultGroup\": false,\n     \"ipRules\": {\n      \"ipList\": [\n       \"aliqua ullamco dolore aliquip\",\n       \"proident quis reprehenderit id ullamco\"\n      ],\n      \"ipRanges\": [\n       {\n        \"max\": \"ad\",\n        \"min\": \"quis\"\n       },\n       {\n        \"max\": \"minim \",\n        \"min\": \"sunt id voluptate\"\n       }\n      ],\n      \"subnetworks\": [\n       {\n        \"ipAddress\": \"eiusmod\",\n        \"netmask\": {\n         \"notation\": \"DECIMAL\",\n         \"value\": \"Ut sunt\"\n        }\n       },\n       {\n        \"ipAddress\": \"Ut\",\n        \"netmask\": {\n         \"notation\": \"CIDR\",\n         \"value\": \"et ipsum\"\n        }\n       }\n      ]\n     },\n     \"oracle\": {\n      \"rman\": {\n       \"rmanCredsId\": \"aute dolor consequat\",\n       \"rmanTnsAlias\": \"Ut veniam\",\n       \"rmanTnsLocation\": \"id veniam commodo\"\n      },\n      \"tnsAlias\": \"ea sunt nost\",\n      \"tnsLocation\": \"occaecat\"\n     },\n     \"unapprovedHostCount\": 66630133\n    },\n    \"customStorageGroup\": {\n     \"vcmAttributes\": {\n      \"ddboostUserCredsId\": \"in ipsum deserunt sunt\",\n      \"external\": false\n     }\n    },\n    \"ppdm\": {\n     \"direction\": \"eu anim dolore\",\n     \"systemId\": \"amet dolor officia\"\n    },\n    \"vCenter\": {\n     \"cloudType\": \"VMC\",\n     \"hosting\": false,\n     \"internal\": true,\n     \"vSphereUiIntegration\": true\n    }\n   },\n   \"id\": \"id non et\",\n   \"lastDiscovered\": \"1954-10-28T15:29:10.163Z\",\n   \"lastDiscoveryResult\": {\n    \"error\": \"sint commodo magna\",\n    \"messageID\": \"in\",\n    \"remediation\": \"c\",\n    \"status\": \"OK_WITH_ERRORS\",\n    \"summaries\": [\n     \"magna consequat laborum\",\n     \"tempor Lorem esse et\"\n    ]\n   },\n   \"lastDiscoveryTaskId\": \"ea quis\",\n   \"local\": true,\n   \"port\": -85334073,\n   \"version\": \"t\"\n  }\n ],\n \"page\": {\n  \"number\": -89234499,\n  \"queryState\": \"ullamco\",\n  \"size\": 59290428,\n  \"totalElements\": 36484491,\n  \"totalPages\": 77590510\n }\n}"
								}
							]
						},
						{
							"name": "Create an inventory source.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<string>\",\n    \"type\": \"<string>\",\n    \"address\": \"<string>\",\n    \"credentials\": {\n        \"id\": \"<string>\"\n    },\n    \"details\": {\n        \"customAppGroup\": {\n            \"defaultGroup\": \"<boolean>\",\n            \"ipRules\": {\n                \"ipList\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"ipRanges\": [\n                    {\n                        \"max\": \"<string>\",\n                        \"min\": \"<string>\"\n                    },\n                    {\n                        \"max\": \"<string>\",\n                        \"min\": \"<string>\"\n                    }\n                ],\n                \"subnetworks\": [\n                    {\n                        \"ipAddress\": \"<string>\",\n                        \"netmask\": {\n                            \"notation\": \"<string>\",\n                            \"value\": \"<string>\"\n                        }\n                    },\n                    {\n                        \"ipAddress\": \"<string>\",\n                        \"netmask\": {\n                            \"notation\": \"<string>\",\n                            \"value\": \"<string>\"\n                        }\n                    }\n                ]\n            },\n            \"oracle\": {\n                \"rman\": {\n                    \"rmanCredsId\": \"<string>\",\n                    \"rmanTnsAlias\": \"<string>\",\n                    \"rmanTnsLocation\": \"<string>\"\n                },\n                \"tnsAlias\": \"<string>\",\n                \"tnsLocation\": \"<string>\"\n            },\n            \"unapprovedHostCount\": \"<integer>\"\n        },\n        \"customStorageGroup\": {\n            \"vcmAttributes\": {\n                \"ddboostUserCredsId\": \"<string>\",\n                \"external\": \"<boolean>\"\n            }\n        },\n        \"ppdm\": {\n            \"direction\": \"<string>\",\n            \"systemId\": \"<string>\"\n        },\n        \"vCenter\": {\n            \"cloudType\": \"<string>\",\n            \"hosting\": \"<boolean>\",\n            \"internal\": \"<boolean>\",\n            \"vSphereUiIntegration\": \"<boolean>\"\n        }\n    },\n    \"id\": \"<string>\",\n    \"lastDiscoveryResult\": {\n        \"error\": \"<string>\",\n        \"messageID\": \"<string>\",\n        \"remediation\": \"<string>\",\n        \"status\": \"<string>\",\n        \"summaries\": [\n            \"<string>\",\n            \"<string>\"\n        ]\n    },\n    \"local\": \"<boolean>\",\n    \"port\": \"<integer>\"\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/inventory-sources",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"inventory-sources"
									]
								},
								"description": "Creates an inventory source.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
							},
							"response": [
								{
									"name": "Successfully created the inventory source.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"<string>\",\n    \"type\": \"<string>\",\n    \"address\": \"<string>\",\n    \"credentials\": {\n        \"id\": \"<string>\"\n    },\n    \"details\": {\n        \"customAppGroup\": {\n            \"defaultGroup\": \"<boolean>\",\n            \"ipRules\": {\n                \"ipList\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"ipRanges\": [\n                    {\n                        \"max\": \"<string>\",\n                        \"min\": \"<string>\"\n                    },\n                    {\n                        \"max\": \"<string>\",\n                        \"min\": \"<string>\"\n                    }\n                ],\n                \"subnetworks\": [\n                    {\n                        \"ipAddress\": \"<string>\",\n                        \"netmask\": {\n                            \"notation\": \"<string>\",\n                            \"value\": \"<string>\"\n                        }\n                    },\n                    {\n                        \"ipAddress\": \"<string>\",\n                        \"netmask\": {\n                            \"notation\": \"<string>\",\n                            \"value\": \"<string>\"\n                        }\n                    }\n                ]\n            },\n            \"oracle\": {\n                \"rman\": {\n                    \"rmanCredsId\": \"<string>\",\n                    \"rmanTnsAlias\": \"<string>\",\n                    \"rmanTnsLocation\": \"<string>\"\n                },\n                \"tnsAlias\": \"<string>\",\n                \"tnsLocation\": \"<string>\"\n            },\n            \"unapprovedHostCount\": \"<integer>\"\n        },\n        \"customStorageGroup\": {\n            \"vcmAttributes\": {\n                \"ddboostUserCredsId\": \"<string>\",\n                \"external\": \"<boolean>\"\n            }\n        },\n        \"ppdm\": {\n            \"direction\": \"<string>\",\n            \"systemId\": \"<string>\"\n        },\n        \"vCenter\": {\n            \"cloudType\": \"<string>\",\n            \"hosting\": \"<boolean>\",\n            \"internal\": \"<boolean>\",\n            \"vSphereUiIntegration\": \"<boolean>\"\n        }\n    },\n    \"id\": \"<string>\",\n    \"lastDiscoveryResult\": {\n        \"error\": \"<string>\",\n        \"messageID\": \"<string>\",\n        \"remediation\": \"<string>\",\n        \"status\": \"<string>\",\n        \"summaries\": [\n            \"<string>\",\n            \"<string>\"\n        ]\n    },\n    \"local\": \"<boolean>\",\n    \"port\": \"<integer>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/inventory-sources",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"inventory-sources"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"name\": \"minim cillum\",\n \"type\": \"DEFAULTAPPGROUP\",\n \"address\": \"labore do\",\n \"_embedded\": {\n  \"location\": {\n   \"id\": \"id commodo reprehenderit\",\n   \"name\": \"do sint\"\n  }\n },\n \"credentials\": {\n  \"id\": \"velit minim anim voluptate\"\n },\n \"details\": {\n  \"customAppGroup\": {\n   \"defaultGroup\": true,\n   \"ipRules\": {\n    \"ipList\": [\n     \"ullamco quis\",\n     \"sunt sit elit\"\n    ],\n    \"ipRanges\": [\n     {\n      \"max\": \"tempor fugiat\",\n      \"min\": \"dolor\"\n     },\n     {\n      \"max\": \"dolor reprehenderit Exc\",\n      \"min\": \"mollit\"\n     }\n    ],\n    \"subnetworks\": [\n     {\n      \"ipAddress\": \"Lorem\",\n      \"netmask\": {\n       \"notation\": \"DECIMAL\",\n       \"value\": \"magna deserunt Lorem tempor occaecat\"\n      }\n     },\n     {\n      \"ipAddress\": \"ea ex do\",\n      \"netmask\": {\n       \"notation\": \"DECIMAL\",\n       \"value\": \"dolor tempor laboris\"\n      }\n     }\n    ]\n   },\n   \"oracle\": {\n    \"rman\": {\n     \"rmanCredsId\": \"nisi est Ut ea\",\n     \"rmanTnsAlias\": \"ullamco aliqua Ut\",\n     \"rmanTnsLocation\": \"fugiat pariatur mollit dolore dolo\"\n    },\n    \"tnsAlias\": \"Duis Excepteur\",\n    \"tnsLocation\": \"eu officia Lorem proident cupidatat\"\n   },\n   \"unapprovedHostCount\": -17092643\n  },\n  \"customStorageGroup\": {\n   \"vcmAttributes\": {\n    \"ddboostUserCredsId\": \"cupidatat dolo\",\n    \"external\": true\n   }\n  },\n  \"ppdm\": {\n   \"direction\": \"id mollit\",\n   \"systemId\": \"minim sit nulla\"\n  },\n  \"vCenter\": {\n   \"cloudType\": \"NONE\",\n   \"hosting\": false,\n   \"internal\": true,\n   \"vSphereUiIntegration\": true\n  }\n },\n \"id\": \"consectetur in\",\n \"lastDiscovered\": \"1946-06-10T21:59:46.055Z\",\n \"lastDiscoveryResult\": {\n  \"error\": \"ea esse mollit\",\n  \"messageID\": \"adipisicing mollit\",\n  \"remediation\": \"deserunt nulla aliqua ullam\",\n  \"status\": \"OK_WITH_ERRORS\",\n  \"summaries\": [\n   \"Ut eiusmod voluptate dolor\",\n   \"in\"\n  ]\n },\n \"lastDiscoveryTaskId\": \"aute\",\n \"local\": true,\n \"port\": 79416589,\n \"version\": \"nostrud reprehenderit consequat culpa\"\n}"
								},
								{
									"name": "Successful operation.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"<string>\",\n    \"type\": \"<string>\",\n    \"address\": \"<string>\",\n    \"credentials\": {\n        \"id\": \"<string>\"\n    },\n    \"details\": {\n        \"customAppGroup\": {\n            \"defaultGroup\": \"<boolean>\",\n            \"ipRules\": {\n                \"ipList\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"ipRanges\": [\n                    {\n                        \"max\": \"<string>\",\n                        \"min\": \"<string>\"\n                    },\n                    {\n                        \"max\": \"<string>\",\n                        \"min\": \"<string>\"\n                    }\n                ],\n                \"subnetworks\": [\n                    {\n                        \"ipAddress\": \"<string>\",\n                        \"netmask\": {\n                            \"notation\": \"<string>\",\n                            \"value\": \"<string>\"\n                        }\n                    },\n                    {\n                        \"ipAddress\": \"<string>\",\n                        \"netmask\": {\n                            \"notation\": \"<string>\",\n                            \"value\": \"<string>\"\n                        }\n                    }\n                ]\n            },\n            \"oracle\": {\n                \"rman\": {\n                    \"rmanCredsId\": \"<string>\",\n                    \"rmanTnsAlias\": \"<string>\",\n                    \"rmanTnsLocation\": \"<string>\"\n                },\n                \"tnsAlias\": \"<string>\",\n                \"tnsLocation\": \"<string>\"\n            },\n            \"unapprovedHostCount\": \"<integer>\"\n        },\n        \"customStorageGroup\": {\n            \"vcmAttributes\": {\n                \"ddboostUserCredsId\": \"<string>\",\n                \"external\": \"<boolean>\"\n            }\n        },\n        \"ppdm\": {\n            \"direction\": \"<string>\",\n            \"systemId\": \"<string>\"\n        },\n        \"vCenter\": {\n            \"cloudType\": \"<string>\",\n            \"hosting\": \"<boolean>\",\n            \"internal\": \"<boolean>\",\n            \"vSphereUiIntegration\": \"<boolean>\"\n        }\n    },\n    \"id\": \"<string>\",\n    \"lastDiscoveryResult\": {\n        \"error\": \"<string>\",\n        \"messageID\": \"<string>\",\n        \"remediation\": \"<string>\",\n        \"status\": \"<string>\",\n        \"summaries\": [\n            \"<string>\",\n            \"<string>\"\n        ]\n    },\n    \"local\": \"<boolean>\",\n    \"port\": \"<integer>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/inventory-sources",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"inventory-sources"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"name\": \"minim cillum\",\n \"type\": \"DEFAULTAPPGROUP\",\n \"address\": \"labore do\",\n \"_embedded\": {\n  \"location\": {\n   \"id\": \"id commodo reprehenderit\",\n   \"name\": \"do sint\"\n  }\n },\n \"credentials\": {\n  \"id\": \"velit minim anim voluptate\"\n },\n \"details\": {\n  \"customAppGroup\": {\n   \"defaultGroup\": true,\n   \"ipRules\": {\n    \"ipList\": [\n     \"ullamco quis\",\n     \"sunt sit elit\"\n    ],\n    \"ipRanges\": [\n     {\n      \"max\": \"tempor fugiat\",\n      \"min\": \"dolor\"\n     },\n     {\n      \"max\": \"dolor reprehenderit Exc\",\n      \"min\": \"mollit\"\n     }\n    ],\n    \"subnetworks\": [\n     {\n      \"ipAddress\": \"Lorem\",\n      \"netmask\": {\n       \"notation\": \"DECIMAL\",\n       \"value\": \"magna deserunt Lorem tempor occaecat\"\n      }\n     },\n     {\n      \"ipAddress\": \"ea ex do\",\n      \"netmask\": {\n       \"notation\": \"DECIMAL\",\n       \"value\": \"dolor tempor laboris\"\n      }\n     }\n    ]\n   },\n   \"oracle\": {\n    \"rman\": {\n     \"rmanCredsId\": \"nisi est Ut ea\",\n     \"rmanTnsAlias\": \"ullamco aliqua Ut\",\n     \"rmanTnsLocation\": \"fugiat pariatur mollit dolore dolo\"\n    },\n    \"tnsAlias\": \"Duis Excepteur\",\n    \"tnsLocation\": \"eu officia Lorem proident cupidatat\"\n   },\n   \"unapprovedHostCount\": -17092643\n  },\n  \"customStorageGroup\": {\n   \"vcmAttributes\": {\n    \"ddboostUserCredsId\": \"cupidatat dolo\",\n    \"external\": true\n   }\n  },\n  \"ppdm\": {\n   \"direction\": \"id mollit\",\n   \"systemId\": \"minim sit nulla\"\n  },\n  \"vCenter\": {\n   \"cloudType\": \"NONE\",\n   \"hosting\": false,\n   \"internal\": true,\n   \"vSphereUiIntegration\": true\n  }\n },\n \"id\": \"consectetur in\",\n \"lastDiscovered\": \"1946-06-10T21:59:46.055Z\",\n \"lastDiscoveryResult\": {\n  \"error\": \"ea esse mollit\",\n  \"messageID\": \"adipisicing mollit\",\n  \"remediation\": \"deserunt nulla aliqua ullam\",\n  \"status\": \"OK_WITH_ERRORS\",\n  \"summaries\": [\n   \"Ut eiusmod voluptate dolor\",\n   \"in\"\n  ]\n },\n \"lastDiscoveryTaskId\": \"aute\",\n \"local\": true,\n \"port\": 79416589,\n \"version\": \"nostrud reprehenderit consequat culpa\"\n}"
								},
								{
									"name": "An unexpected error prevented the server from fulfilling your request.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"<string>\",\n    \"type\": \"<string>\",\n    \"address\": \"<string>\",\n    \"credentials\": {\n        \"id\": \"<string>\"\n    },\n    \"details\": {\n        \"customAppGroup\": {\n            \"defaultGroup\": \"<boolean>\",\n            \"ipRules\": {\n                \"ipList\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"ipRanges\": [\n                    {\n                        \"max\": \"<string>\",\n                        \"min\": \"<string>\"\n                    },\n                    {\n                        \"max\": \"<string>\",\n                        \"min\": \"<string>\"\n                    }\n                ],\n                \"subnetworks\": [\n                    {\n                        \"ipAddress\": \"<string>\",\n                        \"netmask\": {\n                            \"notation\": \"<string>\",\n                            \"value\": \"<string>\"\n                        }\n                    },\n                    {\n                        \"ipAddress\": \"<string>\",\n                        \"netmask\": {\n                            \"notation\": \"<string>\",\n                            \"value\": \"<string>\"\n                        }\n                    }\n                ]\n            },\n            \"oracle\": {\n                \"rman\": {\n                    \"rmanCredsId\": \"<string>\",\n                    \"rmanTnsAlias\": \"<string>\",\n                    \"rmanTnsLocation\": \"<string>\"\n                },\n                \"tnsAlias\": \"<string>\",\n                \"tnsLocation\": \"<string>\"\n            },\n            \"unapprovedHostCount\": \"<integer>\"\n        },\n        \"customStorageGroup\": {\n            \"vcmAttributes\": {\n                \"ddboostUserCredsId\": \"<string>\",\n                \"external\": \"<boolean>\"\n            }\n        },\n        \"ppdm\": {\n            \"direction\": \"<string>\",\n            \"systemId\": \"<string>\"\n        },\n        \"vCenter\": {\n            \"cloudType\": \"<string>\",\n            \"hosting\": \"<boolean>\",\n            \"internal\": \"<boolean>\",\n            \"vSphereUiIntegration\": \"<boolean>\"\n        }\n    },\n    \"id\": \"<string>\",\n    \"lastDiscoveryResult\": {\n        \"error\": \"<string>\",\n        \"messageID\": \"<string>\",\n        \"remediation\": \"<string>\",\n        \"status\": \"<string>\",\n        \"summaries\": [\n            \"<string>\",\n            \"<string>\"\n        ]\n    },\n    \"local\": \"<boolean>\",\n    \"port\": \"<integer>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/inventory-sources",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"inventory-sources"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "The requestor is not allowed to perform this operation.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"<string>\",\n    \"type\": \"<string>\",\n    \"address\": \"<string>\",\n    \"credentials\": {\n        \"id\": \"<string>\"\n    },\n    \"details\": {\n        \"customAppGroup\": {\n            \"defaultGroup\": \"<boolean>\",\n            \"ipRules\": {\n                \"ipList\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"ipRanges\": [\n                    {\n                        \"max\": \"<string>\",\n                        \"min\": \"<string>\"\n                    },\n                    {\n                        \"max\": \"<string>\",\n                        \"min\": \"<string>\"\n                    }\n                ],\n                \"subnetworks\": [\n                    {\n                        \"ipAddress\": \"<string>\",\n                        \"netmask\": {\n                            \"notation\": \"<string>\",\n                            \"value\": \"<string>\"\n                        }\n                    },\n                    {\n                        \"ipAddress\": \"<string>\",\n                        \"netmask\": {\n                            \"notation\": \"<string>\",\n                            \"value\": \"<string>\"\n                        }\n                    }\n                ]\n            },\n            \"oracle\": {\n                \"rman\": {\n                    \"rmanCredsId\": \"<string>\",\n                    \"rmanTnsAlias\": \"<string>\",\n                    \"rmanTnsLocation\": \"<string>\"\n                },\n                \"tnsAlias\": \"<string>\",\n                \"tnsLocation\": \"<string>\"\n            },\n            \"unapprovedHostCount\": \"<integer>\"\n        },\n        \"customStorageGroup\": {\n            \"vcmAttributes\": {\n                \"ddboostUserCredsId\": \"<string>\",\n                \"external\": \"<boolean>\"\n            }\n        },\n        \"ppdm\": {\n            \"direction\": \"<string>\",\n            \"systemId\": \"<string>\"\n        },\n        \"vCenter\": {\n            \"cloudType\": \"<string>\",\n            \"hosting\": \"<boolean>\",\n            \"internal\": \"<boolean>\",\n            \"vSphereUiIntegration\": \"<boolean>\"\n        }\n    },\n    \"id\": \"<string>\",\n    \"lastDiscoveryResult\": {\n        \"error\": \"<string>\",\n        \"messageID\": \"<string>\",\n        \"remediation\": \"<string>\",\n        \"status\": \"<string>\",\n        \"summaries\": [\n            \"<string>\",\n            \"<string>\"\n        ]\n    },\n    \"local\": \"<boolean>\",\n    \"port\": \"<integer>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/inventory-sources",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"inventory-sources"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "The request is not valid.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"<string>\",\n    \"type\": \"<string>\",\n    \"address\": \"<string>\",\n    \"credentials\": {\n        \"id\": \"<string>\"\n    },\n    \"details\": {\n        \"customAppGroup\": {\n            \"defaultGroup\": \"<boolean>\",\n            \"ipRules\": {\n                \"ipList\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"ipRanges\": [\n                    {\n                        \"max\": \"<string>\",\n                        \"min\": \"<string>\"\n                    },\n                    {\n                        \"max\": \"<string>\",\n                        \"min\": \"<string>\"\n                    }\n                ],\n                \"subnetworks\": [\n                    {\n                        \"ipAddress\": \"<string>\",\n                        \"netmask\": {\n                            \"notation\": \"<string>\",\n                            \"value\": \"<string>\"\n                        }\n                    },\n                    {\n                        \"ipAddress\": \"<string>\",\n                        \"netmask\": {\n                            \"notation\": \"<string>\",\n                            \"value\": \"<string>\"\n                        }\n                    }\n                ]\n            },\n            \"oracle\": {\n                \"rman\": {\n                    \"rmanCredsId\": \"<string>\",\n                    \"rmanTnsAlias\": \"<string>\",\n                    \"rmanTnsLocation\": \"<string>\"\n                },\n                \"tnsAlias\": \"<string>\",\n                \"tnsLocation\": \"<string>\"\n            },\n            \"unapprovedHostCount\": \"<integer>\"\n        },\n        \"customStorageGroup\": {\n            \"vcmAttributes\": {\n                \"ddboostUserCredsId\": \"<string>\",\n                \"external\": \"<boolean>\"\n            }\n        },\n        \"ppdm\": {\n            \"direction\": \"<string>\",\n            \"systemId\": \"<string>\"\n        },\n        \"vCenter\": {\n            \"cloudType\": \"<string>\",\n            \"hosting\": \"<boolean>\",\n            \"internal\": \"<boolean>\",\n            \"vSphereUiIntegration\": \"<boolean>\"\n        }\n    },\n    \"id\": \"<string>\",\n    \"lastDiscoveryResult\": {\n        \"error\": \"<string>\",\n        \"messageID\": \"<string>\",\n        \"remediation\": \"<string>\",\n        \"status\": \"<string>\",\n        \"summaries\": [\n            \"<string>\",\n            \"<string>\"\n        ]\n    },\n    \"local\": \"<boolean>\",\n    \"port\": \"<integer>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/inventory-sources",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"inventory-sources"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "The requestor is not authorized to perform this operation.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"<string>\",\n    \"type\": \"<string>\",\n    \"address\": \"<string>\",\n    \"credentials\": {\n        \"id\": \"<string>\"\n    },\n    \"details\": {\n        \"customAppGroup\": {\n            \"defaultGroup\": \"<boolean>\",\n            \"ipRules\": {\n                \"ipList\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"ipRanges\": [\n                    {\n                        \"max\": \"<string>\",\n                        \"min\": \"<string>\"\n                    },\n                    {\n                        \"max\": \"<string>\",\n                        \"min\": \"<string>\"\n                    }\n                ],\n                \"subnetworks\": [\n                    {\n                        \"ipAddress\": \"<string>\",\n                        \"netmask\": {\n                            \"notation\": \"<string>\",\n                            \"value\": \"<string>\"\n                        }\n                    },\n                    {\n                        \"ipAddress\": \"<string>\",\n                        \"netmask\": {\n                            \"notation\": \"<string>\",\n                            \"value\": \"<string>\"\n                        }\n                    }\n                ]\n            },\n            \"oracle\": {\n                \"rman\": {\n                    \"rmanCredsId\": \"<string>\",\n                    \"rmanTnsAlias\": \"<string>\",\n                    \"rmanTnsLocation\": \"<string>\"\n                },\n                \"tnsAlias\": \"<string>\",\n                \"tnsLocation\": \"<string>\"\n            },\n            \"unapprovedHostCount\": \"<integer>\"\n        },\n        \"customStorageGroup\": {\n            \"vcmAttributes\": {\n                \"ddboostUserCredsId\": \"<string>\",\n                \"external\": \"<boolean>\"\n            }\n        },\n        \"ppdm\": {\n            \"direction\": \"<string>\",\n            \"systemId\": \"<string>\"\n        },\n        \"vCenter\": {\n            \"cloudType\": \"<string>\",\n            \"hosting\": \"<boolean>\",\n            \"internal\": \"<boolean>\",\n            \"vSphereUiIntegration\": \"<boolean>\"\n        }\n    },\n    \"id\": \"<string>\",\n    \"lastDiscoveryResult\": {\n        \"error\": \"<string>\",\n        \"messageID\": \"<string>\",\n        \"remediation\": \"<string>\",\n        \"status\": \"<string>\",\n        \"summaries\": [\n            \"<string>\",\n            \"<string>\"\n        ]\n    },\n    \"local\": \"<boolean>\",\n    \"port\": \"<integer>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/inventory-sources",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"inventory-sources"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "kubernetes-clusters",
					"item": [
						{
							"name": "Get Kubernetes clusters",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/kubernetes-clusters",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"kubernetes-clusters"
									]
								},
								"description": "Retrieves all Kubernetes clusters."
							},
							"response": [
								{
									"name": "The requestor is not allowed to perform this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/kubernetes-clusters",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"kubernetes-clusters"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "Retrieving list of Kubernetes clusters.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/kubernetes-clusters",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"kubernetes-clusters"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"content\": [\n  {\n   \"address\": \"consectetur esse velit\",\n   \"id\": \"velit\",\n   \"name\": \"ea eu\"\n  },\n  {\n   \"address\": \"deserunt qui sint\",\n   \"id\": \"adipisicing reprehe\",\n   \"name\": \"velit eu aliquip occaecat ullamco\"\n  }\n ]\n}"
								},
								{
									"name": "An unexpected error prevented the server from fulfilling your request.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/kubernetes-clusters",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"kubernetes-clusters"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "The requestor is not authorized to perform this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/kubernetes-clusters",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"kubernetes-clusters"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "Service unavailable.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/kubernetes-clusters",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"kubernetes-clusters"
											]
										}
									},
									"status": "Service Unavailable",
									"code": 503,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "The request is not valid.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/kubernetes-clusters",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"kubernetes-clusters"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								}
							]
						},
						{
							"name": "Get storage classes from target Kubernetes cluster",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/kubernetes-clusters/:cluster-id/pvc-storage-class-mappings?copyId=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"kubernetes-clusters",
										":cluster-id",
										"pvc-storage-class-mappings"
									],
									"query": [
										{
											"key": "copyId",
											"value": "<string>",
											"description": "(Required) The ID of the copy to be restored."
										}
									],
									"variable": [
										{
											"id": "dadf6c70-181e-45fc-bcaa-609eb56e6a94",
											"key": "cluster-id",
											"value": "<string>",
											"type": "string",
											"description": "(Required) The ID of the Kubernetes cluster."
										}
									]
								},
								"description": "When an alternate storage class is required for restoring to an alternate cluster, this request retrieves a list of compatible storage classes per PersistentVolumeClaim (PVC) from the specified Kubernetes cluster."
							},
							"response": [
								{
									"name": "The request is not valid.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/kubernetes-clusters/:cluster-id/pvc-storage-class-mappings?copyId=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"kubernetes-clusters",
												":cluster-id",
												"pvc-storage-class-mappings"
											],
											"query": [
												{
													"key": "copyId",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "cluster-id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "The requestor is not authorized to perform this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/kubernetes-clusters/:cluster-id/pvc-storage-class-mappings?copyId=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"kubernetes-clusters",
												":cluster-id",
												"pvc-storage-class-mappings"
											],
											"query": [
												{
													"key": "copyId",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "cluster-id"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "Required string parameter copyId is not present.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/kubernetes-clusters/:cluster-id/pvc-storage-class-mappings?copyId=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"kubernetes-clusters",
												":cluster-id",
												"pvc-storage-class-mappings"
											],
											"query": [
												{
													"key": "copyId",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "cluster-id"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "Service unavailable.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/kubernetes-clusters/:cluster-id/pvc-storage-class-mappings?copyId=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"kubernetes-clusters",
												":cluster-id",
												"pvc-storage-class-mappings"
											],
											"query": [
												{
													"key": "copyId",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "cluster-id"
												}
											]
										}
									},
									"status": "Service Unavailable",
									"code": 503,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "Successfully retrieved list of compatible storage classes.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/kubernetes-clusters/:cluster-id/pvc-storage-class-mappings?copyId=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"kubernetes-clusters",
												":cluster-id",
												"pvc-storage-class-mappings"
											],
											"query": [
												{
													"key": "copyId",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "cluster-id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"content\": [\n  {\n   \"pvcName\": \"pariatur ex in\",\n   \"storageClasses\": [\n    \"elit minim in\",\n    \"laboris consectetur magna aliquip\"\n   ]\n  },\n  {\n   \"pvcName\": \"eu officia nulla\",\n   \"storageClasses\": [\n    \"tempor consectetur consequat incididunt\",\n    \"dolore ullamco voluptate sit\"\n   ]\n  }\n ]\n}"
								},
								{
									"name": "The requestor is not allowed to perform this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/kubernetes-clusters/:cluster-id/pvc-storage-class-mappings?copyId=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"kubernetes-clusters",
												":cluster-id",
												"pvc-storage-class-mappings"
											],
											"query": [
												{
													"key": "copyId",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "cluster-id"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "licenses",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Get license by ID.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/licenses/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"licenses",
												":id"
											],
											"variable": [
												{
													"id": "08e325bd-508f-4e0c-88c9-667463d466e5",
													"key": "id",
													"value": "Unique identifier for license",
													"type": "string",
													"description": "(Required) License ID sent in request."
												}
											]
										},
										"description": "Retrieves the license associated with the specified ID.\n> This endpoint supports execution by the following roles: admin, user, export and recovery admin\n"
									},
									"response": [
										{
											"name": "Found and returned the license with the specified ID.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/licenses/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"licenses",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"key\": \"laborum magna minim velit adipisicing\",\n \"activationDate\": \"laboris labore veniam nisi tempor\",\n \"daysLeftForExpiry\": 2005407,\n \"id\": \"pariatur Ut consectetur\",\n \"licenseKeys\": [\n  {\n   \"endDate\": \"consectetur Ut\",\n   \"featureCode\": \"laboris ipsum eiusmod ea\",\n   \"featureName\": \"qui ullamco\",\n   \"frontendCapacityInTB\": 31451251.00644815,\n   \"gracePeriod\": \"culpa veniam\",\n   \"licenseType\": \"qu\",\n   \"numberOfSockets\": \"eiusmod est sit non\",\n   \"plc\": \"sint labore occaecat irure elit\",\n   \"productLine\": \"enim mollit Ut\",\n   \"startDate\": \"eu do veniam ut quis\",\n   \"uomCode\": \"enim\",\n   \"uomName\": \"aliquip dolor\"\n  },\n  {\n   \"endDate\": \"anim mi\",\n   \"featureCode\": \"sit exercitation\",\n   \"featureName\": \"fugiat nulla aliquip\",\n   \"frontendCapacityInTB\": -30402570.534061328,\n   \"gracePeriod\": \"voluptate sit\",\n   \"licenseType\": \"non in dolor sit nostrud\",\n   \"numberOfSockets\": \"in amet sit reprehenderit\",\n   \"plc\": \"in do culpa et\",\n   \"productLine\": \"mollit nulla irure\",\n   \"startDate\": \"adipisicing ipsum Duis\",\n   \"uomCode\": \"eiusmod\",\n   \"uomName\": \"qui\"\n  }\n ],\n \"status\": \"VALID\",\n \"swid\": \"deserunt officia id\",\n \"type\": \"CAPACITY\"\n}"
										},
										{
											"name": "Cannot find the license with the specified ID.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/licenses/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"licenses",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/licenses/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"licenses",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The requestor is not allowed to perform this operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/licenses/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"licenses",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										}
									]
								},
								{
									"name": "Update the license that is associated with the specified ID.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "\"<string>\"",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/licenses/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"licenses",
												":id"
											],
											"variable": [
												{
													"id": "f5370c88-4789-4dbc-8248-ef51e4fd9c80",
													"key": "id",
													"value": "Unique identifier for license",
													"type": "string",
													"description": "(Required) License ID sent in request."
												}
											]
										},
										"description": "Updates the license associated with the specified ID.\nA license xml file is passed in a key field in the REST API body.\n> This endpoint supports execution by the following roles: admin\n"
									},
									"response": [
										{
											"name": "The submitted license is not valid.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "\"<string>\""
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/licenses/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"licenses",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The requestor is not allowed to perform this operation.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "\"<string>\""
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/licenses/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"licenses",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "\"<string>\""
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/licenses/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"licenses",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Bad request.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "\"<string>\""
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/licenses/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"licenses",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "Cannot find license with the specified ID.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "\"<string>\""
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/licenses/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"licenses",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The license update completed successfully.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "\"<string>\""
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/licenses/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"licenses",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"key\": \"laborum magna minim velit adipisicing\",\n \"activationDate\": \"laboris labore veniam nisi tempor\",\n \"daysLeftForExpiry\": 2005407,\n \"id\": \"pariatur Ut consectetur\",\n \"licenseKeys\": [\n  {\n   \"endDate\": \"consectetur Ut\",\n   \"featureCode\": \"laboris ipsum eiusmod ea\",\n   \"featureName\": \"qui ullamco\",\n   \"frontendCapacityInTB\": 31451251.00644815,\n   \"gracePeriod\": \"culpa veniam\",\n   \"licenseType\": \"qu\",\n   \"numberOfSockets\": \"eiusmod est sit non\",\n   \"plc\": \"sint labore occaecat irure elit\",\n   \"productLine\": \"enim mollit Ut\",\n   \"startDate\": \"eu do veniam ut quis\",\n   \"uomCode\": \"enim\",\n   \"uomName\": \"aliquip dolor\"\n  },\n  {\n   \"endDate\": \"anim mi\",\n   \"featureCode\": \"sit exercitation\",\n   \"featureName\": \"fugiat nulla aliquip\",\n   \"frontendCapacityInTB\": -30402570.534061328,\n   \"gracePeriod\": \"voluptate sit\",\n   \"licenseType\": \"non in dolor sit nostrud\",\n   \"numberOfSockets\": \"in amet sit reprehenderit\",\n   \"plc\": \"in do culpa et\",\n   \"productLine\": \"mollit nulla irure\",\n   \"startDate\": \"adipisicing ipsum Duis\",\n   \"uomCode\": \"eiusmod\",\n   \"uomName\": \"qui\"\n  }\n ],\n \"status\": \"VALID\",\n \"swid\": \"deserunt officia id\",\n \"type\": \"CAPACITY\"\n}"
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Get all licenses.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/licenses",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"licenses"
									]
								},
								"description": "Retrieves licenses that are available on the system.\nPowerProtect Data Manager licenses include status details such as capacity usage, license Type, license status.\nType can be CAPACITY, SOCKET, APPLIANCE.\n> This endpoint supports execution by the following roles: admin, user, export and recovery admin\n"
							},
							"response": [
								{
									"name": "Located and returned available licenses.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/licenses",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"licenses"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"content\": [\n  {\n   \"key\": \"minim magna\",\n   \"activationDate\": \"ut\",\n   \"daysLeftForExpiry\": 23766418,\n   \"id\": \"fugiat ad adipisicing\",\n   \"licenseKeys\": [\n    {\n     \"endDate\": \"enim exercitation\",\n     \"featureCode\": \"dolore pariatur enim dolor\",\n     \"featureName\": \"in non dolor quis anim\",\n     \"frontendCapacityInTB\": -8210052.626809582,\n     \"gracePeriod\": \"sint aliquip voluptate ea eu\",\n     \"licenseType\": \"eiusmod sunt\",\n     \"numberOfSockets\": \"minim tempor ut do aliqua\",\n     \"plc\": \"aliquip velit occaecat laborum mollit\",\n     \"productLine\": \"qui voluptate velit tempor dolor\",\n     \"startDate\": \"ut laboris nostrud cupidatat\",\n     \"uomCode\": \"nulla Duis anim\",\n     \"uomName\": \"Ut deserunt anim\"\n    },\n    {\n     \"endDate\": \"tempor\",\n     \"featureCode\": \"fugiat ullamco ut ex\",\n     \"featureName\": \"adipisicing mollit commodo\",\n     \"frontendCapacityInTB\": 88472027.58556592,\n     \"gracePeriod\": \"esse est elit cupidatat\",\n     \"licenseType\": \"esse consequat qui\",\n     \"numberOfSockets\": \"minim magna\",\n     \"plc\": \"minim quis cillum\",\n     \"productLine\": \"sint nostrud nulla officia la\",\n     \"startDate\": \"cupidatat ex laboris minim aute\",\n     \"uomCode\": \"cu\",\n     \"uomName\": \"aute laborum sit reprehenderit consectetur\"\n    }\n   ],\n   \"status\": \"VALID\",\n   \"swid\": \"e\",\n   \"type\": \"SOCKET\"\n  },\n  {\n   \"key\": \"aliqua nulla fugiat quis d\",\n   \"activationDate\": \"Duis elit dolore amet\",\n   \"daysLeftForExpiry\": -51521067,\n   \"id\": \"officia\",\n   \"licenseKeys\": [\n    {\n     \"endDate\": \"Lorem id\",\n     \"featureCode\": \"sunt commodo ex ullamco\",\n     \"featureName\": \"Lorem eu\",\n     \"frontendCapacityInTB\": -63558613.22970613,\n     \"gracePeriod\": \"laborum dolore minim dolor\",\n     \"licenseType\": \"dolor tempor ad anim\",\n     \"numberOfSockets\": \"a\",\n     \"plc\": \"minim Excepteur\",\n     \"productLine\": \"Ut ullamco\",\n     \"startDate\": \"voluptate nulla Lorem\",\n     \"uomCode\": \"labo\",\n     \"uomName\": \"eiusmod\"\n    },\n    {\n     \"endDate\": \"ipsum nisi fugiat\",\n     \"featureCode\": \"aliqua aliquip laborum Ut\",\n     \"featureName\": \"et aute non nisi adipisicing\",\n     \"frontendCapacityInTB\": 8333701.097745076,\n     \"gracePeriod\": \"sed a\",\n     \"licenseType\": \"velit qui\",\n     \"numberOfSockets\": \"magna \",\n     \"plc\": \"ex dolor Ut laboris \",\n     \"productLine\": \"sit amet\",\n     \"startDate\": \"est commodo aliqua\",\n     \"uomCode\": \"ut\",\n     \"uomName\": \"dolore eu adipisicing sunt\"\n    }\n   ],\n   \"status\": \"VALID\",\n   \"swid\": \"mollit ad\",\n   \"type\": \"EMERGENCY\"\n  }\n ],\n \"page\": {\n  \"number\": 29698562,\n  \"queryState\": \"dolor id cupidatat qui\",\n  \"size\": 73205795,\n  \"totalElements\": 20217884,\n  \"totalPages\": 74546505\n }\n}"
								},
								{
									"name": "The requestor is not allowed to perform this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/licenses",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"licenses"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "An unexpected error prevented the server from fulfilling your request.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/licenses",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"licenses"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Create new license.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "\"<string>\"",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/licenses",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"licenses"
									]
								},
								"description": "Creates a new license.\nA license xml file is passed in a key field.\n\n> This endpoint supports execution by the following roles: admin\n"
							},
							"response": [
								{
									"name": "The requestor is not allowed to perform this operation.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "\"<string>\""
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/licenses",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"licenses"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "The license was created successfully.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "\"<string>\""
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/licenses",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"licenses"
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"key\": \"laborum magna minim velit adipisicing\",\n \"activationDate\": \"laboris labore veniam nisi tempor\",\n \"daysLeftForExpiry\": 2005407,\n \"id\": \"pariatur Ut consectetur\",\n \"licenseKeys\": [\n  {\n   \"endDate\": \"consectetur Ut\",\n   \"featureCode\": \"laboris ipsum eiusmod ea\",\n   \"featureName\": \"qui ullamco\",\n   \"frontendCapacityInTB\": 31451251.00644815,\n   \"gracePeriod\": \"culpa veniam\",\n   \"licenseType\": \"qu\",\n   \"numberOfSockets\": \"eiusmod est sit non\",\n   \"plc\": \"sint labore occaecat irure elit\",\n   \"productLine\": \"enim mollit Ut\",\n   \"startDate\": \"eu do veniam ut quis\",\n   \"uomCode\": \"enim\",\n   \"uomName\": \"aliquip dolor\"\n  },\n  {\n   \"endDate\": \"anim mi\",\n   \"featureCode\": \"sit exercitation\",\n   \"featureName\": \"fugiat nulla aliquip\",\n   \"frontendCapacityInTB\": -30402570.534061328,\n   \"gracePeriod\": \"voluptate sit\",\n   \"licenseType\": \"non in dolor sit nostrud\",\n   \"numberOfSockets\": \"in amet sit reprehenderit\",\n   \"plc\": \"in do culpa et\",\n   \"productLine\": \"mollit nulla irure\",\n   \"startDate\": \"adipisicing ipsum Duis\",\n   \"uomCode\": \"eiusmod\",\n   \"uomName\": \"qui\"\n  }\n ],\n \"status\": \"VALID\",\n \"swid\": \"deserunt officia id\",\n \"type\": \"CAPACITY\"\n}"
								},
								{
									"name": "The license was validated successfully.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "\"<string>\""
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/licenses",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"licenses"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"key\": \"laborum magna minim velit adipisicing\",\n \"activationDate\": \"laboris labore veniam nisi tempor\",\n \"daysLeftForExpiry\": 2005407,\n \"id\": \"pariatur Ut consectetur\",\n \"licenseKeys\": [\n  {\n   \"endDate\": \"consectetur Ut\",\n   \"featureCode\": \"laboris ipsum eiusmod ea\",\n   \"featureName\": \"qui ullamco\",\n   \"frontendCapacityInTB\": 31451251.00644815,\n   \"gracePeriod\": \"culpa veniam\",\n   \"licenseType\": \"qu\",\n   \"numberOfSockets\": \"eiusmod est sit non\",\n   \"plc\": \"sint labore occaecat irure elit\",\n   \"productLine\": \"enim mollit Ut\",\n   \"startDate\": \"eu do veniam ut quis\",\n   \"uomCode\": \"enim\",\n   \"uomName\": \"aliquip dolor\"\n  },\n  {\n   \"endDate\": \"anim mi\",\n   \"featureCode\": \"sit exercitation\",\n   \"featureName\": \"fugiat nulla aliquip\",\n   \"frontendCapacityInTB\": -30402570.534061328,\n   \"gracePeriod\": \"voluptate sit\",\n   \"licenseType\": \"non in dolor sit nostrud\",\n   \"numberOfSockets\": \"in amet sit reprehenderit\",\n   \"plc\": \"in do culpa et\",\n   \"productLine\": \"mollit nulla irure\",\n   \"startDate\": \"adipisicing ipsum Duis\",\n   \"uomCode\": \"eiusmod\",\n   \"uomName\": \"qui\"\n  }\n ],\n \"status\": \"VALID\",\n \"swid\": \"deserunt officia id\",\n \"type\": \"CAPACITY\"\n}"
								},
								{
									"name": "The submitted license is not valid.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "\"<string>\""
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/licenses",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"licenses"
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "An unexpected error prevented the server from fulfilling your request.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "\"<string>\""
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/licenses",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"licenses"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "locations",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Delete location by ID.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/locations/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"locations",
												":id"
											],
											"variable": [
												{
													"id": "a59ba46d-0243-47f0-b4b7-0ed1ad9247fe",
													"key": "id",
													"value": "<string>",
													"type": "string",
													"description": "(Required) ID of the location."
												}
											]
										},
										"description": "Deletes a **Location** from PowerProtect Data Manager. **Location** can be set to **Storage System**. For example, set location for Data Domain system.\n> This endpoint supports execution by the following roles: admin\n"
									},
									"response": [
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/locations/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"locations",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The requestor is not allowed to perform this operation.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/locations/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"locations",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The request is not valid.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/locations/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"locations",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "Successfully deleted the location.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/locations/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"locations",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/locations/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"locations",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										}
									]
								},
								{
									"name": "Get a location by ID.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/locations/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"locations",
												":id"
											],
											"variable": [
												{
													"id": "a1108d1f-1aa5-4dff-af05-39b60f901be6",
													"key": "id",
													"value": "<string>",
													"type": "string",
													"description": "(Required) ID of the location."
												}
											]
										},
										"description": "Retrieves a **Location** by ID in PowerProtect Data Manager. **Location** can be set to **Storage System**. For example, set location for Data Domain system.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
									},
									"response": [
										{
											"name": "The requestor is not allowed to perform this operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/locations/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"locations",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The request is not valid.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/locations/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"locations",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/locations/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"locations",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/locations/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"locations",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "Successfully returned the location.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/locations/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"locations",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"id\": \"u\",\n \"lat\": \"in\",\n \"lon\": \"dolor laboris\",\n \"name\": \"irure est\"\n}"
										},
										{
											"name": "The requested location does not exist.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/locations/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"locations",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Get all locations.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/locations?page=1&pageSize=100&filter=<string>&orderby=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"locations"
									],
									"query": [
										{
											"key": "page",
											"value": "1",
											"description": "The page number to be returned. Must not be less than 1. See Tutorials - Page the List Result."
										},
										{
											"key": "pageSize",
											"value": "100",
											"description": "The number of resources to be returned. Must not be less than 1. See Tutorials - Page the List Result."
										},
										{
											"key": "filter",
											"value": "<string>",
											"description": "The filter string that is expressed using PowerProtect Data Manager filter syntax. See Tutorials - Filter the List Result."
										},
										{
											"key": "orderby",
											"value": "<string>",
											"description": "The attributes/fields to be sorted by. This parameter can combine with sort direction \"ASC\" or \"DESC\". Default direction is ASC. See Tutorials - Sort the List Result."
										}
									]
								},
								"description": "Retrieves all **locations** in the PowerProtect Data Manager. **Location** can be set to **Storage System**. For example, set location for Data Domain system.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
							},
							"response": [
								{
									"name": "The requestor is not authorized to perform this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/locations?page=1&pageSize=100&filter=<string>&orderby=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"locations"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "<string>"
												},
												{
													"key": "orderby",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "Successfully returned available locations.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/locations?page=1&pageSize=100&filter=<string>&orderby=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"locations"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "<string>"
												},
												{
													"key": "orderby",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"content\": [\n  {\n   \"id\": \"est\",\n   \"lat\": \"cillum\",\n   \"lon\": \"nisi commodo esse est\",\n   \"name\": \"velit\"\n  },\n  {\n   \"id\": \"reprehenderit minim dolore\",\n   \"lat\": \"laborum\",\n   \"lon\": \"enim Duis\",\n   \"name\": \"laboris voluptate\"\n  }\n ],\n \"page\": {\n  \"number\": 31669186,\n  \"queryState\": \"nostrud irure eiusmod incididunt veniam\",\n  \"size\": 72718234,\n  \"totalElements\": 97066475,\n  \"totalPages\": -78895136\n }\n}"
								},
								{
									"name": "The requestor is not allowed to perform this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/locations?page=1&pageSize=100&filter=<string>&orderby=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"locations"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "<string>"
												},
												{
													"key": "orderby",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "An unexpected error prevented the server from fulfilling your request.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/locations?page=1&pageSize=100&filter=<string>&orderby=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"locations"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "<string>"
												},
												{
													"key": "orderby",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "The request is not valid.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/locations?page=1&pageSize=100&filter=<string>&orderby=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"locations"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "<string>"
												},
												{
													"key": "orderby",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								}
							]
						},
						{
							"name": "Create a location.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"<string>\",\n    \"lat\": \"<string>\",\n    \"lon\": \"<string>\",\n    \"name\": \"<string>\"\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/locations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"locations"
									]
								},
								"description": "Creates a **Location** in the PowerProtect Data Manager. **Location** can be set to **Storage System**. For example, set location for Data Domain system.\n> This endpoint supports execution by the following roles: admin\n"
							},
							"response": [
								{
									"name": "The request is not valid.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"<string>\",\n    \"lat\": \"<string>\",\n    \"lon\": \"<string>\",\n    \"name\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/locations",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"locations"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "Successfully created the location.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"<string>\",\n    \"lat\": \"<string>\",\n    \"lon\": \"<string>\",\n    \"name\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/locations",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"locations"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"id\": \"u\",\n \"lat\": \"in\",\n \"lon\": \"dolor laboris\",\n \"name\": \"irure est\"\n}"
								},
								{
									"name": "The requestor is not authorized to perform this operation.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"<string>\",\n    \"lat\": \"<string>\",\n    \"lon\": \"<string>\",\n    \"name\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/locations",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"locations"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "The requestor is not allowed to perform this operation.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"<string>\",\n    \"lat\": \"<string>\",\n    \"lon\": \"<string>\",\n    \"name\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/locations",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"locations"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "An unexpected error prevented the server from fulfilling your request.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"<string>\",\n    \"lat\": \"<string>\",\n    \"lon\": \"<string>\",\n    \"name\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/locations",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"locations"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "Successful operation.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"<string>\",\n    \"lat\": \"<string>\",\n    \"lon\": \"<string>\",\n    \"name\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/locations",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"locations"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"id\": \"u\",\n \"lat\": \"in\",\n \"lon\": \"dolor laboris\",\n \"name\": \"irure est\"\n}"
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "log-bundles",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Deletes a completed, cancelled, or failed log bundle. ",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/log-bundles/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"log-bundles",
												":id"
											],
											"variable": [
												{
													"id": "dd0fb2d1-2602-4872-8004-5da79f09ac93",
													"key": "id",
													"value": "<string>",
													"type": "string",
													"description": "(Required) UUID for the log bundle."
												}
											]
										},
										"description": "Deletes a completed, cancelled, or failed log bundle.  A building log bundle cannot be deleted.\n> This endpoint supports execution by the following roles: admin\n"
									},
									"response": [
										{
											"name": "Any server error that prevents completion of the request.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/log-bundles/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"log-bundles",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The requestor does not have required permissions to access the resource.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/log-bundles/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"log-bundles",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The log bundle was successfully set to a DELETING status and is purged later on.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/log-bundles/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"log-bundles",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"id\": \"cillum est\"\n}"
										},
										{
											"name": "The requestor did not provide valid authentication credentials.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/log-bundles/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"log-bundles",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "If the log bundle with the given ID was not found.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/log-bundles/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"log-bundles",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "If the log bundle is currently in a BUILDING state.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/log-bundles/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"log-bundles",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Conflict",
											"code": 409,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Get the log bundle with the specified ID.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/log-bundles/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"log-bundles",
												":id"
											],
											"variable": [
												{
													"id": "24083564-a472-4178-982e-78a469fa639c",
													"key": "id",
													"value": "<string>",
													"type": "string",
													"description": "(Required) UUID for the log bundle."
												}
											]
										},
										"description": "Retrieves the log bundle with the specified ID.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
									},
									"response": [
										{
											"name": "The requestor does not have required permissions to access the resource.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/log-bundles/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"log-bundles",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The requestor did not provide valid authentication credentials.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/log-bundles/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"log-bundles",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "Any server error that prevents completion of the request.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/log-bundles/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"log-bundles",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "No log bundle with that ID was found.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/log-bundles/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"log-bundles",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "Successfully retrieved and returned the log bundle with the specified ID.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/log-bundles/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"log-bundles",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"bundleStartDate\": \"in mollit consequat\",\n \"logBundleFormula\": {\n  \"id\": \"non in\",\n  \"createdDate\": \"esse ad qui elit\",\n  \"description\": \"proident sint in dolore et\",\n  \"duration\": \"aliquip occaecat nostrud dolor\",\n  \"includeAllLogCategories\": false,\n  \"includeAllLogSources\": true,\n  \"logCategoryList\": [\n   {\n    \"id\": \"in veniam c\",\n    \"link\": {\n     \"href\": \"consequat voluptate sed Lorem e\",\n     \"rel\": \"minim ipsum enim proident\"\n    }\n   },\n   {\n    \"id\": \"dolore nisi ut enim\",\n    \"link\": {\n     \"href\": \"offic\",\n     \"rel\": \"enim elit\"\n    }\n   }\n  ],\n  \"logSourceList\": [\n   {\n    \"id\": \"et minim ut mollit reprehenderit\",\n    \"link\": {\n     \"href\": \"aliquip proident\",\n     \"rel\": \"deserunt exercitation\"\n    }\n   },\n   {\n    \"id\": \"Duis Ut\",\n    \"link\": {\n     \"href\": \"in do incididunt culpa\",\n     \"rel\": \"mollit dolor\"\n    }\n   }\n  ],\n  \"name\": \"quis dolore dolor commodo\"\n },\n \"filename\": \"sint c\",\n \"generationEndDateTime\": \"2017-01-16T00:24:54.010Z\",\n \"generationStartDateTime\": \"1991-08-30T13:47:57.190Z\",\n \"id\": \"esse ipsum mollit velit minim\",\n \"logBundleFiles\": [\n  {\n   \"fileName\": \"in dolor\",\n   \"sourceSystems\": [\n    \"nisi tempor\",\n    \"proident minim\"\n   ],\n   \"url\": \"ut eiusmod consectetur elit\"\n  },\n  {\n   \"fileName\": \"consectetur deserunt\",\n   \"sourceSystems\": [\n    \"amet ex est nulla officia\",\n    \"culpa dolore aliqua\"\n   ],\n   \"url\": \"fugiat amet id\"\n  }\n ],\n \"percentComplete\": 49417942,\n \"sizeOnDiskInBytes\": 10893344,\n \"sourceSystems\": [\n  \"aliquip eu\",\n  \"dolor magna occae\"\n ],\n \"status\": \"ea consequat sunt eu\"\n}"
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Get all existing log bundles in the system.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/log-bundles",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"log-bundles"
									]
								},
								"description": "Retrieves all existing log bundles in the system. Supports filtering. The status case is ignored.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
							},
							"response": [
								{
									"name": "The filter string was not parsable.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/log-bundles",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"log-bundles"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "Any server error that prevents completion of the request.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/log-bundles",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"log-bundles"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Successfully retrieved and returned available log bundles.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/log-bundles",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"log-bundles"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"content\": [\n  {\n   \"bundleStartDate\": \"incididunt amet\",\n   \"logBundleFormula\": {\n    \"id\": \"amet esse sit\",\n    \"createdDate\": \"eiusmod labore in\",\n    \"description\": \"minim ad in\",\n    \"duration\": \"cupidatat magna sunt\",\n    \"includeAllLogCategories\": true,\n    \"includeAllLogSources\": true,\n    \"logCategoryList\": [\n     {\n      \"id\": \"sint\",\n      \"link\": {\n       \"href\": \"eiusmod nisi ea in\",\n       \"rel\": \"ea do\"\n      }\n     },\n     {\n      \"id\": \"et nulla m\",\n      \"link\": {\n       \"href\": \"in qui\",\n       \"rel\": \"sint esse\"\n      }\n     }\n    ],\n    \"logSourceList\": [\n     {\n      \"id\": \"ullamco occaecat anim\",\n      \"link\": {\n       \"href\": \"ad nisi fugiat\",\n       \"rel\": \"aute eu qui\"\n      }\n     },\n     {\n      \"id\": \"nisi\",\n      \"link\": {\n       \"href\": \"dolor veniam\",\n       \"rel\": \"laborum nostrud occaecat\"\n      }\n     }\n    ],\n    \"name\": \"in commo\"\n   },\n   \"filename\": \"in nisi est adipisicing\",\n   \"generationEndDateTime\": \"1980-06-05T18:43:29.099Z\",\n   \"generationStartDateTime\": \"1967-07-26T00:19:46.412Z\",\n   \"id\": \"nisi Excepteur in ipsum\",\n   \"logBundleFiles\": [\n    {\n     \"fileName\": \"nisi esse ullamco\",\n     \"sourceSystems\": [\n      \"anim occaecat quis\",\n      \"exercitation cillum\"\n     ],\n     \"url\": \"esse ullamco\"\n    },\n    {\n     \"fileName\": \"eu pariatur\",\n     \"sourceSystems\": [\n      \"ad\",\n      \"deserunt ea in\"\n     ],\n     \"url\": \"occaecat qui\"\n    }\n   ],\n   \"percentComplete\": -24709926,\n   \"sizeOnDiskInBytes\": -5267368,\n   \"sourceSystems\": [\n    \"in aliquip proident\",\n    \"tempor incididunt dolor adipisicing\"\n   ],\n   \"status\": \"culpa\"\n  },\n  {\n   \"bundleStartDate\": \"nisi aute\",\n   \"logBundleFormula\": {\n    \"id\": \"sit dolo\",\n    \"createdDate\": \"in dolore n\",\n    \"description\": \"culpa\",\n    \"duration\": \"non in enim sit\",\n    \"includeAllLogCategories\": false,\n    \"includeAllLogSources\": true,\n    \"logCategoryList\": [\n     {\n      \"id\": \"ut do dolor irure\",\n      \"link\": {\n       \"href\": \"dolore in eu\",\n       \"rel\": \"ut ullamco reprehenderit\"\n      }\n     },\n     {\n      \"id\": \"est id\",\n      \"link\": {\n       \"href\": \"ea nostrud anim occaecat\",\n       \"rel\": \"adipisicing eu\"\n      }\n     }\n    ],\n    \"logSourceList\": [\n     {\n      \"id\": \"est consequat nostrud dolore\",\n      \"link\": {\n       \"href\": \"Excepteur ex co\",\n       \"rel\": \"nulla \"\n      }\n     },\n     {\n      \"id\": \"incididunt eu qu\",\n      \"link\": {\n       \"href\": \"laborum sit\",\n       \"rel\": \"dolor mollit pariatur culpa ad\"\n      }\n     }\n    ],\n    \"name\": \"fugiat consequat labore\"\n   },\n   \"filename\": \"ipsum ut pari\",\n   \"generationEndDateTime\": \"1949-06-13T23:13:23.469Z\",\n   \"generationStartDateTime\": \"1957-02-22T13:57:25.843Z\",\n   \"id\": \"Duis\",\n   \"logBundleFiles\": [\n    {\n     \"fileName\": \"sunt eiusmod dolor ipsum\",\n     \"sourceSystems\": [\n      \"ullamco irure ut officia\",\n      \"ipsum in est fugiat\"\n     ],\n     \"url\": \"fugiat do ad Duis \"\n    },\n    {\n     \"fileName\": \"commodo cupidatat sint\",\n     \"sourceSystems\": [\n      \"ut laboris labore\",\n      \"aute quis\"\n     ],\n     \"url\": \"non ut do dolore\"\n    }\n   ],\n   \"percentComplete\": 61947809,\n   \"sizeOnDiskInBytes\": 57618014,\n   \"sourceSystems\": [\n    \"deserunt culpa in\",\n    \"magna sint cupidatat\"\n   ],\n   \"status\": \"Duis enim laboris\"\n  }\n ],\n \"page\": {\n  \"number\": -3461673,\n  \"queryState\": \"eu cillum ad\",\n  \"size\": -99948653,\n  \"totalElements\": -8184591,\n  \"totalPages\": 61890309\n }\n}"
								},
								{
									"name": "The requestor did not provide valid authentication credentials.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/log-bundles",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"log-bundles"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "The requestor does not have required permissions to access the resource.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/log-bundles",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"log-bundles"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Create a new log bundle.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"bundleStartDate\": \"<string>\",\n    \"logBundleFormula\": {\n        \"id\": \"<string>\",\n        \"createdDate\": \"<string>\",\n        \"description\": \"<string>\",\n        \"duration\": \"<string>\",\n        \"includeAllLogCategories\": \"<boolean>\",\n        \"includeAllLogSources\": \"<boolean>\",\n        \"logCategoryList\": [\n            {\n                \"id\": \"<string>\",\n                \"link\": {\n                    \"href\": \"<string>\",\n                    \"rel\": \"<string>\"\n                }\n            },\n            {\n                \"id\": \"<string>\",\n                \"link\": {\n                    \"href\": \"<string>\",\n                    \"rel\": \"<string>\"\n                }\n            }\n        ],\n        \"logSourceList\": [\n            {\n                \"id\": \"<string>\",\n                \"link\": {\n                    \"href\": \"<string>\",\n                    \"rel\": \"<string>\"\n                }\n            },\n            {\n                \"id\": \"<string>\",\n                \"link\": {\n                    \"href\": \"<string>\",\n                    \"rel\": \"<string>\"\n                }\n            }\n        ],\n        \"name\": \"<string>\"\n    },\n    \"filename\": \"<string>\",\n    \"generationEndDateTime\": \"<dateTime>\",\n    \"generationStartDateTime\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"logBundleFiles\": [\n        {\n            \"fileName\": \"<string>\",\n            \"sourceSystems\": [\n                \"<string>\",\n                \"<string>\"\n            ],\n            \"url\": \"<string>\"\n        },\n        {\n            \"fileName\": \"<string>\",\n            \"sourceSystems\": [\n                \"<string>\",\n                \"<string>\"\n            ],\n            \"url\": \"<string>\"\n        }\n    ],\n    \"percentComplete\": \"<integer>\",\n    \"sizeOnDiskInBytes\": \"<long>\",\n    \"sourceSystems\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"status\": \"<string>\"\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/log-bundles",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"log-bundles"
									]
								},
								"description": "Creates a new log bundle and returns the log bundle with its ID and a status of BUILDING.\n> This endpoint supports execution by the following roles: admin\n"
							},
							"response": [
								{
									"name": "The requestor does not have required permissions to access the resource.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"bundleStartDate\": \"<string>\",\n    \"logBundleFormula\": {\n        \"id\": \"<string>\",\n        \"createdDate\": \"<string>\",\n        \"description\": \"<string>\",\n        \"duration\": \"<string>\",\n        \"includeAllLogCategories\": \"<boolean>\",\n        \"includeAllLogSources\": \"<boolean>\",\n        \"logCategoryList\": [\n            {\n                \"id\": \"<string>\",\n                \"link\": {\n                    \"href\": \"<string>\",\n                    \"rel\": \"<string>\"\n                }\n            },\n            {\n                \"id\": \"<string>\",\n                \"link\": {\n                    \"href\": \"<string>\",\n                    \"rel\": \"<string>\"\n                }\n            }\n        ],\n        \"logSourceList\": [\n            {\n                \"id\": \"<string>\",\n                \"link\": {\n                    \"href\": \"<string>\",\n                    \"rel\": \"<string>\"\n                }\n            },\n            {\n                \"id\": \"<string>\",\n                \"link\": {\n                    \"href\": \"<string>\",\n                    \"rel\": \"<string>\"\n                }\n            }\n        ],\n        \"name\": \"<string>\"\n    },\n    \"filename\": \"<string>\",\n    \"generationEndDateTime\": \"<dateTime>\",\n    \"generationStartDateTime\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"logBundleFiles\": [\n        {\n            \"fileName\": \"<string>\",\n            \"sourceSystems\": [\n                \"<string>\",\n                \"<string>\"\n            ],\n            \"url\": \"<string>\"\n        },\n        {\n            \"fileName\": \"<string>\",\n            \"sourceSystems\": [\n                \"<string>\",\n                \"<string>\"\n            ],\n            \"url\": \"<string>\"\n        }\n    ],\n    \"percentComplete\": \"<integer>\",\n    \"sizeOnDiskInBytes\": \"<long>\",\n    \"sourceSystems\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"status\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/log-bundles",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"log-bundles"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Another log bundle is currently building.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"bundleStartDate\": \"<string>\",\n    \"logBundleFormula\": {\n        \"id\": \"<string>\",\n        \"createdDate\": \"<string>\",\n        \"description\": \"<string>\",\n        \"duration\": \"<string>\",\n        \"includeAllLogCategories\": \"<boolean>\",\n        \"includeAllLogSources\": \"<boolean>\",\n        \"logCategoryList\": [\n            {\n                \"id\": \"<string>\",\n                \"link\": {\n                    \"href\": \"<string>\",\n                    \"rel\": \"<string>\"\n                }\n            },\n            {\n                \"id\": \"<string>\",\n                \"link\": {\n                    \"href\": \"<string>\",\n                    \"rel\": \"<string>\"\n                }\n            }\n        ],\n        \"logSourceList\": [\n            {\n                \"id\": \"<string>\",\n                \"link\": {\n                    \"href\": \"<string>\",\n                    \"rel\": \"<string>\"\n                }\n            },\n            {\n                \"id\": \"<string>\",\n                \"link\": {\n                    \"href\": \"<string>\",\n                    \"rel\": \"<string>\"\n                }\n            }\n        ],\n        \"name\": \"<string>\"\n    },\n    \"filename\": \"<string>\",\n    \"generationEndDateTime\": \"<dateTime>\",\n    \"generationStartDateTime\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"logBundleFiles\": [\n        {\n            \"fileName\": \"<string>\",\n            \"sourceSystems\": [\n                \"<string>\",\n                \"<string>\"\n            ],\n            \"url\": \"<string>\"\n        },\n        {\n            \"fileName\": \"<string>\",\n            \"sourceSystems\": [\n                \"<string>\",\n                \"<string>\"\n            ],\n            \"url\": \"<string>\"\n        }\n    ],\n    \"percentComplete\": \"<integer>\",\n    \"sizeOnDiskInBytes\": \"<long>\",\n    \"sourceSystems\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"status\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/log-bundles",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"log-bundles"
											]
										}
									},
									"status": "Conflict",
									"code": 409,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Any server error that prevents completion of the request.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"bundleStartDate\": \"<string>\",\n    \"logBundleFormula\": {\n        \"id\": \"<string>\",\n        \"createdDate\": \"<string>\",\n        \"description\": \"<string>\",\n        \"duration\": \"<string>\",\n        \"includeAllLogCategories\": \"<boolean>\",\n        \"includeAllLogSources\": \"<boolean>\",\n        \"logCategoryList\": [\n            {\n                \"id\": \"<string>\",\n                \"link\": {\n                    \"href\": \"<string>\",\n                    \"rel\": \"<string>\"\n                }\n            },\n            {\n                \"id\": \"<string>\",\n                \"link\": {\n                    \"href\": \"<string>\",\n                    \"rel\": \"<string>\"\n                }\n            }\n        ],\n        \"logSourceList\": [\n            {\n                \"id\": \"<string>\",\n                \"link\": {\n                    \"href\": \"<string>\",\n                    \"rel\": \"<string>\"\n                }\n            },\n            {\n                \"id\": \"<string>\",\n                \"link\": {\n                    \"href\": \"<string>\",\n                    \"rel\": \"<string>\"\n                }\n            }\n        ],\n        \"name\": \"<string>\"\n    },\n    \"filename\": \"<string>\",\n    \"generationEndDateTime\": \"<dateTime>\",\n    \"generationStartDateTime\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"logBundleFiles\": [\n        {\n            \"fileName\": \"<string>\",\n            \"sourceSystems\": [\n                \"<string>\",\n                \"<string>\"\n            ],\n            \"url\": \"<string>\"\n        },\n        {\n            \"fileName\": \"<string>\",\n            \"sourceSystems\": [\n                \"<string>\",\n                \"<string>\"\n            ],\n            \"url\": \"<string>\"\n        }\n    ],\n    \"percentComplete\": \"<integer>\",\n    \"sizeOnDiskInBytes\": \"<long>\",\n    \"sourceSystems\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"status\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/log-bundles",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"log-bundles"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "The requestor did not provide valid authentication credentials.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"bundleStartDate\": \"<string>\",\n    \"logBundleFormula\": {\n        \"id\": \"<string>\",\n        \"createdDate\": \"<string>\",\n        \"description\": \"<string>\",\n        \"duration\": \"<string>\",\n        \"includeAllLogCategories\": \"<boolean>\",\n        \"includeAllLogSources\": \"<boolean>\",\n        \"logCategoryList\": [\n            {\n                \"id\": \"<string>\",\n                \"link\": {\n                    \"href\": \"<string>\",\n                    \"rel\": \"<string>\"\n                }\n            },\n            {\n                \"id\": \"<string>\",\n                \"link\": {\n                    \"href\": \"<string>\",\n                    \"rel\": \"<string>\"\n                }\n            }\n        ],\n        \"logSourceList\": [\n            {\n                \"id\": \"<string>\",\n                \"link\": {\n                    \"href\": \"<string>\",\n                    \"rel\": \"<string>\"\n                }\n            },\n            {\n                \"id\": \"<string>\",\n                \"link\": {\n                    \"href\": \"<string>\",\n                    \"rel\": \"<string>\"\n                }\n            }\n        ],\n        \"name\": \"<string>\"\n    },\n    \"filename\": \"<string>\",\n    \"generationEndDateTime\": \"<dateTime>\",\n    \"generationStartDateTime\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"logBundleFiles\": [\n        {\n            \"fileName\": \"<string>\",\n            \"sourceSystems\": [\n                \"<string>\",\n                \"<string>\"\n            ],\n            \"url\": \"<string>\"\n        },\n        {\n            \"fileName\": \"<string>\",\n            \"sourceSystems\": [\n                \"<string>\",\n                \"<string>\"\n            ],\n            \"url\": \"<string>\"\n        }\n    ],\n    \"percentComplete\": \"<integer>\",\n    \"sizeOnDiskInBytes\": \"<long>\",\n    \"sourceSystems\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"status\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/log-bundles",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"log-bundles"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Occurs if the log bundle contains anything other than the bundle start date and log bundle formula. Also occurs if the formula provided contains an ID and other fields, or other fields and an ID.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"bundleStartDate\": \"<string>\",\n    \"logBundleFormula\": {\n        \"id\": \"<string>\",\n        \"createdDate\": \"<string>\",\n        \"description\": \"<string>\",\n        \"duration\": \"<string>\",\n        \"includeAllLogCategories\": \"<boolean>\",\n        \"includeAllLogSources\": \"<boolean>\",\n        \"logCategoryList\": [\n            {\n                \"id\": \"<string>\",\n                \"link\": {\n                    \"href\": \"<string>\",\n                    \"rel\": \"<string>\"\n                }\n            },\n            {\n                \"id\": \"<string>\",\n                \"link\": {\n                    \"href\": \"<string>\",\n                    \"rel\": \"<string>\"\n                }\n            }\n        ],\n        \"logSourceList\": [\n            {\n                \"id\": \"<string>\",\n                \"link\": {\n                    \"href\": \"<string>\",\n                    \"rel\": \"<string>\"\n                }\n            },\n            {\n                \"id\": \"<string>\",\n                \"link\": {\n                    \"href\": \"<string>\",\n                    \"rel\": \"<string>\"\n                }\n            }\n        ],\n        \"name\": \"<string>\"\n    },\n    \"filename\": \"<string>\",\n    \"generationEndDateTime\": \"<dateTime>\",\n    \"generationStartDateTime\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"logBundleFiles\": [\n        {\n            \"fileName\": \"<string>\",\n            \"sourceSystems\": [\n                \"<string>\",\n                \"<string>\"\n            ],\n            \"url\": \"<string>\"\n        },\n        {\n            \"fileName\": \"<string>\",\n            \"sourceSystems\": [\n                \"<string>\",\n                \"<string>\"\n            ],\n            \"url\": \"<string>\"\n        }\n    ],\n    \"percentComplete\": \"<integer>\",\n    \"sizeOnDiskInBytes\": \"<long>\",\n    \"sourceSystems\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"status\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/log-bundles",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"log-bundles"
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "The submitted log bundle could not be parsed due to syntax errors.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"bundleStartDate\": \"<string>\",\n    \"logBundleFormula\": {\n        \"id\": \"<string>\",\n        \"createdDate\": \"<string>\",\n        \"description\": \"<string>\",\n        \"duration\": \"<string>\",\n        \"includeAllLogCategories\": \"<boolean>\",\n        \"includeAllLogSources\": \"<boolean>\",\n        \"logCategoryList\": [\n            {\n                \"id\": \"<string>\",\n                \"link\": {\n                    \"href\": \"<string>\",\n                    \"rel\": \"<string>\"\n                }\n            },\n            {\n                \"id\": \"<string>\",\n                \"link\": {\n                    \"href\": \"<string>\",\n                    \"rel\": \"<string>\"\n                }\n            }\n        ],\n        \"logSourceList\": [\n            {\n                \"id\": \"<string>\",\n                \"link\": {\n                    \"href\": \"<string>\",\n                    \"rel\": \"<string>\"\n                }\n            },\n            {\n                \"id\": \"<string>\",\n                \"link\": {\n                    \"href\": \"<string>\",\n                    \"rel\": \"<string>\"\n                }\n            }\n        ],\n        \"name\": \"<string>\"\n    },\n    \"filename\": \"<string>\",\n    \"generationEndDateTime\": \"<dateTime>\",\n    \"generationStartDateTime\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"logBundleFiles\": [\n        {\n            \"fileName\": \"<string>\",\n            \"sourceSystems\": [\n                \"<string>\",\n                \"<string>\"\n            ],\n            \"url\": \"<string>\"\n        },\n        {\n            \"fileName\": \"<string>\",\n            \"sourceSystems\": [\n                \"<string>\",\n                \"<string>\"\n            ],\n            \"url\": \"<string>\"\n        }\n    ],\n    \"percentComplete\": \"<integer>\",\n    \"sizeOnDiskInBytes\": \"<long>\",\n    \"sourceSystems\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"status\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/log-bundles",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"log-bundles"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "The log bundle was successfully posted and started.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"bundleStartDate\": \"<string>\",\n    \"logBundleFormula\": {\n        \"id\": \"<string>\",\n        \"createdDate\": \"<string>\",\n        \"description\": \"<string>\",\n        \"duration\": \"<string>\",\n        \"includeAllLogCategories\": \"<boolean>\",\n        \"includeAllLogSources\": \"<boolean>\",\n        \"logCategoryList\": [\n            {\n                \"id\": \"<string>\",\n                \"link\": {\n                    \"href\": \"<string>\",\n                    \"rel\": \"<string>\"\n                }\n            },\n            {\n                \"id\": \"<string>\",\n                \"link\": {\n                    \"href\": \"<string>\",\n                    \"rel\": \"<string>\"\n                }\n            }\n        ],\n        \"logSourceList\": [\n            {\n                \"id\": \"<string>\",\n                \"link\": {\n                    \"href\": \"<string>\",\n                    \"rel\": \"<string>\"\n                }\n            },\n            {\n                \"id\": \"<string>\",\n                \"link\": {\n                    \"href\": \"<string>\",\n                    \"rel\": \"<string>\"\n                }\n            }\n        ],\n        \"name\": \"<string>\"\n    },\n    \"filename\": \"<string>\",\n    \"generationEndDateTime\": \"<dateTime>\",\n    \"generationStartDateTime\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"logBundleFiles\": [\n        {\n            \"fileName\": \"<string>\",\n            \"sourceSystems\": [\n                \"<string>\",\n                \"<string>\"\n            ],\n            \"url\": \"<string>\"\n        },\n        {\n            \"fileName\": \"<string>\",\n            \"sourceSystems\": [\n                \"<string>\",\n                \"<string>\"\n            ],\n            \"url\": \"<string>\"\n        }\n    ],\n    \"percentComplete\": \"<integer>\",\n    \"sizeOnDiskInBytes\": \"<long>\",\n    \"sourceSystems\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"status\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/log-bundles",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"log-bundles"
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"id\": \"sint Lorem tempor laborum\"\n}"
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "networks",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Delete network by id",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/networks/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"networks",
												":id"
											],
											"variable": [
												{
													"id": "aa6d48e1-4651-4926-84cb-ca4eab9ac768",
													"key": "id",
													"value": "<string>",
													"type": "string",
													"description": "(Required) "
												}
											]
										},
										"description": "Need check whether VLAN used by any Asset, if yes, return error.\n> This endpoint supports execution by the following roles: admin\n"
									},
									"response": [
										{
											"name": "Not found.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/networks/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"networks",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Need login.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/networks/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"networks",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Request is accepted, delete is on going, check result by GET and expect 404 for success, otherwise, check status, Changed means on going, failed for failed.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/networks/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"networks",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Network used by some assets, can't be delete, remove assign first.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/networks/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"networks",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Conflict",
											"code": 409,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Delete network successfully and ip released.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/networks/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"networks",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{}"
										},
										{
											"name": "Error when delete.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/networks/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"networks",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Get network by id",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/networks/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"networks",
												":id"
											],
											"variable": [
												{
													"id": "979a7f28-e353-4f1c-81e9-45d28862f5e8",
													"key": "id",
													"value": "<string>",
													"type": "string",
													"description": "(Required) "
												}
											]
										},
										"description": "\n> This endpoint supports execution by the following roles: admin, user, export and recovery admin\n"
									},
									"response": [
										{
											"name": "Return network info.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/networks/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"networks",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"name\": \"laboris\",\n \"vlanId\": 3000,\n \"ips\": [\n  \"officia Ut\",\n  \"eiusmod enim al\"\n ],\n \"netmask\": \"255.255.255.0, /24\",\n \"mtu\": 1500,\n \"type\": \"any\",\n \"gateway\": \"tempor et nisi\",\n \"id\": \"magna elit ex sed in\",\n \"routes\": [\n  {\n   \"destination\": \"10.0.10.0\",\n   \"gateway\": \"10.20.30.100\",\n   \"netmask\": \"255.255.255.0\",\n   \"type\": \"subnet\"\n  },\n  {\n   \"destination\": \"10.0.10.0\",\n   \"gateway\": \"10.20.30.100\",\n   \"netmask\": \"255.255.255.0\",\n   \"type\": \"subnet\"\n  }\n ],\n \"status\": \"init\",\n \"usages\": [\n  {\n   \"device\": \"eth1, eth2\",\n   \"inUse\": false,\n   \"ip\": \"eiusmod\",\n   \"lastUpdateAt\": \"cupidatat anim dolore Duis tempor\",\n   \"networkInterface\": \"eth1.100\",\n   \"referenceId\": \"officia\",\n   \"serverType\": \"DATA_MANAGER\",\n   \"status\": \"changing\",\n   \"vmNetworkName\": \"aliquip in tempor sint\"\n  },\n  {\n   \"device\": \"eth1, eth2\",\n   \"inUse\": false,\n   \"ip\": \"est culpa et\",\n   \"lastUpdateAt\": \"D\",\n   \"networkInterface\": \"eth1.100\",\n   \"referenceId\": \"pariatur labore do\",\n   \"serverType\": \"V_PROXY\",\n   \"status\": \"abandoned\",\n   \"vmNetworkName\": \"ullamco\"\n  }\n ],\n \"vmNetworkName\": \"DPG_VM_PUBLIC_NETWORK, DPG_VM_PUBLIC_DATA_NETWORK, DPG_VM_INTER_NETWORK\"\n}"
										},
										{
											"name": "Need login.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/networks/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"networks",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/networks/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"networks",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Not found.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/networks/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"networks",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Update whole network",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"<string>\",\n    \"vlanId\": \"<integer>\",\n    \"ips\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"netmask\": \"<string>\",\n    \"mtu\": 1500,\n    \"type\": \"any\",\n    \"gateway\": \"<string>\",\n    \"id\": \"<string>\",\n    \"routes\": [\n        {\n            \"destination\": \"<string>\",\n            \"gateway\": \"<string>\",\n            \"netmask\": \"<string>\",\n            \"type\": \"subnet\"\n        },\n        {\n            \"destination\": \"<string>\",\n            \"gateway\": \"<string>\",\n            \"netmask\": \"<string>\",\n            \"type\": \"subnet\"\n        }\n    ],\n    \"status\": \"init\",\n    \"usages\": [\n        {\n            \"device\": \"<string>\",\n            \"inUse\": false,\n            \"ip\": \"<string>\",\n            \"lastUpdateAt\": \"<string>\",\n            \"networkInterface\": \"<string>\",\n            \"referenceId\": \"<string>\",\n            \"serverType\": \"<string>\",\n            \"status\": \"<string>\",\n            \"vmNetworkName\": \"<string>\"\n        },\n        {\n            \"device\": \"<string>\",\n            \"inUse\": false,\n            \"ip\": \"<string>\",\n            \"lastUpdateAt\": \"<string>\",\n            \"networkInterface\": \"<string>\",\n            \"referenceId\": \"<string>\",\n            \"serverType\": \"<string>\",\n            \"status\": \"<string>\",\n            \"vmNetworkName\": \"<string>\"\n        }\n    ],\n    \"vmNetworkName\": \"DPG_VM_PUBLIC_DATA_NETWORK\"\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/networks/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"networks",
												":id"
											],
											"variable": [
												{
													"id": "58f8d7fe-edd4-44a2-a576-ca0fb6ed61a2",
													"key": "id",
													"value": "<string>",
													"type": "string",
													"description": "(Required) "
												}
											]
										},
										"description": "Update whole network.\n> This endpoint supports execution by the following roles: admin\n"
									},
									"response": [
										{
											"name": "No any changes need apply to all sub systems and would directly return success.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/networks/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"networks",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"name\": \"laboris\",\n \"vlanId\": 3000,\n \"ips\": [\n  \"officia Ut\",\n  \"eiusmod enim al\"\n ],\n \"netmask\": \"255.255.255.0, /24\",\n \"mtu\": 1500,\n \"type\": \"any\",\n \"gateway\": \"tempor et nisi\",\n \"id\": \"magna elit ex sed in\",\n \"routes\": [\n  {\n   \"destination\": \"10.0.10.0\",\n   \"gateway\": \"10.20.30.100\",\n   \"netmask\": \"255.255.255.0\",\n   \"type\": \"subnet\"\n  },\n  {\n   \"destination\": \"10.0.10.0\",\n   \"gateway\": \"10.20.30.100\",\n   \"netmask\": \"255.255.255.0\",\n   \"type\": \"subnet\"\n  }\n ],\n \"status\": \"init\",\n \"usages\": [\n  {\n   \"device\": \"eth1, eth2\",\n   \"inUse\": false,\n   \"ip\": \"eiusmod\",\n   \"lastUpdateAt\": \"cupidatat anim dolore Duis tempor\",\n   \"networkInterface\": \"eth1.100\",\n   \"referenceId\": \"officia\",\n   \"serverType\": \"DATA_MANAGER\",\n   \"status\": \"changing\",\n   \"vmNetworkName\": \"aliquip in tempor sint\"\n  },\n  {\n   \"device\": \"eth1, eth2\",\n   \"inUse\": false,\n   \"ip\": \"est culpa et\",\n   \"lastUpdateAt\": \"D\",\n   \"networkInterface\": \"eth1.100\",\n   \"referenceId\": \"pariatur labore do\",\n   \"serverType\": \"V_PROXY\",\n   \"status\": \"abandoned\",\n   \"vmNetworkName\": \"ullamco\"\n  }\n ],\n \"vmNetworkName\": \"DPG_VM_PUBLIC_NETWORK, DPG_VM_PUBLIC_DATA_NETWORK, DPG_VM_INTER_NETWORK\"\n}"
										},
										{
											"name": "If update network but some using IP removed, can't continue.\nIf need more IP than passed in, can't continue.\n",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/networks/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"networks",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Conflict",
											"code": 409,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Not found.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/networks/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"networks",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Need login.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/networks/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"networks",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Request contains invalid content.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/networks/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"networks",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Request accepted and executing on going.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/networks/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"networks",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"name\": \"laboris\",\n \"vlanId\": 3000,\n \"ips\": [\n  \"officia Ut\",\n  \"eiusmod enim al\"\n ],\n \"netmask\": \"255.255.255.0, /24\",\n \"mtu\": 1500,\n \"type\": \"any\",\n \"gateway\": \"tempor et nisi\",\n \"id\": \"magna elit ex sed in\",\n \"routes\": [\n  {\n   \"destination\": \"10.0.10.0\",\n   \"gateway\": \"10.20.30.100\",\n   \"netmask\": \"255.255.255.0\",\n   \"type\": \"subnet\"\n  },\n  {\n   \"destination\": \"10.0.10.0\",\n   \"gateway\": \"10.20.30.100\",\n   \"netmask\": \"255.255.255.0\",\n   \"type\": \"subnet\"\n  }\n ],\n \"status\": \"init\",\n \"usages\": [\n  {\n   \"device\": \"eth1, eth2\",\n   \"inUse\": false,\n   \"ip\": \"eiusmod\",\n   \"lastUpdateAt\": \"cupidatat anim dolore Duis tempor\",\n   \"networkInterface\": \"eth1.100\",\n   \"referenceId\": \"officia\",\n   \"serverType\": \"DATA_MANAGER\",\n   \"status\": \"changing\",\n   \"vmNetworkName\": \"aliquip in tempor sint\"\n  },\n  {\n   \"device\": \"eth1, eth2\",\n   \"inUse\": false,\n   \"ip\": \"est culpa et\",\n   \"lastUpdateAt\": \"D\",\n   \"networkInterface\": \"eth1.100\",\n   \"referenceId\": \"pariatur labore do\",\n   \"serverType\": \"V_PROXY\",\n   \"status\": \"abandoned\",\n   \"vmNetworkName\": \"ullamco\"\n  }\n ],\n \"vmNetworkName\": \"DPG_VM_PUBLIC_NETWORK, DPG_VM_PUBLIC_DATA_NETWORK, DPG_VM_INTER_NETWORK\"\n}"
										},
										{
											"name": "Some error.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/networks/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"networks",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Get networks.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/networks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"networks"
									]
								},
								"description": "Retrieves all existing networks. Does not return a default network if no additional networks are added.\n> This endpoint supports execution by the following roles: admin, user, export and recovery admin\n"
							},
							"response": [
								{
									"name": "Valid login is required.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/networks",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"networks"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Cannot retrieve the networks.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/networks",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"networks"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returns all VLANs.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/networks",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"networks"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"content\": [\n  {\n   \"name\": \"sint\",\n   \"vlanId\": 162,\n   \"ips\": [\n    \"dolore culpa\",\n    \"cillum id sunt\"\n   ],\n   \"netmask\": \"255.255.255.0, /24\",\n   \"mtu\": 1500,\n   \"type\": \"any\",\n   \"gateway\": \"proide\",\n   \"id\": \"fugiat enim occaecat\",\n   \"routes\": [\n    {\n     \"destination\": \"10.0.10.0\",\n     \"gateway\": \"10.20.30.100\",\n     \"netmask\": \"255.255.255.0\",\n     \"type\": \"subnet\"\n    },\n    {\n     \"destination\": \"10.0.10.0\",\n     \"gateway\": \"10.20.30.100\",\n     \"netmask\": \"255.255.255.0\",\n     \"type\": \"subnet\"\n    }\n   ],\n   \"status\": \"init\",\n   \"usages\": [\n    {\n     \"device\": \"eth1, eth2\",\n     \"inUse\": false,\n     \"ip\": \"cupidatat nostrud labore sint\",\n     \"lastUpdateAt\": \"eiusmod sed\",\n     \"networkInterface\": \"eth1.100\",\n     \"referenceId\": \"reprehenderit nostrud veniam culpa\",\n     \"serverType\": \"V_PROXY\",\n     \"status\": \"abandoned\",\n     \"vmNetworkName\": \"Ut dolore esse Lorem\"\n    },\n    {\n     \"device\": \"eth1, eth2\",\n     \"inUse\": false,\n     \"ip\": \"aute culpa labore Lorem\",\n     \"lastUpdateAt\": \"sunt cupidatat ea velit do\",\n     \"networkInterface\": \"eth1.100\",\n     \"referenceId\": \"mollit minim proident\",\n     \"serverType\": \"DATA_MANAGER\",\n     \"status\": \"init\",\n     \"vmNetworkName\": \"est et\"\n    }\n   ],\n   \"vmNetworkName\": \"DPG_VM_PUBLIC_NETWORK, DPG_VM_PUBLIC_DATA_NETWORK, DPG_VM_INTER_NETWORK\"\n  },\n  {\n   \"name\": \"sit in pariatur Ut aute\",\n   \"vlanId\": 704,\n   \"ips\": [\n    \"in aliq\",\n    \"labore magna\"\n   ],\n   \"netmask\": \"255.255.255.0, /24\",\n   \"mtu\": 1500,\n   \"type\": \"any\",\n   \"gateway\": \"proident anim Du\",\n   \"id\": \"si\",\n   \"routes\": [\n    {\n     \"destination\": \"10.0.10.0\",\n     \"gateway\": \"10.20.30.100\",\n     \"netmask\": \"255.255.255.0\",\n     \"type\": \"subnet\"\n    },\n    {\n     \"destination\": \"10.0.10.0\",\n     \"gateway\": \"10.20.30.100\",\n     \"netmask\": \"255.255.255.0\",\n     \"type\": \"subnet\"\n    }\n   ],\n   \"status\": \"init\",\n   \"usages\": [\n    {\n     \"device\": \"eth1, eth2\",\n     \"inUse\": false,\n     \"ip\": \"dolor commodo ullam\",\n     \"lastUpdateAt\": \"veniam\",\n     \"networkInterface\": \"eth1.100\",\n     \"referenceId\": \"esse sunt\",\n     \"serverType\": \"DATA_MANAGER\",\n     \"status\": \"changing\",\n     \"vmNetworkName\": \"fugiat\"\n    },\n    {\n     \"device\": \"eth1, eth2\",\n     \"inUse\": false,\n     \"ip\": \"id magna\",\n     \"lastUpdateAt\": \"sit Duis anim in\",\n     \"networkInterface\": \"eth1.100\",\n     \"referenceId\": \"elit ut in\",\n     \"serverType\": \"DATA_MANAGER\",\n     \"status\": \"failed\",\n     \"vmNetworkName\": \"fugiat voluptate ex mollit\"\n    }\n   ],\n   \"vmNetworkName\": \"DPG_VM_PUBLIC_NETWORK, DPG_VM_PUBLIC_DATA_NETWORK, DPG_VM_INTER_NETWORK\"\n  }\n ],\n \"page\": {\n  \"number\": 6929013,\n  \"queryState\": \"dolor enim nostrud\",\n  \"size\": 38455630,\n  \"totalElements\": 67402442,\n  \"totalPages\": -11564067\n }\n}"
								}
							]
						},
						{
							"name": "Add a network.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<string>\",\n    \"vlanId\": \"<integer>\",\n    \"ips\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"netmask\": \"<string>\",\n    \"mtu\": 1500,\n    \"type\": \"any\",\n    \"gateway\": \"<string>\",\n    \"id\": \"<string>\",\n    \"routes\": [\n        {\n            \"destination\": \"<string>\",\n            \"gateway\": \"<string>\",\n            \"netmask\": \"<string>\",\n            \"type\": \"subnet\"\n        },\n        {\n            \"destination\": \"<string>\",\n            \"gateway\": \"<string>\",\n            \"netmask\": \"<string>\",\n            \"type\": \"subnet\"\n        }\n    ],\n    \"status\": \"init\",\n    \"usages\": [\n        {\n            \"device\": \"<string>\",\n            \"inUse\": false,\n            \"ip\": \"<string>\",\n            \"lastUpdateAt\": \"<string>\",\n            \"networkInterface\": \"<string>\",\n            \"referenceId\": \"<string>\",\n            \"serverType\": \"<string>\",\n            \"status\": \"<string>\",\n            \"vmNetworkName\": \"<string>\"\n        },\n        {\n            \"device\": \"<string>\",\n            \"inUse\": false,\n            \"ip\": \"<string>\",\n            \"lastUpdateAt\": \"<string>\",\n            \"networkInterface\": \"<string>\",\n            \"referenceId\": \"<string>\",\n            \"serverType\": \"<string>\",\n            \"status\": \"<string>\",\n            \"vmNetworkName\": \"<string>\"\n        }\n    ],\n    \"vmNetworkName\": \"DPG_VM_PUBLIC_DATA_NETWORK\"\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/networks?init=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"networks"
									],
									"query": [
										{
											"key": "init",
											"value": "<boolean>"
										}
									]
								},
								"description": "Creates a network. The operation occurs asynchronously. When successful, the request is accepted for processing.\n> This endpoint supports execution by the following roles: admin\n"
							},
							"response": [
								{
									"name": "Bad request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/networks?init=<boolean>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"networks"
											],
											"query": [
												{
													"key": "init",
													"value": "<boolean>"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/networks?init=<boolean>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"networks"
											],
											"query": [
												{
													"key": "init",
													"value": "<boolean>"
												}
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"name\": \"laboris\",\n \"vlanId\": 3000,\n \"ips\": [\n  \"officia Ut\",\n  \"eiusmod enim al\"\n ],\n \"netmask\": \"255.255.255.0, /24\",\n \"mtu\": 1500,\n \"type\": \"any\",\n \"gateway\": \"tempor et nisi\",\n \"id\": \"magna elit ex sed in\",\n \"routes\": [\n  {\n   \"destination\": \"10.0.10.0\",\n   \"gateway\": \"10.20.30.100\",\n   \"netmask\": \"255.255.255.0\",\n   \"type\": \"subnet\"\n  },\n  {\n   \"destination\": \"10.0.10.0\",\n   \"gateway\": \"10.20.30.100\",\n   \"netmask\": \"255.255.255.0\",\n   \"type\": \"subnet\"\n  }\n ],\n \"status\": \"init\",\n \"usages\": [\n  {\n   \"device\": \"eth1, eth2\",\n   \"inUse\": false,\n   \"ip\": \"eiusmod\",\n   \"lastUpdateAt\": \"cupidatat anim dolore Duis tempor\",\n   \"networkInterface\": \"eth1.100\",\n   \"referenceId\": \"officia\",\n   \"serverType\": \"DATA_MANAGER\",\n   \"status\": \"changing\",\n   \"vmNetworkName\": \"aliquip in tempor sint\"\n  },\n  {\n   \"device\": \"eth1, eth2\",\n   \"inUse\": false,\n   \"ip\": \"est culpa et\",\n   \"lastUpdateAt\": \"D\",\n   \"networkInterface\": \"eth1.100\",\n   \"referenceId\": \"pariatur labore do\",\n   \"serverType\": \"V_PROXY\",\n   \"status\": \"abandoned\",\n   \"vmNetworkName\": \"ullamco\"\n  }\n ],\n \"vmNetworkName\": \"DPG_VM_PUBLIC_NETWORK, DPG_VM_PUBLIC_DATA_NETWORK, DPG_VM_INTER_NETWORK\"\n}"
								},
								{
									"name": "Can't save networks",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/networks?init=<boolean>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"networks"
											],
											"query": [
												{
													"key": "init",
													"value": "<boolean>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Need login",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/networks?init=<boolean>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"networks"
											],
											"query": [
												{
													"key": "init",
													"value": "<boolean>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Internal Center not found.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/networks?init=<boolean>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"networks"
											],
											"query": [
												{
													"key": "init",
													"value": "<boolean>"
												}
											]
										}
									},
									"status": "Precondition Failed",
									"code": 412,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Request contains conflict info with existing info.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/networks?init=<boolean>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"networks"
											],
											"query": [
												{
													"key": "init",
													"value": "<boolean>"
												}
											]
										}
									},
									"status": "Conflict",
									"code": 409,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "nodes",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Get node by ID.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/nodes/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"nodes",
												":id"
											],
											"variable": [
												{
													"id": "5e5c0c29-f647-4a3c-9385-b03db2a4ad37",
													"key": "id",
													"value": "<string>",
													"type": "string",
													"description": "(Required) Node ID."
												}
											]
										},
										"description": "Retrieves a node on the appliance with the specified ID. The node has information about the appliance status, subcomponents in the appliance, uptime, version, and other system details.\n> This endpoint supports execution by the following roles: admin, user, export and recovery admin\n"
									},
									"response": [
										{
											"name": "Found and returned the node with the specified ID.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/nodes/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"nodes",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"id\": \"sint in Excepteur pariatur occaecat\",\n \"status\": \"QUIESCE\",\n \"components\": [\n  {\n   \"name\": \"POWER_PROTECT_DATA_MANAGER\",\n   \"version\": \"officia ullamco\"\n  },\n  {\n   \"name\": \"APP_AGENT\",\n   \"version\": \"Excepteur mollit dolore\"\n  }\n ],\n \"lastNodeStatusUpdated\": \"2015-02-11T16:11:17.341Z\",\n \"lastReboot\": \"nostrud enim ut culpa dolore\",\n \"lastUpdated\": \"1944-12-21T02:01:11.002Z\",\n \"lastUpdatedBy\": \"magna do dolore\",\n \"powerProtectModel\": \"culpa aute\",\n \"powerProtectVersion\": \"sint proident\",\n \"restrictions\": [\n  {\n   \"name\": \"noScheduledStorageAccess\",\n   \"value\": \"false\"\n  },\n  {\n   \"name\": \"noScheduledStorageAccess\",\n   \"value\": \"false\"\n  }\n ],\n \"statusDescription\": \"commodo aute ea\",\n \"systemId\": \"labore deserunt laboris dolore ipsum\",\n \"uptimeInDays\": \"veniam\",\n \"version\": \"dolor\"\n}"
										},
										{
											"name": "Cannot find a node with the specified ID.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/nodes/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"nodes",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The requestor is not allowed to perform this operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/nodes/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"nodes",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/nodes/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"nodes",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Change the status of the appliance.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"<string>\",\n    \"status\": \"<string>\",\n    \"components\": [\n        {\n            \"name\": \"<string>\",\n            \"version\": \"<string>\"\n        },\n        {\n            \"name\": \"<string>\",\n            \"version\": \"<string>\"\n        }\n    ],\n    \"lastNodeStatusUpdated\": \"<dateTime>\",\n    \"lastReboot\": \"<string>\",\n    \"lastUpdated\": \"<dateTime>\",\n    \"lastUpdatedBy\": \"<string>\",\n    \"powerProtectModel\": \"<string>\",\n    \"powerProtectVersion\": \"<string>\",\n    \"restrictions\": [\n        {\n            \"name\": \"<string>\",\n            \"value\": \"<string>\"\n        },\n        {\n            \"name\": \"<string>\",\n            \"value\": \"<string>\"\n        }\n    ],\n    \"statusDescription\": \"<string>\",\n    \"systemId\": \"<string>\",\n    \"uptimeInDays\": \"<string>\",\n    \"version\": \"<string>\"\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/nodes/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"nodes",
												":id"
											],
											"variable": [
												{
													"id": "cad1069e-e280-4430-a3e1-699c56013af0",
													"key": "id",
													"value": "<string>",
													"type": "string",
													"description": "(Required) Node ID sent in request."
												}
											]
										},
										"description": "Updates the status of the appliance to any of the following states: MAINTENANCE, RESTORE, QUIESCE, OPERATIONAL.\n> This endpoint supports execution by the following roles: admin\n"
									},
									"response": [
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\": \"<string>\",\n    \"status\": \"<string>\",\n    \"components\": [\n        {\n            \"name\": \"<string>\",\n            \"version\": \"<string>\"\n        },\n        {\n            \"name\": \"<string>\",\n            \"version\": \"<string>\"\n        }\n    ],\n    \"lastNodeStatusUpdated\": \"<dateTime>\",\n    \"lastReboot\": \"<string>\",\n    \"lastUpdated\": \"<dateTime>\",\n    \"lastUpdatedBy\": \"<string>\",\n    \"powerProtectModel\": \"<string>\",\n    \"powerProtectVersion\": \"<string>\",\n    \"restrictions\": [\n        {\n            \"name\": \"<string>\",\n            \"value\": \"<string>\"\n        },\n        {\n            \"name\": \"<string>\",\n            \"value\": \"<string>\"\n        }\n    ],\n    \"statusDescription\": \"<string>\",\n    \"systemId\": \"<string>\",\n    \"uptimeInDays\": \"<string>\",\n    \"version\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/nodes/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"nodes",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Accepted and processing the node status request.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\": \"<string>\",\n    \"status\": \"<string>\",\n    \"components\": [\n        {\n            \"name\": \"<string>\",\n            \"version\": \"<string>\"\n        },\n        {\n            \"name\": \"<string>\",\n            \"version\": \"<string>\"\n        }\n    ],\n    \"lastNodeStatusUpdated\": \"<dateTime>\",\n    \"lastReboot\": \"<string>\",\n    \"lastUpdated\": \"<dateTime>\",\n    \"lastUpdatedBy\": \"<string>\",\n    \"powerProtectModel\": \"<string>\",\n    \"powerProtectVersion\": \"<string>\",\n    \"restrictions\": [\n        {\n            \"name\": \"<string>\",\n            \"value\": \"<string>\"\n        },\n        {\n            \"name\": \"<string>\",\n            \"value\": \"<string>\"\n        }\n    ],\n    \"statusDescription\": \"<string>\",\n    \"systemId\": \"<string>\",\n    \"uptimeInDays\": \"<string>\",\n    \"version\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/nodes/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"nodes",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The submitted node has a syntax error.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\": \"<string>\",\n    \"status\": \"<string>\",\n    \"components\": [\n        {\n            \"name\": \"<string>\",\n            \"version\": \"<string>\"\n        },\n        {\n            \"name\": \"<string>\",\n            \"version\": \"<string>\"\n        }\n    ],\n    \"lastNodeStatusUpdated\": \"<dateTime>\",\n    \"lastReboot\": \"<string>\",\n    \"lastUpdated\": \"<dateTime>\",\n    \"lastUpdatedBy\": \"<string>\",\n    \"powerProtectModel\": \"<string>\",\n    \"powerProtectVersion\": \"<string>\",\n    \"restrictions\": [\n        {\n            \"name\": \"<string>\",\n            \"value\": \"<string>\"\n        },\n        {\n            \"name\": \"<string>\",\n            \"value\": \"<string>\"\n        }\n    ],\n    \"statusDescription\": \"<string>\",\n    \"systemId\": \"<string>\",\n    \"uptimeInDays\": \"<string>\",\n    \"version\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/nodes/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"nodes",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The requestor is not allowed to perform this operation.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\": \"<string>\",\n    \"status\": \"<string>\",\n    \"components\": [\n        {\n            \"name\": \"<string>\",\n            \"version\": \"<string>\"\n        },\n        {\n            \"name\": \"<string>\",\n            \"version\": \"<string>\"\n        }\n    ],\n    \"lastNodeStatusUpdated\": \"<dateTime>\",\n    \"lastReboot\": \"<string>\",\n    \"lastUpdated\": \"<dateTime>\",\n    \"lastUpdatedBy\": \"<string>\",\n    \"powerProtectModel\": \"<string>\",\n    \"powerProtectVersion\": \"<string>\",\n    \"restrictions\": [\n        {\n            \"name\": \"<string>\",\n            \"value\": \"<string>\"\n        },\n        {\n            \"name\": \"<string>\",\n            \"value\": \"<string>\"\n        }\n    ],\n    \"statusDescription\": \"<string>\",\n    \"systemId\": \"<string>\",\n    \"uptimeInDays\": \"<string>\",\n    \"version\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/nodes/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"nodes",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The system state change request is not valid.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\": \"<string>\",\n    \"status\": \"<string>\",\n    \"components\": [\n        {\n            \"name\": \"<string>\",\n            \"version\": \"<string>\"\n        },\n        {\n            \"name\": \"<string>\",\n            \"version\": \"<string>\"\n        }\n    ],\n    \"lastNodeStatusUpdated\": \"<dateTime>\",\n    \"lastReboot\": \"<string>\",\n    \"lastUpdated\": \"<dateTime>\",\n    \"lastUpdatedBy\": \"<string>\",\n    \"powerProtectModel\": \"<string>\",\n    \"powerProtectVersion\": \"<string>\",\n    \"restrictions\": [\n        {\n            \"name\": \"<string>\",\n            \"value\": \"<string>\"\n        },\n        {\n            \"name\": \"<string>\",\n            \"value\": \"<string>\"\n        }\n    ],\n    \"statusDescription\": \"<string>\",\n    \"systemId\": \"<string>\",\n    \"uptimeInDays\": \"<string>\",\n    \"version\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/nodes/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"nodes",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Successful operation.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\": \"<string>\",\n    \"status\": \"<string>\",\n    \"components\": [\n        {\n            \"name\": \"<string>\",\n            \"version\": \"<string>\"\n        },\n        {\n            \"name\": \"<string>\",\n            \"version\": \"<string>\"\n        }\n    ],\n    \"lastNodeStatusUpdated\": \"<dateTime>\",\n    \"lastReboot\": \"<string>\",\n    \"lastUpdated\": \"<dateTime>\",\n    \"lastUpdatedBy\": \"<string>\",\n    \"powerProtectModel\": \"<string>\",\n    \"powerProtectVersion\": \"<string>\",\n    \"restrictions\": [\n        {\n            \"name\": \"<string>\",\n            \"value\": \"<string>\"\n        },\n        {\n            \"name\": \"<string>\",\n            \"value\": \"<string>\"\n        }\n    ],\n    \"statusDescription\": \"<string>\",\n    \"systemId\": \"<string>\",\n    \"uptimeInDays\": \"<string>\",\n    \"version\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/nodes/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"nodes",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"id\": \"sint in Excepteur pariatur occaecat\",\n \"status\": \"QUIESCE\",\n \"components\": [\n  {\n   \"name\": \"POWER_PROTECT_DATA_MANAGER\",\n   \"version\": \"officia ullamco\"\n  },\n  {\n   \"name\": \"APP_AGENT\",\n   \"version\": \"Excepteur mollit dolore\"\n  }\n ],\n \"lastNodeStatusUpdated\": \"2015-02-11T16:11:17.341Z\",\n \"lastReboot\": \"nostrud enim ut culpa dolore\",\n \"lastUpdated\": \"1944-12-21T02:01:11.002Z\",\n \"lastUpdatedBy\": \"magna do dolore\",\n \"powerProtectModel\": \"culpa aute\",\n \"powerProtectVersion\": \"sint proident\",\n \"restrictions\": [\n  {\n   \"name\": \"noScheduledStorageAccess\",\n   \"value\": \"false\"\n  },\n  {\n   \"name\": \"noScheduledStorageAccess\",\n   \"value\": \"false\"\n  }\n ],\n \"statusDescription\": \"commodo aute ea\",\n \"systemId\": \"labore deserunt laboris dolore ipsum\",\n \"uptimeInDays\": \"veniam\",\n \"version\": \"dolor\"\n}"
										},
										{
											"name": "Cannot find a node with the specified ID.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\": \"<string>\",\n    \"status\": \"<string>\",\n    \"components\": [\n        {\n            \"name\": \"<string>\",\n            \"version\": \"<string>\"\n        },\n        {\n            \"name\": \"<string>\",\n            \"version\": \"<string>\"\n        }\n    ],\n    \"lastNodeStatusUpdated\": \"<dateTime>\",\n    \"lastReboot\": \"<string>\",\n    \"lastUpdated\": \"<dateTime>\",\n    \"lastUpdatedBy\": \"<string>\",\n    \"powerProtectModel\": \"<string>\",\n    \"powerProtectVersion\": \"<string>\",\n    \"restrictions\": [\n        {\n            \"name\": \"<string>\",\n            \"value\": \"<string>\"\n        },\n        {\n            \"name\": \"<string>\",\n            \"value\": \"<string>\"\n        }\n    ],\n    \"statusDescription\": \"<string>\",\n    \"systemId\": \"<string>\",\n    \"uptimeInDays\": \"<string>\",\n    \"version\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/nodes/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"nodes",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Get all nodes.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/nodes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"nodes"
									]
								},
								"description": "Retrieves all nodes on the appliance. Each node has information about the appliance status, subcomponents in the appliance, uptime, version, and other system details.\n> This endpoint supports execution by the following roles: admin, user, export and recovery admin\n"
							},
							"response": [
								{
									"name": "Filter syntax is not valid.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/nodes",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"nodes"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Located and returned the available nodes successfully.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/nodes",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"nodes"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n {\n  \"id\": \"dolor in\",\n  \"status\": \"RESTORE_COMPLETED\",\n  \"components\": [\n   {\n    \"name\": \"POWER_PROTECT_DATA_MANAGER\",\n    \"version\": \"ex tempor ut in pariatur\"\n   },\n   {\n    \"name\": \"VM_DIRECT\",\n    \"version\": \"culpa consectetur in enim\"\n   }\n  ],\n  \"lastNodeStatusUpdated\": \"1940-11-26T20:58:12.140Z\",\n  \"lastReboot\": \"sint ullamco in in sed\",\n  \"lastUpdated\": \"2000-10-19T07:02:28.474Z\",\n  \"lastUpdatedBy\": \"dolore in\",\n  \"powerProtectModel\": \"ullamco in aute ut\",\n  \"powerProtectVersion\": \"laborum commodo consequat ut\",\n  \"restrictions\": [\n   {\n    \"name\": \"noScheduledStorageAccess\",\n    \"value\": \"false\"\n   },\n   {\n    \"name\": \"noScheduledStorageAccess\",\n    \"value\": \"true\"\n   }\n  ],\n  \"statusDescription\": \"adipisicing ex dolor in\",\n  \"systemId\": \"incididunt\",\n  \"uptimeInDays\": \"amet Duis id consequat\",\n  \"version\": \"amet proident Lorem\"\n },\n {\n  \"id\": \"sunt eu quis\",\n  \"status\": \"RESTORE_FAILED\",\n  \"components\": [\n   {\n    \"name\": \"APP_AGENT\",\n    \"version\": \"nulla cillum\"\n   },\n   {\n    \"name\": \"APP_AGENT\",\n    \"version\": \"ut irure laborum magna\"\n   }\n  ],\n  \"lastNodeStatusUpdated\": \"1952-04-15T17:43:14.431Z\",\n  \"lastReboot\": \"ea\",\n  \"lastUpdated\": \"2006-02-13T19:05:51.530Z\",\n  \"lastUpdatedBy\": \"ut minim\",\n  \"powerProtectModel\": \"Lorem mollit quis minim occaecat\",\n  \"powerProtectVersion\": \"ullamco amet sunt\",\n  \"restrictions\": [\n   {\n    \"name\": \"noScheduledStorageAccess\",\n    \"value\": \"true\"\n   },\n   {\n    \"name\": \"noScheduledStorageAccess\",\n    \"value\": \"true\"\n   }\n  ],\n  \"statusDescription\": \"eiusmod dolor\",\n  \"systemId\": \"incididunt aliquip\",\n  \"uptimeInDays\": \"deserunt\",\n  \"version\": \"elit est\"\n }\n]"
								},
								{
									"name": "The requestor is not allowed to perform this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/nodes",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"nodes"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "An unexpected error prevented the server from fulfilling your request.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/nodes",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"nodes"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "protection-engines",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "proxies",
									"item": [
										{
											"name": "{proxy Id}",
											"item": [
												{
													"name": "Delete protection engine proxy.",
													"request": {
														"auth": {
															"type": "apikey",
															"apikey": [
																{
																	"key": "key",
																	"value": "Authorization",
																	"type": "string"
																},
																{
																	"key": "value",
																	"value": true,
																	"type": "boolean"
																},
																{
																	"key": "in",
																	"value": "header",
																	"type": "string"
																}
															]
														},
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/v2/protection-engines/:id/proxies/:proxyId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"protection-engines",
																":id",
																"proxies",
																":proxyId"
															],
															"variable": [
																{
																	"id": "7cd982b8-9329-451f-a77c-057003db577a",
																	"key": "id",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) The ID of the VPE protection engine."
																},
																{
																	"id": "9c0156fd-390a-47ae-8ce0-ce911ece7c48",
																	"key": "proxyId",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) The proxy ID of the proxy to be removed."
																}
															]
														},
														"description": "Deletes the VPE proxy with a proxyId that is registered to the protection engine with the specified ID.  The protection engine with the specified ID must already be registered with PowerProtect Data Manager. The VPE proxy with the proxyId must also be registered.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
													},
													"response": [
														{
															"name": "The requestor is not allowed to perform this operation.",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": {
																			"content": "Added as a part of security scheme: apikey",
																			"type": "text/plain"
																		},
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/protection-engines/:id/proxies/:proxyId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"protection-engines",
																		":id",
																		"proxies",
																		":proxyId"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "proxyId"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
														},
														{
															"name": "An unexpected error prevented the server from fulfilling your request.",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": {
																			"content": "Added as a part of security scheme: apikey",
																			"type": "text/plain"
																		},
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/protection-engines/:id/proxies/:proxyId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"protection-engines",
																		":id",
																		"proxies",
																		":proxyId"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "proxyId"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
														},
														{
															"name": "The request is not valid.",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": {
																			"content": "Added as a part of security scheme: apikey",
																			"type": "text/plain"
																		},
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/protection-engines/:id/proxies/:proxyId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"protection-engines",
																		":id",
																		"proxies",
																		":proxyId"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "proxyId"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
														},
														{
															"name": "The requested resource was not found.",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": {
																			"content": "Added as a part of security scheme: apikey",
																			"type": "text/plain"
																		},
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/protection-engines/:id/proxies/:proxyId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"protection-engines",
																		":id",
																		"proxies",
																		":proxyId"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "proxyId"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
														},
														{
															"name": "The requestor is not authorized to perform this operation.",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": {
																			"content": "Added as a part of security scheme: apikey",
																			"type": "text/plain"
																		},
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/protection-engines/:id/proxies/:proxyId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"protection-engines",
																		":id",
																		"proxies",
																		":proxyId"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "proxyId"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
														},
														{
															"name": "The request was accepted for processing.",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": {
																			"content": "Added as a part of security scheme: apikey",
																			"type": "text/plain"
																		},
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/protection-engines/:id/proxies/:proxyId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"protection-engines",
																		":id",
																		"proxies",
																		":proxyId"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "proxyId"
																		}
																	]
																}
															},
															"status": "Accepted",
															"code": 202,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"Config\": {\n  \"AdvancedOptions\": {\n   \"CapacityPercentage\": 45629334,\n   \"Datastores\": [\n    \"proide\",\n    \"anim reprehenderit nostrud \"\n   ],\n   \"TransportSessions\": {\n    \"Mode\": \"HotaddPreferred\",\n    \"UseSsl\": false,\n    \"UserDefined\": true\n   }\n  },\n  \"ApplicationData\": {},\n  \"AutoUpdateConfig\": true,\n  \"Credential\": {\n   \"ObjectId\": \"labore mollit\",\n   \"Password\": \"dolor\",\n   \"Type\": \"Object\",\n   \"UserName\": \"Ut\"\n  },\n  \"DeployProxy\": true,\n  \"Disabled\": false,\n  \"HealthCheckInterval\": 82082786,\n  \"HostName\": \"ex veniam\",\n  \"InstanceUuid\": \"enim ex\",\n  \"MORef\": \"dolore incididunt sint\",\n  \"Operation\": \"upgrade\",\n  \"Port\": -81697983,\n  \"ProxyDeploymentConfig\": {\n   \"AdditionalVMNetworks\": [\n    {\n     \"Fqdn\": \"non\",\n     \"Gateway\": \"ullamco exercitation id irure qui\",\n     \"IPProtocol\": \"IPv4\",\n     \"InterfaceName\": \"voluptate\",\n     \"IpAddress\": \"laborum aliqua\",\n     \"MacAddress\": \"irure tempor\",\n     \"MultiVlanEnabled\": true,\n     \"NetMask\": \"in velit pariatur\",\n     \"NetworkMoref\": \"nisi\",\n     \"Vlans\": [\n      {\n       \"Gateway\": \"anim veniam officia id\",\n       \"IpAddress\": \"Excepteur Ut esse\",\n       \"Mtu\": -10182718,\n       \"Netmask\": \"ipsum in quis\",\n       \"Routes\": [\n        {\n         \"Gateway\": \"in cillum\",\n         \"Netmask\": \"incididunt ipsum ex reprehenderit sed\",\n         \"Source\": \"Ut nostrud\",\n         \"Type\": \"Excepteur proident in\"\n        },\n        {\n         \"Gateway\": \"aliqua elit\",\n         \"Netmask\": \"par\",\n         \"Source\": \"labore\",\n         \"Type\": \"et ullamco officia irure\"\n        }\n       ],\n       \"VlanId\": 50048506\n      },\n      {\n       \"Gateway\": \"exercitation aliqua fugiat\",\n       \"IpAddress\": \"voluptate laboris in\",\n       \"Mtu\": -77893727,\n       \"Netmask\": \"exercitatio\",\n       \"Routes\": [\n        {\n         \"Gateway\": \"Lorem\",\n         \"Netmask\": \"Ut est id\",\n         \"Source\": \"reprehenderit nostrud et minim\",\n         \"Type\": \"nisi aliqua id\"\n        },\n        {\n         \"Gateway\": \"ut cupidatat commodo incididunt\",\n         \"Netmask\": \"dolor cupidatat\",\n         \"Source\": \"commodo Excepteur sint non labore\",\n         \"Type\": \"voluptate id Excepteur dolore occ\"\n        }\n       ],\n       \"VlanId\": -47644326\n      }\n     ]\n    },\n    {\n     \"Fqdn\": \"cupidatat adipisicing aliquip in\",\n     \"Gateway\": \"in velit\",\n     \"IPProtocol\": \"IPv4\",\n     \"InterfaceName\": \"aliqua proid\",\n     \"IpAddress\": \"occaecat aliquip do\",\n     \"MacAddress\": \"fugiat ea\",\n     \"MultiVlanEnabled\": true,\n     \"NetMask\": \"eu officia ad voluptate\",\n     \"NetworkMoref\": \"cupidatat dolore elit irure\",\n     \"Vlans\": [\n      {\n       \"Gateway\": \"magna quis consequat nostrud\",\n       \"IpAddress\": \"aute\",\n       \"Mtu\": -51977868,\n       \"Netmask\": \"officia sunt elit labore\",\n       \"Routes\": [\n        {\n         \"Gateway\": \"magna enim\",\n         \"Netmask\": \"est l\",\n         \"Source\": \"Duis cillum ut id officia\",\n         \"Type\": \"ut sint\"\n        },\n        {\n         \"Gateway\": \"Lorem aliqua ullamco aliquip Duis\",\n         \"Netmask\": \"eiusmod non irure\",\n         \"Source\": \"sint\",\n         \"Type\": \"elit magna id\"\n        }\n       ],\n       \"VlanId\": 28111220\n      },\n      {\n       \"Gateway\": \"aute non sunt\",\n       \"IpAddress\": \"veniam elit ut\",\n       \"Mtu\": -36377772,\n       \"Netmask\": \"in laborum Lorem\",\n       \"Routes\": [\n        {\n         \"Gateway\": \"ut dolor anim\",\n         \"Netmask\": \"nulla exercitation\",\n         \"Source\": \"pariatur in Lorem veniam\",\n         \"Type\": \"dolor reprehenderit dolor\"\n        },\n        {\n         \"Gateway\": \"nostrud voluptate\",\n         \"Netmask\": \"minim nostrud ullamco quis\",\n         \"Source\": \"voluptate anim\",\n         \"Type\": \"ex minim tempor\"\n        }\n       ],\n       \"VlanId\": 17088502\n      }\n     ]\n    }\n   ],\n   \"Dns\": \"dolor proident elit\",\n   \"Fqdn\": \"officia deserunt\",\n   \"Gateway\": \"proident amet dolore sint ad\",\n   \"IPProtocol\": \"IPv4\",\n   \"InterfaceName\": \"Exc\",\n   \"IpAddress\": \"nulla occaecat Duis\",\n   \"Location\": {\n    \"ClusterMoref\": \"sed\",\n    \"DatastoreMoref\": \"eiusmod anim\",\n    \"FolderMoref\": \"in adipisicing Excepteur minim\",\n    \"HostMoref\": \"elit id eu velit\",\n    \"NetworkMoref\": \"no\",\n    \"ResourcePoolMoref\": \"ex cillum laborum\"\n   },\n   \"MacAddress\": \"aute eiusmod do\",\n   \"MultiVlanEnabled\": true,\n   \"NTPServer\": \"fugiat culpa\",\n   \"NetMask\": \"reprehenderit ut Lorem veniam\",\n   \"NetworkMoref\": \"enim irure minim\",\n   \"OvaFile\": \"dolor ipsum velit\",\n   \"RootCredential\": {\n    \"ObjectId\": \"enim\",\n    \"Password\": \"occaecat sed\",\n    \"Type\": \"ObjectId\",\n    \"UserName\": \"mollit eiusmod\"\n   },\n   \"Timezone\": \"incididunt velit fugiat\",\n   \"VMName\": \"exercitation eu ex proid\",\n   \"Vlans\": [\n    {\n     \"Gateway\": \"d\",\n     \"IpAddress\": \"incididunt ex laboris aute\",\n     \"Mtu\": -49634533,\n     \"Netmask\": \"consec\",\n     \"Routes\": [\n      {\n       \"Gateway\": \"tempor dolor dolore\",\n       \"Netmask\": \"ut ea sint ex\",\n       \"Source\": \"eiusmo\",\n       \"Type\": \"labore ex Ut Duis\"\n      },\n      {\n       \"Gateway\": \"irure nisi commodo veniam culpa\",\n       \"Netmask\": \"occaecat qui in proident\",\n       \"Source\": \"laborum sed velit labore\",\n       \"Type\": \"esse officia est Ut magna\"\n      }\n     ],\n     \"VlanId\": -48416384\n    },\n    {\n     \"Gateway\": \"in quis\",\n     \"IpAddress\": \"Excepteur\",\n     \"Mtu\": -43416269,\n     \"Netmask\": \"in cupidatat sed do\",\n     \"Routes\": [\n      {\n       \"Gateway\": \"anim irure\",\n       \"Netmask\": \"irure exerci\",\n       \"Source\": \"qui adipisicing cillum\",\n       \"Type\": \"tempor velit in\"\n      },\n      {\n       \"Gateway\": \"dolore\",\n       \"Netmask\": \"ipsum commodo sunt laboris ullamco\",\n       \"Source\": \"ex ad dolor eiusmod tempor\",\n       \"Type\": \"Duis reprehenderit sed ea commodo\"\n      }\n     ],\n     \"VlanId\": 89505155\n    }\n   ]\n  },\n  \"ProxyType\": \"External\",\n  \"SkipRegistration\": false,\n  \"SupportedProtectionTypes\": [\n   \"Kubernetes\",\n   \"VM\"\n  ],\n  \"UpdateCredentials\": true,\n  \"VimServerRef\": {\n   \"ObjectId\": \"ea esse\",\n   \"Type\": \"ObjectId\",\n   \"Vcenter\": {\n    \"HostName\": \"in Ut non\",\n    \"HypervisorMode\": \"vSphere\",\n    \"TcpPort\": -12918063,\n    \"UserName\": \"do\",\n    \"UserPassword\": \"ut veniam aute\"\n   }\n  }\n },\n \"Id\": \"ex aliqua\",\n \"Status\": {\n  \"Aliases\": [\n   \"dolor ad ea tempor minim\",\n   \"in ut ullamco sed\"\n  ],\n  \"AllottedModes\": [\n   {\n    \"CapacityUnits\": -98770877,\n    \"ReservedBy\": {\n     \"SessionId\": \"nulla et\",\n     \"SessionType\": \"in reprehenderit\"\n    },\n    \"TotalControlSessions\": 56355273,\n    \"TotalTransportSessions\": 88629989\n   },\n   {\n    \"CapacityUnits\": 12538061,\n    \"ReservedBy\": {\n     \"SessionId\": \"in eiusmod Excepteur in amet\",\n     \"SessionType\": \"Duis la\"\n    },\n    \"TotalControlSessions\": -92288316,\n    \"TotalTransportSessions\": 54818020\n   }\n  ],\n  \"DaemonStatus\": [\n   {\n    \"DaemonName\": \"occaecat\",\n    \"Resources\": [\n     \"consequat officia labore minim\",\n     \"dolor\"\n    ],\n    \"Status\": \"Duis reprehenderit ut\"\n   },\n   {\n    \"DaemonName\": \"est Ut eu non\",\n    \"Resources\": [\n     \"ipsum ullamco ad culpa in\",\n     \"laboris dolor commodo\"\n    ],\n    \"Status\": \"ut\"\n   }\n  ],\n  \"DatacenterMoref\": \"in officia\",\n  \"Datastores\": [\n   \"sed\",\n   \"ut sed\"\n  ],\n  \"DeployedTime\": \"anim aliquip\",\n  \"HostedComputeRes\": {\n   \"MOref\": \"id ullamco nisi\",\n   \"Type\": \"dolor sit eu\"\n  },\n  \"LastCheckedTime\": \"consequat velit in\",\n  \"LastOperation\": {\n   \"Detail\": \"laboris in commodo ad fugiat\",\n   \"Operation\": \"version\",\n   \"Status\": \"Mounting\"\n  },\n  \"ModesAvailable\": {\n   \"CapacityUnits\": -637642,\n   \"Mode\": \"HotaddOnly\",\n   \"UseSsl\": true\n  },\n  \"Networks\": [\n   {\n    \"Connected\": false,\n    \"DeviceLabel\": \"reprehenderit\",\n    \"Dns\": {\n     \"DhcpEnabled\": true,\n     \"DomainName\": \"exercitation in consectetur occaecat id\",\n     \"HostName\": \"dolor Except\",\n     \"SearchDomains\": [\n      \"non tempor nisi aliquip\",\n      \"ea\"\n     ],\n     \"Servers\": [\n      \"ut reprehenderit\",\n      \"sint qui magna\"\n     ]\n    },\n    \"GatewayV4\": \"consectetur velit exercitation labore\",\n    \"GatewayV6\": \"laboris non in consequat sit\",\n    \"IpAddrV4\": {\n     \"Address\": \"cupidatat aliquip\",\n     \"IpCidr\": \"quis\",\n     \"NetMask\": \"aliquip eu\",\n     \"PrefixLength\": 98506142,\n     \"SubnetCidr\": \"conse\",\n     \"Version\": \"IPv4\"\n    },\n    \"IpAddrV6\": {\n     \"Address\": \"labore\",\n     \"IpCidr\": \"dolor Lorem\",\n     \"NetMask\": \"labori\",\n     \"PrefixLength\": 7850890,\n     \"SubnetCidr\": \"veniam dolor\",\n     \"Version\": \"IPv4\"\n    },\n    \"MAC\": \"commodo Lorem minim cupidatat laborum\",\n    \"VirtualDeviceId\": 64607708,\n    \"VirtualNetworkName\": \"ut\"\n   },\n   {\n    \"Connected\": false,\n    \"DeviceLabel\": \"ut nostrud id quis\",\n    \"Dns\": {\n     \"DhcpEnabled\": true,\n     \"DomainName\": \"elit\",\n     \"HostName\": \"nisi irure sit\",\n     \"SearchDomains\": [\n      \"enim\",\n      \"officia id non dolore et\"\n     ],\n     \"Servers\": [\n      \"sint pariatur deserunt aute\",\n      \"fugiat magna\"\n     ]\n    },\n    \"GatewayV4\": \"dolore\",\n    \"GatewayV6\": \"occaecat minim ea\",\n    \"IpAddrV4\": {\n     \"Address\": \"incididunt\",\n     \"IpCidr\": \"ullamco nulla\",\n     \"NetMask\": \"pariatur ea occaecat ipsum nisi\",\n     \"PrefixLength\": -94611769,\n     \"SubnetCidr\": \"nos\",\n     \"Version\": \"IPv6\"\n    },\n    \"IpAddrV6\": {\n     \"Address\": \"do Excepteur ad elit\",\n     \"IpCidr\": \"minim nostrud fugiat nulla\",\n     \"NetMask\": \"tempor sunt\",\n     \"PrefixLength\": 87574354,\n     \"SubnetCidr\": \"proident esse\",\n     \"Version\": \"IPv4\"\n    },\n    \"MAC\": \"occaecat et do consequat\",\n    \"VirtualDeviceId\": 92931755,\n    \"VirtualNetworkName\": \"consequat\"\n   }\n  ],\n  \"PowerState\": \"Suspended\",\n  \"ProxyDeployed\": true,\n  \"ProxyRegistered\": false,\n  \"ProxyState\": \"READY\",\n  \"ProxyStatus\": {\n   \"Detail\": \"ea non mollit\",\n   \"Status\": \"Ready\"\n  },\n  \"RegisteredTime\": \"exercitation ad commodo\",\n  \"Thumbprint\": \"u\",\n  \"Uuid\": \"consequat est nulla labore\",\n  \"Version\": \"sint\",\n  \"VlanStatus\": [\n   {\n    \"Detail\": \"in labore in in\",\n    \"IpAddress\": \"occaecat anim ex exercitation\",\n    \"Status\": \"CONNECTED\",\n    \"VlanId\": -67427392\n   },\n   {\n    \"Detail\": \"ipsum dolor\",\n    \"IpAddress\": \"est in ut\",\n    \"Status\": \"CONNECTED\",\n    \"VlanId\": 3627378\n   }\n  ]\n }\n}"
														}
													]
												},
												{
													"name": "Get protection engine proxy.",
													"request": {
														"auth": {
															"type": "apikey",
															"apikey": [
																{
																	"key": "key",
																	"value": "Authorization",
																	"type": "string"
																},
																{
																	"key": "value",
																	"value": true,
																	"type": "boolean"
																},
																{
																	"key": "in",
																	"value": "header",
																	"type": "string"
																}
															]
														},
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/v2/protection-engines/:id/proxies/:proxyId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"protection-engines",
																":id",
																"proxies",
																":proxyId"
															],
															"variable": [
																{
																	"id": "174ec9b6-0e45-4c19-be76-daa67b19a29d",
																	"key": "id",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) The ID of the VPE protection engine."
																},
																{
																	"id": "0b35966c-0057-499f-9bd7-0943e1edb7fc",
																	"key": "proxyId",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) The proxy ID."
																}
															]
														},
														"description": "Retrieves the VPE proxy with proxyId that is registered to the protection engine with the specified ID.  The protection engine with the specified ID must already be registered with PowerProtect Data Manager. The VPE proxy with the proxyId must also be registered.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
													},
													"response": [
														{
															"name": "Successfully returned VPE proxy resource.",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": {
																			"content": "Added as a part of security scheme: apikey",
																			"type": "text/plain"
																		},
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/protection-engines/:id/proxies/:proxyId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"protection-engines",
																		":id",
																		"proxies",
																		":proxyId"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "proxyId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"Config\": {\n  \"AdvancedOptions\": {\n   \"CapacityPercentage\": 45629334,\n   \"Datastores\": [\n    \"proide\",\n    \"anim reprehenderit nostrud \"\n   ],\n   \"TransportSessions\": {\n    \"Mode\": \"HotaddPreferred\",\n    \"UseSsl\": false,\n    \"UserDefined\": true\n   }\n  },\n  \"ApplicationData\": {},\n  \"AutoUpdateConfig\": true,\n  \"Credential\": {\n   \"ObjectId\": \"labore mollit\",\n   \"Password\": \"dolor\",\n   \"Type\": \"Object\",\n   \"UserName\": \"Ut\"\n  },\n  \"DeployProxy\": true,\n  \"Disabled\": false,\n  \"HealthCheckInterval\": 82082786,\n  \"HostName\": \"ex veniam\",\n  \"InstanceUuid\": \"enim ex\",\n  \"MORef\": \"dolore incididunt sint\",\n  \"Operation\": \"upgrade\",\n  \"Port\": -81697983,\n  \"ProxyDeploymentConfig\": {\n   \"AdditionalVMNetworks\": [\n    {\n     \"Fqdn\": \"non\",\n     \"Gateway\": \"ullamco exercitation id irure qui\",\n     \"IPProtocol\": \"IPv4\",\n     \"InterfaceName\": \"voluptate\",\n     \"IpAddress\": \"laborum aliqua\",\n     \"MacAddress\": \"irure tempor\",\n     \"MultiVlanEnabled\": true,\n     \"NetMask\": \"in velit pariatur\",\n     \"NetworkMoref\": \"nisi\",\n     \"Vlans\": [\n      {\n       \"Gateway\": \"anim veniam officia id\",\n       \"IpAddress\": \"Excepteur Ut esse\",\n       \"Mtu\": -10182718,\n       \"Netmask\": \"ipsum in quis\",\n       \"Routes\": [\n        {\n         \"Gateway\": \"in cillum\",\n         \"Netmask\": \"incididunt ipsum ex reprehenderit sed\",\n         \"Source\": \"Ut nostrud\",\n         \"Type\": \"Excepteur proident in\"\n        },\n        {\n         \"Gateway\": \"aliqua elit\",\n         \"Netmask\": \"par\",\n         \"Source\": \"labore\",\n         \"Type\": \"et ullamco officia irure\"\n        }\n       ],\n       \"VlanId\": 50048506\n      },\n      {\n       \"Gateway\": \"exercitation aliqua fugiat\",\n       \"IpAddress\": \"voluptate laboris in\",\n       \"Mtu\": -77893727,\n       \"Netmask\": \"exercitatio\",\n       \"Routes\": [\n        {\n         \"Gateway\": \"Lorem\",\n         \"Netmask\": \"Ut est id\",\n         \"Source\": \"reprehenderit nostrud et minim\",\n         \"Type\": \"nisi aliqua id\"\n        },\n        {\n         \"Gateway\": \"ut cupidatat commodo incididunt\",\n         \"Netmask\": \"dolor cupidatat\",\n         \"Source\": \"commodo Excepteur sint non labore\",\n         \"Type\": \"voluptate id Excepteur dolore occ\"\n        }\n       ],\n       \"VlanId\": -47644326\n      }\n     ]\n    },\n    {\n     \"Fqdn\": \"cupidatat adipisicing aliquip in\",\n     \"Gateway\": \"in velit\",\n     \"IPProtocol\": \"IPv4\",\n     \"InterfaceName\": \"aliqua proid\",\n     \"IpAddress\": \"occaecat aliquip do\",\n     \"MacAddress\": \"fugiat ea\",\n     \"MultiVlanEnabled\": true,\n     \"NetMask\": \"eu officia ad voluptate\",\n     \"NetworkMoref\": \"cupidatat dolore elit irure\",\n     \"Vlans\": [\n      {\n       \"Gateway\": \"magna quis consequat nostrud\",\n       \"IpAddress\": \"aute\",\n       \"Mtu\": -51977868,\n       \"Netmask\": \"officia sunt elit labore\",\n       \"Routes\": [\n        {\n         \"Gateway\": \"magna enim\",\n         \"Netmask\": \"est l\",\n         \"Source\": \"Duis cillum ut id officia\",\n         \"Type\": \"ut sint\"\n        },\n        {\n         \"Gateway\": \"Lorem aliqua ullamco aliquip Duis\",\n         \"Netmask\": \"eiusmod non irure\",\n         \"Source\": \"sint\",\n         \"Type\": \"elit magna id\"\n        }\n       ],\n       \"VlanId\": 28111220\n      },\n      {\n       \"Gateway\": \"aute non sunt\",\n       \"IpAddress\": \"veniam elit ut\",\n       \"Mtu\": -36377772,\n       \"Netmask\": \"in laborum Lorem\",\n       \"Routes\": [\n        {\n         \"Gateway\": \"ut dolor anim\",\n         \"Netmask\": \"nulla exercitation\",\n         \"Source\": \"pariatur in Lorem veniam\",\n         \"Type\": \"dolor reprehenderit dolor\"\n        },\n        {\n         \"Gateway\": \"nostrud voluptate\",\n         \"Netmask\": \"minim nostrud ullamco quis\",\n         \"Source\": \"voluptate anim\",\n         \"Type\": \"ex minim tempor\"\n        }\n       ],\n       \"VlanId\": 17088502\n      }\n     ]\n    }\n   ],\n   \"Dns\": \"dolor proident elit\",\n   \"Fqdn\": \"officia deserunt\",\n   \"Gateway\": \"proident amet dolore sint ad\",\n   \"IPProtocol\": \"IPv4\",\n   \"InterfaceName\": \"Exc\",\n   \"IpAddress\": \"nulla occaecat Duis\",\n   \"Location\": {\n    \"ClusterMoref\": \"sed\",\n    \"DatastoreMoref\": \"eiusmod anim\",\n    \"FolderMoref\": \"in adipisicing Excepteur minim\",\n    \"HostMoref\": \"elit id eu velit\",\n    \"NetworkMoref\": \"no\",\n    \"ResourcePoolMoref\": \"ex cillum laborum\"\n   },\n   \"MacAddress\": \"aute eiusmod do\",\n   \"MultiVlanEnabled\": true,\n   \"NTPServer\": \"fugiat culpa\",\n   \"NetMask\": \"reprehenderit ut Lorem veniam\",\n   \"NetworkMoref\": \"enim irure minim\",\n   \"OvaFile\": \"dolor ipsum velit\",\n   \"RootCredential\": {\n    \"ObjectId\": \"enim\",\n    \"Password\": \"occaecat sed\",\n    \"Type\": \"ObjectId\",\n    \"UserName\": \"mollit eiusmod\"\n   },\n   \"Timezone\": \"incididunt velit fugiat\",\n   \"VMName\": \"exercitation eu ex proid\",\n   \"Vlans\": [\n    {\n     \"Gateway\": \"d\",\n     \"IpAddress\": \"incididunt ex laboris aute\",\n     \"Mtu\": -49634533,\n     \"Netmask\": \"consec\",\n     \"Routes\": [\n      {\n       \"Gateway\": \"tempor dolor dolore\",\n       \"Netmask\": \"ut ea sint ex\",\n       \"Source\": \"eiusmo\",\n       \"Type\": \"labore ex Ut Duis\"\n      },\n      {\n       \"Gateway\": \"irure nisi commodo veniam culpa\",\n       \"Netmask\": \"occaecat qui in proident\",\n       \"Source\": \"laborum sed velit labore\",\n       \"Type\": \"esse officia est Ut magna\"\n      }\n     ],\n     \"VlanId\": -48416384\n    },\n    {\n     \"Gateway\": \"in quis\",\n     \"IpAddress\": \"Excepteur\",\n     \"Mtu\": -43416269,\n     \"Netmask\": \"in cupidatat sed do\",\n     \"Routes\": [\n      {\n       \"Gateway\": \"anim irure\",\n       \"Netmask\": \"irure exerci\",\n       \"Source\": \"qui adipisicing cillum\",\n       \"Type\": \"tempor velit in\"\n      },\n      {\n       \"Gateway\": \"dolore\",\n       \"Netmask\": \"ipsum commodo sunt laboris ullamco\",\n       \"Source\": \"ex ad dolor eiusmod tempor\",\n       \"Type\": \"Duis reprehenderit sed ea commodo\"\n      }\n     ],\n     \"VlanId\": 89505155\n    }\n   ]\n  },\n  \"ProxyType\": \"External\",\n  \"SkipRegistration\": false,\n  \"SupportedProtectionTypes\": [\n   \"Kubernetes\",\n   \"VM\"\n  ],\n  \"UpdateCredentials\": true,\n  \"VimServerRef\": {\n   \"ObjectId\": \"ea esse\",\n   \"Type\": \"ObjectId\",\n   \"Vcenter\": {\n    \"HostName\": \"in Ut non\",\n    \"HypervisorMode\": \"vSphere\",\n    \"TcpPort\": -12918063,\n    \"UserName\": \"do\",\n    \"UserPassword\": \"ut veniam aute\"\n   }\n  }\n },\n \"Id\": \"ex aliqua\",\n \"Status\": {\n  \"Aliases\": [\n   \"dolor ad ea tempor minim\",\n   \"in ut ullamco sed\"\n  ],\n  \"AllottedModes\": [\n   {\n    \"CapacityUnits\": -98770877,\n    \"ReservedBy\": {\n     \"SessionId\": \"nulla et\",\n     \"SessionType\": \"in reprehenderit\"\n    },\n    \"TotalControlSessions\": 56355273,\n    \"TotalTransportSessions\": 88629989\n   },\n   {\n    \"CapacityUnits\": 12538061,\n    \"ReservedBy\": {\n     \"SessionId\": \"in eiusmod Excepteur in amet\",\n     \"SessionType\": \"Duis la\"\n    },\n    \"TotalControlSessions\": -92288316,\n    \"TotalTransportSessions\": 54818020\n   }\n  ],\n  \"DaemonStatus\": [\n   {\n    \"DaemonName\": \"occaecat\",\n    \"Resources\": [\n     \"consequat officia labore minim\",\n     \"dolor\"\n    ],\n    \"Status\": \"Duis reprehenderit ut\"\n   },\n   {\n    \"DaemonName\": \"est Ut eu non\",\n    \"Resources\": [\n     \"ipsum ullamco ad culpa in\",\n     \"laboris dolor commodo\"\n    ],\n    \"Status\": \"ut\"\n   }\n  ],\n  \"DatacenterMoref\": \"in officia\",\n  \"Datastores\": [\n   \"sed\",\n   \"ut sed\"\n  ],\n  \"DeployedTime\": \"anim aliquip\",\n  \"HostedComputeRes\": {\n   \"MOref\": \"id ullamco nisi\",\n   \"Type\": \"dolor sit eu\"\n  },\n  \"LastCheckedTime\": \"consequat velit in\",\n  \"LastOperation\": {\n   \"Detail\": \"laboris in commodo ad fugiat\",\n   \"Operation\": \"version\",\n   \"Status\": \"Mounting\"\n  },\n  \"ModesAvailable\": {\n   \"CapacityUnits\": -637642,\n   \"Mode\": \"HotaddOnly\",\n   \"UseSsl\": true\n  },\n  \"Networks\": [\n   {\n    \"Connected\": false,\n    \"DeviceLabel\": \"reprehenderit\",\n    \"Dns\": {\n     \"DhcpEnabled\": true,\n     \"DomainName\": \"exercitation in consectetur occaecat id\",\n     \"HostName\": \"dolor Except\",\n     \"SearchDomains\": [\n      \"non tempor nisi aliquip\",\n      \"ea\"\n     ],\n     \"Servers\": [\n      \"ut reprehenderit\",\n      \"sint qui magna\"\n     ]\n    },\n    \"GatewayV4\": \"consectetur velit exercitation labore\",\n    \"GatewayV6\": \"laboris non in consequat sit\",\n    \"IpAddrV4\": {\n     \"Address\": \"cupidatat aliquip\",\n     \"IpCidr\": \"quis\",\n     \"NetMask\": \"aliquip eu\",\n     \"PrefixLength\": 98506142,\n     \"SubnetCidr\": \"conse\",\n     \"Version\": \"IPv4\"\n    },\n    \"IpAddrV6\": {\n     \"Address\": \"labore\",\n     \"IpCidr\": \"dolor Lorem\",\n     \"NetMask\": \"labori\",\n     \"PrefixLength\": 7850890,\n     \"SubnetCidr\": \"veniam dolor\",\n     \"Version\": \"IPv4\"\n    },\n    \"MAC\": \"commodo Lorem minim cupidatat laborum\",\n    \"VirtualDeviceId\": 64607708,\n    \"VirtualNetworkName\": \"ut\"\n   },\n   {\n    \"Connected\": false,\n    \"DeviceLabel\": \"ut nostrud id quis\",\n    \"Dns\": {\n     \"DhcpEnabled\": true,\n     \"DomainName\": \"elit\",\n     \"HostName\": \"nisi irure sit\",\n     \"SearchDomains\": [\n      \"enim\",\n      \"officia id non dolore et\"\n     ],\n     \"Servers\": [\n      \"sint pariatur deserunt aute\",\n      \"fugiat magna\"\n     ]\n    },\n    \"GatewayV4\": \"dolore\",\n    \"GatewayV6\": \"occaecat minim ea\",\n    \"IpAddrV4\": {\n     \"Address\": \"incididunt\",\n     \"IpCidr\": \"ullamco nulla\",\n     \"NetMask\": \"pariatur ea occaecat ipsum nisi\",\n     \"PrefixLength\": -94611769,\n     \"SubnetCidr\": \"nos\",\n     \"Version\": \"IPv6\"\n    },\n    \"IpAddrV6\": {\n     \"Address\": \"do Excepteur ad elit\",\n     \"IpCidr\": \"minim nostrud fugiat nulla\",\n     \"NetMask\": \"tempor sunt\",\n     \"PrefixLength\": 87574354,\n     \"SubnetCidr\": \"proident esse\",\n     \"Version\": \"IPv4\"\n    },\n    \"MAC\": \"occaecat et do consequat\",\n    \"VirtualDeviceId\": 92931755,\n    \"VirtualNetworkName\": \"consequat\"\n   }\n  ],\n  \"PowerState\": \"Suspended\",\n  \"ProxyDeployed\": true,\n  \"ProxyRegistered\": false,\n  \"ProxyState\": \"READY\",\n  \"ProxyStatus\": {\n   \"Detail\": \"ea non mollit\",\n   \"Status\": \"Ready\"\n  },\n  \"RegisteredTime\": \"exercitation ad commodo\",\n  \"Thumbprint\": \"u\",\n  \"Uuid\": \"consequat est nulla labore\",\n  \"Version\": \"sint\",\n  \"VlanStatus\": [\n   {\n    \"Detail\": \"in labore in in\",\n    \"IpAddress\": \"occaecat anim ex exercitation\",\n    \"Status\": \"CONNECTED\",\n    \"VlanId\": -67427392\n   },\n   {\n    \"Detail\": \"ipsum dolor\",\n    \"IpAddress\": \"est in ut\",\n    \"Status\": \"CONNECTED\",\n    \"VlanId\": 3627378\n   }\n  ]\n }\n}"
														},
														{
															"name": "The requestor is not allowed to perform this operation.",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": {
																			"content": "Added as a part of security scheme: apikey",
																			"type": "text/plain"
																		},
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/protection-engines/:id/proxies/:proxyId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"protection-engines",
																		":id",
																		"proxies",
																		":proxyId"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "proxyId"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
														},
														{
															"name": "The request is not valid.",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": {
																			"content": "Added as a part of security scheme: apikey",
																			"type": "text/plain"
																		},
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/protection-engines/:id/proxies/:proxyId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"protection-engines",
																		":id",
																		"proxies",
																		":proxyId"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "proxyId"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
														},
														{
															"name": "The requestor is not authorized to perform this operation.",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": {
																			"content": "Added as a part of security scheme: apikey",
																			"type": "text/plain"
																		},
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/protection-engines/:id/proxies/:proxyId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"protection-engines",
																		":id",
																		"proxies",
																		":proxyId"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "proxyId"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
														},
														{
															"name": "An unexpected error prevented the server from fulfilling your request.",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": {
																			"content": "Added as a part of security scheme: apikey",
																			"type": "text/plain"
																		},
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/protection-engines/:id/proxies/:proxyId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"protection-engines",
																		":id",
																		"proxies",
																		":proxyId"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "proxyId"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
														}
													]
												},
												{
													"name": "Update protection engine proxy configuration.",
													"request": {
														"auth": {
															"type": "apikey",
															"apikey": [
																{
																	"key": "key",
																	"value": "Authorization",
																	"type": "string"
																},
																{
																	"key": "value",
																	"value": true,
																	"type": "boolean"
																},
																{
																	"key": "in",
																	"value": "header",
																	"type": "string"
																}
															]
														},
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"Config\": {\n        \"AdvancedOptions\": {\n            \"CapacityPercentage\": \"<integer>\",\n            \"Datastores\": [\n                \"<string>\",\n                \"<string>\"\n            ],\n            \"TransportSessions\": {\n                \"Mode\": \"<string>\",\n                \"UseSsl\": \"<boolean>\",\n                \"UserDefined\": \"<boolean>\"\n            }\n        },\n        \"ApplicationData\": \"<object>\",\n        \"AutoUpdateConfig\": \"<boolean>\",\n        \"Credential\": {\n            \"ObjectId\": \"<string>\",\n            \"Password\": \"<string>\",\n            \"Type\": \"<string>\",\n            \"UserName\": \"<string>\"\n        },\n        \"DeployProxy\": \"<boolean>\",\n        \"Disabled\": \"<boolean>\",\n        \"HealthCheckInterval\": \"<integer>\",\n        \"HostName\": \"<string>\",\n        \"InstanceUuid\": \"<string>\",\n        \"MORef\": \"<string>\",\n        \"Operation\": \"<string>\",\n        \"Port\": \"<integer>\",\n        \"ProxyDeploymentConfig\": {\n            \"AdditionalVMNetworks\": [\n                {\n                    \"Fqdn\": \"<string>\",\n                    \"Gateway\": \"<string>\",\n                    \"IPProtocol\": \"<string>\",\n                    \"InterfaceName\": \"<string>\",\n                    \"IpAddress\": \"<string>\",\n                    \"MacAddress\": \"<string>\",\n                    \"MultiVlanEnabled\": \"<boolean>\",\n                    \"NetMask\": \"<string>\",\n                    \"NetworkMoref\": \"<string>\",\n                    \"Vlans\": [\n                        {\n                            \"Gateway\": \"<string>\",\n                            \"IpAddress\": \"<string>\",\n                            \"Mtu\": \"<integer>\",\n                            \"Netmask\": \"<string>\",\n                            \"Routes\": [\n                                {\n                                    \"Gateway\": \"<string>\",\n                                    \"Netmask\": \"<string>\",\n                                    \"Source\": \"<string>\",\n                                    \"Type\": \"<string>\"\n                                },\n                                {\n                                    \"Gateway\": \"<string>\",\n                                    \"Netmask\": \"<string>\",\n                                    \"Source\": \"<string>\",\n                                    \"Type\": \"<string>\"\n                                }\n                            ],\n                            \"VlanId\": \"<integer>\"\n                        },\n                        {\n                            \"Gateway\": \"<string>\",\n                            \"IpAddress\": \"<string>\",\n                            \"Mtu\": \"<integer>\",\n                            \"Netmask\": \"<string>\",\n                            \"Routes\": [\n                                {\n                                    \"Gateway\": \"<string>\",\n                                    \"Netmask\": \"<string>\",\n                                    \"Source\": \"<string>\",\n                                    \"Type\": \"<string>\"\n                                },\n                                {\n                                    \"Gateway\": \"<string>\",\n                                    \"Netmask\": \"<string>\",\n                                    \"Source\": \"<string>\",\n                                    \"Type\": \"<string>\"\n                                }\n                            ],\n                            \"VlanId\": \"<integer>\"\n                        }\n                    ]\n                },\n                {\n                    \"Fqdn\": \"<string>\",\n                    \"Gateway\": \"<string>\",\n                    \"IPProtocol\": \"<string>\",\n                    \"InterfaceName\": \"<string>\",\n                    \"IpAddress\": \"<string>\",\n                    \"MacAddress\": \"<string>\",\n                    \"MultiVlanEnabled\": \"<boolean>\",\n                    \"NetMask\": \"<string>\",\n                    \"NetworkMoref\": \"<string>\",\n                    \"Vlans\": [\n                        {\n                            \"Gateway\": \"<string>\",\n                            \"IpAddress\": \"<string>\",\n                            \"Mtu\": \"<integer>\",\n                            \"Netmask\": \"<string>\",\n                            \"Routes\": [\n                                {\n                                    \"Gateway\": \"<string>\",\n                                    \"Netmask\": \"<string>\",\n                                    \"Source\": \"<string>\",\n                                    \"Type\": \"<string>\"\n                                },\n                                {\n                                    \"Gateway\": \"<string>\",\n                                    \"Netmask\": \"<string>\",\n                                    \"Source\": \"<string>\",\n                                    \"Type\": \"<string>\"\n                                }\n                            ],\n                            \"VlanId\": \"<integer>\"\n                        },\n                        {\n                            \"Gateway\": \"<string>\",\n                            \"IpAddress\": \"<string>\",\n                            \"Mtu\": \"<integer>\",\n                            \"Netmask\": \"<string>\",\n                            \"Routes\": [\n                                {\n                                    \"Gateway\": \"<string>\",\n                                    \"Netmask\": \"<string>\",\n                                    \"Source\": \"<string>\",\n                                    \"Type\": \"<string>\"\n                                },\n                                {\n                                    \"Gateway\": \"<string>\",\n                                    \"Netmask\": \"<string>\",\n                                    \"Source\": \"<string>\",\n                                    \"Type\": \"<string>\"\n                                }\n                            ],\n                            \"VlanId\": \"<integer>\"\n                        }\n                    ]\n                }\n            ],\n            \"Dns\": \"<string>\",\n            \"Fqdn\": \"<string>\",\n            \"Gateway\": \"<string>\",\n            \"IPProtocol\": \"<string>\",\n            \"InterfaceName\": \"<string>\",\n            \"IpAddress\": \"<string>\",\n            \"Location\": {\n                \"ClusterMoref\": \"<string>\",\n                \"DatastoreMoref\": \"<string>\",\n                \"FolderMoref\": \"<string>\",\n                \"HostMoref\": \"<string>\",\n                \"NetworkMoref\": \"<string>\",\n                \"ResourcePoolMoref\": \"<string>\"\n            },\n            \"MacAddress\": \"<string>\",\n            \"MultiVlanEnabled\": \"<boolean>\",\n            \"NTPServer\": \"<string>\",\n            \"NetMask\": \"<string>\",\n            \"NetworkMoref\": \"<string>\",\n            \"OvaFile\": \"<string>\",\n            \"RootCredential\": {\n                \"ObjectId\": \"<string>\",\n                \"Password\": \"<string>\",\n                \"Type\": \"<string>\",\n                \"UserName\": \"<string>\"\n            },\n            \"Timezone\": \"<string>\",\n            \"VMName\": \"<string>\",\n            \"Vlans\": [\n                {\n                    \"Gateway\": \"<string>\",\n                    \"IpAddress\": \"<string>\",\n                    \"Mtu\": \"<integer>\",\n                    \"Netmask\": \"<string>\",\n                    \"Routes\": [\n                        {\n                            \"Gateway\": \"<string>\",\n                            \"Netmask\": \"<string>\",\n                            \"Source\": \"<string>\",\n                            \"Type\": \"<string>\"\n                        },\n                        {\n                            \"Gateway\": \"<string>\",\n                            \"Netmask\": \"<string>\",\n                            \"Source\": \"<string>\",\n                            \"Type\": \"<string>\"\n                        }\n                    ],\n                    \"VlanId\": \"<integer>\"\n                },\n                {\n                    \"Gateway\": \"<string>\",\n                    \"IpAddress\": \"<string>\",\n                    \"Mtu\": \"<integer>\",\n                    \"Netmask\": \"<string>\",\n                    \"Routes\": [\n                        {\n                            \"Gateway\": \"<string>\",\n                            \"Netmask\": \"<string>\",\n                            \"Source\": \"<string>\",\n                            \"Type\": \"<string>\"\n                        },\n                        {\n                            \"Gateway\": \"<string>\",\n                            \"Netmask\": \"<string>\",\n                            \"Source\": \"<string>\",\n                            \"Type\": \"<string>\"\n                        }\n                    ],\n                    \"VlanId\": \"<integer>\"\n                }\n            ]\n        },\n        \"ProxyType\": \"<string>\",\n        \"SkipRegistration\": \"<boolean>\",\n        \"SupportedProtectionTypes\": [\n            \"<string>\",\n            \"<string>\"\n        ],\n        \"UpdateCredentials\": \"<boolean>\",\n        \"VimServerRef\": {\n            \"ObjectId\": \"<string>\",\n            \"Type\": \"<string>\",\n            \"Vcenter\": {\n                \"HostName\": \"<string>\",\n                \"HypervisorMode\": \"<string>\",\n                \"TcpPort\": \"<long>\",\n                \"UserName\": \"<string>\",\n                \"UserPassword\": \"<string>\"\n            }\n        }\n    },\n    \"Id\": \"<string>\",\n    \"Status\": {\n        \"Aliases\": [\n            \"<string>\",\n            \"<string>\"\n        ],\n        \"AllottedModes\": [\n            {\n                \"CapacityUnits\": \"<integer>\",\n                \"ReservedBy\": {\n                    \"SessionId\": \"<string>\",\n                    \"SessionType\": \"<string>\"\n                },\n                \"TotalControlSessions\": \"<integer>\",\n                \"TotalTransportSessions\": \"<integer>\"\n            },\n            {\n                \"CapacityUnits\": \"<integer>\",\n                \"ReservedBy\": {\n                    \"SessionId\": \"<string>\",\n                    \"SessionType\": \"<string>\"\n                },\n                \"TotalControlSessions\": \"<integer>\",\n                \"TotalTransportSessions\": \"<integer>\"\n            }\n        ],\n        \"DaemonStatus\": [\n            {\n                \"DaemonName\": \"<string>\",\n                \"Resources\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"Status\": \"<string>\"\n            },\n            {\n                \"DaemonName\": \"<string>\",\n                \"Resources\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"Status\": \"<string>\"\n            }\n        ],\n        \"DatacenterMoref\": \"<string>\",\n        \"Datastores\": [\n            \"<string>\",\n            \"<string>\"\n        ],\n        \"DeployedTime\": \"<string>\",\n        \"HostedComputeRes\": {\n            \"MOref\": \"<string>\",\n            \"Type\": \"<string>\"\n        },\n        \"LastCheckedTime\": \"<string>\",\n        \"LastOperation\": {\n            \"Detail\": \"<string>\",\n            \"Operation\": \"<string>\",\n            \"Status\": \"<string>\"\n        },\n        \"ModesAvailable\": {\n            \"CapacityUnits\": \"<integer>\",\n            \"Mode\": \"<string>\",\n            \"UseSsl\": \"<boolean>\"\n        },\n        \"Networks\": [\n            {\n                \"Connected\": \"<boolean>\",\n                \"DeviceLabel\": \"<string>\",\n                \"Dns\": {\n                    \"DhcpEnabled\": \"<boolean>\",\n                    \"DomainName\": \"<string>\",\n                    \"HostName\": \"<string>\",\n                    \"SearchDomains\": [\n                        \"<string>\",\n                        \"<string>\"\n                    ],\n                    \"Servers\": [\n                        \"<string>\",\n                        \"<string>\"\n                    ]\n                },\n                \"GatewayV4\": \"<string>\",\n                \"GatewayV6\": \"<string>\",\n                \"IpAddrV4\": {\n                    \"Address\": \"<string>\",\n                    \"IpCidr\": \"<string>\",\n                    \"NetMask\": \"<string>\",\n                    \"PrefixLength\": \"<integer>\",\n                    \"SubnetCidr\": \"<string>\",\n                    \"Version\": \"<string>\"\n                },\n                \"IpAddrV6\": {\n                    \"Address\": \"<string>\",\n                    \"IpCidr\": \"<string>\",\n                    \"NetMask\": \"<string>\",\n                    \"PrefixLength\": \"<integer>\",\n                    \"SubnetCidr\": \"<string>\",\n                    \"Version\": \"<string>\"\n                },\n                \"MAC\": \"<string>\",\n                \"VirtualDeviceId\": \"<integer>\",\n                \"VirtualNetworkName\": \"<string>\"\n            },\n            {\n                \"Connected\": \"<boolean>\",\n                \"DeviceLabel\": \"<string>\",\n                \"Dns\": {\n                    \"DhcpEnabled\": \"<boolean>\",\n                    \"DomainName\": \"<string>\",\n                    \"HostName\": \"<string>\",\n                    \"SearchDomains\": [\n                        \"<string>\",\n                        \"<string>\"\n                    ],\n                    \"Servers\": [\n                        \"<string>\",\n                        \"<string>\"\n                    ]\n                },\n                \"GatewayV4\": \"<string>\",\n                \"GatewayV6\": \"<string>\",\n                \"IpAddrV4\": {\n                    \"Address\": \"<string>\",\n                    \"IpCidr\": \"<string>\",\n                    \"NetMask\": \"<string>\",\n                    \"PrefixLength\": \"<integer>\",\n                    \"SubnetCidr\": \"<string>\",\n                    \"Version\": \"<string>\"\n                },\n                \"IpAddrV6\": {\n                    \"Address\": \"<string>\",\n                    \"IpCidr\": \"<string>\",\n                    \"NetMask\": \"<string>\",\n                    \"PrefixLength\": \"<integer>\",\n                    \"SubnetCidr\": \"<string>\",\n                    \"Version\": \"<string>\"\n                },\n                \"MAC\": \"<string>\",\n                \"VirtualDeviceId\": \"<integer>\",\n                \"VirtualNetworkName\": \"<string>\"\n            }\n        ],\n        \"PowerState\": \"<string>\",\n        \"ProxyDeployed\": \"<boolean>\",\n        \"ProxyRegistered\": \"<boolean>\",\n        \"ProxyState\": \"<string>\",\n        \"ProxyStatus\": {\n            \"Detail\": \"<string>\",\n            \"Status\": \"<string>\"\n        },\n        \"RegisteredTime\": \"<string>\",\n        \"Thumbprint\": \"<string>\",\n        \"Uuid\": \"<string>\",\n        \"Version\": \"<string>\",\n        \"VlanStatus\": [\n            {\n                \"Detail\": \"<string>\",\n                \"IpAddress\": \"<string>\",\n                \"Status\": \"<string>\",\n                \"VlanId\": \"<integer>\"\n            },\n            {\n                \"Detail\": \"<string>\",\n                \"IpAddress\": \"<string>\",\n                \"Status\": \"<string>\",\n                \"VlanId\": \"<integer>\"\n            }\n        ]\n    }\n}",
															"options": {
																"raw": {}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/protection-engines/:id/proxies/:proxyId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"protection-engines",
																":id",
																"proxies",
																":proxyId"
															],
															"variable": [
																{
																	"id": "3d345291-6596-4cb5-9cb7-d7023e88442e",
																	"key": "id",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) The ID of the protection engine."
																},
																{
																	"id": "93d9539c-1656-4b76-89ec-625a8d0e4d76",
																	"key": "proxyId",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) The proxy ID of the proxy to be updated."
																}
															]
														},
														"description": "Update the VPE proxy with proxyId that is registered to the protection engine with the specified ID.  The protection engine with the specified ID must already be registered with PowerProtect Data Manager. The VPE proxy with the proxyId must also be registered.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
													},
													"response": [
														{
															"name": "The request was accepted for processing.",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"description": {
																			"content": "Added as a part of security scheme: apikey",
																			"type": "text/plain"
																		},
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/protection-engines/:id/proxies/:proxyId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"protection-engines",
																		":id",
																		"proxies",
																		":proxyId"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "proxyId"
																		}
																	]
																}
															},
															"status": "Accepted",
															"code": 202,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"Config\": {\n  \"AdvancedOptions\": {\n   \"CapacityPercentage\": 45629334,\n   \"Datastores\": [\n    \"proide\",\n    \"anim reprehenderit nostrud \"\n   ],\n   \"TransportSessions\": {\n    \"Mode\": \"HotaddPreferred\",\n    \"UseSsl\": false,\n    \"UserDefined\": true\n   }\n  },\n  \"ApplicationData\": {},\n  \"AutoUpdateConfig\": true,\n  \"Credential\": {\n   \"ObjectId\": \"labore mollit\",\n   \"Password\": \"dolor\",\n   \"Type\": \"Object\",\n   \"UserName\": \"Ut\"\n  },\n  \"DeployProxy\": true,\n  \"Disabled\": false,\n  \"HealthCheckInterval\": 82082786,\n  \"HostName\": \"ex veniam\",\n  \"InstanceUuid\": \"enim ex\",\n  \"MORef\": \"dolore incididunt sint\",\n  \"Operation\": \"upgrade\",\n  \"Port\": -81697983,\n  \"ProxyDeploymentConfig\": {\n   \"AdditionalVMNetworks\": [\n    {\n     \"Fqdn\": \"non\",\n     \"Gateway\": \"ullamco exercitation id irure qui\",\n     \"IPProtocol\": \"IPv4\",\n     \"InterfaceName\": \"voluptate\",\n     \"IpAddress\": \"laborum aliqua\",\n     \"MacAddress\": \"irure tempor\",\n     \"MultiVlanEnabled\": true,\n     \"NetMask\": \"in velit pariatur\",\n     \"NetworkMoref\": \"nisi\",\n     \"Vlans\": [\n      {\n       \"Gateway\": \"anim veniam officia id\",\n       \"IpAddress\": \"Excepteur Ut esse\",\n       \"Mtu\": -10182718,\n       \"Netmask\": \"ipsum in quis\",\n       \"Routes\": [\n        {\n         \"Gateway\": \"in cillum\",\n         \"Netmask\": \"incididunt ipsum ex reprehenderit sed\",\n         \"Source\": \"Ut nostrud\",\n         \"Type\": \"Excepteur proident in\"\n        },\n        {\n         \"Gateway\": \"aliqua elit\",\n         \"Netmask\": \"par\",\n         \"Source\": \"labore\",\n         \"Type\": \"et ullamco officia irure\"\n        }\n       ],\n       \"VlanId\": 50048506\n      },\n      {\n       \"Gateway\": \"exercitation aliqua fugiat\",\n       \"IpAddress\": \"voluptate laboris in\",\n       \"Mtu\": -77893727,\n       \"Netmask\": \"exercitatio\",\n       \"Routes\": [\n        {\n         \"Gateway\": \"Lorem\",\n         \"Netmask\": \"Ut est id\",\n         \"Source\": \"reprehenderit nostrud et minim\",\n         \"Type\": \"nisi aliqua id\"\n        },\n        {\n         \"Gateway\": \"ut cupidatat commodo incididunt\",\n         \"Netmask\": \"dolor cupidatat\",\n         \"Source\": \"commodo Excepteur sint non labore\",\n         \"Type\": \"voluptate id Excepteur dolore occ\"\n        }\n       ],\n       \"VlanId\": -47644326\n      }\n     ]\n    },\n    {\n     \"Fqdn\": \"cupidatat adipisicing aliquip in\",\n     \"Gateway\": \"in velit\",\n     \"IPProtocol\": \"IPv4\",\n     \"InterfaceName\": \"aliqua proid\",\n     \"IpAddress\": \"occaecat aliquip do\",\n     \"MacAddress\": \"fugiat ea\",\n     \"MultiVlanEnabled\": true,\n     \"NetMask\": \"eu officia ad voluptate\",\n     \"NetworkMoref\": \"cupidatat dolore elit irure\",\n     \"Vlans\": [\n      {\n       \"Gateway\": \"magna quis consequat nostrud\",\n       \"IpAddress\": \"aute\",\n       \"Mtu\": -51977868,\n       \"Netmask\": \"officia sunt elit labore\",\n       \"Routes\": [\n        {\n         \"Gateway\": \"magna enim\",\n         \"Netmask\": \"est l\",\n         \"Source\": \"Duis cillum ut id officia\",\n         \"Type\": \"ut sint\"\n        },\n        {\n         \"Gateway\": \"Lorem aliqua ullamco aliquip Duis\",\n         \"Netmask\": \"eiusmod non irure\",\n         \"Source\": \"sint\",\n         \"Type\": \"elit magna id\"\n        }\n       ],\n       \"VlanId\": 28111220\n      },\n      {\n       \"Gateway\": \"aute non sunt\",\n       \"IpAddress\": \"veniam elit ut\",\n       \"Mtu\": -36377772,\n       \"Netmask\": \"in laborum Lorem\",\n       \"Routes\": [\n        {\n         \"Gateway\": \"ut dolor anim\",\n         \"Netmask\": \"nulla exercitation\",\n         \"Source\": \"pariatur in Lorem veniam\",\n         \"Type\": \"dolor reprehenderit dolor\"\n        },\n        {\n         \"Gateway\": \"nostrud voluptate\",\n         \"Netmask\": \"minim nostrud ullamco quis\",\n         \"Source\": \"voluptate anim\",\n         \"Type\": \"ex minim tempor\"\n        }\n       ],\n       \"VlanId\": 17088502\n      }\n     ]\n    }\n   ],\n   \"Dns\": \"dolor proident elit\",\n   \"Fqdn\": \"officia deserunt\",\n   \"Gateway\": \"proident amet dolore sint ad\",\n   \"IPProtocol\": \"IPv4\",\n   \"InterfaceName\": \"Exc\",\n   \"IpAddress\": \"nulla occaecat Duis\",\n   \"Location\": {\n    \"ClusterMoref\": \"sed\",\n    \"DatastoreMoref\": \"eiusmod anim\",\n    \"FolderMoref\": \"in adipisicing Excepteur minim\",\n    \"HostMoref\": \"elit id eu velit\",\n    \"NetworkMoref\": \"no\",\n    \"ResourcePoolMoref\": \"ex cillum laborum\"\n   },\n   \"MacAddress\": \"aute eiusmod do\",\n   \"MultiVlanEnabled\": true,\n   \"NTPServer\": \"fugiat culpa\",\n   \"NetMask\": \"reprehenderit ut Lorem veniam\",\n   \"NetworkMoref\": \"enim irure minim\",\n   \"OvaFile\": \"dolor ipsum velit\",\n   \"RootCredential\": {\n    \"ObjectId\": \"enim\",\n    \"Password\": \"occaecat sed\",\n    \"Type\": \"ObjectId\",\n    \"UserName\": \"mollit eiusmod\"\n   },\n   \"Timezone\": \"incididunt velit fugiat\",\n   \"VMName\": \"exercitation eu ex proid\",\n   \"Vlans\": [\n    {\n     \"Gateway\": \"d\",\n     \"IpAddress\": \"incididunt ex laboris aute\",\n     \"Mtu\": -49634533,\n     \"Netmask\": \"consec\",\n     \"Routes\": [\n      {\n       \"Gateway\": \"tempor dolor dolore\",\n       \"Netmask\": \"ut ea sint ex\",\n       \"Source\": \"eiusmo\",\n       \"Type\": \"labore ex Ut Duis\"\n      },\n      {\n       \"Gateway\": \"irure nisi commodo veniam culpa\",\n       \"Netmask\": \"occaecat qui in proident\",\n       \"Source\": \"laborum sed velit labore\",\n       \"Type\": \"esse officia est Ut magna\"\n      }\n     ],\n     \"VlanId\": -48416384\n    },\n    {\n     \"Gateway\": \"in quis\",\n     \"IpAddress\": \"Excepteur\",\n     \"Mtu\": -43416269,\n     \"Netmask\": \"in cupidatat sed do\",\n     \"Routes\": [\n      {\n       \"Gateway\": \"anim irure\",\n       \"Netmask\": \"irure exerci\",\n       \"Source\": \"qui adipisicing cillum\",\n       \"Type\": \"tempor velit in\"\n      },\n      {\n       \"Gateway\": \"dolore\",\n       \"Netmask\": \"ipsum commodo sunt laboris ullamco\",\n       \"Source\": \"ex ad dolor eiusmod tempor\",\n       \"Type\": \"Duis reprehenderit sed ea commodo\"\n      }\n     ],\n     \"VlanId\": 89505155\n    }\n   ]\n  },\n  \"ProxyType\": \"External\",\n  \"SkipRegistration\": false,\n  \"SupportedProtectionTypes\": [\n   \"Kubernetes\",\n   \"VM\"\n  ],\n  \"UpdateCredentials\": true,\n  \"VimServerRef\": {\n   \"ObjectId\": \"ea esse\",\n   \"Type\": \"ObjectId\",\n   \"Vcenter\": {\n    \"HostName\": \"in Ut non\",\n    \"HypervisorMode\": \"vSphere\",\n    \"TcpPort\": -12918063,\n    \"UserName\": \"do\",\n    \"UserPassword\": \"ut veniam aute\"\n   }\n  }\n },\n \"Id\": \"ex aliqua\",\n \"Status\": {\n  \"Aliases\": [\n   \"dolor ad ea tempor minim\",\n   \"in ut ullamco sed\"\n  ],\n  \"AllottedModes\": [\n   {\n    \"CapacityUnits\": -98770877,\n    \"ReservedBy\": {\n     \"SessionId\": \"nulla et\",\n     \"SessionType\": \"in reprehenderit\"\n    },\n    \"TotalControlSessions\": 56355273,\n    \"TotalTransportSessions\": 88629989\n   },\n   {\n    \"CapacityUnits\": 12538061,\n    \"ReservedBy\": {\n     \"SessionId\": \"in eiusmod Excepteur in amet\",\n     \"SessionType\": \"Duis la\"\n    },\n    \"TotalControlSessions\": -92288316,\n    \"TotalTransportSessions\": 54818020\n   }\n  ],\n  \"DaemonStatus\": [\n   {\n    \"DaemonName\": \"occaecat\",\n    \"Resources\": [\n     \"consequat officia labore minim\",\n     \"dolor\"\n    ],\n    \"Status\": \"Duis reprehenderit ut\"\n   },\n   {\n    \"DaemonName\": \"est Ut eu non\",\n    \"Resources\": [\n     \"ipsum ullamco ad culpa in\",\n     \"laboris dolor commodo\"\n    ],\n    \"Status\": \"ut\"\n   }\n  ],\n  \"DatacenterMoref\": \"in officia\",\n  \"Datastores\": [\n   \"sed\",\n   \"ut sed\"\n  ],\n  \"DeployedTime\": \"anim aliquip\",\n  \"HostedComputeRes\": {\n   \"MOref\": \"id ullamco nisi\",\n   \"Type\": \"dolor sit eu\"\n  },\n  \"LastCheckedTime\": \"consequat velit in\",\n  \"LastOperation\": {\n   \"Detail\": \"laboris in commodo ad fugiat\",\n   \"Operation\": \"version\",\n   \"Status\": \"Mounting\"\n  },\n  \"ModesAvailable\": {\n   \"CapacityUnits\": -637642,\n   \"Mode\": \"HotaddOnly\",\n   \"UseSsl\": true\n  },\n  \"Networks\": [\n   {\n    \"Connected\": false,\n    \"DeviceLabel\": \"reprehenderit\",\n    \"Dns\": {\n     \"DhcpEnabled\": true,\n     \"DomainName\": \"exercitation in consectetur occaecat id\",\n     \"HostName\": \"dolor Except\",\n     \"SearchDomains\": [\n      \"non tempor nisi aliquip\",\n      \"ea\"\n     ],\n     \"Servers\": [\n      \"ut reprehenderit\",\n      \"sint qui magna\"\n     ]\n    },\n    \"GatewayV4\": \"consectetur velit exercitation labore\",\n    \"GatewayV6\": \"laboris non in consequat sit\",\n    \"IpAddrV4\": {\n     \"Address\": \"cupidatat aliquip\",\n     \"IpCidr\": \"quis\",\n     \"NetMask\": \"aliquip eu\",\n     \"PrefixLength\": 98506142,\n     \"SubnetCidr\": \"conse\",\n     \"Version\": \"IPv4\"\n    },\n    \"IpAddrV6\": {\n     \"Address\": \"labore\",\n     \"IpCidr\": \"dolor Lorem\",\n     \"NetMask\": \"labori\",\n     \"PrefixLength\": 7850890,\n     \"SubnetCidr\": \"veniam dolor\",\n     \"Version\": \"IPv4\"\n    },\n    \"MAC\": \"commodo Lorem minim cupidatat laborum\",\n    \"VirtualDeviceId\": 64607708,\n    \"VirtualNetworkName\": \"ut\"\n   },\n   {\n    \"Connected\": false,\n    \"DeviceLabel\": \"ut nostrud id quis\",\n    \"Dns\": {\n     \"DhcpEnabled\": true,\n     \"DomainName\": \"elit\",\n     \"HostName\": \"nisi irure sit\",\n     \"SearchDomains\": [\n      \"enim\",\n      \"officia id non dolore et\"\n     ],\n     \"Servers\": [\n      \"sint pariatur deserunt aute\",\n      \"fugiat magna\"\n     ]\n    },\n    \"GatewayV4\": \"dolore\",\n    \"GatewayV6\": \"occaecat minim ea\",\n    \"IpAddrV4\": {\n     \"Address\": \"incididunt\",\n     \"IpCidr\": \"ullamco nulla\",\n     \"NetMask\": \"pariatur ea occaecat ipsum nisi\",\n     \"PrefixLength\": -94611769,\n     \"SubnetCidr\": \"nos\",\n     \"Version\": \"IPv6\"\n    },\n    \"IpAddrV6\": {\n     \"Address\": \"do Excepteur ad elit\",\n     \"IpCidr\": \"minim nostrud fugiat nulla\",\n     \"NetMask\": \"tempor sunt\",\n     \"PrefixLength\": 87574354,\n     \"SubnetCidr\": \"proident esse\",\n     \"Version\": \"IPv4\"\n    },\n    \"MAC\": \"occaecat et do consequat\",\n    \"VirtualDeviceId\": 92931755,\n    \"VirtualNetworkName\": \"consequat\"\n   }\n  ],\n  \"PowerState\": \"Suspended\",\n  \"ProxyDeployed\": true,\n  \"ProxyRegistered\": false,\n  \"ProxyState\": \"READY\",\n  \"ProxyStatus\": {\n   \"Detail\": \"ea non mollit\",\n   \"Status\": \"Ready\"\n  },\n  \"RegisteredTime\": \"exercitation ad commodo\",\n  \"Thumbprint\": \"u\",\n  \"Uuid\": \"consequat est nulla labore\",\n  \"Version\": \"sint\",\n  \"VlanStatus\": [\n   {\n    \"Detail\": \"in labore in in\",\n    \"IpAddress\": \"occaecat anim ex exercitation\",\n    \"Status\": \"CONNECTED\",\n    \"VlanId\": -67427392\n   },\n   {\n    \"Detail\": \"ipsum dolor\",\n    \"IpAddress\": \"est in ut\",\n    \"Status\": \"CONNECTED\",\n    \"VlanId\": 3627378\n   }\n  ]\n }\n}"
														},
														{
															"name": "Successful operation.",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"description": {
																			"content": "Added as a part of security scheme: apikey",
																			"type": "text/plain"
																		},
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/protection-engines/:id/proxies/:proxyId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"protection-engines",
																		":id",
																		"proxies",
																		":proxyId"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "proxyId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"Config\": {\n  \"AdvancedOptions\": {\n   \"CapacityPercentage\": 45629334,\n   \"Datastores\": [\n    \"proide\",\n    \"anim reprehenderit nostrud \"\n   ],\n   \"TransportSessions\": {\n    \"Mode\": \"HotaddPreferred\",\n    \"UseSsl\": false,\n    \"UserDefined\": true\n   }\n  },\n  \"ApplicationData\": {},\n  \"AutoUpdateConfig\": true,\n  \"Credential\": {\n   \"ObjectId\": \"labore mollit\",\n   \"Password\": \"dolor\",\n   \"Type\": \"Object\",\n   \"UserName\": \"Ut\"\n  },\n  \"DeployProxy\": true,\n  \"Disabled\": false,\n  \"HealthCheckInterval\": 82082786,\n  \"HostName\": \"ex veniam\",\n  \"InstanceUuid\": \"enim ex\",\n  \"MORef\": \"dolore incididunt sint\",\n  \"Operation\": \"upgrade\",\n  \"Port\": -81697983,\n  \"ProxyDeploymentConfig\": {\n   \"AdditionalVMNetworks\": [\n    {\n     \"Fqdn\": \"non\",\n     \"Gateway\": \"ullamco exercitation id irure qui\",\n     \"IPProtocol\": \"IPv4\",\n     \"InterfaceName\": \"voluptate\",\n     \"IpAddress\": \"laborum aliqua\",\n     \"MacAddress\": \"irure tempor\",\n     \"MultiVlanEnabled\": true,\n     \"NetMask\": \"in velit pariatur\",\n     \"NetworkMoref\": \"nisi\",\n     \"Vlans\": [\n      {\n       \"Gateway\": \"anim veniam officia id\",\n       \"IpAddress\": \"Excepteur Ut esse\",\n       \"Mtu\": -10182718,\n       \"Netmask\": \"ipsum in quis\",\n       \"Routes\": [\n        {\n         \"Gateway\": \"in cillum\",\n         \"Netmask\": \"incididunt ipsum ex reprehenderit sed\",\n         \"Source\": \"Ut nostrud\",\n         \"Type\": \"Excepteur proident in\"\n        },\n        {\n         \"Gateway\": \"aliqua elit\",\n         \"Netmask\": \"par\",\n         \"Source\": \"labore\",\n         \"Type\": \"et ullamco officia irure\"\n        }\n       ],\n       \"VlanId\": 50048506\n      },\n      {\n       \"Gateway\": \"exercitation aliqua fugiat\",\n       \"IpAddress\": \"voluptate laboris in\",\n       \"Mtu\": -77893727,\n       \"Netmask\": \"exercitatio\",\n       \"Routes\": [\n        {\n         \"Gateway\": \"Lorem\",\n         \"Netmask\": \"Ut est id\",\n         \"Source\": \"reprehenderit nostrud et minim\",\n         \"Type\": \"nisi aliqua id\"\n        },\n        {\n         \"Gateway\": \"ut cupidatat commodo incididunt\",\n         \"Netmask\": \"dolor cupidatat\",\n         \"Source\": \"commodo Excepteur sint non labore\",\n         \"Type\": \"voluptate id Excepteur dolore occ\"\n        }\n       ],\n       \"VlanId\": -47644326\n      }\n     ]\n    },\n    {\n     \"Fqdn\": \"cupidatat adipisicing aliquip in\",\n     \"Gateway\": \"in velit\",\n     \"IPProtocol\": \"IPv4\",\n     \"InterfaceName\": \"aliqua proid\",\n     \"IpAddress\": \"occaecat aliquip do\",\n     \"MacAddress\": \"fugiat ea\",\n     \"MultiVlanEnabled\": true,\n     \"NetMask\": \"eu officia ad voluptate\",\n     \"NetworkMoref\": \"cupidatat dolore elit irure\",\n     \"Vlans\": [\n      {\n       \"Gateway\": \"magna quis consequat nostrud\",\n       \"IpAddress\": \"aute\",\n       \"Mtu\": -51977868,\n       \"Netmask\": \"officia sunt elit labore\",\n       \"Routes\": [\n        {\n         \"Gateway\": \"magna enim\",\n         \"Netmask\": \"est l\",\n         \"Source\": \"Duis cillum ut id officia\",\n         \"Type\": \"ut sint\"\n        },\n        {\n         \"Gateway\": \"Lorem aliqua ullamco aliquip Duis\",\n         \"Netmask\": \"eiusmod non irure\",\n         \"Source\": \"sint\",\n         \"Type\": \"elit magna id\"\n        }\n       ],\n       \"VlanId\": 28111220\n      },\n      {\n       \"Gateway\": \"aute non sunt\",\n       \"IpAddress\": \"veniam elit ut\",\n       \"Mtu\": -36377772,\n       \"Netmask\": \"in laborum Lorem\",\n       \"Routes\": [\n        {\n         \"Gateway\": \"ut dolor anim\",\n         \"Netmask\": \"nulla exercitation\",\n         \"Source\": \"pariatur in Lorem veniam\",\n         \"Type\": \"dolor reprehenderit dolor\"\n        },\n        {\n         \"Gateway\": \"nostrud voluptate\",\n         \"Netmask\": \"minim nostrud ullamco quis\",\n         \"Source\": \"voluptate anim\",\n         \"Type\": \"ex minim tempor\"\n        }\n       ],\n       \"VlanId\": 17088502\n      }\n     ]\n    }\n   ],\n   \"Dns\": \"dolor proident elit\",\n   \"Fqdn\": \"officia deserunt\",\n   \"Gateway\": \"proident amet dolore sint ad\",\n   \"IPProtocol\": \"IPv4\",\n   \"InterfaceName\": \"Exc\",\n   \"IpAddress\": \"nulla occaecat Duis\",\n   \"Location\": {\n    \"ClusterMoref\": \"sed\",\n    \"DatastoreMoref\": \"eiusmod anim\",\n    \"FolderMoref\": \"in adipisicing Excepteur minim\",\n    \"HostMoref\": \"elit id eu velit\",\n    \"NetworkMoref\": \"no\",\n    \"ResourcePoolMoref\": \"ex cillum laborum\"\n   },\n   \"MacAddress\": \"aute eiusmod do\",\n   \"MultiVlanEnabled\": true,\n   \"NTPServer\": \"fugiat culpa\",\n   \"NetMask\": \"reprehenderit ut Lorem veniam\",\n   \"NetworkMoref\": \"enim irure minim\",\n   \"OvaFile\": \"dolor ipsum velit\",\n   \"RootCredential\": {\n    \"ObjectId\": \"enim\",\n    \"Password\": \"occaecat sed\",\n    \"Type\": \"ObjectId\",\n    \"UserName\": \"mollit eiusmod\"\n   },\n   \"Timezone\": \"incididunt velit fugiat\",\n   \"VMName\": \"exercitation eu ex proid\",\n   \"Vlans\": [\n    {\n     \"Gateway\": \"d\",\n     \"IpAddress\": \"incididunt ex laboris aute\",\n     \"Mtu\": -49634533,\n     \"Netmask\": \"consec\",\n     \"Routes\": [\n      {\n       \"Gateway\": \"tempor dolor dolore\",\n       \"Netmask\": \"ut ea sint ex\",\n       \"Source\": \"eiusmo\",\n       \"Type\": \"labore ex Ut Duis\"\n      },\n      {\n       \"Gateway\": \"irure nisi commodo veniam culpa\",\n       \"Netmask\": \"occaecat qui in proident\",\n       \"Source\": \"laborum sed velit labore\",\n       \"Type\": \"esse officia est Ut magna\"\n      }\n     ],\n     \"VlanId\": -48416384\n    },\n    {\n     \"Gateway\": \"in quis\",\n     \"IpAddress\": \"Excepteur\",\n     \"Mtu\": -43416269,\n     \"Netmask\": \"in cupidatat sed do\",\n     \"Routes\": [\n      {\n       \"Gateway\": \"anim irure\",\n       \"Netmask\": \"irure exerci\",\n       \"Source\": \"qui adipisicing cillum\",\n       \"Type\": \"tempor velit in\"\n      },\n      {\n       \"Gateway\": \"dolore\",\n       \"Netmask\": \"ipsum commodo sunt laboris ullamco\",\n       \"Source\": \"ex ad dolor eiusmod tempor\",\n       \"Type\": \"Duis reprehenderit sed ea commodo\"\n      }\n     ],\n     \"VlanId\": 89505155\n    }\n   ]\n  },\n  \"ProxyType\": \"External\",\n  \"SkipRegistration\": false,\n  \"SupportedProtectionTypes\": [\n   \"Kubernetes\",\n   \"VM\"\n  ],\n  \"UpdateCredentials\": true,\n  \"VimServerRef\": {\n   \"ObjectId\": \"ea esse\",\n   \"Type\": \"ObjectId\",\n   \"Vcenter\": {\n    \"HostName\": \"in Ut non\",\n    \"HypervisorMode\": \"vSphere\",\n    \"TcpPort\": -12918063,\n    \"UserName\": \"do\",\n    \"UserPassword\": \"ut veniam aute\"\n   }\n  }\n },\n \"Id\": \"ex aliqua\",\n \"Status\": {\n  \"Aliases\": [\n   \"dolor ad ea tempor minim\",\n   \"in ut ullamco sed\"\n  ],\n  \"AllottedModes\": [\n   {\n    \"CapacityUnits\": -98770877,\n    \"ReservedBy\": {\n     \"SessionId\": \"nulla et\",\n     \"SessionType\": \"in reprehenderit\"\n    },\n    \"TotalControlSessions\": 56355273,\n    \"TotalTransportSessions\": 88629989\n   },\n   {\n    \"CapacityUnits\": 12538061,\n    \"ReservedBy\": {\n     \"SessionId\": \"in eiusmod Excepteur in amet\",\n     \"SessionType\": \"Duis la\"\n    },\n    \"TotalControlSessions\": -92288316,\n    \"TotalTransportSessions\": 54818020\n   }\n  ],\n  \"DaemonStatus\": [\n   {\n    \"DaemonName\": \"occaecat\",\n    \"Resources\": [\n     \"consequat officia labore minim\",\n     \"dolor\"\n    ],\n    \"Status\": \"Duis reprehenderit ut\"\n   },\n   {\n    \"DaemonName\": \"est Ut eu non\",\n    \"Resources\": [\n     \"ipsum ullamco ad culpa in\",\n     \"laboris dolor commodo\"\n    ],\n    \"Status\": \"ut\"\n   }\n  ],\n  \"DatacenterMoref\": \"in officia\",\n  \"Datastores\": [\n   \"sed\",\n   \"ut sed\"\n  ],\n  \"DeployedTime\": \"anim aliquip\",\n  \"HostedComputeRes\": {\n   \"MOref\": \"id ullamco nisi\",\n   \"Type\": \"dolor sit eu\"\n  },\n  \"LastCheckedTime\": \"consequat velit in\",\n  \"LastOperation\": {\n   \"Detail\": \"laboris in commodo ad fugiat\",\n   \"Operation\": \"version\",\n   \"Status\": \"Mounting\"\n  },\n  \"ModesAvailable\": {\n   \"CapacityUnits\": -637642,\n   \"Mode\": \"HotaddOnly\",\n   \"UseSsl\": true\n  },\n  \"Networks\": [\n   {\n    \"Connected\": false,\n    \"DeviceLabel\": \"reprehenderit\",\n    \"Dns\": {\n     \"DhcpEnabled\": true,\n     \"DomainName\": \"exercitation in consectetur occaecat id\",\n     \"HostName\": \"dolor Except\",\n     \"SearchDomains\": [\n      \"non tempor nisi aliquip\",\n      \"ea\"\n     ],\n     \"Servers\": [\n      \"ut reprehenderit\",\n      \"sint qui magna\"\n     ]\n    },\n    \"GatewayV4\": \"consectetur velit exercitation labore\",\n    \"GatewayV6\": \"laboris non in consequat sit\",\n    \"IpAddrV4\": {\n     \"Address\": \"cupidatat aliquip\",\n     \"IpCidr\": \"quis\",\n     \"NetMask\": \"aliquip eu\",\n     \"PrefixLength\": 98506142,\n     \"SubnetCidr\": \"conse\",\n     \"Version\": \"IPv4\"\n    },\n    \"IpAddrV6\": {\n     \"Address\": \"labore\",\n     \"IpCidr\": \"dolor Lorem\",\n     \"NetMask\": \"labori\",\n     \"PrefixLength\": 7850890,\n     \"SubnetCidr\": \"veniam dolor\",\n     \"Version\": \"IPv4\"\n    },\n    \"MAC\": \"commodo Lorem minim cupidatat laborum\",\n    \"VirtualDeviceId\": 64607708,\n    \"VirtualNetworkName\": \"ut\"\n   },\n   {\n    \"Connected\": false,\n    \"DeviceLabel\": \"ut nostrud id quis\",\n    \"Dns\": {\n     \"DhcpEnabled\": true,\n     \"DomainName\": \"elit\",\n     \"HostName\": \"nisi irure sit\",\n     \"SearchDomains\": [\n      \"enim\",\n      \"officia id non dolore et\"\n     ],\n     \"Servers\": [\n      \"sint pariatur deserunt aute\",\n      \"fugiat magna\"\n     ]\n    },\n    \"GatewayV4\": \"dolore\",\n    \"GatewayV6\": \"occaecat minim ea\",\n    \"IpAddrV4\": {\n     \"Address\": \"incididunt\",\n     \"IpCidr\": \"ullamco nulla\",\n     \"NetMask\": \"pariatur ea occaecat ipsum nisi\",\n     \"PrefixLength\": -94611769,\n     \"SubnetCidr\": \"nos\",\n     \"Version\": \"IPv6\"\n    },\n    \"IpAddrV6\": {\n     \"Address\": \"do Excepteur ad elit\",\n     \"IpCidr\": \"minim nostrud fugiat nulla\",\n     \"NetMask\": \"tempor sunt\",\n     \"PrefixLength\": 87574354,\n     \"SubnetCidr\": \"proident esse\",\n     \"Version\": \"IPv4\"\n    },\n    \"MAC\": \"occaecat et do consequat\",\n    \"VirtualDeviceId\": 92931755,\n    \"VirtualNetworkName\": \"consequat\"\n   }\n  ],\n  \"PowerState\": \"Suspended\",\n  \"ProxyDeployed\": true,\n  \"ProxyRegistered\": false,\n  \"ProxyState\": \"READY\",\n  \"ProxyStatus\": {\n   \"Detail\": \"ea non mollit\",\n   \"Status\": \"Ready\"\n  },\n  \"RegisteredTime\": \"exercitation ad commodo\",\n  \"Thumbprint\": \"u\",\n  \"Uuid\": \"consequat est nulla labore\",\n  \"Version\": \"sint\",\n  \"VlanStatus\": [\n   {\n    \"Detail\": \"in labore in in\",\n    \"IpAddress\": \"occaecat anim ex exercitation\",\n    \"Status\": \"CONNECTED\",\n    \"VlanId\": -67427392\n   },\n   {\n    \"Detail\": \"ipsum dolor\",\n    \"IpAddress\": \"est in ut\",\n    \"Status\": \"CONNECTED\",\n    \"VlanId\": 3627378\n   }\n  ]\n }\n}"
														},
														{
															"name": "The requestor is not allowed to perform this operation.",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"description": {
																			"content": "Added as a part of security scheme: apikey",
																			"type": "text/plain"
																		},
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/protection-engines/:id/proxies/:proxyId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"protection-engines",
																		":id",
																		"proxies",
																		":proxyId"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "proxyId"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
														},
														{
															"name": "The requested resource was not found.",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"description": {
																			"content": "Added as a part of security scheme: apikey",
																			"type": "text/plain"
																		},
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/protection-engines/:id/proxies/:proxyId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"protection-engines",
																		":id",
																		"proxies",
																		":proxyId"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "proxyId"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
														},
														{
															"name": "The requestor is not authorized to perform this operation.",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"description": {
																			"content": "Added as a part of security scheme: apikey",
																			"type": "text/plain"
																		},
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/protection-engines/:id/proxies/:proxyId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"protection-engines",
																		":id",
																		"proxies",
																		":proxyId"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "proxyId"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
														},
														{
															"name": "The request is not valid.",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"description": {
																			"content": "Added as a part of security scheme: apikey",
																			"type": "text/plain"
																		},
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/protection-engines/:id/proxies/:proxyId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"protection-engines",
																		":id",
																		"proxies",
																		":proxyId"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "proxyId"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
														},
														{
															"name": "An unexpected error prevented the server from fulfilling your request.",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"description": {
																			"content": "Added as a part of security scheme: apikey",
																			"type": "text/plain"
																		},
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/protection-engines/:id/proxies/:proxyId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"protection-engines",
																		":id",
																		"proxies",
																		":proxyId"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "proxyId"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
														}
													]
												},
												{
													"name": "Redeploy protection engine proxy.",
													"request": {
														"auth": {
															"type": "apikey",
															"apikey": [
																{
																	"key": "key",
																	"value": "Authorization",
																	"type": "string"
																},
																{
																	"key": "value",
																	"value": true,
																	"type": "boolean"
																},
																{
																	"key": "in",
																	"value": "header",
																	"type": "string"
																}
															]
														},
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"Config\": {\n        \"AdvancedOptions\": {\n            \"CapacityPercentage\": \"<integer>\",\n            \"Datastores\": [\n                \"<string>\",\n                \"<string>\"\n            ],\n            \"TransportSessions\": {\n                \"Mode\": \"<string>\",\n                \"UseSsl\": \"<boolean>\",\n                \"UserDefined\": \"<boolean>\"\n            }\n        },\n        \"ApplicationData\": \"<object>\",\n        \"AutoUpdateConfig\": \"<boolean>\",\n        \"Credential\": {\n            \"ObjectId\": \"<string>\",\n            \"Password\": \"<string>\",\n            \"Type\": \"<string>\",\n            \"UserName\": \"<string>\"\n        },\n        \"DeployProxy\": \"<boolean>\",\n        \"Disabled\": \"<boolean>\",\n        \"HealthCheckInterval\": \"<integer>\",\n        \"HostName\": \"<string>\",\n        \"InstanceUuid\": \"<string>\",\n        \"MORef\": \"<string>\",\n        \"Operation\": \"<string>\",\n        \"Port\": \"<integer>\",\n        \"ProxyDeploymentConfig\": {\n            \"AdditionalVMNetworks\": [\n                {\n                    \"Fqdn\": \"<string>\",\n                    \"Gateway\": \"<string>\",\n                    \"IPProtocol\": \"<string>\",\n                    \"InterfaceName\": \"<string>\",\n                    \"IpAddress\": \"<string>\",\n                    \"MacAddress\": \"<string>\",\n                    \"MultiVlanEnabled\": \"<boolean>\",\n                    \"NetMask\": \"<string>\",\n                    \"NetworkMoref\": \"<string>\",\n                    \"Vlans\": [\n                        {\n                            \"Gateway\": \"<string>\",\n                            \"IpAddress\": \"<string>\",\n                            \"Mtu\": \"<integer>\",\n                            \"Netmask\": \"<string>\",\n                            \"Routes\": [\n                                {\n                                    \"Gateway\": \"<string>\",\n                                    \"Netmask\": \"<string>\",\n                                    \"Source\": \"<string>\",\n                                    \"Type\": \"<string>\"\n                                },\n                                {\n                                    \"Gateway\": \"<string>\",\n                                    \"Netmask\": \"<string>\",\n                                    \"Source\": \"<string>\",\n                                    \"Type\": \"<string>\"\n                                }\n                            ],\n                            \"VlanId\": \"<integer>\"\n                        },\n                        {\n                            \"Gateway\": \"<string>\",\n                            \"IpAddress\": \"<string>\",\n                            \"Mtu\": \"<integer>\",\n                            \"Netmask\": \"<string>\",\n                            \"Routes\": [\n                                {\n                                    \"Gateway\": \"<string>\",\n                                    \"Netmask\": \"<string>\",\n                                    \"Source\": \"<string>\",\n                                    \"Type\": \"<string>\"\n                                },\n                                {\n                                    \"Gateway\": \"<string>\",\n                                    \"Netmask\": \"<string>\",\n                                    \"Source\": \"<string>\",\n                                    \"Type\": \"<string>\"\n                                }\n                            ],\n                            \"VlanId\": \"<integer>\"\n                        }\n                    ]\n                },\n                {\n                    \"Fqdn\": \"<string>\",\n                    \"Gateway\": \"<string>\",\n                    \"IPProtocol\": \"<string>\",\n                    \"InterfaceName\": \"<string>\",\n                    \"IpAddress\": \"<string>\",\n                    \"MacAddress\": \"<string>\",\n                    \"MultiVlanEnabled\": \"<boolean>\",\n                    \"NetMask\": \"<string>\",\n                    \"NetworkMoref\": \"<string>\",\n                    \"Vlans\": [\n                        {\n                            \"Gateway\": \"<string>\",\n                            \"IpAddress\": \"<string>\",\n                            \"Mtu\": \"<integer>\",\n                            \"Netmask\": \"<string>\",\n                            \"Routes\": [\n                                {\n                                    \"Gateway\": \"<string>\",\n                                    \"Netmask\": \"<string>\",\n                                    \"Source\": \"<string>\",\n                                    \"Type\": \"<string>\"\n                                },\n                                {\n                                    \"Gateway\": \"<string>\",\n                                    \"Netmask\": \"<string>\",\n                                    \"Source\": \"<string>\",\n                                    \"Type\": \"<string>\"\n                                }\n                            ],\n                            \"VlanId\": \"<integer>\"\n                        },\n                        {\n                            \"Gateway\": \"<string>\",\n                            \"IpAddress\": \"<string>\",\n                            \"Mtu\": \"<integer>\",\n                            \"Netmask\": \"<string>\",\n                            \"Routes\": [\n                                {\n                                    \"Gateway\": \"<string>\",\n                                    \"Netmask\": \"<string>\",\n                                    \"Source\": \"<string>\",\n                                    \"Type\": \"<string>\"\n                                },\n                                {\n                                    \"Gateway\": \"<string>\",\n                                    \"Netmask\": \"<string>\",\n                                    \"Source\": \"<string>\",\n                                    \"Type\": \"<string>\"\n                                }\n                            ],\n                            \"VlanId\": \"<integer>\"\n                        }\n                    ]\n                }\n            ],\n            \"Dns\": \"<string>\",\n            \"Fqdn\": \"<string>\",\n            \"Gateway\": \"<string>\",\n            \"IPProtocol\": \"<string>\",\n            \"InterfaceName\": \"<string>\",\n            \"IpAddress\": \"<string>\",\n            \"Location\": {\n                \"ClusterMoref\": \"<string>\",\n                \"DatastoreMoref\": \"<string>\",\n                \"FolderMoref\": \"<string>\",\n                \"HostMoref\": \"<string>\",\n                \"NetworkMoref\": \"<string>\",\n                \"ResourcePoolMoref\": \"<string>\"\n            },\n            \"MacAddress\": \"<string>\",\n            \"MultiVlanEnabled\": \"<boolean>\",\n            \"NTPServer\": \"<string>\",\n            \"NetMask\": \"<string>\",\n            \"NetworkMoref\": \"<string>\",\n            \"OvaFile\": \"<string>\",\n            \"RootCredential\": {\n                \"ObjectId\": \"<string>\",\n                \"Password\": \"<string>\",\n                \"Type\": \"<string>\",\n                \"UserName\": \"<string>\"\n            },\n            \"Timezone\": \"<string>\",\n            \"VMName\": \"<string>\",\n            \"Vlans\": [\n                {\n                    \"Gateway\": \"<string>\",\n                    \"IpAddress\": \"<string>\",\n                    \"Mtu\": \"<integer>\",\n                    \"Netmask\": \"<string>\",\n                    \"Routes\": [\n                        {\n                            \"Gateway\": \"<string>\",\n                            \"Netmask\": \"<string>\",\n                            \"Source\": \"<string>\",\n                            \"Type\": \"<string>\"\n                        },\n                        {\n                            \"Gateway\": \"<string>\",\n                            \"Netmask\": \"<string>\",\n                            \"Source\": \"<string>\",\n                            \"Type\": \"<string>\"\n                        }\n                    ],\n                    \"VlanId\": \"<integer>\"\n                },\n                {\n                    \"Gateway\": \"<string>\",\n                    \"IpAddress\": \"<string>\",\n                    \"Mtu\": \"<integer>\",\n                    \"Netmask\": \"<string>\",\n                    \"Routes\": [\n                        {\n                            \"Gateway\": \"<string>\",\n                            \"Netmask\": \"<string>\",\n                            \"Source\": \"<string>\",\n                            \"Type\": \"<string>\"\n                        },\n                        {\n                            \"Gateway\": \"<string>\",\n                            \"Netmask\": \"<string>\",\n                            \"Source\": \"<string>\",\n                            \"Type\": \"<string>\"\n                        }\n                    ],\n                    \"VlanId\": \"<integer>\"\n                }\n            ]\n        },\n        \"ProxyType\": \"<string>\",\n        \"SkipRegistration\": \"<boolean>\",\n        \"SupportedProtectionTypes\": [\n            \"<string>\",\n            \"<string>\"\n        ],\n        \"UpdateCredentials\": \"<boolean>\",\n        \"VimServerRef\": {\n            \"ObjectId\": \"<string>\",\n            \"Type\": \"<string>\",\n            \"Vcenter\": {\n                \"HostName\": \"<string>\",\n                \"HypervisorMode\": \"<string>\",\n                \"TcpPort\": \"<long>\",\n                \"UserName\": \"<string>\",\n                \"UserPassword\": \"<string>\"\n            }\n        }\n    },\n    \"Id\": \"<string>\",\n    \"Status\": {\n        \"Aliases\": [\n            \"<string>\",\n            \"<string>\"\n        ],\n        \"AllottedModes\": [\n            {\n                \"CapacityUnits\": \"<integer>\",\n                \"ReservedBy\": {\n                    \"SessionId\": \"<string>\",\n                    \"SessionType\": \"<string>\"\n                },\n                \"TotalControlSessions\": \"<integer>\",\n                \"TotalTransportSessions\": \"<integer>\"\n            },\n            {\n                \"CapacityUnits\": \"<integer>\",\n                \"ReservedBy\": {\n                    \"SessionId\": \"<string>\",\n                    \"SessionType\": \"<string>\"\n                },\n                \"TotalControlSessions\": \"<integer>\",\n                \"TotalTransportSessions\": \"<integer>\"\n            }\n        ],\n        \"DaemonStatus\": [\n            {\n                \"DaemonName\": \"<string>\",\n                \"Resources\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"Status\": \"<string>\"\n            },\n            {\n                \"DaemonName\": \"<string>\",\n                \"Resources\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"Status\": \"<string>\"\n            }\n        ],\n        \"DatacenterMoref\": \"<string>\",\n        \"Datastores\": [\n            \"<string>\",\n            \"<string>\"\n        ],\n        \"DeployedTime\": \"<string>\",\n        \"HostedComputeRes\": {\n            \"MOref\": \"<string>\",\n            \"Type\": \"<string>\"\n        },\n        \"LastCheckedTime\": \"<string>\",\n        \"LastOperation\": {\n            \"Detail\": \"<string>\",\n            \"Operation\": \"<string>\",\n            \"Status\": \"<string>\"\n        },\n        \"ModesAvailable\": {\n            \"CapacityUnits\": \"<integer>\",\n            \"Mode\": \"<string>\",\n            \"UseSsl\": \"<boolean>\"\n        },\n        \"Networks\": [\n            {\n                \"Connected\": \"<boolean>\",\n                \"DeviceLabel\": \"<string>\",\n                \"Dns\": {\n                    \"DhcpEnabled\": \"<boolean>\",\n                    \"DomainName\": \"<string>\",\n                    \"HostName\": \"<string>\",\n                    \"SearchDomains\": [\n                        \"<string>\",\n                        \"<string>\"\n                    ],\n                    \"Servers\": [\n                        \"<string>\",\n                        \"<string>\"\n                    ]\n                },\n                \"GatewayV4\": \"<string>\",\n                \"GatewayV6\": \"<string>\",\n                \"IpAddrV4\": {\n                    \"Address\": \"<string>\",\n                    \"IpCidr\": \"<string>\",\n                    \"NetMask\": \"<string>\",\n                    \"PrefixLength\": \"<integer>\",\n                    \"SubnetCidr\": \"<string>\",\n                    \"Version\": \"<string>\"\n                },\n                \"IpAddrV6\": {\n                    \"Address\": \"<string>\",\n                    \"IpCidr\": \"<string>\",\n                    \"NetMask\": \"<string>\",\n                    \"PrefixLength\": \"<integer>\",\n                    \"SubnetCidr\": \"<string>\",\n                    \"Version\": \"<string>\"\n                },\n                \"MAC\": \"<string>\",\n                \"VirtualDeviceId\": \"<integer>\",\n                \"VirtualNetworkName\": \"<string>\"\n            },\n            {\n                \"Connected\": \"<boolean>\",\n                \"DeviceLabel\": \"<string>\",\n                \"Dns\": {\n                    \"DhcpEnabled\": \"<boolean>\",\n                    \"DomainName\": \"<string>\",\n                    \"HostName\": \"<string>\",\n                    \"SearchDomains\": [\n                        \"<string>\",\n                        \"<string>\"\n                    ],\n                    \"Servers\": [\n                        \"<string>\",\n                        \"<string>\"\n                    ]\n                },\n                \"GatewayV4\": \"<string>\",\n                \"GatewayV6\": \"<string>\",\n                \"IpAddrV4\": {\n                    \"Address\": \"<string>\",\n                    \"IpCidr\": \"<string>\",\n                    \"NetMask\": \"<string>\",\n                    \"PrefixLength\": \"<integer>\",\n                    \"SubnetCidr\": \"<string>\",\n                    \"Version\": \"<string>\"\n                },\n                \"IpAddrV6\": {\n                    \"Address\": \"<string>\",\n                    \"IpCidr\": \"<string>\",\n                    \"NetMask\": \"<string>\",\n                    \"PrefixLength\": \"<integer>\",\n                    \"SubnetCidr\": \"<string>\",\n                    \"Version\": \"<string>\"\n                },\n                \"MAC\": \"<string>\",\n                \"VirtualDeviceId\": \"<integer>\",\n                \"VirtualNetworkName\": \"<string>\"\n            }\n        ],\n        \"PowerState\": \"<string>\",\n        \"ProxyDeployed\": \"<boolean>\",\n        \"ProxyRegistered\": \"<boolean>\",\n        \"ProxyState\": \"<string>\",\n        \"ProxyStatus\": {\n            \"Detail\": \"<string>\",\n            \"Status\": \"<string>\"\n        },\n        \"RegisteredTime\": \"<string>\",\n        \"Thumbprint\": \"<string>\",\n        \"Uuid\": \"<string>\",\n        \"Version\": \"<string>\",\n        \"VlanStatus\": [\n            {\n                \"Detail\": \"<string>\",\n                \"IpAddress\": \"<string>\",\n                \"Status\": \"<string>\",\n                \"VlanId\": \"<integer>\"\n            },\n            {\n                \"Detail\": \"<string>\",\n                \"IpAddress\": \"<string>\",\n                \"Status\": \"<string>\",\n                \"VlanId\": \"<integer>\"\n            }\n        ]\n    }\n}",
															"options": {
																"raw": {}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/protection-engines/:id/proxies/:proxyId/redeploy",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"protection-engines",
																":id",
																"proxies",
																":proxyId",
																"redeploy"
															],
															"variable": [
																{
																	"id": "bd2f1262-58de-49d3-90fb-1ec645a965d3",
																	"key": "id",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) The ID of the protection engine."
																},
																{
																	"id": "9f1dc485-3f99-4098-b1b8-f89df9d301e0",
																	"key": "proxyId",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) The proxy ID of the proxy to be redeployed."
																}
															]
														},
														"description": "Redeploys the VPE proxy with proxyId that is registered to the protection engine with the specified ID.  The protection engine with the specified ID must already be registered with PowerProtect Data Manager. The VPE proxy with the proxyId must also be registered.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
													},
													"response": [
														{
															"name": "Successful operation.",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"description": {
																			"content": "Added as a part of security scheme: apikey",
																			"type": "text/plain"
																		},
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/protection-engines/:id/proxies/:proxyId/redeploy",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"protection-engines",
																		":id",
																		"proxies",
																		":proxyId",
																		"redeploy"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "proxyId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"Config\": {\n  \"AdvancedOptions\": {\n   \"CapacityPercentage\": 45629334,\n   \"Datastores\": [\n    \"proide\",\n    \"anim reprehenderit nostrud \"\n   ],\n   \"TransportSessions\": {\n    \"Mode\": \"HotaddPreferred\",\n    \"UseSsl\": false,\n    \"UserDefined\": true\n   }\n  },\n  \"ApplicationData\": {},\n  \"AutoUpdateConfig\": true,\n  \"Credential\": {\n   \"ObjectId\": \"labore mollit\",\n   \"Password\": \"dolor\",\n   \"Type\": \"Object\",\n   \"UserName\": \"Ut\"\n  },\n  \"DeployProxy\": true,\n  \"Disabled\": false,\n  \"HealthCheckInterval\": 82082786,\n  \"HostName\": \"ex veniam\",\n  \"InstanceUuid\": \"enim ex\",\n  \"MORef\": \"dolore incididunt sint\",\n  \"Operation\": \"upgrade\",\n  \"Port\": -81697983,\n  \"ProxyDeploymentConfig\": {\n   \"AdditionalVMNetworks\": [\n    {\n     \"Fqdn\": \"non\",\n     \"Gateway\": \"ullamco exercitation id irure qui\",\n     \"IPProtocol\": \"IPv4\",\n     \"InterfaceName\": \"voluptate\",\n     \"IpAddress\": \"laborum aliqua\",\n     \"MacAddress\": \"irure tempor\",\n     \"MultiVlanEnabled\": true,\n     \"NetMask\": \"in velit pariatur\",\n     \"NetworkMoref\": \"nisi\",\n     \"Vlans\": [\n      {\n       \"Gateway\": \"anim veniam officia id\",\n       \"IpAddress\": \"Excepteur Ut esse\",\n       \"Mtu\": -10182718,\n       \"Netmask\": \"ipsum in quis\",\n       \"Routes\": [\n        {\n         \"Gateway\": \"in cillum\",\n         \"Netmask\": \"incididunt ipsum ex reprehenderit sed\",\n         \"Source\": \"Ut nostrud\",\n         \"Type\": \"Excepteur proident in\"\n        },\n        {\n         \"Gateway\": \"aliqua elit\",\n         \"Netmask\": \"par\",\n         \"Source\": \"labore\",\n         \"Type\": \"et ullamco officia irure\"\n        }\n       ],\n       \"VlanId\": 50048506\n      },\n      {\n       \"Gateway\": \"exercitation aliqua fugiat\",\n       \"IpAddress\": \"voluptate laboris in\",\n       \"Mtu\": -77893727,\n       \"Netmask\": \"exercitatio\",\n       \"Routes\": [\n        {\n         \"Gateway\": \"Lorem\",\n         \"Netmask\": \"Ut est id\",\n         \"Source\": \"reprehenderit nostrud et minim\",\n         \"Type\": \"nisi aliqua id\"\n        },\n        {\n         \"Gateway\": \"ut cupidatat commodo incididunt\",\n         \"Netmask\": \"dolor cupidatat\",\n         \"Source\": \"commodo Excepteur sint non labore\",\n         \"Type\": \"voluptate id Excepteur dolore occ\"\n        }\n       ],\n       \"VlanId\": -47644326\n      }\n     ]\n    },\n    {\n     \"Fqdn\": \"cupidatat adipisicing aliquip in\",\n     \"Gateway\": \"in velit\",\n     \"IPProtocol\": \"IPv4\",\n     \"InterfaceName\": \"aliqua proid\",\n     \"IpAddress\": \"occaecat aliquip do\",\n     \"MacAddress\": \"fugiat ea\",\n     \"MultiVlanEnabled\": true,\n     \"NetMask\": \"eu officia ad voluptate\",\n     \"NetworkMoref\": \"cupidatat dolore elit irure\",\n     \"Vlans\": [\n      {\n       \"Gateway\": \"magna quis consequat nostrud\",\n       \"IpAddress\": \"aute\",\n       \"Mtu\": -51977868,\n       \"Netmask\": \"officia sunt elit labore\",\n       \"Routes\": [\n        {\n         \"Gateway\": \"magna enim\",\n         \"Netmask\": \"est l\",\n         \"Source\": \"Duis cillum ut id officia\",\n         \"Type\": \"ut sint\"\n        },\n        {\n         \"Gateway\": \"Lorem aliqua ullamco aliquip Duis\",\n         \"Netmask\": \"eiusmod non irure\",\n         \"Source\": \"sint\",\n         \"Type\": \"elit magna id\"\n        }\n       ],\n       \"VlanId\": 28111220\n      },\n      {\n       \"Gateway\": \"aute non sunt\",\n       \"IpAddress\": \"veniam elit ut\",\n       \"Mtu\": -36377772,\n       \"Netmask\": \"in laborum Lorem\",\n       \"Routes\": [\n        {\n         \"Gateway\": \"ut dolor anim\",\n         \"Netmask\": \"nulla exercitation\",\n         \"Source\": \"pariatur in Lorem veniam\",\n         \"Type\": \"dolor reprehenderit dolor\"\n        },\n        {\n         \"Gateway\": \"nostrud voluptate\",\n         \"Netmask\": \"minim nostrud ullamco quis\",\n         \"Source\": \"voluptate anim\",\n         \"Type\": \"ex minim tempor\"\n        }\n       ],\n       \"VlanId\": 17088502\n      }\n     ]\n    }\n   ],\n   \"Dns\": \"dolor proident elit\",\n   \"Fqdn\": \"officia deserunt\",\n   \"Gateway\": \"proident amet dolore sint ad\",\n   \"IPProtocol\": \"IPv4\",\n   \"InterfaceName\": \"Exc\",\n   \"IpAddress\": \"nulla occaecat Duis\",\n   \"Location\": {\n    \"ClusterMoref\": \"sed\",\n    \"DatastoreMoref\": \"eiusmod anim\",\n    \"FolderMoref\": \"in adipisicing Excepteur minim\",\n    \"HostMoref\": \"elit id eu velit\",\n    \"NetworkMoref\": \"no\",\n    \"ResourcePoolMoref\": \"ex cillum laborum\"\n   },\n   \"MacAddress\": \"aute eiusmod do\",\n   \"MultiVlanEnabled\": true,\n   \"NTPServer\": \"fugiat culpa\",\n   \"NetMask\": \"reprehenderit ut Lorem veniam\",\n   \"NetworkMoref\": \"enim irure minim\",\n   \"OvaFile\": \"dolor ipsum velit\",\n   \"RootCredential\": {\n    \"ObjectId\": \"enim\",\n    \"Password\": \"occaecat sed\",\n    \"Type\": \"ObjectId\",\n    \"UserName\": \"mollit eiusmod\"\n   },\n   \"Timezone\": \"incididunt velit fugiat\",\n   \"VMName\": \"exercitation eu ex proid\",\n   \"Vlans\": [\n    {\n     \"Gateway\": \"d\",\n     \"IpAddress\": \"incididunt ex laboris aute\",\n     \"Mtu\": -49634533,\n     \"Netmask\": \"consec\",\n     \"Routes\": [\n      {\n       \"Gateway\": \"tempor dolor dolore\",\n       \"Netmask\": \"ut ea sint ex\",\n       \"Source\": \"eiusmo\",\n       \"Type\": \"labore ex Ut Duis\"\n      },\n      {\n       \"Gateway\": \"irure nisi commodo veniam culpa\",\n       \"Netmask\": \"occaecat qui in proident\",\n       \"Source\": \"laborum sed velit labore\",\n       \"Type\": \"esse officia est Ut magna\"\n      }\n     ],\n     \"VlanId\": -48416384\n    },\n    {\n     \"Gateway\": \"in quis\",\n     \"IpAddress\": \"Excepteur\",\n     \"Mtu\": -43416269,\n     \"Netmask\": \"in cupidatat sed do\",\n     \"Routes\": [\n      {\n       \"Gateway\": \"anim irure\",\n       \"Netmask\": \"irure exerci\",\n       \"Source\": \"qui adipisicing cillum\",\n       \"Type\": \"tempor velit in\"\n      },\n      {\n       \"Gateway\": \"dolore\",\n       \"Netmask\": \"ipsum commodo sunt laboris ullamco\",\n       \"Source\": \"ex ad dolor eiusmod tempor\",\n       \"Type\": \"Duis reprehenderit sed ea commodo\"\n      }\n     ],\n     \"VlanId\": 89505155\n    }\n   ]\n  },\n  \"ProxyType\": \"External\",\n  \"SkipRegistration\": false,\n  \"SupportedProtectionTypes\": [\n   \"Kubernetes\",\n   \"VM\"\n  ],\n  \"UpdateCredentials\": true,\n  \"VimServerRef\": {\n   \"ObjectId\": \"ea esse\",\n   \"Type\": \"ObjectId\",\n   \"Vcenter\": {\n    \"HostName\": \"in Ut non\",\n    \"HypervisorMode\": \"vSphere\",\n    \"TcpPort\": -12918063,\n    \"UserName\": \"do\",\n    \"UserPassword\": \"ut veniam aute\"\n   }\n  }\n },\n \"Id\": \"ex aliqua\",\n \"Status\": {\n  \"Aliases\": [\n   \"dolor ad ea tempor minim\",\n   \"in ut ullamco sed\"\n  ],\n  \"AllottedModes\": [\n   {\n    \"CapacityUnits\": -98770877,\n    \"ReservedBy\": {\n     \"SessionId\": \"nulla et\",\n     \"SessionType\": \"in reprehenderit\"\n    },\n    \"TotalControlSessions\": 56355273,\n    \"TotalTransportSessions\": 88629989\n   },\n   {\n    \"CapacityUnits\": 12538061,\n    \"ReservedBy\": {\n     \"SessionId\": \"in eiusmod Excepteur in amet\",\n     \"SessionType\": \"Duis la\"\n    },\n    \"TotalControlSessions\": -92288316,\n    \"TotalTransportSessions\": 54818020\n   }\n  ],\n  \"DaemonStatus\": [\n   {\n    \"DaemonName\": \"occaecat\",\n    \"Resources\": [\n     \"consequat officia labore minim\",\n     \"dolor\"\n    ],\n    \"Status\": \"Duis reprehenderit ut\"\n   },\n   {\n    \"DaemonName\": \"est Ut eu non\",\n    \"Resources\": [\n     \"ipsum ullamco ad culpa in\",\n     \"laboris dolor commodo\"\n    ],\n    \"Status\": \"ut\"\n   }\n  ],\n  \"DatacenterMoref\": \"in officia\",\n  \"Datastores\": [\n   \"sed\",\n   \"ut sed\"\n  ],\n  \"DeployedTime\": \"anim aliquip\",\n  \"HostedComputeRes\": {\n   \"MOref\": \"id ullamco nisi\",\n   \"Type\": \"dolor sit eu\"\n  },\n  \"LastCheckedTime\": \"consequat velit in\",\n  \"LastOperation\": {\n   \"Detail\": \"laboris in commodo ad fugiat\",\n   \"Operation\": \"version\",\n   \"Status\": \"Mounting\"\n  },\n  \"ModesAvailable\": {\n   \"CapacityUnits\": -637642,\n   \"Mode\": \"HotaddOnly\",\n   \"UseSsl\": true\n  },\n  \"Networks\": [\n   {\n    \"Connected\": false,\n    \"DeviceLabel\": \"reprehenderit\",\n    \"Dns\": {\n     \"DhcpEnabled\": true,\n     \"DomainName\": \"exercitation in consectetur occaecat id\",\n     \"HostName\": \"dolor Except\",\n     \"SearchDomains\": [\n      \"non tempor nisi aliquip\",\n      \"ea\"\n     ],\n     \"Servers\": [\n      \"ut reprehenderit\",\n      \"sint qui magna\"\n     ]\n    },\n    \"GatewayV4\": \"consectetur velit exercitation labore\",\n    \"GatewayV6\": \"laboris non in consequat sit\",\n    \"IpAddrV4\": {\n     \"Address\": \"cupidatat aliquip\",\n     \"IpCidr\": \"quis\",\n     \"NetMask\": \"aliquip eu\",\n     \"PrefixLength\": 98506142,\n     \"SubnetCidr\": \"conse\",\n     \"Version\": \"IPv4\"\n    },\n    \"IpAddrV6\": {\n     \"Address\": \"labore\",\n     \"IpCidr\": \"dolor Lorem\",\n     \"NetMask\": \"labori\",\n     \"PrefixLength\": 7850890,\n     \"SubnetCidr\": \"veniam dolor\",\n     \"Version\": \"IPv4\"\n    },\n    \"MAC\": \"commodo Lorem minim cupidatat laborum\",\n    \"VirtualDeviceId\": 64607708,\n    \"VirtualNetworkName\": \"ut\"\n   },\n   {\n    \"Connected\": false,\n    \"DeviceLabel\": \"ut nostrud id quis\",\n    \"Dns\": {\n     \"DhcpEnabled\": true,\n     \"DomainName\": \"elit\",\n     \"HostName\": \"nisi irure sit\",\n     \"SearchDomains\": [\n      \"enim\",\n      \"officia id non dolore et\"\n     ],\n     \"Servers\": [\n      \"sint pariatur deserunt aute\",\n      \"fugiat magna\"\n     ]\n    },\n    \"GatewayV4\": \"dolore\",\n    \"GatewayV6\": \"occaecat minim ea\",\n    \"IpAddrV4\": {\n     \"Address\": \"incididunt\",\n     \"IpCidr\": \"ullamco nulla\",\n     \"NetMask\": \"pariatur ea occaecat ipsum nisi\",\n     \"PrefixLength\": -94611769,\n     \"SubnetCidr\": \"nos\",\n     \"Version\": \"IPv6\"\n    },\n    \"IpAddrV6\": {\n     \"Address\": \"do Excepteur ad elit\",\n     \"IpCidr\": \"minim nostrud fugiat nulla\",\n     \"NetMask\": \"tempor sunt\",\n     \"PrefixLength\": 87574354,\n     \"SubnetCidr\": \"proident esse\",\n     \"Version\": \"IPv4\"\n    },\n    \"MAC\": \"occaecat et do consequat\",\n    \"VirtualDeviceId\": 92931755,\n    \"VirtualNetworkName\": \"consequat\"\n   }\n  ],\n  \"PowerState\": \"Suspended\",\n  \"ProxyDeployed\": true,\n  \"ProxyRegistered\": false,\n  \"ProxyState\": \"READY\",\n  \"ProxyStatus\": {\n   \"Detail\": \"ea non mollit\",\n   \"Status\": \"Ready\"\n  },\n  \"RegisteredTime\": \"exercitation ad commodo\",\n  \"Thumbprint\": \"u\",\n  \"Uuid\": \"consequat est nulla labore\",\n  \"Version\": \"sint\",\n  \"VlanStatus\": [\n   {\n    \"Detail\": \"in labore in in\",\n    \"IpAddress\": \"occaecat anim ex exercitation\",\n    \"Status\": \"CONNECTED\",\n    \"VlanId\": -67427392\n   },\n   {\n    \"Detail\": \"ipsum dolor\",\n    \"IpAddress\": \"est in ut\",\n    \"Status\": \"CONNECTED\",\n    \"VlanId\": 3627378\n   }\n  ]\n }\n}"
														},
														{
															"name": "The request is not valid.",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"description": {
																			"content": "Added as a part of security scheme: apikey",
																			"type": "text/plain"
																		},
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/protection-engines/:id/proxies/:proxyId/redeploy",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"protection-engines",
																		":id",
																		"proxies",
																		":proxyId",
																		"redeploy"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "proxyId"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
														},
														{
															"name": "An unexpected error prevented the server from fulfilling your request.",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"description": {
																			"content": "Added as a part of security scheme: apikey",
																			"type": "text/plain"
																		},
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/protection-engines/:id/proxies/:proxyId/redeploy",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"protection-engines",
																		":id",
																		"proxies",
																		":proxyId",
																		"redeploy"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "proxyId"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
														},
														{
															"name": "The requestor is not authorized to perform this operation.",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"description": {
																			"content": "Added as a part of security scheme: apikey",
																			"type": "text/plain"
																		},
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/protection-engines/:id/proxies/:proxyId/redeploy",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"protection-engines",
																		":id",
																		"proxies",
																		":proxyId",
																		"redeploy"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "proxyId"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
														},
														{
															"name": "The request was accepted for processing.",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"description": {
																			"content": "Added as a part of security scheme: apikey",
																			"type": "text/plain"
																		},
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/protection-engines/:id/proxies/:proxyId/redeploy",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"protection-engines",
																		":id",
																		"proxies",
																		":proxyId",
																		"redeploy"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "proxyId"
																		}
																	]
																}
															},
															"status": "Accepted",
															"code": 202,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"Config\": {\n  \"AdvancedOptions\": {\n   \"CapacityPercentage\": 45629334,\n   \"Datastores\": [\n    \"proide\",\n    \"anim reprehenderit nostrud \"\n   ],\n   \"TransportSessions\": {\n    \"Mode\": \"HotaddPreferred\",\n    \"UseSsl\": false,\n    \"UserDefined\": true\n   }\n  },\n  \"ApplicationData\": {},\n  \"AutoUpdateConfig\": true,\n  \"Credential\": {\n   \"ObjectId\": \"labore mollit\",\n   \"Password\": \"dolor\",\n   \"Type\": \"Object\",\n   \"UserName\": \"Ut\"\n  },\n  \"DeployProxy\": true,\n  \"Disabled\": false,\n  \"HealthCheckInterval\": 82082786,\n  \"HostName\": \"ex veniam\",\n  \"InstanceUuid\": \"enim ex\",\n  \"MORef\": \"dolore incididunt sint\",\n  \"Operation\": \"upgrade\",\n  \"Port\": -81697983,\n  \"ProxyDeploymentConfig\": {\n   \"AdditionalVMNetworks\": [\n    {\n     \"Fqdn\": \"non\",\n     \"Gateway\": \"ullamco exercitation id irure qui\",\n     \"IPProtocol\": \"IPv4\",\n     \"InterfaceName\": \"voluptate\",\n     \"IpAddress\": \"laborum aliqua\",\n     \"MacAddress\": \"irure tempor\",\n     \"MultiVlanEnabled\": true,\n     \"NetMask\": \"in velit pariatur\",\n     \"NetworkMoref\": \"nisi\",\n     \"Vlans\": [\n      {\n       \"Gateway\": \"anim veniam officia id\",\n       \"IpAddress\": \"Excepteur Ut esse\",\n       \"Mtu\": -10182718,\n       \"Netmask\": \"ipsum in quis\",\n       \"Routes\": [\n        {\n         \"Gateway\": \"in cillum\",\n         \"Netmask\": \"incididunt ipsum ex reprehenderit sed\",\n         \"Source\": \"Ut nostrud\",\n         \"Type\": \"Excepteur proident in\"\n        },\n        {\n         \"Gateway\": \"aliqua elit\",\n         \"Netmask\": \"par\",\n         \"Source\": \"labore\",\n         \"Type\": \"et ullamco officia irure\"\n        }\n       ],\n       \"VlanId\": 50048506\n      },\n      {\n       \"Gateway\": \"exercitation aliqua fugiat\",\n       \"IpAddress\": \"voluptate laboris in\",\n       \"Mtu\": -77893727,\n       \"Netmask\": \"exercitatio\",\n       \"Routes\": [\n        {\n         \"Gateway\": \"Lorem\",\n         \"Netmask\": \"Ut est id\",\n         \"Source\": \"reprehenderit nostrud et minim\",\n         \"Type\": \"nisi aliqua id\"\n        },\n        {\n         \"Gateway\": \"ut cupidatat commodo incididunt\",\n         \"Netmask\": \"dolor cupidatat\",\n         \"Source\": \"commodo Excepteur sint non labore\",\n         \"Type\": \"voluptate id Excepteur dolore occ\"\n        }\n       ],\n       \"VlanId\": -47644326\n      }\n     ]\n    },\n    {\n     \"Fqdn\": \"cupidatat adipisicing aliquip in\",\n     \"Gateway\": \"in velit\",\n     \"IPProtocol\": \"IPv4\",\n     \"InterfaceName\": \"aliqua proid\",\n     \"IpAddress\": \"occaecat aliquip do\",\n     \"MacAddress\": \"fugiat ea\",\n     \"MultiVlanEnabled\": true,\n     \"NetMask\": \"eu officia ad voluptate\",\n     \"NetworkMoref\": \"cupidatat dolore elit irure\",\n     \"Vlans\": [\n      {\n       \"Gateway\": \"magna quis consequat nostrud\",\n       \"IpAddress\": \"aute\",\n       \"Mtu\": -51977868,\n       \"Netmask\": \"officia sunt elit labore\",\n       \"Routes\": [\n        {\n         \"Gateway\": \"magna enim\",\n         \"Netmask\": \"est l\",\n         \"Source\": \"Duis cillum ut id officia\",\n         \"Type\": \"ut sint\"\n        },\n        {\n         \"Gateway\": \"Lorem aliqua ullamco aliquip Duis\",\n         \"Netmask\": \"eiusmod non irure\",\n         \"Source\": \"sint\",\n         \"Type\": \"elit magna id\"\n        }\n       ],\n       \"VlanId\": 28111220\n      },\n      {\n       \"Gateway\": \"aute non sunt\",\n       \"IpAddress\": \"veniam elit ut\",\n       \"Mtu\": -36377772,\n       \"Netmask\": \"in laborum Lorem\",\n       \"Routes\": [\n        {\n         \"Gateway\": \"ut dolor anim\",\n         \"Netmask\": \"nulla exercitation\",\n         \"Source\": \"pariatur in Lorem veniam\",\n         \"Type\": \"dolor reprehenderit dolor\"\n        },\n        {\n         \"Gateway\": \"nostrud voluptate\",\n         \"Netmask\": \"minim nostrud ullamco quis\",\n         \"Source\": \"voluptate anim\",\n         \"Type\": \"ex minim tempor\"\n        }\n       ],\n       \"VlanId\": 17088502\n      }\n     ]\n    }\n   ],\n   \"Dns\": \"dolor proident elit\",\n   \"Fqdn\": \"officia deserunt\",\n   \"Gateway\": \"proident amet dolore sint ad\",\n   \"IPProtocol\": \"IPv4\",\n   \"InterfaceName\": \"Exc\",\n   \"IpAddress\": \"nulla occaecat Duis\",\n   \"Location\": {\n    \"ClusterMoref\": \"sed\",\n    \"DatastoreMoref\": \"eiusmod anim\",\n    \"FolderMoref\": \"in adipisicing Excepteur minim\",\n    \"HostMoref\": \"elit id eu velit\",\n    \"NetworkMoref\": \"no\",\n    \"ResourcePoolMoref\": \"ex cillum laborum\"\n   },\n   \"MacAddress\": \"aute eiusmod do\",\n   \"MultiVlanEnabled\": true,\n   \"NTPServer\": \"fugiat culpa\",\n   \"NetMask\": \"reprehenderit ut Lorem veniam\",\n   \"NetworkMoref\": \"enim irure minim\",\n   \"OvaFile\": \"dolor ipsum velit\",\n   \"RootCredential\": {\n    \"ObjectId\": \"enim\",\n    \"Password\": \"occaecat sed\",\n    \"Type\": \"ObjectId\",\n    \"UserName\": \"mollit eiusmod\"\n   },\n   \"Timezone\": \"incididunt velit fugiat\",\n   \"VMName\": \"exercitation eu ex proid\",\n   \"Vlans\": [\n    {\n     \"Gateway\": \"d\",\n     \"IpAddress\": \"incididunt ex laboris aute\",\n     \"Mtu\": -49634533,\n     \"Netmask\": \"consec\",\n     \"Routes\": [\n      {\n       \"Gateway\": \"tempor dolor dolore\",\n       \"Netmask\": \"ut ea sint ex\",\n       \"Source\": \"eiusmo\",\n       \"Type\": \"labore ex Ut Duis\"\n      },\n      {\n       \"Gateway\": \"irure nisi commodo veniam culpa\",\n       \"Netmask\": \"occaecat qui in proident\",\n       \"Source\": \"laborum sed velit labore\",\n       \"Type\": \"esse officia est Ut magna\"\n      }\n     ],\n     \"VlanId\": -48416384\n    },\n    {\n     \"Gateway\": \"in quis\",\n     \"IpAddress\": \"Excepteur\",\n     \"Mtu\": -43416269,\n     \"Netmask\": \"in cupidatat sed do\",\n     \"Routes\": [\n      {\n       \"Gateway\": \"anim irure\",\n       \"Netmask\": \"irure exerci\",\n       \"Source\": \"qui adipisicing cillum\",\n       \"Type\": \"tempor velit in\"\n      },\n      {\n       \"Gateway\": \"dolore\",\n       \"Netmask\": \"ipsum commodo sunt laboris ullamco\",\n       \"Source\": \"ex ad dolor eiusmod tempor\",\n       \"Type\": \"Duis reprehenderit sed ea commodo\"\n      }\n     ],\n     \"VlanId\": 89505155\n    }\n   ]\n  },\n  \"ProxyType\": \"External\",\n  \"SkipRegistration\": false,\n  \"SupportedProtectionTypes\": [\n   \"Kubernetes\",\n   \"VM\"\n  ],\n  \"UpdateCredentials\": true,\n  \"VimServerRef\": {\n   \"ObjectId\": \"ea esse\",\n   \"Type\": \"ObjectId\",\n   \"Vcenter\": {\n    \"HostName\": \"in Ut non\",\n    \"HypervisorMode\": \"vSphere\",\n    \"TcpPort\": -12918063,\n    \"UserName\": \"do\",\n    \"UserPassword\": \"ut veniam aute\"\n   }\n  }\n },\n \"Id\": \"ex aliqua\",\n \"Status\": {\n  \"Aliases\": [\n   \"dolor ad ea tempor minim\",\n   \"in ut ullamco sed\"\n  ],\n  \"AllottedModes\": [\n   {\n    \"CapacityUnits\": -98770877,\n    \"ReservedBy\": {\n     \"SessionId\": \"nulla et\",\n     \"SessionType\": \"in reprehenderit\"\n    },\n    \"TotalControlSessions\": 56355273,\n    \"TotalTransportSessions\": 88629989\n   },\n   {\n    \"CapacityUnits\": 12538061,\n    \"ReservedBy\": {\n     \"SessionId\": \"in eiusmod Excepteur in amet\",\n     \"SessionType\": \"Duis la\"\n    },\n    \"TotalControlSessions\": -92288316,\n    \"TotalTransportSessions\": 54818020\n   }\n  ],\n  \"DaemonStatus\": [\n   {\n    \"DaemonName\": \"occaecat\",\n    \"Resources\": [\n     \"consequat officia labore minim\",\n     \"dolor\"\n    ],\n    \"Status\": \"Duis reprehenderit ut\"\n   },\n   {\n    \"DaemonName\": \"est Ut eu non\",\n    \"Resources\": [\n     \"ipsum ullamco ad culpa in\",\n     \"laboris dolor commodo\"\n    ],\n    \"Status\": \"ut\"\n   }\n  ],\n  \"DatacenterMoref\": \"in officia\",\n  \"Datastores\": [\n   \"sed\",\n   \"ut sed\"\n  ],\n  \"DeployedTime\": \"anim aliquip\",\n  \"HostedComputeRes\": {\n   \"MOref\": \"id ullamco nisi\",\n   \"Type\": \"dolor sit eu\"\n  },\n  \"LastCheckedTime\": \"consequat velit in\",\n  \"LastOperation\": {\n   \"Detail\": \"laboris in commodo ad fugiat\",\n   \"Operation\": \"version\",\n   \"Status\": \"Mounting\"\n  },\n  \"ModesAvailable\": {\n   \"CapacityUnits\": -637642,\n   \"Mode\": \"HotaddOnly\",\n   \"UseSsl\": true\n  },\n  \"Networks\": [\n   {\n    \"Connected\": false,\n    \"DeviceLabel\": \"reprehenderit\",\n    \"Dns\": {\n     \"DhcpEnabled\": true,\n     \"DomainName\": \"exercitation in consectetur occaecat id\",\n     \"HostName\": \"dolor Except\",\n     \"SearchDomains\": [\n      \"non tempor nisi aliquip\",\n      \"ea\"\n     ],\n     \"Servers\": [\n      \"ut reprehenderit\",\n      \"sint qui magna\"\n     ]\n    },\n    \"GatewayV4\": \"consectetur velit exercitation labore\",\n    \"GatewayV6\": \"laboris non in consequat sit\",\n    \"IpAddrV4\": {\n     \"Address\": \"cupidatat aliquip\",\n     \"IpCidr\": \"quis\",\n     \"NetMask\": \"aliquip eu\",\n     \"PrefixLength\": 98506142,\n     \"SubnetCidr\": \"conse\",\n     \"Version\": \"IPv4\"\n    },\n    \"IpAddrV6\": {\n     \"Address\": \"labore\",\n     \"IpCidr\": \"dolor Lorem\",\n     \"NetMask\": \"labori\",\n     \"PrefixLength\": 7850890,\n     \"SubnetCidr\": \"veniam dolor\",\n     \"Version\": \"IPv4\"\n    },\n    \"MAC\": \"commodo Lorem minim cupidatat laborum\",\n    \"VirtualDeviceId\": 64607708,\n    \"VirtualNetworkName\": \"ut\"\n   },\n   {\n    \"Connected\": false,\n    \"DeviceLabel\": \"ut nostrud id quis\",\n    \"Dns\": {\n     \"DhcpEnabled\": true,\n     \"DomainName\": \"elit\",\n     \"HostName\": \"nisi irure sit\",\n     \"SearchDomains\": [\n      \"enim\",\n      \"officia id non dolore et\"\n     ],\n     \"Servers\": [\n      \"sint pariatur deserunt aute\",\n      \"fugiat magna\"\n     ]\n    },\n    \"GatewayV4\": \"dolore\",\n    \"GatewayV6\": \"occaecat minim ea\",\n    \"IpAddrV4\": {\n     \"Address\": \"incididunt\",\n     \"IpCidr\": \"ullamco nulla\",\n     \"NetMask\": \"pariatur ea occaecat ipsum nisi\",\n     \"PrefixLength\": -94611769,\n     \"SubnetCidr\": \"nos\",\n     \"Version\": \"IPv6\"\n    },\n    \"IpAddrV6\": {\n     \"Address\": \"do Excepteur ad elit\",\n     \"IpCidr\": \"minim nostrud fugiat nulla\",\n     \"NetMask\": \"tempor sunt\",\n     \"PrefixLength\": 87574354,\n     \"SubnetCidr\": \"proident esse\",\n     \"Version\": \"IPv4\"\n    },\n    \"MAC\": \"occaecat et do consequat\",\n    \"VirtualDeviceId\": 92931755,\n    \"VirtualNetworkName\": \"consequat\"\n   }\n  ],\n  \"PowerState\": \"Suspended\",\n  \"ProxyDeployed\": true,\n  \"ProxyRegistered\": false,\n  \"ProxyState\": \"READY\",\n  \"ProxyStatus\": {\n   \"Detail\": \"ea non mollit\",\n   \"Status\": \"Ready\"\n  },\n  \"RegisteredTime\": \"exercitation ad commodo\",\n  \"Thumbprint\": \"u\",\n  \"Uuid\": \"consequat est nulla labore\",\n  \"Version\": \"sint\",\n  \"VlanStatus\": [\n   {\n    \"Detail\": \"in labore in in\",\n    \"IpAddress\": \"occaecat anim ex exercitation\",\n    \"Status\": \"CONNECTED\",\n    \"VlanId\": -67427392\n   },\n   {\n    \"Detail\": \"ipsum dolor\",\n    \"IpAddress\": \"est in ut\",\n    \"Status\": \"CONNECTED\",\n    \"VlanId\": 3627378\n   }\n  ]\n }\n}"
														},
														{
															"name": "The requestor is not allowed to perform this operation.",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"description": {
																			"content": "Added as a part of security scheme: apikey",
																			"type": "text/plain"
																		},
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/protection-engines/:id/proxies/:proxyId/redeploy",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"protection-engines",
																		":id",
																		"proxies",
																		":proxyId",
																		"redeploy"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "proxyId"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
														},
														{
															"name": "The requested resource was not found.",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"description": {
																			"content": "Added as a part of security scheme: apikey",
																			"type": "text/plain"
																		},
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/protection-engines/:id/proxies/:proxyId/redeploy",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"protection-engines",
																		":id",
																		"proxies",
																		":proxyId",
																		"redeploy"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "proxyId"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
														}
													]
												}
											],
											"protocolProfileBehavior": {},
											"_postman_isSubFolder": true
										},
										{
											"name": "Get all protection engine proxies.",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": true,
															"type": "boolean"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/v2/protection-engines/:id/proxies?page=1&pageSize=100&filter=<string>&orderby=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"protection-engines",
														":id",
														"proxies"
													],
													"query": [
														{
															"key": "page",
															"value": "1",
															"description": "The page number to be returned. Must not be less than 1. See Tutorials - Page the List Result."
														},
														{
															"key": "pageSize",
															"value": "100",
															"description": "The number of resources to be returned. Must not be less than 1. See Tutorials - Page the List Result."
														},
														{
															"key": "filter",
															"value": "<string>",
															"description": "The filter string that is expressed using PowerProtect Data Manager filter syntax. See Tutorials - Filter the List Result."
														},
														{
															"key": "orderby",
															"value": "<string>",
															"description": "The attributes/fields to be sorted by. This parameter can combine with sort direction \"ASC\" or \"DESC\". Default direction is ASC. See Tutorials - Sort the List Result."
														}
													],
													"variable": [
														{
															"id": "a67f510b-eee7-4423-8093-5e7193cceb74",
															"key": "id",
															"value": "<string>",
															"type": "string",
															"description": "(Required) The ID of the VPE protection engine."
														}
													]
												},
												"description": "Retrieves a list of VPE protection engine proxies for the protection engine with the specified ID. The protection engine with the specified ID must already be registered with PowerProtect Data Manager.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
											},
											"response": [
												{
													"name": "The requestor is not allowed to perform this operation.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: apikey",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/protection-engines/:id/proxies?page=1&pageSize=100&filter=<string>&orderby=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"protection-engines",
																":id",
																"proxies"
															],
															"query": [
																{
																	"key": "page",
																	"value": "1"
																},
																{
																	"key": "pageSize",
																	"value": "100"
																},
																{
																	"key": "filter",
																	"value": "<string>"
																},
																{
																	"key": "orderby",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
												},
												{
													"name": "The request is not valid.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: apikey",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/protection-engines/:id/proxies?page=1&pageSize=100&filter=<string>&orderby=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"protection-engines",
																":id",
																"proxies"
															],
															"query": [
																{
																	"key": "page",
																	"value": "1"
																},
																{
																	"key": "pageSize",
																	"value": "100"
																},
																{
																	"key": "filter",
																	"value": "<string>"
																},
																{
																	"key": "orderby",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
												},
												{
													"name": "The requestor is not authorized to perform this operation.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: apikey",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/protection-engines/:id/proxies?page=1&pageSize=100&filter=<string>&orderby=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"protection-engines",
																":id",
																"proxies"
															],
															"query": [
																{
																	"key": "page",
																	"value": "1"
																},
																{
																	"key": "pageSize",
																	"value": "100"
																},
																{
																	"key": "filter",
																	"value": "<string>"
																},
																{
																	"key": "orderby",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
												},
												{
													"name": "An unexpected error prevented the server from fulfilling your request.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: apikey",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/protection-engines/:id/proxies?page=1&pageSize=100&filter=<string>&orderby=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"protection-engines",
																":id",
																"proxies"
															],
															"query": [
																{
																	"key": "page",
																	"value": "1"
																},
																{
																	"key": "pageSize",
																	"value": "100"
																},
																{
																	"key": "filter",
																	"value": "<string>"
																},
																{
																	"key": "orderby",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
												},
												{
													"name": "Successfully returned available proxies.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: apikey",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/protection-engines/:id/proxies?page=1&pageSize=100&filter=<string>&orderby=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"protection-engines",
																":id",
																"proxies"
															],
															"query": [
																{
																	"key": "page",
																	"value": "1"
																},
																{
																	"key": "pageSize",
																	"value": "100"
																},
																{
																	"key": "filter",
																	"value": "<string>"
																},
																{
																	"key": "orderby",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"content\": [\n  {\n   \"Config\": {\n    \"AdvancedOptions\": {\n     \"CapacityPercentage\": 40383230,\n     \"Datastores\": [\n      \"labore minim\",\n      \"veniam dolor ea\"\n     ],\n     \"TransportSessions\": {\n      \"Mode\": \"None\",\n      \"UseSsl\": false,\n      \"UserDefined\": false\n     }\n    },\n    \"ApplicationData\": {},\n    \"AutoUpdateConfig\": true,\n    \"Credential\": {\n     \"ObjectId\": \"dolor ullamco qui sed culpa\",\n     \"Password\": \"eu reprehenderit\",\n     \"Type\": \"Object\",\n     \"UserName\": \"occaecat dolor mollit qui\"\n    },\n    \"DeployProxy\": false,\n    \"Disabled\": false,\n    \"HealthCheckInterval\": 64254248,\n    \"HostName\": \"qui esse sunt dolore\",\n    \"InstanceUuid\": \"ex\",\n    \"MORef\": \"proident quis deserunt\",\n    \"Operation\": \"redeploy\",\n    \"Port\": -83595947,\n    \"ProxyDeploymentConfig\": {\n     \"AdditionalVMNetworks\": [\n      {\n       \"Fqdn\": \"in aliquip do c\",\n       \"Gateway\": \"eiusmod ea pariatur\",\n       \"IPProtocol\": \"IPv4\",\n       \"InterfaceName\": \"sit\",\n       \"IpAddress\": \"fugiat\",\n       \"MacAddress\": \"mollit est sint\",\n       \"MultiVlanEnabled\": true,\n       \"NetMask\": \"aliquip nulla\",\n       \"NetworkMoref\": \"nisi dolore occaecat esse sed\",\n       \"Vlans\": [\n        {\n         \"Gateway\": \"ad veniam nisi\",\n         \"IpAddress\": \"fugiat anim eu Excepteur\",\n         \"Mtu\": -51983930,\n         \"Netmask\": \"dolore in in irure\",\n         \"Routes\": [\n          {\n           \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          {\n           \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n         ],\n         \"VlanId\": 80827780\n        },\n        {\n         \"Gateway\": \"commodo occaecat id Lo\",\n         \"IpAddress\": \"esse enim\",\n         \"Mtu\": 15243266,\n         \"Netmask\": \"nisi id \",\n         \"Routes\": [\n          {\n           \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          {\n           \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n         ],\n         \"VlanId\": -10760250\n        }\n       ]\n      },\n      {\n       \"Fqdn\": \"adipisicing ullamco aliqua Ut dolore\",\n       \"Gateway\": \"est proident nulla\",\n       \"IPProtocol\": \"IPv4\",\n       \"InterfaceName\": \"laboris ex\",\n       \"IpAddress\": \"amet\",\n       \"MacAddress\": \"esse ut cillum nulla\",\n       \"MultiVlanEnabled\": true,\n       \"NetMask\": \"laborum aliquip et nulla\",\n       \"NetworkMoref\": \"Excepteur velit\",\n       \"Vlans\": [\n        {\n         \"Gateway\": \"Excepteur aliquip consectetur ea\",\n         \"IpAddress\": \"proident reprehenderit deserunt Lorem\",\n         \"Mtu\": -7742957,\n         \"Netmask\": \"dolore\",\n         \"Routes\": [\n          {\n           \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          {\n           \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n         ],\n         \"VlanId\": -82276610\n        },\n        {\n         \"Gateway\": \"ad enim commodo in\",\n         \"IpAddress\": \"quis velit commodo est\",\n         \"Mtu\": 43543462,\n         \"Netmask\": \"incididunt culpa qu\",\n         \"Routes\": [\n          {\n           \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          {\n           \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n         ],\n         \"VlanId\": 55865023\n        }\n       ]\n      }\n     ],\n     \"Dns\": \"eu dolor laborum adipisicing\",\n     \"Fqdn\": \"ullamco deserunt\",\n     \"Gateway\": \"nostrud nisi\",\n     \"IPProtocol\": \"IPv4\",\n     \"InterfaceName\": \"cillum aliquip dolore\",\n     \"IpAddress\": \"nostrud laboris irure\",\n     \"Location\": {\n      \"ClusterMoref\": \"velit est enim\",\n      \"DatastoreMoref\": \"laborum voluptate ci\",\n      \"FolderMoref\": \"ex deserunt\",\n      \"HostMoref\": \"Lorem consequat magna voluptate adipisicing\",\n      \"NetworkMoref\": \"sit laboris\",\n      \"ResourcePoolMoref\": \"consectetur voluptate aliquip ea\"\n     },\n     \"MacAddress\": \"Ut\",\n     \"MultiVlanEnabled\": false,\n     \"NTPServer\": \"aute esse\",\n     \"NetMask\": \"Duis Lorem consequat\",\n     \"NetworkMoref\": \"veniam voluptate\",\n     \"OvaFile\": \"ad enim\",\n     \"RootCredential\": {\n      \"ObjectId\": \"sit in velit nostrud\",\n      \"Password\": \"enim ea Ut in aliquip\",\n      \"Type\": \"ObjectId\",\n      \"UserName\": \"ex occaecat ad\"\n     },\n     \"Timezone\": \"Lorem\",\n     \"VMName\": \"eu do velit\",\n     \"Vlans\": [\n      {\n       \"Gateway\": \"culpa in ul\",\n       \"IpAddress\": \"aute enim fugiat labore\",\n       \"Mtu\": -67623316,\n       \"Netmask\": \"et Ut sint ea\",\n       \"Routes\": [\n        {\n         \"Gateway\": \"esse nostrud dolor magna\",\n         \"Netmask\": \"aliqua in\",\n         \"Source\": \"sed con\",\n         \"Type\": \"fugiat commodo consectetur\"\n        },\n        {\n         \"Gateway\": \"ullam\",\n         \"Netmask\": \"ut culpa\",\n         \"Source\": \"est magna eiusmod\",\n         \"Type\": \"velit anim adipisicing sit ipsum\"\n        }\n       ],\n       \"VlanId\": 61348603\n      },\n      {\n       \"Gateway\": \"cillum in\",\n       \"IpAddress\": \"in nulla incididunt\",\n       \"Mtu\": 56472648,\n       \"Netmask\": \"tem\",\n       \"Routes\": [\n        {\n         \"Gateway\": \"aute\",\n         \"Netmask\": \"minim\",\n         \"Source\": \"culpa ut Ut adipisicing\",\n         \"Type\": \"ipsum enim commodo\"\n        },\n        {\n         \"Gateway\": \"Duis\",\n         \"Netmask\": \"nisi sit ut cupidatat magna\",\n         \"Source\": \"sunt\",\n         \"Type\": \"esse dolore\"\n        }\n       ],\n       \"VlanId\": -81904711\n      }\n     ]\n    },\n    \"ProxyType\": \"External\",\n    \"SkipRegistration\": true,\n    \"SupportedProtectionTypes\": [\n     \"VM\",\n     \"VM\"\n    ],\n    \"UpdateCredentials\": true,\n    \"VimServerRef\": {\n     \"ObjectId\": \"nostrud Lorem\",\n     \"Type\": \"ObjectId\",\n     \"Vcenter\": {\n      \"HostName\": \"consequat est\",\n      \"HypervisorMode\": \"VMC\",\n      \"TcpPort\": 33539301,\n      \"UserName\": \"sunt qui eiusmod non ullamco\",\n      \"UserPassword\": \"sint deserunt ex elit\"\n     }\n    }\n   },\n   \"Id\": \"reprehenderit \",\n   \"Status\": {\n    \"Aliases\": [\n     \"ullamco ut dolore non\",\n     \"enim cupidatat ut anim\"\n    ],\n    \"AllottedModes\": [\n     {\n      \"CapacityUnits\": -65544397,\n      \"ReservedBy\": {\n       \"SessionId\": \"qui elit eu nisi\",\n       \"SessionType\": \"adipisicing \"\n      },\n      \"TotalControlSessions\": -3769909,\n      \"TotalTransportSessions\": 2903028\n     },\n     {\n      \"CapacityUnits\": -89375550,\n      \"ReservedBy\": {\n       \"SessionId\": \"nostrud proident\",\n       \"SessionType\": \"consequat i\"\n      },\n      \"TotalControlSessions\": 1934266,\n      \"TotalTransportSessions\": -21896370\n     }\n    ],\n    \"DaemonStatus\": [\n     {\n      \"DaemonName\": \"eu ipsum qui aute\",\n      \"Resources\": [\n       \"labore irure sed deserunt\",\n       \"incididunt amet\"\n      ],\n      \"Status\": \"Excepteur\"\n     },\n     {\n      \"DaemonName\": \"aute et\",\n      \"Resources\": [\n       \"dolor irure\",\n       \"Excepteur Ut dolor\"\n      ],\n      \"Status\": \"eiusmod dolore sed\"\n     }\n    ],\n    \"DatacenterMoref\": \"aliqua c\",\n    \"Datastores\": [\n     \"laborum culpa magna qu\",\n     \"tempor exercita\"\n    ],\n    \"DeployedTime\": \"qui Excepteur deserunt ut\",\n    \"HostedComputeRes\": {\n     \"MOref\": \"officia anim labore\",\n     \"Type\": \"labore est mollit Lorem\"\n    },\n    \"LastCheckedTime\": \"dolore aliqua sit mo\",\n    \"LastOperation\": {\n     \"Detail\": \"proident laborum consectetur velit\",\n     \"Operation\": \"backup\",\n     \"Status\": \"StoppingFailed\"\n    },\n    \"ModesAvailable\": {\n     \"CapacityUnits\": 33395587,\n     \"Mode\": \"HotaddPreferred\",\n     \"UseSsl\": false\n    },\n    \"Networks\": [\n     {\n      \"Connected\": false,\n      \"DeviceLabel\": \"qui non minim consequat\",\n      \"Dns\": {\n       \"DhcpEnabled\": true,\n       \"DomainName\": \"id ut nulla dolor\",\n       \"HostName\": \"dolore incididunt\",\n       \"SearchDomains\": [\n        \"cupidatat\",\n        \"sit\"\n       ],\n       \"Servers\": [\n        \"eu culpa dolor pariatur\",\n        \"commodo velit amet in laborum\"\n       ]\n      },\n      \"GatewayV4\": \"dolore ipsum sit\",\n      \"GatewayV6\": \"voluptate eiusmod\",\n      \"IpAddrV4\": {\n       \"Address\": \"laboris reprehenderit est\",\n       \"IpCidr\": \"laboris aliquip cillum Lorem\",\n       \"NetMask\": \"nulla quis\",\n       \"PrefixLength\": 94741587,\n       \"SubnetCidr\": \"qui eiusmod aliq\",\n       \"Version\": \"IPv4\"\n      },\n      \"IpAddrV6\": {\n       \"Address\": \"Duis tempor nostrud\",\n       \"IpCidr\": \"cupidatat ad\",\n       \"NetMask\": \"aute\",\n       \"PrefixLength\": -11582795,\n       \"SubnetCidr\": \"fugiat elit est nul\",\n       \"Version\": \"IPv6\"\n      },\n      \"MAC\": \"officia tempor ut ullamco\",\n      \"VirtualDeviceId\": 73710455,\n      \"VirtualNetworkName\": \"est anim \"\n     },\n     {\n      \"Connected\": false,\n      \"DeviceLabel\": \"consectetur t\",\n      \"Dns\": {\n       \"DhcpEnabled\": true,\n       \"DomainName\": \"commodo ea\",\n       \"HostName\": \"ullamco voluptate\",\n       \"SearchDomains\": [\n        \"aliquip deserunt aute\",\n        \"eu aliquip in ea\"\n       ],\n       \"Servers\": [\n        \"laboris anim in ipsum\",\n        \"ipsum enim ut\"\n       ]\n      },\n      \"GatewayV4\": \"quis non\",\n      \"GatewayV6\": \"non Excepteur\",\n      \"IpAddrV4\": {\n       \"Address\": \"voluptate aliquip\",\n       \"IpCidr\": \"mollit amet in nostrud\",\n       \"NetMask\": \"elit sunt irure\",\n       \"PrefixLength\": 32700451,\n       \"SubnetCidr\": \"Ut dolore amet Excepteur\",\n       \"Version\": \"IPv6\"\n      },\n      \"IpAddrV6\": {\n       \"Address\": \"irure\",\n       \"IpCidr\": \"Ut deserunt nostrud ullamco\",\n       \"NetMask\": \"eiusmod aliquip aliqua\",\n       \"PrefixLength\": 20922087,\n       \"SubnetCidr\": \"\",\n       \"Version\": \"IPv4\"\n      },\n      \"MAC\": \"esse ipsum\",\n      \"VirtualDeviceId\": 40445536,\n      \"VirtualNetworkName\": \"enim occaecat ad sunt\"\n     }\n    ],\n    \"PowerState\": \"On\",\n    \"ProxyDeployed\": true,\n    \"ProxyRegistered\": true,\n    \"ProxyState\": \"READY\",\n    \"ProxyStatus\": {\n     \"Detail\": \"ex elit anim\",\n     \"Status\": \"DeletePending\"\n    },\n    \"RegisteredTime\": \"eiusmod velit\",\n    \"Thumbprint\": \"ad aliqu\",\n    \"Uuid\": \"nulla Duis elit\",\n    \"Version\": \"ea in sunt\",\n    \"VlanStatus\": [\n     {\n      \"Detail\": \"in sint se\",\n      \"IpAddress\": \"nostrud commodo ad Lorem\",\n      \"Status\": \"FAILURE\",\n      \"VlanId\": 26370913\n     },\n     {\n      \"Detail\": \"nulla consectetur occaecat ex\",\n      \"IpAddress\": \"anim\",\n      \"Status\": \"FAILURE\",\n      \"VlanId\": -56107632\n     }\n    ]\n   }\n  },\n  {\n   \"Config\": {\n    \"AdvancedOptions\": {\n     \"CapacityPercentage\": 63103068,\n     \"Datastores\": [\n      \"reprehenderit proident\",\n      \"exercitation minim\"\n     ],\n     \"TransportSessions\": {\n      \"Mode\": \"HotaddOnly\",\n      \"UseSsl\": true,\n      \"UserDefined\": true\n     }\n    },\n    \"ApplicationData\": {},\n    \"AutoUpdateConfig\": true,\n    \"Credential\": {\n     \"ObjectId\": \"voluptate proident ut\",\n     \"Password\": \"sed pariatur officia sint\",\n     \"Type\": \"ObjectId\",\n     \"UserName\": \"ut\"\n    },\n    \"DeployProxy\": true,\n    \"Disabled\": false,\n    \"HealthCheckInterval\": -59316570,\n    \"HostName\": \"occaecat ullamco ex\",\n    \"InstanceUuid\": \"exercitation ut irure\",\n    \"MORef\": \"proident dolore dolor\",\n    \"Operation\": \"backup\",\n    \"Port\": 95287378,\n    \"ProxyDeploymentConfig\": {\n     \"AdditionalVMNetworks\": [\n      {\n       \"Fqdn\": \"ipsum\",\n       \"Gateway\": \"Ut voluptate occaecat reprehen\",\n       \"IPProtocol\": \"IPv4\",\n       \"InterfaceName\": \"Excepteur non pariatur\",\n       \"IpAddress\": \"ipsum ut minim\",\n       \"MacAddress\": \"nostrud\",\n       \"MultiVlanEnabled\": true,\n       \"NetMask\": \"velit enim\",\n       \"NetworkMoref\": \"elit fugiat consectetur dolore\",\n       \"Vlans\": [\n        {\n         \"Gateway\": \"sit veniam in culpa eu\",\n         \"IpAddress\": \"consectetur ex culpa ipsum\",\n         \"Mtu\": 18474453,\n         \"Netmask\": \"quis ut incididunt\",\n         \"Routes\": [\n          {\n           \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          {\n           \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n         ],\n         \"VlanId\": 13915506\n        },\n        {\n         \"Gateway\": \"nisi amet dolore\",\n         \"IpAddress\": \"nulla in reprehenderit sed\",\n         \"Mtu\": -88506631,\n         \"Netmask\": \"non\",\n         \"Routes\": [\n          {\n           \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          {\n           \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n         ],\n         \"VlanId\": 96763003\n        }\n       ]\n      },\n      {\n       \"Fqdn\": \"aliqua minim\",\n       \"Gateway\": \"adipisicing reprehende\",\n       \"IPProtocol\": \"IPv4\",\n       \"InterfaceName\": \"minim \",\n       \"IpAddress\": \"ex i\",\n       \"MacAddress\": \"officia in\",\n       \"MultiVlanEnabled\": true,\n       \"NetMask\": \"ex sunt labore adip\",\n       \"NetworkMoref\": \"adipisicing incididunt cillum fugiat\",\n       \"Vlans\": [\n        {\n         \"Gateway\": \"non ea enim Duis laboris\",\n         \"IpAddress\": \"et occaecat irure esse\",\n         \"Mtu\": -31045350,\n         \"Netmask\": \"minim aliqua\",\n         \"Routes\": [\n          {\n           \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          {\n           \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n         ],\n         \"VlanId\": 8847687\n        },\n        {\n         \"Gateway\": \"dolore aliquip nostrud\",\n         \"IpAddress\": \"qui commodo\",\n         \"Mtu\": 86506589,\n         \"Netmask\": \"ea amet voluptate \",\n         \"Routes\": [\n          {\n           \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          {\n           \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n         ],\n         \"VlanId\": -15135708\n        }\n       ]\n      }\n     ],\n     \"Dns\": \"minim magna Ut\",\n     \"Fqdn\": \"amet\",\n     \"Gateway\": \"in sed labore dolore reprehenderit\",\n     \"IPProtocol\": \"IPv4\",\n     \"InterfaceName\": \"non ad laboris aliquip amet\",\n     \"IpAddress\": \"elit dolore adipisicing\",\n     \"Location\": {\n      \"ClusterMoref\": \"exercitation\",\n      \"DatastoreMoref\": \"dolore pariatur anim culpa\",\n      \"FolderMoref\": \"nisi temp\",\n      \"HostMoref\": \"dolore n\",\n      \"NetworkMoref\": \"culpa reprehenderit ut\",\n      \"ResourcePoolMoref\": \"ut exercitation\"\n     },\n     \"MacAddress\": \"minim exercitation magna\",\n     \"MultiVlanEnabled\": true,\n     \"NTPServer\": \"magna\",\n     \"NetMask\": \"ex fugiat eu do\",\n     \"NetworkMoref\": \"id\",\n     \"OvaFile\": \"nostrud ea\",\n     \"RootCredential\": {\n      \"ObjectId\": \"nulla proident\",\n      \"Password\": \"eu sunt\",\n      \"Type\": \"ObjectId\",\n      \"UserName\": \"mollit dolor\"\n     },\n     \"Timezone\": \"voluptate irure laborum\",\n     \"VMName\": \"incididunt enim aliqua c\",\n     \"Vlans\": [\n      {\n       \"Gateway\": \"ut Ut sit sint\",\n       \"IpAddress\": \"cupidatat do est\",\n       \"Mtu\": 36942927,\n       \"Netmask\": \"tempor eiusmod sit\",\n       \"Routes\": [\n        {\n         \"Gateway\": \"eu magna\",\n         \"Netmask\": \"minim\",\n         \"Source\": \"esse aute minim ex\",\n         \"Type\": \"eu ut amet\"\n        },\n        {\n         \"Gateway\": \"in labore consequat ea\",\n         \"Netmask\": \"ut in cillum\",\n         \"Source\": \"consequat et voluptate dolore\",\n         \"Type\": \"fugiat velit\"\n        }\n       ],\n       \"VlanId\": -24164399\n      },\n      {\n       \"Gateway\": \"ulla\",\n       \"IpAddress\": \"fugiat\",\n       \"Mtu\": 34683524,\n       \"Netmask\": \"nulla deserunt\",\n       \"Routes\": [\n        {\n         \"Gateway\": \"nulla id\",\n         \"Netmask\": \"Excepteur veniam\",\n         \"Source\": \"est et Ut\",\n         \"Type\": \"velit\"\n        },\n        {\n         \"Gateway\": \"laborum\",\n         \"Netmask\": \"amet esse irure veniam\",\n         \"Source\": \"cillum Ut dolore\",\n         \"Type\": \"ad non aliqua officia\"\n        }\n       ],\n       \"VlanId\": 28404875\n      }\n     ]\n    },\n    \"ProxyType\": \"Internal\",\n    \"SkipRegistration\": false,\n    \"SupportedProtectionTypes\": [\n     \"Kubernetes\",\n     \"Kubernetes\"\n    ],\n    \"UpdateCredentials\": true,\n    \"VimServerRef\": {\n     \"ObjectId\": \"commodo\",\n     \"Type\": \"ObjectId\",\n     \"Vcenter\": {\n      \"HostName\": \"qui\",\n      \"HypervisorMode\": \"vSphere\",\n      \"TcpPort\": 86203063,\n      \"UserName\": \"voluptate irure veniam\",\n      \"UserPassword\": \"in irure ut\"\n     }\n    }\n   },\n   \"Id\": \"sit ut\",\n   \"Status\": {\n    \"Aliases\": [\n     \"enim voluptate exercitation Duis\",\n     \"culpa magna\"\n    ],\n    \"AllottedModes\": [\n     {\n      \"CapacityUnits\": 9890971,\n      \"ReservedBy\": {\n       \"SessionId\": \"culpa minim do id aute\",\n       \"SessionType\": \"ex vel\"\n      },\n      \"TotalControlSessions\": -99977572,\n      \"TotalTransportSessions\": -25626133\n     },\n     {\n      \"CapacityUnits\": 91337279,\n      \"ReservedBy\": {\n       \"SessionId\": \"anim do ullamco\",\n       \"SessionType\": \"laboris esse in ut\"\n      },\n      \"TotalControlSessions\": 41619943,\n      \"TotalTransportSessions\": -15148227\n     }\n    ],\n    \"DaemonStatus\": [\n     {\n      \"DaemonName\": \"proident\",\n      \"Resources\": [\n       \"pariatur nulla commodo irure dolor\",\n       \"irure adipisicing nulla\"\n      ],\n      \"Status\": \"Excepteur ea in dolor\"\n     },\n     {\n      \"DaemonName\": \"in magna voluptate ea adipisicing\",\n      \"Resources\": [\n       \"reprehenderit proident in n\",\n       \"do cillum sunt\"\n      ],\n      \"Status\": \"esse voluptate\"\n     }\n    ],\n    \"DatacenterMoref\": \"ex anim laboris Lorem\",\n    \"Datastores\": [\n     \"do in ex non tempor\",\n     \"et consequat aliqua officia\"\n    ],\n    \"DeployedTime\": \"enim eiusmod dolore\",\n    \"HostedComputeRes\": {\n     \"MOref\": \"Lorem aliquip eiusmod\",\n     \"Type\": \"veniam minim\"\n    },\n    \"LastCheckedTime\": \"dolore consectetur cillum ut\",\n    \"LastOperation\": {\n     \"Detail\": \"sunt esse laborum pariatur\",\n     \"Operation\": \"redeploy\",\n     \"Status\": \"Mounted\"\n    },\n    \"ModesAvailable\": {\n     \"CapacityUnits\": 99481245,\n     \"Mode\": \"HotaddPreferred\",\n     \"UseSsl\": false\n    },\n    \"Networks\": [\n     {\n      \"Connected\": true,\n      \"DeviceLabel\": \"consequat eiusmod\",\n      \"Dns\": {\n       \"DhcpEnabled\": false,\n       \"DomainName\": \"culpa eu\",\n       \"HostName\": \"ex pariatur\",\n       \"SearchDomains\": [\n        \"dolore ullamco cupidatat aute\",\n        \"velit occaecat consectetur\"\n       ],\n       \"Servers\": [\n        \"cupidata\",\n        \"sint ullamco enim magna consequat\"\n       ]\n      },\n      \"GatewayV4\": \"mollit culpa p\",\n      \"GatewayV6\": \"dolor sit\",\n      \"IpAddrV4\": {\n       \"Address\": \"minim ad commodo\",\n       \"IpCidr\": \"Exce\",\n       \"NetMask\": \"aliqua qui dolor sunt\",\n       \"PrefixLength\": -20732925,\n       \"SubnetCidr\": \"reprehenderit ut officia\",\n       \"Version\": \"IPv4\"\n      },\n      \"IpAddrV6\": {\n       \"Address\": \"dolor\",\n       \"IpCidr\": \"ut\",\n       \"NetMask\": \"ea aute no\",\n       \"PrefixLength\": -75999925,\n       \"SubnetCidr\": \"ullamco tempor et culpa\",\n       \"Version\": \"IPv4\"\n      },\n      \"MAC\": \"dolor proident\",\n      \"VirtualDeviceId\": -96326002,\n      \"VirtualNetworkName\": \"anim nisi\"\n     },\n     {\n      \"Connected\": true,\n      \"DeviceLabel\": \"nulla in reprehenderit\",\n      \"Dns\": {\n       \"DhcpEnabled\": true,\n       \"DomainName\": \"labore elit non\",\n       \"HostName\": \"voluptate ut\",\n       \"SearchDomains\": [\n        \"enim cillum et sunt tempor\",\n        \"cillum ulla\"\n       ],\n       \"Servers\": [\n        \"sed minim\",\n        \"sit aliquip in ea ad\"\n       ]\n      },\n      \"GatewayV4\": \"enim incididunt elit\",\n      \"GatewayV6\": \"enim veniam adipisicing c\",\n      \"IpAddrV4\": {\n       \"Address\": \"sunt minim reprehenderit\",\n       \"IpCidr\": \"laboris ea ipsum in\",\n       \"NetMask\": \"ullamco Lorem\",\n       \"PrefixLength\": -94223270,\n       \"SubnetCidr\": \"Excepteur aliqua\",\n       \"Version\": \"IPv6\"\n      },\n      \"IpAddrV6\": {\n       \"Address\": \"irure nostrud\",\n       \"IpCidr\": \"ipsum aliqua\",\n       \"NetMask\": \"ad ex cupidatat sint\",\n       \"PrefixLength\": 15306118,\n       \"SubnetCidr\": \"ut proident pariatur\",\n       \"Version\": \"IPv6\"\n      },\n      \"MAC\": \"nulla Lorem\",\n      \"VirtualDeviceId\": 99365354,\n      \"VirtualNetworkName\": \"sed consequat cillum\"\n     }\n    ],\n    \"PowerState\": \"Suspended\",\n    \"ProxyDeployed\": true,\n    \"ProxyRegistered\": false,\n    \"ProxyState\": \"RESET\",\n    \"ProxyStatus\": {\n     \"Detail\": \"pariatur laborum\",\n     \"Status\": \"Deployed\"\n    },\n    \"RegisteredTime\": \"ipsum aute officia Ut elit\",\n    \"Thumbprint\": \"laborum tempor\",\n    \"Uuid\": \"Excepteur fugiat qui quis dolore\",\n    \"Version\": \"enim ea\",\n    \"VlanStatus\": [\n     {\n      \"Detail\": \"c\",\n      \"IpAddress\": \"enim reprehenderit\",\n      \"Status\": \"FAILURE\",\n      \"VlanId\": -49517234\n     },\n     {\n      \"Detail\": \"sint magna v\",\n      \"IpAddress\": \"Excepteur ipsu\",\n      \"Status\": \"CONNECTED\",\n      \"VlanId\": 71703538\n     }\n    ]\n   }\n  }\n ],\n \"page\": {\n  \"number\": -68983750,\n  \"queryState\": \"voluptate\",\n  \"size\": 58092949,\n  \"totalElements\": 18603586,\n  \"totalPages\": -2124389\n }\n}"
												}
											]
										},
										{
											"name": "Add protection engine proxy.",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": true,
															"type": "boolean"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"Config\": {\n        \"AdvancedOptions\": {\n            \"CapacityPercentage\": \"<integer>\",\n            \"Datastores\": [\n                \"<string>\",\n                \"<string>\"\n            ],\n            \"TransportSessions\": {\n                \"Mode\": \"<string>\",\n                \"UseSsl\": \"<boolean>\",\n                \"UserDefined\": \"<boolean>\"\n            }\n        },\n        \"ApplicationData\": \"<object>\",\n        \"AutoUpdateConfig\": \"<boolean>\",\n        \"Credential\": {\n            \"ObjectId\": \"<string>\",\n            \"Password\": \"<string>\",\n            \"Type\": \"<string>\",\n            \"UserName\": \"<string>\"\n        },\n        \"DeployProxy\": \"<boolean>\",\n        \"Disabled\": \"<boolean>\",\n        \"HealthCheckInterval\": \"<integer>\",\n        \"HostName\": \"<string>\",\n        \"InstanceUuid\": \"<string>\",\n        \"MORef\": \"<string>\",\n        \"Operation\": \"<string>\",\n        \"Port\": \"<integer>\",\n        \"ProxyDeploymentConfig\": {\n            \"AdditionalVMNetworks\": [\n                {\n                    \"Fqdn\": \"<string>\",\n                    \"Gateway\": \"<string>\",\n                    \"IPProtocol\": \"<string>\",\n                    \"InterfaceName\": \"<string>\",\n                    \"IpAddress\": \"<string>\",\n                    \"MacAddress\": \"<string>\",\n                    \"MultiVlanEnabled\": \"<boolean>\",\n                    \"NetMask\": \"<string>\",\n                    \"NetworkMoref\": \"<string>\",\n                    \"Vlans\": [\n                        {\n                            \"Gateway\": \"<string>\",\n                            \"IpAddress\": \"<string>\",\n                            \"Mtu\": \"<integer>\",\n                            \"Netmask\": \"<string>\",\n                            \"Routes\": [\n                                {\n                                    \"Gateway\": \"<string>\",\n                                    \"Netmask\": \"<string>\",\n                                    \"Source\": \"<string>\",\n                                    \"Type\": \"<string>\"\n                                },\n                                {\n                                    \"Gateway\": \"<string>\",\n                                    \"Netmask\": \"<string>\",\n                                    \"Source\": \"<string>\",\n                                    \"Type\": \"<string>\"\n                                }\n                            ],\n                            \"VlanId\": \"<integer>\"\n                        },\n                        {\n                            \"Gateway\": \"<string>\",\n                            \"IpAddress\": \"<string>\",\n                            \"Mtu\": \"<integer>\",\n                            \"Netmask\": \"<string>\",\n                            \"Routes\": [\n                                {\n                                    \"Gateway\": \"<string>\",\n                                    \"Netmask\": \"<string>\",\n                                    \"Source\": \"<string>\",\n                                    \"Type\": \"<string>\"\n                                },\n                                {\n                                    \"Gateway\": \"<string>\",\n                                    \"Netmask\": \"<string>\",\n                                    \"Source\": \"<string>\",\n                                    \"Type\": \"<string>\"\n                                }\n                            ],\n                            \"VlanId\": \"<integer>\"\n                        }\n                    ]\n                },\n                {\n                    \"Fqdn\": \"<string>\",\n                    \"Gateway\": \"<string>\",\n                    \"IPProtocol\": \"<string>\",\n                    \"InterfaceName\": \"<string>\",\n                    \"IpAddress\": \"<string>\",\n                    \"MacAddress\": \"<string>\",\n                    \"MultiVlanEnabled\": \"<boolean>\",\n                    \"NetMask\": \"<string>\",\n                    \"NetworkMoref\": \"<string>\",\n                    \"Vlans\": [\n                        {\n                            \"Gateway\": \"<string>\",\n                            \"IpAddress\": \"<string>\",\n                            \"Mtu\": \"<integer>\",\n                            \"Netmask\": \"<string>\",\n                            \"Routes\": [\n                                {\n                                    \"Gateway\": \"<string>\",\n                                    \"Netmask\": \"<string>\",\n                                    \"Source\": \"<string>\",\n                                    \"Type\": \"<string>\"\n                                },\n                                {\n                                    \"Gateway\": \"<string>\",\n                                    \"Netmask\": \"<string>\",\n                                    \"Source\": \"<string>\",\n                                    \"Type\": \"<string>\"\n                                }\n                            ],\n                            \"VlanId\": \"<integer>\"\n                        },\n                        {\n                            \"Gateway\": \"<string>\",\n                            \"IpAddress\": \"<string>\",\n                            \"Mtu\": \"<integer>\",\n                            \"Netmask\": \"<string>\",\n                            \"Routes\": [\n                                {\n                                    \"Gateway\": \"<string>\",\n                                    \"Netmask\": \"<string>\",\n                                    \"Source\": \"<string>\",\n                                    \"Type\": \"<string>\"\n                                },\n                                {\n                                    \"Gateway\": \"<string>\",\n                                    \"Netmask\": \"<string>\",\n                                    \"Source\": \"<string>\",\n                                    \"Type\": \"<string>\"\n                                }\n                            ],\n                            \"VlanId\": \"<integer>\"\n                        }\n                    ]\n                }\n            ],\n            \"Dns\": \"<string>\",\n            \"Fqdn\": \"<string>\",\n            \"Gateway\": \"<string>\",\n            \"IPProtocol\": \"<string>\",\n            \"InterfaceName\": \"<string>\",\n            \"IpAddress\": \"<string>\",\n            \"Location\": {\n                \"ClusterMoref\": \"<string>\",\n                \"DatastoreMoref\": \"<string>\",\n                \"FolderMoref\": \"<string>\",\n                \"HostMoref\": \"<string>\",\n                \"NetworkMoref\": \"<string>\",\n                \"ResourcePoolMoref\": \"<string>\"\n            },\n            \"MacAddress\": \"<string>\",\n            \"MultiVlanEnabled\": \"<boolean>\",\n            \"NTPServer\": \"<string>\",\n            \"NetMask\": \"<string>\",\n            \"NetworkMoref\": \"<string>\",\n            \"OvaFile\": \"<string>\",\n            \"RootCredential\": {\n                \"ObjectId\": \"<string>\",\n                \"Password\": \"<string>\",\n                \"Type\": \"<string>\",\n                \"UserName\": \"<string>\"\n            },\n            \"Timezone\": \"<string>\",\n            \"VMName\": \"<string>\",\n            \"Vlans\": [\n                {\n                    \"Gateway\": \"<string>\",\n                    \"IpAddress\": \"<string>\",\n                    \"Mtu\": \"<integer>\",\n                    \"Netmask\": \"<string>\",\n                    \"Routes\": [\n                        {\n                            \"Gateway\": \"<string>\",\n                            \"Netmask\": \"<string>\",\n                            \"Source\": \"<string>\",\n                            \"Type\": \"<string>\"\n                        },\n                        {\n                            \"Gateway\": \"<string>\",\n                            \"Netmask\": \"<string>\",\n                            \"Source\": \"<string>\",\n                            \"Type\": \"<string>\"\n                        }\n                    ],\n                    \"VlanId\": \"<integer>\"\n                },\n                {\n                    \"Gateway\": \"<string>\",\n                    \"IpAddress\": \"<string>\",\n                    \"Mtu\": \"<integer>\",\n                    \"Netmask\": \"<string>\",\n                    \"Routes\": [\n                        {\n                            \"Gateway\": \"<string>\",\n                            \"Netmask\": \"<string>\",\n                            \"Source\": \"<string>\",\n                            \"Type\": \"<string>\"\n                        },\n                        {\n                            \"Gateway\": \"<string>\",\n                            \"Netmask\": \"<string>\",\n                            \"Source\": \"<string>\",\n                            \"Type\": \"<string>\"\n                        }\n                    ],\n                    \"VlanId\": \"<integer>\"\n                }\n            ]\n        },\n        \"ProxyType\": \"<string>\",\n        \"SkipRegistration\": \"<boolean>\",\n        \"SupportedProtectionTypes\": [\n            \"<string>\",\n            \"<string>\"\n        ],\n        \"UpdateCredentials\": \"<boolean>\",\n        \"VimServerRef\": {\n            \"ObjectId\": \"<string>\",\n            \"Type\": \"<string>\",\n            \"Vcenter\": {\n                \"HostName\": \"<string>\",\n                \"HypervisorMode\": \"<string>\",\n                \"TcpPort\": \"<long>\",\n                \"UserName\": \"<string>\",\n                \"UserPassword\": \"<string>\"\n            }\n        }\n    },\n    \"Id\": \"<string>\",\n    \"Status\": {\n        \"Aliases\": [\n            \"<string>\",\n            \"<string>\"\n        ],\n        \"AllottedModes\": [\n            {\n                \"CapacityUnits\": \"<integer>\",\n                \"ReservedBy\": {\n                    \"SessionId\": \"<string>\",\n                    \"SessionType\": \"<string>\"\n                },\n                \"TotalControlSessions\": \"<integer>\",\n                \"TotalTransportSessions\": \"<integer>\"\n            },\n            {\n                \"CapacityUnits\": \"<integer>\",\n                \"ReservedBy\": {\n                    \"SessionId\": \"<string>\",\n                    \"SessionType\": \"<string>\"\n                },\n                \"TotalControlSessions\": \"<integer>\",\n                \"TotalTransportSessions\": \"<integer>\"\n            }\n        ],\n        \"DaemonStatus\": [\n            {\n                \"DaemonName\": \"<string>\",\n                \"Resources\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"Status\": \"<string>\"\n            },\n            {\n                \"DaemonName\": \"<string>\",\n                \"Resources\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"Status\": \"<string>\"\n            }\n        ],\n        \"DatacenterMoref\": \"<string>\",\n        \"Datastores\": [\n            \"<string>\",\n            \"<string>\"\n        ],\n        \"DeployedTime\": \"<string>\",\n        \"HostedComputeRes\": {\n            \"MOref\": \"<string>\",\n            \"Type\": \"<string>\"\n        },\n        \"LastCheckedTime\": \"<string>\",\n        \"LastOperation\": {\n            \"Detail\": \"<string>\",\n            \"Operation\": \"<string>\",\n            \"Status\": \"<string>\"\n        },\n        \"ModesAvailable\": {\n            \"CapacityUnits\": \"<integer>\",\n            \"Mode\": \"<string>\",\n            \"UseSsl\": \"<boolean>\"\n        },\n        \"Networks\": [\n            {\n                \"Connected\": \"<boolean>\",\n                \"DeviceLabel\": \"<string>\",\n                \"Dns\": {\n                    \"DhcpEnabled\": \"<boolean>\",\n                    \"DomainName\": \"<string>\",\n                    \"HostName\": \"<string>\",\n                    \"SearchDomains\": [\n                        \"<string>\",\n                        \"<string>\"\n                    ],\n                    \"Servers\": [\n                        \"<string>\",\n                        \"<string>\"\n                    ]\n                },\n                \"GatewayV4\": \"<string>\",\n                \"GatewayV6\": \"<string>\",\n                \"IpAddrV4\": {\n                    \"Address\": \"<string>\",\n                    \"IpCidr\": \"<string>\",\n                    \"NetMask\": \"<string>\",\n                    \"PrefixLength\": \"<integer>\",\n                    \"SubnetCidr\": \"<string>\",\n                    \"Version\": \"<string>\"\n                },\n                \"IpAddrV6\": {\n                    \"Address\": \"<string>\",\n                    \"IpCidr\": \"<string>\",\n                    \"NetMask\": \"<string>\",\n                    \"PrefixLength\": \"<integer>\",\n                    \"SubnetCidr\": \"<string>\",\n                    \"Version\": \"<string>\"\n                },\n                \"MAC\": \"<string>\",\n                \"VirtualDeviceId\": \"<integer>\",\n                \"VirtualNetworkName\": \"<string>\"\n            },\n            {\n                \"Connected\": \"<boolean>\",\n                \"DeviceLabel\": \"<string>\",\n                \"Dns\": {\n                    \"DhcpEnabled\": \"<boolean>\",\n                    \"DomainName\": \"<string>\",\n                    \"HostName\": \"<string>\",\n                    \"SearchDomains\": [\n                        \"<string>\",\n                        \"<string>\"\n                    ],\n                    \"Servers\": [\n                        \"<string>\",\n                        \"<string>\"\n                    ]\n                },\n                \"GatewayV4\": \"<string>\",\n                \"GatewayV6\": \"<string>\",\n                \"IpAddrV4\": {\n                    \"Address\": \"<string>\",\n                    \"IpCidr\": \"<string>\",\n                    \"NetMask\": \"<string>\",\n                    \"PrefixLength\": \"<integer>\",\n                    \"SubnetCidr\": \"<string>\",\n                    \"Version\": \"<string>\"\n                },\n                \"IpAddrV6\": {\n                    \"Address\": \"<string>\",\n                    \"IpCidr\": \"<string>\",\n                    \"NetMask\": \"<string>\",\n                    \"PrefixLength\": \"<integer>\",\n                    \"SubnetCidr\": \"<string>\",\n                    \"Version\": \"<string>\"\n                },\n                \"MAC\": \"<string>\",\n                \"VirtualDeviceId\": \"<integer>\",\n                \"VirtualNetworkName\": \"<string>\"\n            }\n        ],\n        \"PowerState\": \"<string>\",\n        \"ProxyDeployed\": \"<boolean>\",\n        \"ProxyRegistered\": \"<boolean>\",\n        \"ProxyState\": \"<string>\",\n        \"ProxyStatus\": {\n            \"Detail\": \"<string>\",\n            \"Status\": \"<string>\"\n        },\n        \"RegisteredTime\": \"<string>\",\n        \"Thumbprint\": \"<string>\",\n        \"Uuid\": \"<string>\",\n        \"Version\": \"<string>\",\n        \"VlanStatus\": [\n            {\n                \"Detail\": \"<string>\",\n                \"IpAddress\": \"<string>\",\n                \"Status\": \"<string>\",\n                \"VlanId\": \"<integer>\"\n            },\n            {\n                \"Detail\": \"<string>\",\n                \"IpAddress\": \"<string>\",\n                \"Status\": \"<string>\",\n                \"VlanId\": \"<integer>\"\n            }\n        ]\n    }\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/protection-engines/:id/proxies",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"protection-engines",
														":id",
														"proxies"
													],
													"variable": [
														{
															"id": "a430c919-779f-4869-8ec7-00511de3a0e2",
															"key": "id",
															"value": "<string>",
															"type": "string",
															"description": "(Required) The ID of the VPE protection engine."
														}
													]
												},
												"description": "Adds a VPE proxy to the protection engine with the specified ID. The protection engine with the specified ID must already be registered with PowerProtect Data Manager.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
											},
											"response": [
												{
													"name": "Successful operation.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: apikey",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"Config\": {\n        \"AdvancedOptions\": {\n            \"CapacityPercentage\": \"<integer>\",\n            \"Datastores\": [\n                \"<string>\",\n                \"<string>\"\n            ],\n            \"TransportSessions\": {\n                \"Mode\": \"<string>\",\n                \"UseSsl\": \"<boolean>\",\n                \"UserDefined\": \"<boolean>\"\n            }\n        },\n        \"ApplicationData\": \"<object>\",\n        \"AutoUpdateConfig\": \"<boolean>\",\n        \"Credential\": {\n            \"ObjectId\": \"<string>\",\n            \"Password\": \"<string>\",\n            \"Type\": \"<string>\",\n            \"UserName\": \"<string>\"\n        },\n        \"DeployProxy\": \"<boolean>\",\n        \"Disabled\": \"<boolean>\",\n        \"HealthCheckInterval\": \"<integer>\",\n        \"HostName\": \"<string>\",\n        \"InstanceUuid\": \"<string>\",\n        \"MORef\": \"<string>\",\n        \"Operation\": \"<string>\",\n        \"Port\": \"<integer>\",\n        \"ProxyDeploymentConfig\": {\n            \"AdditionalVMNetworks\": [\n                {\n                    \"Fqdn\": \"<string>\",\n                    \"Gateway\": \"<string>\",\n                    \"IPProtocol\": \"<string>\",\n                    \"InterfaceName\": \"<string>\",\n                    \"IpAddress\": \"<string>\",\n                    \"MacAddress\": \"<string>\",\n                    \"MultiVlanEnabled\": \"<boolean>\",\n                    \"NetMask\": \"<string>\",\n                    \"NetworkMoref\": \"<string>\",\n                    \"Vlans\": [\n                        {\n                            \"Gateway\": \"<string>\",\n                            \"IpAddress\": \"<string>\",\n                            \"Mtu\": \"<integer>\",\n                            \"Netmask\": \"<string>\",\n                            \"Routes\": [\n                                {\n                                    \"Gateway\": \"<string>\",\n                                    \"Netmask\": \"<string>\",\n                                    \"Source\": \"<string>\",\n                                    \"Type\": \"<string>\"\n                                },\n                                {\n                                    \"Gateway\": \"<string>\",\n                                    \"Netmask\": \"<string>\",\n                                    \"Source\": \"<string>\",\n                                    \"Type\": \"<string>\"\n                                }\n                            ],\n                            \"VlanId\": \"<integer>\"\n                        },\n                        {\n                            \"Gateway\": \"<string>\",\n                            \"IpAddress\": \"<string>\",\n                            \"Mtu\": \"<integer>\",\n                            \"Netmask\": \"<string>\",\n                            \"Routes\": [\n                                {\n                                    \"Gateway\": \"<string>\",\n                                    \"Netmask\": \"<string>\",\n                                    \"Source\": \"<string>\",\n                                    \"Type\": \"<string>\"\n                                },\n                                {\n                                    \"Gateway\": \"<string>\",\n                                    \"Netmask\": \"<string>\",\n                                    \"Source\": \"<string>\",\n                                    \"Type\": \"<string>\"\n                                }\n                            ],\n                            \"VlanId\": \"<integer>\"\n                        }\n                    ]\n                },\n                {\n                    \"Fqdn\": \"<string>\",\n                    \"Gateway\": \"<string>\",\n                    \"IPProtocol\": \"<string>\",\n                    \"InterfaceName\": \"<string>\",\n                    \"IpAddress\": \"<string>\",\n                    \"MacAddress\": \"<string>\",\n                    \"MultiVlanEnabled\": \"<boolean>\",\n                    \"NetMask\": \"<string>\",\n                    \"NetworkMoref\": \"<string>\",\n                    \"Vlans\": [\n                        {\n                            \"Gateway\": \"<string>\",\n                            \"IpAddress\": \"<string>\",\n                            \"Mtu\": \"<integer>\",\n                            \"Netmask\": \"<string>\",\n                            \"Routes\": [\n                                {\n                                    \"Gateway\": \"<string>\",\n                                    \"Netmask\": \"<string>\",\n                                    \"Source\": \"<string>\",\n                                    \"Type\": \"<string>\"\n                                },\n                                {\n                                    \"Gateway\": \"<string>\",\n                                    \"Netmask\": \"<string>\",\n                                    \"Source\": \"<string>\",\n                                    \"Type\": \"<string>\"\n                                }\n                            ],\n                            \"VlanId\": \"<integer>\"\n                        },\n                        {\n                            \"Gateway\": \"<string>\",\n                            \"IpAddress\": \"<string>\",\n                            \"Mtu\": \"<integer>\",\n                            \"Netmask\": \"<string>\",\n                            \"Routes\": [\n                                {\n                                    \"Gateway\": \"<string>\",\n                                    \"Netmask\": \"<string>\",\n                                    \"Source\": \"<string>\",\n                                    \"Type\": \"<string>\"\n                                },\n                                {\n                                    \"Gateway\": \"<string>\",\n                                    \"Netmask\": \"<string>\",\n                                    \"Source\": \"<string>\",\n                                    \"Type\": \"<string>\"\n                                }\n                            ],\n                            \"VlanId\": \"<integer>\"\n                        }\n                    ]\n                }\n            ],\n            \"Dns\": \"<string>\",\n            \"Fqdn\": \"<string>\",\n            \"Gateway\": \"<string>\",\n            \"IPProtocol\": \"<string>\",\n            \"InterfaceName\": \"<string>\",\n            \"IpAddress\": \"<string>\",\n            \"Location\": {\n                \"ClusterMoref\": \"<string>\",\n                \"DatastoreMoref\": \"<string>\",\n                \"FolderMoref\": \"<string>\",\n                \"HostMoref\": \"<string>\",\n                \"NetworkMoref\": \"<string>\",\n                \"ResourcePoolMoref\": \"<string>\"\n            },\n            \"MacAddress\": \"<string>\",\n            \"MultiVlanEnabled\": \"<boolean>\",\n            \"NTPServer\": \"<string>\",\n            \"NetMask\": \"<string>\",\n            \"NetworkMoref\": \"<string>\",\n            \"OvaFile\": \"<string>\",\n            \"RootCredential\": {\n                \"ObjectId\": \"<string>\",\n                \"Password\": \"<string>\",\n                \"Type\": \"<string>\",\n                \"UserName\": \"<string>\"\n            },\n            \"Timezone\": \"<string>\",\n            \"VMName\": \"<string>\",\n            \"Vlans\": [\n                {\n                    \"Gateway\": \"<string>\",\n                    \"IpAddress\": \"<string>\",\n                    \"Mtu\": \"<integer>\",\n                    \"Netmask\": \"<string>\",\n                    \"Routes\": [\n                        {\n                            \"Gateway\": \"<string>\",\n                            \"Netmask\": \"<string>\",\n                            \"Source\": \"<string>\",\n                            \"Type\": \"<string>\"\n                        },\n                        {\n                            \"Gateway\": \"<string>\",\n                            \"Netmask\": \"<string>\",\n                            \"Source\": \"<string>\",\n                            \"Type\": \"<string>\"\n                        }\n                    ],\n                    \"VlanId\": \"<integer>\"\n                },\n                {\n                    \"Gateway\": \"<string>\",\n                    \"IpAddress\": \"<string>\",\n                    \"Mtu\": \"<integer>\",\n                    \"Netmask\": \"<string>\",\n                    \"Routes\": [\n                        {\n                            \"Gateway\": \"<string>\",\n                            \"Netmask\": \"<string>\",\n                            \"Source\": \"<string>\",\n                            \"Type\": \"<string>\"\n                        },\n                        {\n                            \"Gateway\": \"<string>\",\n                            \"Netmask\": \"<string>\",\n                            \"Source\": \"<string>\",\n                            \"Type\": \"<string>\"\n                        }\n                    ],\n                    \"VlanId\": \"<integer>\"\n                }\n            ]\n        },\n        \"ProxyType\": \"<string>\",\n        \"SkipRegistration\": \"<boolean>\",\n        \"SupportedProtectionTypes\": [\n            \"<string>\",\n            \"<string>\"\n        ],\n        \"UpdateCredentials\": \"<boolean>\",\n        \"VimServerRef\": {\n            \"ObjectId\": \"<string>\",\n            \"Type\": \"<string>\",\n            \"Vcenter\": {\n                \"HostName\": \"<string>\",\n                \"HypervisorMode\": \"<string>\",\n                \"TcpPort\": \"<long>\",\n                \"UserName\": \"<string>\",\n                \"UserPassword\": \"<string>\"\n            }\n        }\n    },\n    \"Id\": \"<string>\",\n    \"Status\": {\n        \"Aliases\": [\n            \"<string>\",\n            \"<string>\"\n        ],\n        \"AllottedModes\": [\n            {\n                \"CapacityUnits\": \"<integer>\",\n                \"ReservedBy\": {\n                    \"SessionId\": \"<string>\",\n                    \"SessionType\": \"<string>\"\n                },\n                \"TotalControlSessions\": \"<integer>\",\n                \"TotalTransportSessions\": \"<integer>\"\n            },\n            {\n                \"CapacityUnits\": \"<integer>\",\n                \"ReservedBy\": {\n                    \"SessionId\": \"<string>\",\n                    \"SessionType\": \"<string>\"\n                },\n                \"TotalControlSessions\": \"<integer>\",\n                \"TotalTransportSessions\": \"<integer>\"\n            }\n        ],\n        \"DaemonStatus\": [\n            {\n                \"DaemonName\": \"<string>\",\n                \"Resources\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"Status\": \"<string>\"\n            },\n            {\n                \"DaemonName\": \"<string>\",\n                \"Resources\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"Status\": \"<string>\"\n            }\n        ],\n        \"DatacenterMoref\": \"<string>\",\n        \"Datastores\": [\n            \"<string>\",\n            \"<string>\"\n        ],\n        \"DeployedTime\": \"<string>\",\n        \"HostedComputeRes\": {\n            \"MOref\": \"<string>\",\n            \"Type\": \"<string>\"\n        },\n        \"LastCheckedTime\": \"<string>\",\n        \"LastOperation\": {\n            \"Detail\": \"<string>\",\n            \"Operation\": \"<string>\",\n            \"Status\": \"<string>\"\n        },\n        \"ModesAvailable\": {\n            \"CapacityUnits\": \"<integer>\",\n            \"Mode\": \"<string>\",\n            \"UseSsl\": \"<boolean>\"\n        },\n        \"Networks\": [\n            {\n                \"Connected\": \"<boolean>\",\n                \"DeviceLabel\": \"<string>\",\n                \"Dns\": {\n                    \"DhcpEnabled\": \"<boolean>\",\n                    \"DomainName\": \"<string>\",\n                    \"HostName\": \"<string>\",\n                    \"SearchDomains\": [\n                        \"<string>\",\n                        \"<string>\"\n                    ],\n                    \"Servers\": [\n                        \"<string>\",\n                        \"<string>\"\n                    ]\n                },\n                \"GatewayV4\": \"<string>\",\n                \"GatewayV6\": \"<string>\",\n                \"IpAddrV4\": {\n                    \"Address\": \"<string>\",\n                    \"IpCidr\": \"<string>\",\n                    \"NetMask\": \"<string>\",\n                    \"PrefixLength\": \"<integer>\",\n                    \"SubnetCidr\": \"<string>\",\n                    \"Version\": \"<string>\"\n                },\n                \"IpAddrV6\": {\n                    \"Address\": \"<string>\",\n                    \"IpCidr\": \"<string>\",\n                    \"NetMask\": \"<string>\",\n                    \"PrefixLength\": \"<integer>\",\n                    \"SubnetCidr\": \"<string>\",\n                    \"Version\": \"<string>\"\n                },\n                \"MAC\": \"<string>\",\n                \"VirtualDeviceId\": \"<integer>\",\n                \"VirtualNetworkName\": \"<string>\"\n            },\n            {\n                \"Connected\": \"<boolean>\",\n                \"DeviceLabel\": \"<string>\",\n                \"Dns\": {\n                    \"DhcpEnabled\": \"<boolean>\",\n                    \"DomainName\": \"<string>\",\n                    \"HostName\": \"<string>\",\n                    \"SearchDomains\": [\n                        \"<string>\",\n                        \"<string>\"\n                    ],\n                    \"Servers\": [\n                        \"<string>\",\n                        \"<string>\"\n                    ]\n                },\n                \"GatewayV4\": \"<string>\",\n                \"GatewayV6\": \"<string>\",\n                \"IpAddrV4\": {\n                    \"Address\": \"<string>\",\n                    \"IpCidr\": \"<string>\",\n                    \"NetMask\": \"<string>\",\n                    \"PrefixLength\": \"<integer>\",\n                    \"SubnetCidr\": \"<string>\",\n                    \"Version\": \"<string>\"\n                },\n                \"IpAddrV6\": {\n                    \"Address\": \"<string>\",\n                    \"IpCidr\": \"<string>\",\n                    \"NetMask\": \"<string>\",\n                    \"PrefixLength\": \"<integer>\",\n                    \"SubnetCidr\": \"<string>\",\n                    \"Version\": \"<string>\"\n                },\n                \"MAC\": \"<string>\",\n                \"VirtualDeviceId\": \"<integer>\",\n                \"VirtualNetworkName\": \"<string>\"\n            }\n        ],\n        \"PowerState\": \"<string>\",\n        \"ProxyDeployed\": \"<boolean>\",\n        \"ProxyRegistered\": \"<boolean>\",\n        \"ProxyState\": \"<string>\",\n        \"ProxyStatus\": {\n            \"Detail\": \"<string>\",\n            \"Status\": \"<string>\"\n        },\n        \"RegisteredTime\": \"<string>\",\n        \"Thumbprint\": \"<string>\",\n        \"Uuid\": \"<string>\",\n        \"Version\": \"<string>\",\n        \"VlanStatus\": [\n            {\n                \"Detail\": \"<string>\",\n                \"IpAddress\": \"<string>\",\n                \"Status\": \"<string>\",\n                \"VlanId\": \"<integer>\"\n            },\n            {\n                \"Detail\": \"<string>\",\n                \"IpAddress\": \"<string>\",\n                \"Status\": \"<string>\",\n                \"VlanId\": \"<integer>\"\n            }\n        ]\n    }\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/protection-engines/:id/proxies",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"protection-engines",
																":id",
																"proxies"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"Config\": {\n  \"AdvancedOptions\": {\n   \"CapacityPercentage\": 45629334,\n   \"Datastores\": [\n    \"proide\",\n    \"anim reprehenderit nostrud \"\n   ],\n   \"TransportSessions\": {\n    \"Mode\": \"HotaddPreferred\",\n    \"UseSsl\": false,\n    \"UserDefined\": true\n   }\n  },\n  \"ApplicationData\": {},\n  \"AutoUpdateConfig\": true,\n  \"Credential\": {\n   \"ObjectId\": \"labore mollit\",\n   \"Password\": \"dolor\",\n   \"Type\": \"Object\",\n   \"UserName\": \"Ut\"\n  },\n  \"DeployProxy\": true,\n  \"Disabled\": false,\n  \"HealthCheckInterval\": 82082786,\n  \"HostName\": \"ex veniam\",\n  \"InstanceUuid\": \"enim ex\",\n  \"MORef\": \"dolore incididunt sint\",\n  \"Operation\": \"upgrade\",\n  \"Port\": -81697983,\n  \"ProxyDeploymentConfig\": {\n   \"AdditionalVMNetworks\": [\n    {\n     \"Fqdn\": \"non\",\n     \"Gateway\": \"ullamco exercitation id irure qui\",\n     \"IPProtocol\": \"IPv4\",\n     \"InterfaceName\": \"voluptate\",\n     \"IpAddress\": \"laborum aliqua\",\n     \"MacAddress\": \"irure tempor\",\n     \"MultiVlanEnabled\": true,\n     \"NetMask\": \"in velit pariatur\",\n     \"NetworkMoref\": \"nisi\",\n     \"Vlans\": [\n      {\n       \"Gateway\": \"anim veniam officia id\",\n       \"IpAddress\": \"Excepteur Ut esse\",\n       \"Mtu\": -10182718,\n       \"Netmask\": \"ipsum in quis\",\n       \"Routes\": [\n        {\n         \"Gateway\": \"in cillum\",\n         \"Netmask\": \"incididunt ipsum ex reprehenderit sed\",\n         \"Source\": \"Ut nostrud\",\n         \"Type\": \"Excepteur proident in\"\n        },\n        {\n         \"Gateway\": \"aliqua elit\",\n         \"Netmask\": \"par\",\n         \"Source\": \"labore\",\n         \"Type\": \"et ullamco officia irure\"\n        }\n       ],\n       \"VlanId\": 50048506\n      },\n      {\n       \"Gateway\": \"exercitation aliqua fugiat\",\n       \"IpAddress\": \"voluptate laboris in\",\n       \"Mtu\": -77893727,\n       \"Netmask\": \"exercitatio\",\n       \"Routes\": [\n        {\n         \"Gateway\": \"Lorem\",\n         \"Netmask\": \"Ut est id\",\n         \"Source\": \"reprehenderit nostrud et minim\",\n         \"Type\": \"nisi aliqua id\"\n        },\n        {\n         \"Gateway\": \"ut cupidatat commodo incididunt\",\n         \"Netmask\": \"dolor cupidatat\",\n         \"Source\": \"commodo Excepteur sint non labore\",\n         \"Type\": \"voluptate id Excepteur dolore occ\"\n        }\n       ],\n       \"VlanId\": -47644326\n      }\n     ]\n    },\n    {\n     \"Fqdn\": \"cupidatat adipisicing aliquip in\",\n     \"Gateway\": \"in velit\",\n     \"IPProtocol\": \"IPv4\",\n     \"InterfaceName\": \"aliqua proid\",\n     \"IpAddress\": \"occaecat aliquip do\",\n     \"MacAddress\": \"fugiat ea\",\n     \"MultiVlanEnabled\": true,\n     \"NetMask\": \"eu officia ad voluptate\",\n     \"NetworkMoref\": \"cupidatat dolore elit irure\",\n     \"Vlans\": [\n      {\n       \"Gateway\": \"magna quis consequat nostrud\",\n       \"IpAddress\": \"aute\",\n       \"Mtu\": -51977868,\n       \"Netmask\": \"officia sunt elit labore\",\n       \"Routes\": [\n        {\n         \"Gateway\": \"magna enim\",\n         \"Netmask\": \"est l\",\n         \"Source\": \"Duis cillum ut id officia\",\n         \"Type\": \"ut sint\"\n        },\n        {\n         \"Gateway\": \"Lorem aliqua ullamco aliquip Duis\",\n         \"Netmask\": \"eiusmod non irure\",\n         \"Source\": \"sint\",\n         \"Type\": \"elit magna id\"\n        }\n       ],\n       \"VlanId\": 28111220\n      },\n      {\n       \"Gateway\": \"aute non sunt\",\n       \"IpAddress\": \"veniam elit ut\",\n       \"Mtu\": -36377772,\n       \"Netmask\": \"in laborum Lorem\",\n       \"Routes\": [\n        {\n         \"Gateway\": \"ut dolor anim\",\n         \"Netmask\": \"nulla exercitation\",\n         \"Source\": \"pariatur in Lorem veniam\",\n         \"Type\": \"dolor reprehenderit dolor\"\n        },\n        {\n         \"Gateway\": \"nostrud voluptate\",\n         \"Netmask\": \"minim nostrud ullamco quis\",\n         \"Source\": \"voluptate anim\",\n         \"Type\": \"ex minim tempor\"\n        }\n       ],\n       \"VlanId\": 17088502\n      }\n     ]\n    }\n   ],\n   \"Dns\": \"dolor proident elit\",\n   \"Fqdn\": \"officia deserunt\",\n   \"Gateway\": \"proident amet dolore sint ad\",\n   \"IPProtocol\": \"IPv4\",\n   \"InterfaceName\": \"Exc\",\n   \"IpAddress\": \"nulla occaecat Duis\",\n   \"Location\": {\n    \"ClusterMoref\": \"sed\",\n    \"DatastoreMoref\": \"eiusmod anim\",\n    \"FolderMoref\": \"in adipisicing Excepteur minim\",\n    \"HostMoref\": \"elit id eu velit\",\n    \"NetworkMoref\": \"no\",\n    \"ResourcePoolMoref\": \"ex cillum laborum\"\n   },\n   \"MacAddress\": \"aute eiusmod do\",\n   \"MultiVlanEnabled\": true,\n   \"NTPServer\": \"fugiat culpa\",\n   \"NetMask\": \"reprehenderit ut Lorem veniam\",\n   \"NetworkMoref\": \"enim irure minim\",\n   \"OvaFile\": \"dolor ipsum velit\",\n   \"RootCredential\": {\n    \"ObjectId\": \"enim\",\n    \"Password\": \"occaecat sed\",\n    \"Type\": \"ObjectId\",\n    \"UserName\": \"mollit eiusmod\"\n   },\n   \"Timezone\": \"incididunt velit fugiat\",\n   \"VMName\": \"exercitation eu ex proid\",\n   \"Vlans\": [\n    {\n     \"Gateway\": \"d\",\n     \"IpAddress\": \"incididunt ex laboris aute\",\n     \"Mtu\": -49634533,\n     \"Netmask\": \"consec\",\n     \"Routes\": [\n      {\n       \"Gateway\": \"tempor dolor dolore\",\n       \"Netmask\": \"ut ea sint ex\",\n       \"Source\": \"eiusmo\",\n       \"Type\": \"labore ex Ut Duis\"\n      },\n      {\n       \"Gateway\": \"irure nisi commodo veniam culpa\",\n       \"Netmask\": \"occaecat qui in proident\",\n       \"Source\": \"laborum sed velit labore\",\n       \"Type\": \"esse officia est Ut magna\"\n      }\n     ],\n     \"VlanId\": -48416384\n    },\n    {\n     \"Gateway\": \"in quis\",\n     \"IpAddress\": \"Excepteur\",\n     \"Mtu\": -43416269,\n     \"Netmask\": \"in cupidatat sed do\",\n     \"Routes\": [\n      {\n       \"Gateway\": \"anim irure\",\n       \"Netmask\": \"irure exerci\",\n       \"Source\": \"qui adipisicing cillum\",\n       \"Type\": \"tempor velit in\"\n      },\n      {\n       \"Gateway\": \"dolore\",\n       \"Netmask\": \"ipsum commodo sunt laboris ullamco\",\n       \"Source\": \"ex ad dolor eiusmod tempor\",\n       \"Type\": \"Duis reprehenderit sed ea commodo\"\n      }\n     ],\n     \"VlanId\": 89505155\n    }\n   ]\n  },\n  \"ProxyType\": \"External\",\n  \"SkipRegistration\": false,\n  \"SupportedProtectionTypes\": [\n   \"Kubernetes\",\n   \"VM\"\n  ],\n  \"UpdateCredentials\": true,\n  \"VimServerRef\": {\n   \"ObjectId\": \"ea esse\",\n   \"Type\": \"ObjectId\",\n   \"Vcenter\": {\n    \"HostName\": \"in Ut non\",\n    \"HypervisorMode\": \"vSphere\",\n    \"TcpPort\": -12918063,\n    \"UserName\": \"do\",\n    \"UserPassword\": \"ut veniam aute\"\n   }\n  }\n },\n \"Id\": \"ex aliqua\",\n \"Status\": {\n  \"Aliases\": [\n   \"dolor ad ea tempor minim\",\n   \"in ut ullamco sed\"\n  ],\n  \"AllottedModes\": [\n   {\n    \"CapacityUnits\": -98770877,\n    \"ReservedBy\": {\n     \"SessionId\": \"nulla et\",\n     \"SessionType\": \"in reprehenderit\"\n    },\n    \"TotalControlSessions\": 56355273,\n    \"TotalTransportSessions\": 88629989\n   },\n   {\n    \"CapacityUnits\": 12538061,\n    \"ReservedBy\": {\n     \"SessionId\": \"in eiusmod Excepteur in amet\",\n     \"SessionType\": \"Duis la\"\n    },\n    \"TotalControlSessions\": -92288316,\n    \"TotalTransportSessions\": 54818020\n   }\n  ],\n  \"DaemonStatus\": [\n   {\n    \"DaemonName\": \"occaecat\",\n    \"Resources\": [\n     \"consequat officia labore minim\",\n     \"dolor\"\n    ],\n    \"Status\": \"Duis reprehenderit ut\"\n   },\n   {\n    \"DaemonName\": \"est Ut eu non\",\n    \"Resources\": [\n     \"ipsum ullamco ad culpa in\",\n     \"laboris dolor commodo\"\n    ],\n    \"Status\": \"ut\"\n   }\n  ],\n  \"DatacenterMoref\": \"in officia\",\n  \"Datastores\": [\n   \"sed\",\n   \"ut sed\"\n  ],\n  \"DeployedTime\": \"anim aliquip\",\n  \"HostedComputeRes\": {\n   \"MOref\": \"id ullamco nisi\",\n   \"Type\": \"dolor sit eu\"\n  },\n  \"LastCheckedTime\": \"consequat velit in\",\n  \"LastOperation\": {\n   \"Detail\": \"laboris in commodo ad fugiat\",\n   \"Operation\": \"version\",\n   \"Status\": \"Mounting\"\n  },\n  \"ModesAvailable\": {\n   \"CapacityUnits\": -637642,\n   \"Mode\": \"HotaddOnly\",\n   \"UseSsl\": true\n  },\n  \"Networks\": [\n   {\n    \"Connected\": false,\n    \"DeviceLabel\": \"reprehenderit\",\n    \"Dns\": {\n     \"DhcpEnabled\": true,\n     \"DomainName\": \"exercitation in consectetur occaecat id\",\n     \"HostName\": \"dolor Except\",\n     \"SearchDomains\": [\n      \"non tempor nisi aliquip\",\n      \"ea\"\n     ],\n     \"Servers\": [\n      \"ut reprehenderit\",\n      \"sint qui magna\"\n     ]\n    },\n    \"GatewayV4\": \"consectetur velit exercitation labore\",\n    \"GatewayV6\": \"laboris non in consequat sit\",\n    \"IpAddrV4\": {\n     \"Address\": \"cupidatat aliquip\",\n     \"IpCidr\": \"quis\",\n     \"NetMask\": \"aliquip eu\",\n     \"PrefixLength\": 98506142,\n     \"SubnetCidr\": \"conse\",\n     \"Version\": \"IPv4\"\n    },\n    \"IpAddrV6\": {\n     \"Address\": \"labore\",\n     \"IpCidr\": \"dolor Lorem\",\n     \"NetMask\": \"labori\",\n     \"PrefixLength\": 7850890,\n     \"SubnetCidr\": \"veniam dolor\",\n     \"Version\": \"IPv4\"\n    },\n    \"MAC\": \"commodo Lorem minim cupidatat laborum\",\n    \"VirtualDeviceId\": 64607708,\n    \"VirtualNetworkName\": \"ut\"\n   },\n   {\n    \"Connected\": false,\n    \"DeviceLabel\": \"ut nostrud id quis\",\n    \"Dns\": {\n     \"DhcpEnabled\": true,\n     \"DomainName\": \"elit\",\n     \"HostName\": \"nisi irure sit\",\n     \"SearchDomains\": [\n      \"enim\",\n      \"officia id non dolore et\"\n     ],\n     \"Servers\": [\n      \"sint pariatur deserunt aute\",\n      \"fugiat magna\"\n     ]\n    },\n    \"GatewayV4\": \"dolore\",\n    \"GatewayV6\": \"occaecat minim ea\",\n    \"IpAddrV4\": {\n     \"Address\": \"incididunt\",\n     \"IpCidr\": \"ullamco nulla\",\n     \"NetMask\": \"pariatur ea occaecat ipsum nisi\",\n     \"PrefixLength\": -94611769,\n     \"SubnetCidr\": \"nos\",\n     \"Version\": \"IPv6\"\n    },\n    \"IpAddrV6\": {\n     \"Address\": \"do Excepteur ad elit\",\n     \"IpCidr\": \"minim nostrud fugiat nulla\",\n     \"NetMask\": \"tempor sunt\",\n     \"PrefixLength\": 87574354,\n     \"SubnetCidr\": \"proident esse\",\n     \"Version\": \"IPv4\"\n    },\n    \"MAC\": \"occaecat et do consequat\",\n    \"VirtualDeviceId\": 92931755,\n    \"VirtualNetworkName\": \"consequat\"\n   }\n  ],\n  \"PowerState\": \"Suspended\",\n  \"ProxyDeployed\": true,\n  \"ProxyRegistered\": false,\n  \"ProxyState\": \"READY\",\n  \"ProxyStatus\": {\n   \"Detail\": \"ea non mollit\",\n   \"Status\": \"Ready\"\n  },\n  \"RegisteredTime\": \"exercitation ad commodo\",\n  \"Thumbprint\": \"u\",\n  \"Uuid\": \"consequat est nulla labore\",\n  \"Version\": \"sint\",\n  \"VlanStatus\": [\n   {\n    \"Detail\": \"in labore in in\",\n    \"IpAddress\": \"occaecat anim ex exercitation\",\n    \"Status\": \"CONNECTED\",\n    \"VlanId\": -67427392\n   },\n   {\n    \"Detail\": \"ipsum dolor\",\n    \"IpAddress\": \"est in ut\",\n    \"Status\": \"CONNECTED\",\n    \"VlanId\": 3627378\n   }\n  ]\n }\n}"
												},
												{
													"name": "The request was accepted for processing.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: apikey",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"Config\": {\n        \"AdvancedOptions\": {\n            \"CapacityPercentage\": \"<integer>\",\n            \"Datastores\": [\n                \"<string>\",\n                \"<string>\"\n            ],\n            \"TransportSessions\": {\n                \"Mode\": \"<string>\",\n                \"UseSsl\": \"<boolean>\",\n                \"UserDefined\": \"<boolean>\"\n            }\n        },\n        \"ApplicationData\": \"<object>\",\n        \"AutoUpdateConfig\": \"<boolean>\",\n        \"Credential\": {\n            \"ObjectId\": \"<string>\",\n            \"Password\": \"<string>\",\n            \"Type\": \"<string>\",\n            \"UserName\": \"<string>\"\n        },\n        \"DeployProxy\": \"<boolean>\",\n        \"Disabled\": \"<boolean>\",\n        \"HealthCheckInterval\": \"<integer>\",\n        \"HostName\": \"<string>\",\n        \"InstanceUuid\": \"<string>\",\n        \"MORef\": \"<string>\",\n        \"Operation\": \"<string>\",\n        \"Port\": \"<integer>\",\n        \"ProxyDeploymentConfig\": {\n            \"AdditionalVMNetworks\": [\n                {\n                    \"Fqdn\": \"<string>\",\n                    \"Gateway\": \"<string>\",\n                    \"IPProtocol\": \"<string>\",\n                    \"InterfaceName\": \"<string>\",\n                    \"IpAddress\": \"<string>\",\n                    \"MacAddress\": \"<string>\",\n                    \"MultiVlanEnabled\": \"<boolean>\",\n                    \"NetMask\": \"<string>\",\n                    \"NetworkMoref\": \"<string>\",\n                    \"Vlans\": [\n                        {\n                            \"Gateway\": \"<string>\",\n                            \"IpAddress\": \"<string>\",\n                            \"Mtu\": \"<integer>\",\n                            \"Netmask\": \"<string>\",\n                            \"Routes\": [\n                                {\n                                    \"Gateway\": \"<string>\",\n                                    \"Netmask\": \"<string>\",\n                                    \"Source\": \"<string>\",\n                                    \"Type\": \"<string>\"\n                                },\n                                {\n                                    \"Gateway\": \"<string>\",\n                                    \"Netmask\": \"<string>\",\n                                    \"Source\": \"<string>\",\n                                    \"Type\": \"<string>\"\n                                }\n                            ],\n                            \"VlanId\": \"<integer>\"\n                        },\n                        {\n                            \"Gateway\": \"<string>\",\n                            \"IpAddress\": \"<string>\",\n                            \"Mtu\": \"<integer>\",\n                            \"Netmask\": \"<string>\",\n                            \"Routes\": [\n                                {\n                                    \"Gateway\": \"<string>\",\n                                    \"Netmask\": \"<string>\",\n                                    \"Source\": \"<string>\",\n                                    \"Type\": \"<string>\"\n                                },\n                                {\n                                    \"Gateway\": \"<string>\",\n                                    \"Netmask\": \"<string>\",\n                                    \"Source\": \"<string>\",\n                                    \"Type\": \"<string>\"\n                                }\n                            ],\n                            \"VlanId\": \"<integer>\"\n                        }\n                    ]\n                },\n                {\n                    \"Fqdn\": \"<string>\",\n                    \"Gateway\": \"<string>\",\n                    \"IPProtocol\": \"<string>\",\n                    \"InterfaceName\": \"<string>\",\n                    \"IpAddress\": \"<string>\",\n                    \"MacAddress\": \"<string>\",\n                    \"MultiVlanEnabled\": \"<boolean>\",\n                    \"NetMask\": \"<string>\",\n                    \"NetworkMoref\": \"<string>\",\n                    \"Vlans\": [\n                        {\n                            \"Gateway\": \"<string>\",\n                            \"IpAddress\": \"<string>\",\n                            \"Mtu\": \"<integer>\",\n                            \"Netmask\": \"<string>\",\n                            \"Routes\": [\n                                {\n                                    \"Gateway\": \"<string>\",\n                                    \"Netmask\": \"<string>\",\n                                    \"Source\": \"<string>\",\n                                    \"Type\": \"<string>\"\n                                },\n                                {\n                                    \"Gateway\": \"<string>\",\n                                    \"Netmask\": \"<string>\",\n                                    \"Source\": \"<string>\",\n                                    \"Type\": \"<string>\"\n                                }\n                            ],\n                            \"VlanId\": \"<integer>\"\n                        },\n                        {\n                            \"Gateway\": \"<string>\",\n                            \"IpAddress\": \"<string>\",\n                            \"Mtu\": \"<integer>\",\n                            \"Netmask\": \"<string>\",\n                            \"Routes\": [\n                                {\n                                    \"Gateway\": \"<string>\",\n                                    \"Netmask\": \"<string>\",\n                                    \"Source\": \"<string>\",\n                                    \"Type\": \"<string>\"\n                                },\n                                {\n                                    \"Gateway\": \"<string>\",\n                                    \"Netmask\": \"<string>\",\n                                    \"Source\": \"<string>\",\n                                    \"Type\": \"<string>\"\n                                }\n                            ],\n                            \"VlanId\": \"<integer>\"\n                        }\n                    ]\n                }\n            ],\n            \"Dns\": \"<string>\",\n            \"Fqdn\": \"<string>\",\n            \"Gateway\": \"<string>\",\n            \"IPProtocol\": \"<string>\",\n            \"InterfaceName\": \"<string>\",\n            \"IpAddress\": \"<string>\",\n            \"Location\": {\n                \"ClusterMoref\": \"<string>\",\n                \"DatastoreMoref\": \"<string>\",\n                \"FolderMoref\": \"<string>\",\n                \"HostMoref\": \"<string>\",\n                \"NetworkMoref\": \"<string>\",\n                \"ResourcePoolMoref\": \"<string>\"\n            },\n            \"MacAddress\": \"<string>\",\n            \"MultiVlanEnabled\": \"<boolean>\",\n            \"NTPServer\": \"<string>\",\n            \"NetMask\": \"<string>\",\n            \"NetworkMoref\": \"<string>\",\n            \"OvaFile\": \"<string>\",\n            \"RootCredential\": {\n                \"ObjectId\": \"<string>\",\n                \"Password\": \"<string>\",\n                \"Type\": \"<string>\",\n                \"UserName\": \"<string>\"\n            },\n            \"Timezone\": \"<string>\",\n            \"VMName\": \"<string>\",\n            \"Vlans\": [\n                {\n                    \"Gateway\": \"<string>\",\n                    \"IpAddress\": \"<string>\",\n                    \"Mtu\": \"<integer>\",\n                    \"Netmask\": \"<string>\",\n                    \"Routes\": [\n                        {\n                            \"Gateway\": \"<string>\",\n                            \"Netmask\": \"<string>\",\n                            \"Source\": \"<string>\",\n                            \"Type\": \"<string>\"\n                        },\n                        {\n                            \"Gateway\": \"<string>\",\n                            \"Netmask\": \"<string>\",\n                            \"Source\": \"<string>\",\n                            \"Type\": \"<string>\"\n                        }\n                    ],\n                    \"VlanId\": \"<integer>\"\n                },\n                {\n                    \"Gateway\": \"<string>\",\n                    \"IpAddress\": \"<string>\",\n                    \"Mtu\": \"<integer>\",\n                    \"Netmask\": \"<string>\",\n                    \"Routes\": [\n                        {\n                            \"Gateway\": \"<string>\",\n                            \"Netmask\": \"<string>\",\n                            \"Source\": \"<string>\",\n                            \"Type\": \"<string>\"\n                        },\n                        {\n                            \"Gateway\": \"<string>\",\n                            \"Netmask\": \"<string>\",\n                            \"Source\": \"<string>\",\n                            \"Type\": \"<string>\"\n                        }\n                    ],\n                    \"VlanId\": \"<integer>\"\n                }\n            ]\n        },\n        \"ProxyType\": \"<string>\",\n        \"SkipRegistration\": \"<boolean>\",\n        \"SupportedProtectionTypes\": [\n            \"<string>\",\n            \"<string>\"\n        ],\n        \"UpdateCredentials\": \"<boolean>\",\n        \"VimServerRef\": {\n            \"ObjectId\": \"<string>\",\n            \"Type\": \"<string>\",\n            \"Vcenter\": {\n                \"HostName\": \"<string>\",\n                \"HypervisorMode\": \"<string>\",\n                \"TcpPort\": \"<long>\",\n                \"UserName\": \"<string>\",\n                \"UserPassword\": \"<string>\"\n            }\n        }\n    },\n    \"Id\": \"<string>\",\n    \"Status\": {\n        \"Aliases\": [\n            \"<string>\",\n            \"<string>\"\n        ],\n        \"AllottedModes\": [\n            {\n                \"CapacityUnits\": \"<integer>\",\n                \"ReservedBy\": {\n                    \"SessionId\": \"<string>\",\n                    \"SessionType\": \"<string>\"\n                },\n                \"TotalControlSessions\": \"<integer>\",\n                \"TotalTransportSessions\": \"<integer>\"\n            },\n            {\n                \"CapacityUnits\": \"<integer>\",\n                \"ReservedBy\": {\n                    \"SessionId\": \"<string>\",\n                    \"SessionType\": \"<string>\"\n                },\n                \"TotalControlSessions\": \"<integer>\",\n                \"TotalTransportSessions\": \"<integer>\"\n            }\n        ],\n        \"DaemonStatus\": [\n            {\n                \"DaemonName\": \"<string>\",\n                \"Resources\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"Status\": \"<string>\"\n            },\n            {\n                \"DaemonName\": \"<string>\",\n                \"Resources\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"Status\": \"<string>\"\n            }\n        ],\n        \"DatacenterMoref\": \"<string>\",\n        \"Datastores\": [\n            \"<string>\",\n            \"<string>\"\n        ],\n        \"DeployedTime\": \"<string>\",\n        \"HostedComputeRes\": {\n            \"MOref\": \"<string>\",\n            \"Type\": \"<string>\"\n        },\n        \"LastCheckedTime\": \"<string>\",\n        \"LastOperation\": {\n            \"Detail\": \"<string>\",\n            \"Operation\": \"<string>\",\n            \"Status\": \"<string>\"\n        },\n        \"ModesAvailable\": {\n            \"CapacityUnits\": \"<integer>\",\n            \"Mode\": \"<string>\",\n            \"UseSsl\": \"<boolean>\"\n        },\n        \"Networks\": [\n            {\n                \"Connected\": \"<boolean>\",\n                \"DeviceLabel\": \"<string>\",\n                \"Dns\": {\n                    \"DhcpEnabled\": \"<boolean>\",\n                    \"DomainName\": \"<string>\",\n                    \"HostName\": \"<string>\",\n                    \"SearchDomains\": [\n                        \"<string>\",\n                        \"<string>\"\n                    ],\n                    \"Servers\": [\n                        \"<string>\",\n                        \"<string>\"\n                    ]\n                },\n                \"GatewayV4\": \"<string>\",\n                \"GatewayV6\": \"<string>\",\n                \"IpAddrV4\": {\n                    \"Address\": \"<string>\",\n                    \"IpCidr\": \"<string>\",\n                    \"NetMask\": \"<string>\",\n                    \"PrefixLength\": \"<integer>\",\n                    \"SubnetCidr\": \"<string>\",\n                    \"Version\": \"<string>\"\n                },\n                \"IpAddrV6\": {\n                    \"Address\": \"<string>\",\n                    \"IpCidr\": \"<string>\",\n                    \"NetMask\": \"<string>\",\n                    \"PrefixLength\": \"<integer>\",\n                    \"SubnetCidr\": \"<string>\",\n                    \"Version\": \"<string>\"\n                },\n                \"MAC\": \"<string>\",\n                \"VirtualDeviceId\": \"<integer>\",\n                \"VirtualNetworkName\": \"<string>\"\n            },\n            {\n                \"Connected\": \"<boolean>\",\n                \"DeviceLabel\": \"<string>\",\n                \"Dns\": {\n                    \"DhcpEnabled\": \"<boolean>\",\n                    \"DomainName\": \"<string>\",\n                    \"HostName\": \"<string>\",\n                    \"SearchDomains\": [\n                        \"<string>\",\n                        \"<string>\"\n                    ],\n                    \"Servers\": [\n                        \"<string>\",\n                        \"<string>\"\n                    ]\n                },\n                \"GatewayV4\": \"<string>\",\n                \"GatewayV6\": \"<string>\",\n                \"IpAddrV4\": {\n                    \"Address\": \"<string>\",\n                    \"IpCidr\": \"<string>\",\n                    \"NetMask\": \"<string>\",\n                    \"PrefixLength\": \"<integer>\",\n                    \"SubnetCidr\": \"<string>\",\n                    \"Version\": \"<string>\"\n                },\n                \"IpAddrV6\": {\n                    \"Address\": \"<string>\",\n                    \"IpCidr\": \"<string>\",\n                    \"NetMask\": \"<string>\",\n                    \"PrefixLength\": \"<integer>\",\n                    \"SubnetCidr\": \"<string>\",\n                    \"Version\": \"<string>\"\n                },\n                \"MAC\": \"<string>\",\n                \"VirtualDeviceId\": \"<integer>\",\n                \"VirtualNetworkName\": \"<string>\"\n            }\n        ],\n        \"PowerState\": \"<string>\",\n        \"ProxyDeployed\": \"<boolean>\",\n        \"ProxyRegistered\": \"<boolean>\",\n        \"ProxyState\": \"<string>\",\n        \"ProxyStatus\": {\n            \"Detail\": \"<string>\",\n            \"Status\": \"<string>\"\n        },\n        \"RegisteredTime\": \"<string>\",\n        \"Thumbprint\": \"<string>\",\n        \"Uuid\": \"<string>\",\n        \"Version\": \"<string>\",\n        \"VlanStatus\": [\n            {\n                \"Detail\": \"<string>\",\n                \"IpAddress\": \"<string>\",\n                \"Status\": \"<string>\",\n                \"VlanId\": \"<integer>\"\n            },\n            {\n                \"Detail\": \"<string>\",\n                \"IpAddress\": \"<string>\",\n                \"Status\": \"<string>\",\n                \"VlanId\": \"<integer>\"\n            }\n        ]\n    }\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/protection-engines/:id/proxies",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"protection-engines",
																":id",
																"proxies"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Accepted",
													"code": 202,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"Config\": {\n  \"AdvancedOptions\": {\n   \"CapacityPercentage\": 45629334,\n   \"Datastores\": [\n    \"proide\",\n    \"anim reprehenderit nostrud \"\n   ],\n   \"TransportSessions\": {\n    \"Mode\": \"HotaddPreferred\",\n    \"UseSsl\": false,\n    \"UserDefined\": true\n   }\n  },\n  \"ApplicationData\": {},\n  \"AutoUpdateConfig\": true,\n  \"Credential\": {\n   \"ObjectId\": \"labore mollit\",\n   \"Password\": \"dolor\",\n   \"Type\": \"Object\",\n   \"UserName\": \"Ut\"\n  },\n  \"DeployProxy\": true,\n  \"Disabled\": false,\n  \"HealthCheckInterval\": 82082786,\n  \"HostName\": \"ex veniam\",\n  \"InstanceUuid\": \"enim ex\",\n  \"MORef\": \"dolore incididunt sint\",\n  \"Operation\": \"upgrade\",\n  \"Port\": -81697983,\n  \"ProxyDeploymentConfig\": {\n   \"AdditionalVMNetworks\": [\n    {\n     \"Fqdn\": \"non\",\n     \"Gateway\": \"ullamco exercitation id irure qui\",\n     \"IPProtocol\": \"IPv4\",\n     \"InterfaceName\": \"voluptate\",\n     \"IpAddress\": \"laborum aliqua\",\n     \"MacAddress\": \"irure tempor\",\n     \"MultiVlanEnabled\": true,\n     \"NetMask\": \"in velit pariatur\",\n     \"NetworkMoref\": \"nisi\",\n     \"Vlans\": [\n      {\n       \"Gateway\": \"anim veniam officia id\",\n       \"IpAddress\": \"Excepteur Ut esse\",\n       \"Mtu\": -10182718,\n       \"Netmask\": \"ipsum in quis\",\n       \"Routes\": [\n        {\n         \"Gateway\": \"in cillum\",\n         \"Netmask\": \"incididunt ipsum ex reprehenderit sed\",\n         \"Source\": \"Ut nostrud\",\n         \"Type\": \"Excepteur proident in\"\n        },\n        {\n         \"Gateway\": \"aliqua elit\",\n         \"Netmask\": \"par\",\n         \"Source\": \"labore\",\n         \"Type\": \"et ullamco officia irure\"\n        }\n       ],\n       \"VlanId\": 50048506\n      },\n      {\n       \"Gateway\": \"exercitation aliqua fugiat\",\n       \"IpAddress\": \"voluptate laboris in\",\n       \"Mtu\": -77893727,\n       \"Netmask\": \"exercitatio\",\n       \"Routes\": [\n        {\n         \"Gateway\": \"Lorem\",\n         \"Netmask\": \"Ut est id\",\n         \"Source\": \"reprehenderit nostrud et minim\",\n         \"Type\": \"nisi aliqua id\"\n        },\n        {\n         \"Gateway\": \"ut cupidatat commodo incididunt\",\n         \"Netmask\": \"dolor cupidatat\",\n         \"Source\": \"commodo Excepteur sint non labore\",\n         \"Type\": \"voluptate id Excepteur dolore occ\"\n        }\n       ],\n       \"VlanId\": -47644326\n      }\n     ]\n    },\n    {\n     \"Fqdn\": \"cupidatat adipisicing aliquip in\",\n     \"Gateway\": \"in velit\",\n     \"IPProtocol\": \"IPv4\",\n     \"InterfaceName\": \"aliqua proid\",\n     \"IpAddress\": \"occaecat aliquip do\",\n     \"MacAddress\": \"fugiat ea\",\n     \"MultiVlanEnabled\": true,\n     \"NetMask\": \"eu officia ad voluptate\",\n     \"NetworkMoref\": \"cupidatat dolore elit irure\",\n     \"Vlans\": [\n      {\n       \"Gateway\": \"magna quis consequat nostrud\",\n       \"IpAddress\": \"aute\",\n       \"Mtu\": -51977868,\n       \"Netmask\": \"officia sunt elit labore\",\n       \"Routes\": [\n        {\n         \"Gateway\": \"magna enim\",\n         \"Netmask\": \"est l\",\n         \"Source\": \"Duis cillum ut id officia\",\n         \"Type\": \"ut sint\"\n        },\n        {\n         \"Gateway\": \"Lorem aliqua ullamco aliquip Duis\",\n         \"Netmask\": \"eiusmod non irure\",\n         \"Source\": \"sint\",\n         \"Type\": \"elit magna id\"\n        }\n       ],\n       \"VlanId\": 28111220\n      },\n      {\n       \"Gateway\": \"aute non sunt\",\n       \"IpAddress\": \"veniam elit ut\",\n       \"Mtu\": -36377772,\n       \"Netmask\": \"in laborum Lorem\",\n       \"Routes\": [\n        {\n         \"Gateway\": \"ut dolor anim\",\n         \"Netmask\": \"nulla exercitation\",\n         \"Source\": \"pariatur in Lorem veniam\",\n         \"Type\": \"dolor reprehenderit dolor\"\n        },\n        {\n         \"Gateway\": \"nostrud voluptate\",\n         \"Netmask\": \"minim nostrud ullamco quis\",\n         \"Source\": \"voluptate anim\",\n         \"Type\": \"ex minim tempor\"\n        }\n       ],\n       \"VlanId\": 17088502\n      }\n     ]\n    }\n   ],\n   \"Dns\": \"dolor proident elit\",\n   \"Fqdn\": \"officia deserunt\",\n   \"Gateway\": \"proident amet dolore sint ad\",\n   \"IPProtocol\": \"IPv4\",\n   \"InterfaceName\": \"Exc\",\n   \"IpAddress\": \"nulla occaecat Duis\",\n   \"Location\": {\n    \"ClusterMoref\": \"sed\",\n    \"DatastoreMoref\": \"eiusmod anim\",\n    \"FolderMoref\": \"in adipisicing Excepteur minim\",\n    \"HostMoref\": \"elit id eu velit\",\n    \"NetworkMoref\": \"no\",\n    \"ResourcePoolMoref\": \"ex cillum laborum\"\n   },\n   \"MacAddress\": \"aute eiusmod do\",\n   \"MultiVlanEnabled\": true,\n   \"NTPServer\": \"fugiat culpa\",\n   \"NetMask\": \"reprehenderit ut Lorem veniam\",\n   \"NetworkMoref\": \"enim irure minim\",\n   \"OvaFile\": \"dolor ipsum velit\",\n   \"RootCredential\": {\n    \"ObjectId\": \"enim\",\n    \"Password\": \"occaecat sed\",\n    \"Type\": \"ObjectId\",\n    \"UserName\": \"mollit eiusmod\"\n   },\n   \"Timezone\": \"incididunt velit fugiat\",\n   \"VMName\": \"exercitation eu ex proid\",\n   \"Vlans\": [\n    {\n     \"Gateway\": \"d\",\n     \"IpAddress\": \"incididunt ex laboris aute\",\n     \"Mtu\": -49634533,\n     \"Netmask\": \"consec\",\n     \"Routes\": [\n      {\n       \"Gateway\": \"tempor dolor dolore\",\n       \"Netmask\": \"ut ea sint ex\",\n       \"Source\": \"eiusmo\",\n       \"Type\": \"labore ex Ut Duis\"\n      },\n      {\n       \"Gateway\": \"irure nisi commodo veniam culpa\",\n       \"Netmask\": \"occaecat qui in proident\",\n       \"Source\": \"laborum sed velit labore\",\n       \"Type\": \"esse officia est Ut magna\"\n      }\n     ],\n     \"VlanId\": -48416384\n    },\n    {\n     \"Gateway\": \"in quis\",\n     \"IpAddress\": \"Excepteur\",\n     \"Mtu\": -43416269,\n     \"Netmask\": \"in cupidatat sed do\",\n     \"Routes\": [\n      {\n       \"Gateway\": \"anim irure\",\n       \"Netmask\": \"irure exerci\",\n       \"Source\": \"qui adipisicing cillum\",\n       \"Type\": \"tempor velit in\"\n      },\n      {\n       \"Gateway\": \"dolore\",\n       \"Netmask\": \"ipsum commodo sunt laboris ullamco\",\n       \"Source\": \"ex ad dolor eiusmod tempor\",\n       \"Type\": \"Duis reprehenderit sed ea commodo\"\n      }\n     ],\n     \"VlanId\": 89505155\n    }\n   ]\n  },\n  \"ProxyType\": \"External\",\n  \"SkipRegistration\": false,\n  \"SupportedProtectionTypes\": [\n   \"Kubernetes\",\n   \"VM\"\n  ],\n  \"UpdateCredentials\": true,\n  \"VimServerRef\": {\n   \"ObjectId\": \"ea esse\",\n   \"Type\": \"ObjectId\",\n   \"Vcenter\": {\n    \"HostName\": \"in Ut non\",\n    \"HypervisorMode\": \"vSphere\",\n    \"TcpPort\": -12918063,\n    \"UserName\": \"do\",\n    \"UserPassword\": \"ut veniam aute\"\n   }\n  }\n },\n \"Id\": \"ex aliqua\",\n \"Status\": {\n  \"Aliases\": [\n   \"dolor ad ea tempor minim\",\n   \"in ut ullamco sed\"\n  ],\n  \"AllottedModes\": [\n   {\n    \"CapacityUnits\": -98770877,\n    \"ReservedBy\": {\n     \"SessionId\": \"nulla et\",\n     \"SessionType\": \"in reprehenderit\"\n    },\n    \"TotalControlSessions\": 56355273,\n    \"TotalTransportSessions\": 88629989\n   },\n   {\n    \"CapacityUnits\": 12538061,\n    \"ReservedBy\": {\n     \"SessionId\": \"in eiusmod Excepteur in amet\",\n     \"SessionType\": \"Duis la\"\n    },\n    \"TotalControlSessions\": -92288316,\n    \"TotalTransportSessions\": 54818020\n   }\n  ],\n  \"DaemonStatus\": [\n   {\n    \"DaemonName\": \"occaecat\",\n    \"Resources\": [\n     \"consequat officia labore minim\",\n     \"dolor\"\n    ],\n    \"Status\": \"Duis reprehenderit ut\"\n   },\n   {\n    \"DaemonName\": \"est Ut eu non\",\n    \"Resources\": [\n     \"ipsum ullamco ad culpa in\",\n     \"laboris dolor commodo\"\n    ],\n    \"Status\": \"ut\"\n   }\n  ],\n  \"DatacenterMoref\": \"in officia\",\n  \"Datastores\": [\n   \"sed\",\n   \"ut sed\"\n  ],\n  \"DeployedTime\": \"anim aliquip\",\n  \"HostedComputeRes\": {\n   \"MOref\": \"id ullamco nisi\",\n   \"Type\": \"dolor sit eu\"\n  },\n  \"LastCheckedTime\": \"consequat velit in\",\n  \"LastOperation\": {\n   \"Detail\": \"laboris in commodo ad fugiat\",\n   \"Operation\": \"version\",\n   \"Status\": \"Mounting\"\n  },\n  \"ModesAvailable\": {\n   \"CapacityUnits\": -637642,\n   \"Mode\": \"HotaddOnly\",\n   \"UseSsl\": true\n  },\n  \"Networks\": [\n   {\n    \"Connected\": false,\n    \"DeviceLabel\": \"reprehenderit\",\n    \"Dns\": {\n     \"DhcpEnabled\": true,\n     \"DomainName\": \"exercitation in consectetur occaecat id\",\n     \"HostName\": \"dolor Except\",\n     \"SearchDomains\": [\n      \"non tempor nisi aliquip\",\n      \"ea\"\n     ],\n     \"Servers\": [\n      \"ut reprehenderit\",\n      \"sint qui magna\"\n     ]\n    },\n    \"GatewayV4\": \"consectetur velit exercitation labore\",\n    \"GatewayV6\": \"laboris non in consequat sit\",\n    \"IpAddrV4\": {\n     \"Address\": \"cupidatat aliquip\",\n     \"IpCidr\": \"quis\",\n     \"NetMask\": \"aliquip eu\",\n     \"PrefixLength\": 98506142,\n     \"SubnetCidr\": \"conse\",\n     \"Version\": \"IPv4\"\n    },\n    \"IpAddrV6\": {\n     \"Address\": \"labore\",\n     \"IpCidr\": \"dolor Lorem\",\n     \"NetMask\": \"labori\",\n     \"PrefixLength\": 7850890,\n     \"SubnetCidr\": \"veniam dolor\",\n     \"Version\": \"IPv4\"\n    },\n    \"MAC\": \"commodo Lorem minim cupidatat laborum\",\n    \"VirtualDeviceId\": 64607708,\n    \"VirtualNetworkName\": \"ut\"\n   },\n   {\n    \"Connected\": false,\n    \"DeviceLabel\": \"ut nostrud id quis\",\n    \"Dns\": {\n     \"DhcpEnabled\": true,\n     \"DomainName\": \"elit\",\n     \"HostName\": \"nisi irure sit\",\n     \"SearchDomains\": [\n      \"enim\",\n      \"officia id non dolore et\"\n     ],\n     \"Servers\": [\n      \"sint pariatur deserunt aute\",\n      \"fugiat magna\"\n     ]\n    },\n    \"GatewayV4\": \"dolore\",\n    \"GatewayV6\": \"occaecat minim ea\",\n    \"IpAddrV4\": {\n     \"Address\": \"incididunt\",\n     \"IpCidr\": \"ullamco nulla\",\n     \"NetMask\": \"pariatur ea occaecat ipsum nisi\",\n     \"PrefixLength\": -94611769,\n     \"SubnetCidr\": \"nos\",\n     \"Version\": \"IPv6\"\n    },\n    \"IpAddrV6\": {\n     \"Address\": \"do Excepteur ad elit\",\n     \"IpCidr\": \"minim nostrud fugiat nulla\",\n     \"NetMask\": \"tempor sunt\",\n     \"PrefixLength\": 87574354,\n     \"SubnetCidr\": \"proident esse\",\n     \"Version\": \"IPv4\"\n    },\n    \"MAC\": \"occaecat et do consequat\",\n    \"VirtualDeviceId\": 92931755,\n    \"VirtualNetworkName\": \"consequat\"\n   }\n  ],\n  \"PowerState\": \"Suspended\",\n  \"ProxyDeployed\": true,\n  \"ProxyRegistered\": false,\n  \"ProxyState\": \"READY\",\n  \"ProxyStatus\": {\n   \"Detail\": \"ea non mollit\",\n   \"Status\": \"Ready\"\n  },\n  \"RegisteredTime\": \"exercitation ad commodo\",\n  \"Thumbprint\": \"u\",\n  \"Uuid\": \"consequat est nulla labore\",\n  \"Version\": \"sint\",\n  \"VlanStatus\": [\n   {\n    \"Detail\": \"in labore in in\",\n    \"IpAddress\": \"occaecat anim ex exercitation\",\n    \"Status\": \"CONNECTED\",\n    \"VlanId\": -67427392\n   },\n   {\n    \"Detail\": \"ipsum dolor\",\n    \"IpAddress\": \"est in ut\",\n    \"Status\": \"CONNECTED\",\n    \"VlanId\": 3627378\n   }\n  ]\n }\n}"
												},
												{
													"name": "The requestor is not allowed to perform this operation.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: apikey",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"Config\": {\n        \"AdvancedOptions\": {\n            \"CapacityPercentage\": \"<integer>\",\n            \"Datastores\": [\n                \"<string>\",\n                \"<string>\"\n            ],\n            \"TransportSessions\": {\n                \"Mode\": \"<string>\",\n                \"UseSsl\": \"<boolean>\",\n                \"UserDefined\": \"<boolean>\"\n            }\n        },\n        \"ApplicationData\": \"<object>\",\n        \"AutoUpdateConfig\": \"<boolean>\",\n        \"Credential\": {\n            \"ObjectId\": \"<string>\",\n            \"Password\": \"<string>\",\n            \"Type\": \"<string>\",\n            \"UserName\": \"<string>\"\n        },\n        \"DeployProxy\": \"<boolean>\",\n        \"Disabled\": \"<boolean>\",\n        \"HealthCheckInterval\": \"<integer>\",\n        \"HostName\": \"<string>\",\n        \"InstanceUuid\": \"<string>\",\n        \"MORef\": \"<string>\",\n        \"Operation\": \"<string>\",\n        \"Port\": \"<integer>\",\n        \"ProxyDeploymentConfig\": {\n            \"AdditionalVMNetworks\": [\n                {\n                    \"Fqdn\": \"<string>\",\n                    \"Gateway\": \"<string>\",\n                    \"IPProtocol\": \"<string>\",\n                    \"InterfaceName\": \"<string>\",\n                    \"IpAddress\": \"<string>\",\n                    \"MacAddress\": \"<string>\",\n                    \"MultiVlanEnabled\": \"<boolean>\",\n                    \"NetMask\": \"<string>\",\n                    \"NetworkMoref\": \"<string>\",\n                    \"Vlans\": [\n                        {\n                            \"Gateway\": \"<string>\",\n                            \"IpAddress\": \"<string>\",\n                            \"Mtu\": \"<integer>\",\n                            \"Netmask\": \"<string>\",\n                            \"Routes\": [\n                                {\n                                    \"Gateway\": \"<string>\",\n                                    \"Netmask\": \"<string>\",\n                                    \"Source\": \"<string>\",\n                                    \"Type\": \"<string>\"\n                                },\n                                {\n                                    \"Gateway\": \"<string>\",\n                                    \"Netmask\": \"<string>\",\n                                    \"Source\": \"<string>\",\n                                    \"Type\": \"<string>\"\n                                }\n                            ],\n                            \"VlanId\": \"<integer>\"\n                        },\n                        {\n                            \"Gateway\": \"<string>\",\n                            \"IpAddress\": \"<string>\",\n                            \"Mtu\": \"<integer>\",\n                            \"Netmask\": \"<string>\",\n                            \"Routes\": [\n                                {\n                                    \"Gateway\": \"<string>\",\n                                    \"Netmask\": \"<string>\",\n                                    \"Source\": \"<string>\",\n                                    \"Type\": \"<string>\"\n                                },\n                                {\n                                    \"Gateway\": \"<string>\",\n                                    \"Netmask\": \"<string>\",\n                                    \"Source\": \"<string>\",\n                                    \"Type\": \"<string>\"\n                                }\n                            ],\n                            \"VlanId\": \"<integer>\"\n                        }\n                    ]\n                },\n                {\n                    \"Fqdn\": \"<string>\",\n                    \"Gateway\": \"<string>\",\n                    \"IPProtocol\": \"<string>\",\n                    \"InterfaceName\": \"<string>\",\n                    \"IpAddress\": \"<string>\",\n                    \"MacAddress\": \"<string>\",\n                    \"MultiVlanEnabled\": \"<boolean>\",\n                    \"NetMask\": \"<string>\",\n                    \"NetworkMoref\": \"<string>\",\n                    \"Vlans\": [\n                        {\n                            \"Gateway\": \"<string>\",\n                            \"IpAddress\": \"<string>\",\n                            \"Mtu\": \"<integer>\",\n                            \"Netmask\": \"<string>\",\n                            \"Routes\": [\n                                {\n                                    \"Gateway\": \"<string>\",\n                                    \"Netmask\": \"<string>\",\n                                    \"Source\": \"<string>\",\n                                    \"Type\": \"<string>\"\n                                },\n                                {\n                                    \"Gateway\": \"<string>\",\n                                    \"Netmask\": \"<string>\",\n                                    \"Source\": \"<string>\",\n                                    \"Type\": \"<string>\"\n                                }\n                            ],\n                            \"VlanId\": \"<integer>\"\n                        },\n                        {\n                            \"Gateway\": \"<string>\",\n                            \"IpAddress\": \"<string>\",\n                            \"Mtu\": \"<integer>\",\n                            \"Netmask\": \"<string>\",\n                            \"Routes\": [\n                                {\n                                    \"Gateway\": \"<string>\",\n                                    \"Netmask\": \"<string>\",\n                                    \"Source\": \"<string>\",\n                                    \"Type\": \"<string>\"\n                                },\n                                {\n                                    \"Gateway\": \"<string>\",\n                                    \"Netmask\": \"<string>\",\n                                    \"Source\": \"<string>\",\n                                    \"Type\": \"<string>\"\n                                }\n                            ],\n                            \"VlanId\": \"<integer>\"\n                        }\n                    ]\n                }\n            ],\n            \"Dns\": \"<string>\",\n            \"Fqdn\": \"<string>\",\n            \"Gateway\": \"<string>\",\n            \"IPProtocol\": \"<string>\",\n            \"InterfaceName\": \"<string>\",\n            \"IpAddress\": \"<string>\",\n            \"Location\": {\n                \"ClusterMoref\": \"<string>\",\n                \"DatastoreMoref\": \"<string>\",\n                \"FolderMoref\": \"<string>\",\n                \"HostMoref\": \"<string>\",\n                \"NetworkMoref\": \"<string>\",\n                \"ResourcePoolMoref\": \"<string>\"\n            },\n            \"MacAddress\": \"<string>\",\n            \"MultiVlanEnabled\": \"<boolean>\",\n            \"NTPServer\": \"<string>\",\n            \"NetMask\": \"<string>\",\n            \"NetworkMoref\": \"<string>\",\n            \"OvaFile\": \"<string>\",\n            \"RootCredential\": {\n                \"ObjectId\": \"<string>\",\n                \"Password\": \"<string>\",\n                \"Type\": \"<string>\",\n                \"UserName\": \"<string>\"\n            },\n            \"Timezone\": \"<string>\",\n            \"VMName\": \"<string>\",\n            \"Vlans\": [\n                {\n                    \"Gateway\": \"<string>\",\n                    \"IpAddress\": \"<string>\",\n                    \"Mtu\": \"<integer>\",\n                    \"Netmask\": \"<string>\",\n                    \"Routes\": [\n                        {\n                            \"Gateway\": \"<string>\",\n                            \"Netmask\": \"<string>\",\n                            \"Source\": \"<string>\",\n                            \"Type\": \"<string>\"\n                        },\n                        {\n                            \"Gateway\": \"<string>\",\n                            \"Netmask\": \"<string>\",\n                            \"Source\": \"<string>\",\n                            \"Type\": \"<string>\"\n                        }\n                    ],\n                    \"VlanId\": \"<integer>\"\n                },\n                {\n                    \"Gateway\": \"<string>\",\n                    \"IpAddress\": \"<string>\",\n                    \"Mtu\": \"<integer>\",\n                    \"Netmask\": \"<string>\",\n                    \"Routes\": [\n                        {\n                            \"Gateway\": \"<string>\",\n                            \"Netmask\": \"<string>\",\n                            \"Source\": \"<string>\",\n                            \"Type\": \"<string>\"\n                        },\n                        {\n                            \"Gateway\": \"<string>\",\n                            \"Netmask\": \"<string>\",\n                            \"Source\": \"<string>\",\n                            \"Type\": \"<string>\"\n                        }\n                    ],\n                    \"VlanId\": \"<integer>\"\n                }\n            ]\n        },\n        \"ProxyType\": \"<string>\",\n        \"SkipRegistration\": \"<boolean>\",\n        \"SupportedProtectionTypes\": [\n            \"<string>\",\n            \"<string>\"\n        ],\n        \"UpdateCredentials\": \"<boolean>\",\n        \"VimServerRef\": {\n            \"ObjectId\": \"<string>\",\n            \"Type\": \"<string>\",\n            \"Vcenter\": {\n                \"HostName\": \"<string>\",\n                \"HypervisorMode\": \"<string>\",\n                \"TcpPort\": \"<long>\",\n                \"UserName\": \"<string>\",\n                \"UserPassword\": \"<string>\"\n            }\n        }\n    },\n    \"Id\": \"<string>\",\n    \"Status\": {\n        \"Aliases\": [\n            \"<string>\",\n            \"<string>\"\n        ],\n        \"AllottedModes\": [\n            {\n                \"CapacityUnits\": \"<integer>\",\n                \"ReservedBy\": {\n                    \"SessionId\": \"<string>\",\n                    \"SessionType\": \"<string>\"\n                },\n                \"TotalControlSessions\": \"<integer>\",\n                \"TotalTransportSessions\": \"<integer>\"\n            },\n            {\n                \"CapacityUnits\": \"<integer>\",\n                \"ReservedBy\": {\n                    \"SessionId\": \"<string>\",\n                    \"SessionType\": \"<string>\"\n                },\n                \"TotalControlSessions\": \"<integer>\",\n                \"TotalTransportSessions\": \"<integer>\"\n            }\n        ],\n        \"DaemonStatus\": [\n            {\n                \"DaemonName\": \"<string>\",\n                \"Resources\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"Status\": \"<string>\"\n            },\n            {\n                \"DaemonName\": \"<string>\",\n                \"Resources\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"Status\": \"<string>\"\n            }\n        ],\n        \"DatacenterMoref\": \"<string>\",\n        \"Datastores\": [\n            \"<string>\",\n            \"<string>\"\n        ],\n        \"DeployedTime\": \"<string>\",\n        \"HostedComputeRes\": {\n            \"MOref\": \"<string>\",\n            \"Type\": \"<string>\"\n        },\n        \"LastCheckedTime\": \"<string>\",\n        \"LastOperation\": {\n            \"Detail\": \"<string>\",\n            \"Operation\": \"<string>\",\n            \"Status\": \"<string>\"\n        },\n        \"ModesAvailable\": {\n            \"CapacityUnits\": \"<integer>\",\n            \"Mode\": \"<string>\",\n            \"UseSsl\": \"<boolean>\"\n        },\n        \"Networks\": [\n            {\n                \"Connected\": \"<boolean>\",\n                \"DeviceLabel\": \"<string>\",\n                \"Dns\": {\n                    \"DhcpEnabled\": \"<boolean>\",\n                    \"DomainName\": \"<string>\",\n                    \"HostName\": \"<string>\",\n                    \"SearchDomains\": [\n                        \"<string>\",\n                        \"<string>\"\n                    ],\n                    \"Servers\": [\n                        \"<string>\",\n                        \"<string>\"\n                    ]\n                },\n                \"GatewayV4\": \"<string>\",\n                \"GatewayV6\": \"<string>\",\n                \"IpAddrV4\": {\n                    \"Address\": \"<string>\",\n                    \"IpCidr\": \"<string>\",\n                    \"NetMask\": \"<string>\",\n                    \"PrefixLength\": \"<integer>\",\n                    \"SubnetCidr\": \"<string>\",\n                    \"Version\": \"<string>\"\n                },\n                \"IpAddrV6\": {\n                    \"Address\": \"<string>\",\n                    \"IpCidr\": \"<string>\",\n                    \"NetMask\": \"<string>\",\n                    \"PrefixLength\": \"<integer>\",\n                    \"SubnetCidr\": \"<string>\",\n                    \"Version\": \"<string>\"\n                },\n                \"MAC\": \"<string>\",\n                \"VirtualDeviceId\": \"<integer>\",\n                \"VirtualNetworkName\": \"<string>\"\n            },\n            {\n                \"Connected\": \"<boolean>\",\n                \"DeviceLabel\": \"<string>\",\n                \"Dns\": {\n                    \"DhcpEnabled\": \"<boolean>\",\n                    \"DomainName\": \"<string>\",\n                    \"HostName\": \"<string>\",\n                    \"SearchDomains\": [\n                        \"<string>\",\n                        \"<string>\"\n                    ],\n                    \"Servers\": [\n                        \"<string>\",\n                        \"<string>\"\n                    ]\n                },\n                \"GatewayV4\": \"<string>\",\n                \"GatewayV6\": \"<string>\",\n                \"IpAddrV4\": {\n                    \"Address\": \"<string>\",\n                    \"IpCidr\": \"<string>\",\n                    \"NetMask\": \"<string>\",\n                    \"PrefixLength\": \"<integer>\",\n                    \"SubnetCidr\": \"<string>\",\n                    \"Version\": \"<string>\"\n                },\n                \"IpAddrV6\": {\n                    \"Address\": \"<string>\",\n                    \"IpCidr\": \"<string>\",\n                    \"NetMask\": \"<string>\",\n                    \"PrefixLength\": \"<integer>\",\n                    \"SubnetCidr\": \"<string>\",\n                    \"Version\": \"<string>\"\n                },\n                \"MAC\": \"<string>\",\n                \"VirtualDeviceId\": \"<integer>\",\n                \"VirtualNetworkName\": \"<string>\"\n            }\n        ],\n        \"PowerState\": \"<string>\",\n        \"ProxyDeployed\": \"<boolean>\",\n        \"ProxyRegistered\": \"<boolean>\",\n        \"ProxyState\": \"<string>\",\n        \"ProxyStatus\": {\n            \"Detail\": \"<string>\",\n            \"Status\": \"<string>\"\n        },\n        \"RegisteredTime\": \"<string>\",\n        \"Thumbprint\": \"<string>\",\n        \"Uuid\": \"<string>\",\n        \"Version\": \"<string>\",\n        \"VlanStatus\": [\n            {\n                \"Detail\": \"<string>\",\n                \"IpAddress\": \"<string>\",\n                \"Status\": \"<string>\",\n                \"VlanId\": \"<integer>\"\n            },\n            {\n                \"Detail\": \"<string>\",\n                \"IpAddress\": \"<string>\",\n                \"Status\": \"<string>\",\n                \"VlanId\": \"<integer>\"\n            }\n        ]\n    }\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/protection-engines/:id/proxies",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"protection-engines",
																":id",
																"proxies"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
												},
												{
													"name": "The request is not valid.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: apikey",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"Config\": {\n        \"AdvancedOptions\": {\n            \"CapacityPercentage\": \"<integer>\",\n            \"Datastores\": [\n                \"<string>\",\n                \"<string>\"\n            ],\n            \"TransportSessions\": {\n                \"Mode\": \"<string>\",\n                \"UseSsl\": \"<boolean>\",\n                \"UserDefined\": \"<boolean>\"\n            }\n        },\n        \"ApplicationData\": \"<object>\",\n        \"AutoUpdateConfig\": \"<boolean>\",\n        \"Credential\": {\n            \"ObjectId\": \"<string>\",\n            \"Password\": \"<string>\",\n            \"Type\": \"<string>\",\n            \"UserName\": \"<string>\"\n        },\n        \"DeployProxy\": \"<boolean>\",\n        \"Disabled\": \"<boolean>\",\n        \"HealthCheckInterval\": \"<integer>\",\n        \"HostName\": \"<string>\",\n        \"InstanceUuid\": \"<string>\",\n        \"MORef\": \"<string>\",\n        \"Operation\": \"<string>\",\n        \"Port\": \"<integer>\",\n        \"ProxyDeploymentConfig\": {\n            \"AdditionalVMNetworks\": [\n                {\n                    \"Fqdn\": \"<string>\",\n                    \"Gateway\": \"<string>\",\n                    \"IPProtocol\": \"<string>\",\n                    \"InterfaceName\": \"<string>\",\n                    \"IpAddress\": \"<string>\",\n                    \"MacAddress\": \"<string>\",\n                    \"MultiVlanEnabled\": \"<boolean>\",\n                    \"NetMask\": \"<string>\",\n                    \"NetworkMoref\": \"<string>\",\n                    \"Vlans\": [\n                        {\n                            \"Gateway\": \"<string>\",\n                            \"IpAddress\": \"<string>\",\n                            \"Mtu\": \"<integer>\",\n                            \"Netmask\": \"<string>\",\n                            \"Routes\": [\n                                {\n                                    \"Gateway\": \"<string>\",\n                                    \"Netmask\": \"<string>\",\n                                    \"Source\": \"<string>\",\n                                    \"Type\": \"<string>\"\n                                },\n                                {\n                                    \"Gateway\": \"<string>\",\n                                    \"Netmask\": \"<string>\",\n                                    \"Source\": \"<string>\",\n                                    \"Type\": \"<string>\"\n                                }\n                            ],\n                            \"VlanId\": \"<integer>\"\n                        },\n                        {\n                            \"Gateway\": \"<string>\",\n                            \"IpAddress\": \"<string>\",\n                            \"Mtu\": \"<integer>\",\n                            \"Netmask\": \"<string>\",\n                            \"Routes\": [\n                                {\n                                    \"Gateway\": \"<string>\",\n                                    \"Netmask\": \"<string>\",\n                                    \"Source\": \"<string>\",\n                                    \"Type\": \"<string>\"\n                                },\n                                {\n                                    \"Gateway\": \"<string>\",\n                                    \"Netmask\": \"<string>\",\n                                    \"Source\": \"<string>\",\n                                    \"Type\": \"<string>\"\n                                }\n                            ],\n                            \"VlanId\": \"<integer>\"\n                        }\n                    ]\n                },\n                {\n                    \"Fqdn\": \"<string>\",\n                    \"Gateway\": \"<string>\",\n                    \"IPProtocol\": \"<string>\",\n                    \"InterfaceName\": \"<string>\",\n                    \"IpAddress\": \"<string>\",\n                    \"MacAddress\": \"<string>\",\n                    \"MultiVlanEnabled\": \"<boolean>\",\n                    \"NetMask\": \"<string>\",\n                    \"NetworkMoref\": \"<string>\",\n                    \"Vlans\": [\n                        {\n                            \"Gateway\": \"<string>\",\n                            \"IpAddress\": \"<string>\",\n                            \"Mtu\": \"<integer>\",\n                            \"Netmask\": \"<string>\",\n                            \"Routes\": [\n                                {\n                                    \"Gateway\": \"<string>\",\n                                    \"Netmask\": \"<string>\",\n                                    \"Source\": \"<string>\",\n                                    \"Type\": \"<string>\"\n                                },\n                                {\n                                    \"Gateway\": \"<string>\",\n                                    \"Netmask\": \"<string>\",\n                                    \"Source\": \"<string>\",\n                                    \"Type\": \"<string>\"\n                                }\n                            ],\n                            \"VlanId\": \"<integer>\"\n                        },\n                        {\n                            \"Gateway\": \"<string>\",\n                            \"IpAddress\": \"<string>\",\n                            \"Mtu\": \"<integer>\",\n                            \"Netmask\": \"<string>\",\n                            \"Routes\": [\n                                {\n                                    \"Gateway\": \"<string>\",\n                                    \"Netmask\": \"<string>\",\n                                    \"Source\": \"<string>\",\n                                    \"Type\": \"<string>\"\n                                },\n                                {\n                                    \"Gateway\": \"<string>\",\n                                    \"Netmask\": \"<string>\",\n                                    \"Source\": \"<string>\",\n                                    \"Type\": \"<string>\"\n                                }\n                            ],\n                            \"VlanId\": \"<integer>\"\n                        }\n                    ]\n                }\n            ],\n            \"Dns\": \"<string>\",\n            \"Fqdn\": \"<string>\",\n            \"Gateway\": \"<string>\",\n            \"IPProtocol\": \"<string>\",\n            \"InterfaceName\": \"<string>\",\n            \"IpAddress\": \"<string>\",\n            \"Location\": {\n                \"ClusterMoref\": \"<string>\",\n                \"DatastoreMoref\": \"<string>\",\n                \"FolderMoref\": \"<string>\",\n                \"HostMoref\": \"<string>\",\n                \"NetworkMoref\": \"<string>\",\n                \"ResourcePoolMoref\": \"<string>\"\n            },\n            \"MacAddress\": \"<string>\",\n            \"MultiVlanEnabled\": \"<boolean>\",\n            \"NTPServer\": \"<string>\",\n            \"NetMask\": \"<string>\",\n            \"NetworkMoref\": \"<string>\",\n            \"OvaFile\": \"<string>\",\n            \"RootCredential\": {\n                \"ObjectId\": \"<string>\",\n                \"Password\": \"<string>\",\n                \"Type\": \"<string>\",\n                \"UserName\": \"<string>\"\n            },\n            \"Timezone\": \"<string>\",\n            \"VMName\": \"<string>\",\n            \"Vlans\": [\n                {\n                    \"Gateway\": \"<string>\",\n                    \"IpAddress\": \"<string>\",\n                    \"Mtu\": \"<integer>\",\n                    \"Netmask\": \"<string>\",\n                    \"Routes\": [\n                        {\n                            \"Gateway\": \"<string>\",\n                            \"Netmask\": \"<string>\",\n                            \"Source\": \"<string>\",\n                            \"Type\": \"<string>\"\n                        },\n                        {\n                            \"Gateway\": \"<string>\",\n                            \"Netmask\": \"<string>\",\n                            \"Source\": \"<string>\",\n                            \"Type\": \"<string>\"\n                        }\n                    ],\n                    \"VlanId\": \"<integer>\"\n                },\n                {\n                    \"Gateway\": \"<string>\",\n                    \"IpAddress\": \"<string>\",\n                    \"Mtu\": \"<integer>\",\n                    \"Netmask\": \"<string>\",\n                    \"Routes\": [\n                        {\n                            \"Gateway\": \"<string>\",\n                            \"Netmask\": \"<string>\",\n                            \"Source\": \"<string>\",\n                            \"Type\": \"<string>\"\n                        },\n                        {\n                            \"Gateway\": \"<string>\",\n                            \"Netmask\": \"<string>\",\n                            \"Source\": \"<string>\",\n                            \"Type\": \"<string>\"\n                        }\n                    ],\n                    \"VlanId\": \"<integer>\"\n                }\n            ]\n        },\n        \"ProxyType\": \"<string>\",\n        \"SkipRegistration\": \"<boolean>\",\n        \"SupportedProtectionTypes\": [\n            \"<string>\",\n            \"<string>\"\n        ],\n        \"UpdateCredentials\": \"<boolean>\",\n        \"VimServerRef\": {\n            \"ObjectId\": \"<string>\",\n            \"Type\": \"<string>\",\n            \"Vcenter\": {\n                \"HostName\": \"<string>\",\n                \"HypervisorMode\": \"<string>\",\n                \"TcpPort\": \"<long>\",\n                \"UserName\": \"<string>\",\n                \"UserPassword\": \"<string>\"\n            }\n        }\n    },\n    \"Id\": \"<string>\",\n    \"Status\": {\n        \"Aliases\": [\n            \"<string>\",\n            \"<string>\"\n        ],\n        \"AllottedModes\": [\n            {\n                \"CapacityUnits\": \"<integer>\",\n                \"ReservedBy\": {\n                    \"SessionId\": \"<string>\",\n                    \"SessionType\": \"<string>\"\n                },\n                \"TotalControlSessions\": \"<integer>\",\n                \"TotalTransportSessions\": \"<integer>\"\n            },\n            {\n                \"CapacityUnits\": \"<integer>\",\n                \"ReservedBy\": {\n                    \"SessionId\": \"<string>\",\n                    \"SessionType\": \"<string>\"\n                },\n                \"TotalControlSessions\": \"<integer>\",\n                \"TotalTransportSessions\": \"<integer>\"\n            }\n        ],\n        \"DaemonStatus\": [\n            {\n                \"DaemonName\": \"<string>\",\n                \"Resources\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"Status\": \"<string>\"\n            },\n            {\n                \"DaemonName\": \"<string>\",\n                \"Resources\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"Status\": \"<string>\"\n            }\n        ],\n        \"DatacenterMoref\": \"<string>\",\n        \"Datastores\": [\n            \"<string>\",\n            \"<string>\"\n        ],\n        \"DeployedTime\": \"<string>\",\n        \"HostedComputeRes\": {\n            \"MOref\": \"<string>\",\n            \"Type\": \"<string>\"\n        },\n        \"LastCheckedTime\": \"<string>\",\n        \"LastOperation\": {\n            \"Detail\": \"<string>\",\n            \"Operation\": \"<string>\",\n            \"Status\": \"<string>\"\n        },\n        \"ModesAvailable\": {\n            \"CapacityUnits\": \"<integer>\",\n            \"Mode\": \"<string>\",\n            \"UseSsl\": \"<boolean>\"\n        },\n        \"Networks\": [\n            {\n                \"Connected\": \"<boolean>\",\n                \"DeviceLabel\": \"<string>\",\n                \"Dns\": {\n                    \"DhcpEnabled\": \"<boolean>\",\n                    \"DomainName\": \"<string>\",\n                    \"HostName\": \"<string>\",\n                    \"SearchDomains\": [\n                        \"<string>\",\n                        \"<string>\"\n                    ],\n                    \"Servers\": [\n                        \"<string>\",\n                        \"<string>\"\n                    ]\n                },\n                \"GatewayV4\": \"<string>\",\n                \"GatewayV6\": \"<string>\",\n                \"IpAddrV4\": {\n                    \"Address\": \"<string>\",\n                    \"IpCidr\": \"<string>\",\n                    \"NetMask\": \"<string>\",\n                    \"PrefixLength\": \"<integer>\",\n                    \"SubnetCidr\": \"<string>\",\n                    \"Version\": \"<string>\"\n                },\n                \"IpAddrV6\": {\n                    \"Address\": \"<string>\",\n                    \"IpCidr\": \"<string>\",\n                    \"NetMask\": \"<string>\",\n                    \"PrefixLength\": \"<integer>\",\n                    \"SubnetCidr\": \"<string>\",\n                    \"Version\": \"<string>\"\n                },\n                \"MAC\": \"<string>\",\n                \"VirtualDeviceId\": \"<integer>\",\n                \"VirtualNetworkName\": \"<string>\"\n            },\n            {\n                \"Connected\": \"<boolean>\",\n                \"DeviceLabel\": \"<string>\",\n                \"Dns\": {\n                    \"DhcpEnabled\": \"<boolean>\",\n                    \"DomainName\": \"<string>\",\n                    \"HostName\": \"<string>\",\n                    \"SearchDomains\": [\n                        \"<string>\",\n                        \"<string>\"\n                    ],\n                    \"Servers\": [\n                        \"<string>\",\n                        \"<string>\"\n                    ]\n                },\n                \"GatewayV4\": \"<string>\",\n                \"GatewayV6\": \"<string>\",\n                \"IpAddrV4\": {\n                    \"Address\": \"<string>\",\n                    \"IpCidr\": \"<string>\",\n                    \"NetMask\": \"<string>\",\n                    \"PrefixLength\": \"<integer>\",\n                    \"SubnetCidr\": \"<string>\",\n                    \"Version\": \"<string>\"\n                },\n                \"IpAddrV6\": {\n                    \"Address\": \"<string>\",\n                    \"IpCidr\": \"<string>\",\n                    \"NetMask\": \"<string>\",\n                    \"PrefixLength\": \"<integer>\",\n                    \"SubnetCidr\": \"<string>\",\n                    \"Version\": \"<string>\"\n                },\n                \"MAC\": \"<string>\",\n                \"VirtualDeviceId\": \"<integer>\",\n                \"VirtualNetworkName\": \"<string>\"\n            }\n        ],\n        \"PowerState\": \"<string>\",\n        \"ProxyDeployed\": \"<boolean>\",\n        \"ProxyRegistered\": \"<boolean>\",\n        \"ProxyState\": \"<string>\",\n        \"ProxyStatus\": {\n            \"Detail\": \"<string>\",\n            \"Status\": \"<string>\"\n        },\n        \"RegisteredTime\": \"<string>\",\n        \"Thumbprint\": \"<string>\",\n        \"Uuid\": \"<string>\",\n        \"Version\": \"<string>\",\n        \"VlanStatus\": [\n            {\n                \"Detail\": \"<string>\",\n                \"IpAddress\": \"<string>\",\n                \"Status\": \"<string>\",\n                \"VlanId\": \"<integer>\"\n            },\n            {\n                \"Detail\": \"<string>\",\n                \"IpAddress\": \"<string>\",\n                \"Status\": \"<string>\",\n                \"VlanId\": \"<integer>\"\n            }\n        ]\n    }\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/protection-engines/:id/proxies",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"protection-engines",
																":id",
																"proxies"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
												},
												{
													"name": "An unexpected error prevented the server from fulfilling your request.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: apikey",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"Config\": {\n        \"AdvancedOptions\": {\n            \"CapacityPercentage\": \"<integer>\",\n            \"Datastores\": [\n                \"<string>\",\n                \"<string>\"\n            ],\n            \"TransportSessions\": {\n                \"Mode\": \"<string>\",\n                \"UseSsl\": \"<boolean>\",\n                \"UserDefined\": \"<boolean>\"\n            }\n        },\n        \"ApplicationData\": \"<object>\",\n        \"AutoUpdateConfig\": \"<boolean>\",\n        \"Credential\": {\n            \"ObjectId\": \"<string>\",\n            \"Password\": \"<string>\",\n            \"Type\": \"<string>\",\n            \"UserName\": \"<string>\"\n        },\n        \"DeployProxy\": \"<boolean>\",\n        \"Disabled\": \"<boolean>\",\n        \"HealthCheckInterval\": \"<integer>\",\n        \"HostName\": \"<string>\",\n        \"InstanceUuid\": \"<string>\",\n        \"MORef\": \"<string>\",\n        \"Operation\": \"<string>\",\n        \"Port\": \"<integer>\",\n        \"ProxyDeploymentConfig\": {\n            \"AdditionalVMNetworks\": [\n                {\n                    \"Fqdn\": \"<string>\",\n                    \"Gateway\": \"<string>\",\n                    \"IPProtocol\": \"<string>\",\n                    \"InterfaceName\": \"<string>\",\n                    \"IpAddress\": \"<string>\",\n                    \"MacAddress\": \"<string>\",\n                    \"MultiVlanEnabled\": \"<boolean>\",\n                    \"NetMask\": \"<string>\",\n                    \"NetworkMoref\": \"<string>\",\n                    \"Vlans\": [\n                        {\n                            \"Gateway\": \"<string>\",\n                            \"IpAddress\": \"<string>\",\n                            \"Mtu\": \"<integer>\",\n                            \"Netmask\": \"<string>\",\n                            \"Routes\": [\n                                {\n                                    \"Gateway\": \"<string>\",\n                                    \"Netmask\": \"<string>\",\n                                    \"Source\": \"<string>\",\n                                    \"Type\": \"<string>\"\n                                },\n                                {\n                                    \"Gateway\": \"<string>\",\n                                    \"Netmask\": \"<string>\",\n                                    \"Source\": \"<string>\",\n                                    \"Type\": \"<string>\"\n                                }\n                            ],\n                            \"VlanId\": \"<integer>\"\n                        },\n                        {\n                            \"Gateway\": \"<string>\",\n                            \"IpAddress\": \"<string>\",\n                            \"Mtu\": \"<integer>\",\n                            \"Netmask\": \"<string>\",\n                            \"Routes\": [\n                                {\n                                    \"Gateway\": \"<string>\",\n                                    \"Netmask\": \"<string>\",\n                                    \"Source\": \"<string>\",\n                                    \"Type\": \"<string>\"\n                                },\n                                {\n                                    \"Gateway\": \"<string>\",\n                                    \"Netmask\": \"<string>\",\n                                    \"Source\": \"<string>\",\n                                    \"Type\": \"<string>\"\n                                }\n                            ],\n                            \"VlanId\": \"<integer>\"\n                        }\n                    ]\n                },\n                {\n                    \"Fqdn\": \"<string>\",\n                    \"Gateway\": \"<string>\",\n                    \"IPProtocol\": \"<string>\",\n                    \"InterfaceName\": \"<string>\",\n                    \"IpAddress\": \"<string>\",\n                    \"MacAddress\": \"<string>\",\n                    \"MultiVlanEnabled\": \"<boolean>\",\n                    \"NetMask\": \"<string>\",\n                    \"NetworkMoref\": \"<string>\",\n                    \"Vlans\": [\n                        {\n                            \"Gateway\": \"<string>\",\n                            \"IpAddress\": \"<string>\",\n                            \"Mtu\": \"<integer>\",\n                            \"Netmask\": \"<string>\",\n                            \"Routes\": [\n                                {\n                                    \"Gateway\": \"<string>\",\n                                    \"Netmask\": \"<string>\",\n                                    \"Source\": \"<string>\",\n                                    \"Type\": \"<string>\"\n                                },\n                                {\n                                    \"Gateway\": \"<string>\",\n                                    \"Netmask\": \"<string>\",\n                                    \"Source\": \"<string>\",\n                                    \"Type\": \"<string>\"\n                                }\n                            ],\n                            \"VlanId\": \"<integer>\"\n                        },\n                        {\n                            \"Gateway\": \"<string>\",\n                            \"IpAddress\": \"<string>\",\n                            \"Mtu\": \"<integer>\",\n                            \"Netmask\": \"<string>\",\n                            \"Routes\": [\n                                {\n                                    \"Gateway\": \"<string>\",\n                                    \"Netmask\": \"<string>\",\n                                    \"Source\": \"<string>\",\n                                    \"Type\": \"<string>\"\n                                },\n                                {\n                                    \"Gateway\": \"<string>\",\n                                    \"Netmask\": \"<string>\",\n                                    \"Source\": \"<string>\",\n                                    \"Type\": \"<string>\"\n                                }\n                            ],\n                            \"VlanId\": \"<integer>\"\n                        }\n                    ]\n                }\n            ],\n            \"Dns\": \"<string>\",\n            \"Fqdn\": \"<string>\",\n            \"Gateway\": \"<string>\",\n            \"IPProtocol\": \"<string>\",\n            \"InterfaceName\": \"<string>\",\n            \"IpAddress\": \"<string>\",\n            \"Location\": {\n                \"ClusterMoref\": \"<string>\",\n                \"DatastoreMoref\": \"<string>\",\n                \"FolderMoref\": \"<string>\",\n                \"HostMoref\": \"<string>\",\n                \"NetworkMoref\": \"<string>\",\n                \"ResourcePoolMoref\": \"<string>\"\n            },\n            \"MacAddress\": \"<string>\",\n            \"MultiVlanEnabled\": \"<boolean>\",\n            \"NTPServer\": \"<string>\",\n            \"NetMask\": \"<string>\",\n            \"NetworkMoref\": \"<string>\",\n            \"OvaFile\": \"<string>\",\n            \"RootCredential\": {\n                \"ObjectId\": \"<string>\",\n                \"Password\": \"<string>\",\n                \"Type\": \"<string>\",\n                \"UserName\": \"<string>\"\n            },\n            \"Timezone\": \"<string>\",\n            \"VMName\": \"<string>\",\n            \"Vlans\": [\n                {\n                    \"Gateway\": \"<string>\",\n                    \"IpAddress\": \"<string>\",\n                    \"Mtu\": \"<integer>\",\n                    \"Netmask\": \"<string>\",\n                    \"Routes\": [\n                        {\n                            \"Gateway\": \"<string>\",\n                            \"Netmask\": \"<string>\",\n                            \"Source\": \"<string>\",\n                            \"Type\": \"<string>\"\n                        },\n                        {\n                            \"Gateway\": \"<string>\",\n                            \"Netmask\": \"<string>\",\n                            \"Source\": \"<string>\",\n                            \"Type\": \"<string>\"\n                        }\n                    ],\n                    \"VlanId\": \"<integer>\"\n                },\n                {\n                    \"Gateway\": \"<string>\",\n                    \"IpAddress\": \"<string>\",\n                    \"Mtu\": \"<integer>\",\n                    \"Netmask\": \"<string>\",\n                    \"Routes\": [\n                        {\n                            \"Gateway\": \"<string>\",\n                            \"Netmask\": \"<string>\",\n                            \"Source\": \"<string>\",\n                            \"Type\": \"<string>\"\n                        },\n                        {\n                            \"Gateway\": \"<string>\",\n                            \"Netmask\": \"<string>\",\n                            \"Source\": \"<string>\",\n                            \"Type\": \"<string>\"\n                        }\n                    ],\n                    \"VlanId\": \"<integer>\"\n                }\n            ]\n        },\n        \"ProxyType\": \"<string>\",\n        \"SkipRegistration\": \"<boolean>\",\n        \"SupportedProtectionTypes\": [\n            \"<string>\",\n            \"<string>\"\n        ],\n        \"UpdateCredentials\": \"<boolean>\",\n        \"VimServerRef\": {\n            \"ObjectId\": \"<string>\",\n            \"Type\": \"<string>\",\n            \"Vcenter\": {\n                \"HostName\": \"<string>\",\n                \"HypervisorMode\": \"<string>\",\n                \"TcpPort\": \"<long>\",\n                \"UserName\": \"<string>\",\n                \"UserPassword\": \"<string>\"\n            }\n        }\n    },\n    \"Id\": \"<string>\",\n    \"Status\": {\n        \"Aliases\": [\n            \"<string>\",\n            \"<string>\"\n        ],\n        \"AllottedModes\": [\n            {\n                \"CapacityUnits\": \"<integer>\",\n                \"ReservedBy\": {\n                    \"SessionId\": \"<string>\",\n                    \"SessionType\": \"<string>\"\n                },\n                \"TotalControlSessions\": \"<integer>\",\n                \"TotalTransportSessions\": \"<integer>\"\n            },\n            {\n                \"CapacityUnits\": \"<integer>\",\n                \"ReservedBy\": {\n                    \"SessionId\": \"<string>\",\n                    \"SessionType\": \"<string>\"\n                },\n                \"TotalControlSessions\": \"<integer>\",\n                \"TotalTransportSessions\": \"<integer>\"\n            }\n        ],\n        \"DaemonStatus\": [\n            {\n                \"DaemonName\": \"<string>\",\n                \"Resources\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"Status\": \"<string>\"\n            },\n            {\n                \"DaemonName\": \"<string>\",\n                \"Resources\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"Status\": \"<string>\"\n            }\n        ],\n        \"DatacenterMoref\": \"<string>\",\n        \"Datastores\": [\n            \"<string>\",\n            \"<string>\"\n        ],\n        \"DeployedTime\": \"<string>\",\n        \"HostedComputeRes\": {\n            \"MOref\": \"<string>\",\n            \"Type\": \"<string>\"\n        },\n        \"LastCheckedTime\": \"<string>\",\n        \"LastOperation\": {\n            \"Detail\": \"<string>\",\n            \"Operation\": \"<string>\",\n            \"Status\": \"<string>\"\n        },\n        \"ModesAvailable\": {\n            \"CapacityUnits\": \"<integer>\",\n            \"Mode\": \"<string>\",\n            \"UseSsl\": \"<boolean>\"\n        },\n        \"Networks\": [\n            {\n                \"Connected\": \"<boolean>\",\n                \"DeviceLabel\": \"<string>\",\n                \"Dns\": {\n                    \"DhcpEnabled\": \"<boolean>\",\n                    \"DomainName\": \"<string>\",\n                    \"HostName\": \"<string>\",\n                    \"SearchDomains\": [\n                        \"<string>\",\n                        \"<string>\"\n                    ],\n                    \"Servers\": [\n                        \"<string>\",\n                        \"<string>\"\n                    ]\n                },\n                \"GatewayV4\": \"<string>\",\n                \"GatewayV6\": \"<string>\",\n                \"IpAddrV4\": {\n                    \"Address\": \"<string>\",\n                    \"IpCidr\": \"<string>\",\n                    \"NetMask\": \"<string>\",\n                    \"PrefixLength\": \"<integer>\",\n                    \"SubnetCidr\": \"<string>\",\n                    \"Version\": \"<string>\"\n                },\n                \"IpAddrV6\": {\n                    \"Address\": \"<string>\",\n                    \"IpCidr\": \"<string>\",\n                    \"NetMask\": \"<string>\",\n                    \"PrefixLength\": \"<integer>\",\n                    \"SubnetCidr\": \"<string>\",\n                    \"Version\": \"<string>\"\n                },\n                \"MAC\": \"<string>\",\n                \"VirtualDeviceId\": \"<integer>\",\n                \"VirtualNetworkName\": \"<string>\"\n            },\n            {\n                \"Connected\": \"<boolean>\",\n                \"DeviceLabel\": \"<string>\",\n                \"Dns\": {\n                    \"DhcpEnabled\": \"<boolean>\",\n                    \"DomainName\": \"<string>\",\n                    \"HostName\": \"<string>\",\n                    \"SearchDomains\": [\n                        \"<string>\",\n                        \"<string>\"\n                    ],\n                    \"Servers\": [\n                        \"<string>\",\n                        \"<string>\"\n                    ]\n                },\n                \"GatewayV4\": \"<string>\",\n                \"GatewayV6\": \"<string>\",\n                \"IpAddrV4\": {\n                    \"Address\": \"<string>\",\n                    \"IpCidr\": \"<string>\",\n                    \"NetMask\": \"<string>\",\n                    \"PrefixLength\": \"<integer>\",\n                    \"SubnetCidr\": \"<string>\",\n                    \"Version\": \"<string>\"\n                },\n                \"IpAddrV6\": {\n                    \"Address\": \"<string>\",\n                    \"IpCidr\": \"<string>\",\n                    \"NetMask\": \"<string>\",\n                    \"PrefixLength\": \"<integer>\",\n                    \"SubnetCidr\": \"<string>\",\n                    \"Version\": \"<string>\"\n                },\n                \"MAC\": \"<string>\",\n                \"VirtualDeviceId\": \"<integer>\",\n                \"VirtualNetworkName\": \"<string>\"\n            }\n        ],\n        \"PowerState\": \"<string>\",\n        \"ProxyDeployed\": \"<boolean>\",\n        \"ProxyRegistered\": \"<boolean>\",\n        \"ProxyState\": \"<string>\",\n        \"ProxyStatus\": {\n            \"Detail\": \"<string>\",\n            \"Status\": \"<string>\"\n        },\n        \"RegisteredTime\": \"<string>\",\n        \"Thumbprint\": \"<string>\",\n        \"Uuid\": \"<string>\",\n        \"Version\": \"<string>\",\n        \"VlanStatus\": [\n            {\n                \"Detail\": \"<string>\",\n                \"IpAddress\": \"<string>\",\n                \"Status\": \"<string>\",\n                \"VlanId\": \"<integer>\"\n            },\n            {\n                \"Detail\": \"<string>\",\n                \"IpAddress\": \"<string>\",\n                \"Status\": \"<string>\",\n                \"VlanId\": \"<integer>\"\n            }\n        ]\n    }\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/protection-engines/:id/proxies",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"protection-engines",
																":id",
																"proxies"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
												},
												{
													"name": "The requestor is not authorized to perform this operation.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: apikey",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"Config\": {\n        \"AdvancedOptions\": {\n            \"CapacityPercentage\": \"<integer>\",\n            \"Datastores\": [\n                \"<string>\",\n                \"<string>\"\n            ],\n            \"TransportSessions\": {\n                \"Mode\": \"<string>\",\n                \"UseSsl\": \"<boolean>\",\n                \"UserDefined\": \"<boolean>\"\n            }\n        },\n        \"ApplicationData\": \"<object>\",\n        \"AutoUpdateConfig\": \"<boolean>\",\n        \"Credential\": {\n            \"ObjectId\": \"<string>\",\n            \"Password\": \"<string>\",\n            \"Type\": \"<string>\",\n            \"UserName\": \"<string>\"\n        },\n        \"DeployProxy\": \"<boolean>\",\n        \"Disabled\": \"<boolean>\",\n        \"HealthCheckInterval\": \"<integer>\",\n        \"HostName\": \"<string>\",\n        \"InstanceUuid\": \"<string>\",\n        \"MORef\": \"<string>\",\n        \"Operation\": \"<string>\",\n        \"Port\": \"<integer>\",\n        \"ProxyDeploymentConfig\": {\n            \"AdditionalVMNetworks\": [\n                {\n                    \"Fqdn\": \"<string>\",\n                    \"Gateway\": \"<string>\",\n                    \"IPProtocol\": \"<string>\",\n                    \"InterfaceName\": \"<string>\",\n                    \"IpAddress\": \"<string>\",\n                    \"MacAddress\": \"<string>\",\n                    \"MultiVlanEnabled\": \"<boolean>\",\n                    \"NetMask\": \"<string>\",\n                    \"NetworkMoref\": \"<string>\",\n                    \"Vlans\": [\n                        {\n                            \"Gateway\": \"<string>\",\n                            \"IpAddress\": \"<string>\",\n                            \"Mtu\": \"<integer>\",\n                            \"Netmask\": \"<string>\",\n                            \"Routes\": [\n                                {\n                                    \"Gateway\": \"<string>\",\n                                    \"Netmask\": \"<string>\",\n                                    \"Source\": \"<string>\",\n                                    \"Type\": \"<string>\"\n                                },\n                                {\n                                    \"Gateway\": \"<string>\",\n                                    \"Netmask\": \"<string>\",\n                                    \"Source\": \"<string>\",\n                                    \"Type\": \"<string>\"\n                                }\n                            ],\n                            \"VlanId\": \"<integer>\"\n                        },\n                        {\n                            \"Gateway\": \"<string>\",\n                            \"IpAddress\": \"<string>\",\n                            \"Mtu\": \"<integer>\",\n                            \"Netmask\": \"<string>\",\n                            \"Routes\": [\n                                {\n                                    \"Gateway\": \"<string>\",\n                                    \"Netmask\": \"<string>\",\n                                    \"Source\": \"<string>\",\n                                    \"Type\": \"<string>\"\n                                },\n                                {\n                                    \"Gateway\": \"<string>\",\n                                    \"Netmask\": \"<string>\",\n                                    \"Source\": \"<string>\",\n                                    \"Type\": \"<string>\"\n                                }\n                            ],\n                            \"VlanId\": \"<integer>\"\n                        }\n                    ]\n                },\n                {\n                    \"Fqdn\": \"<string>\",\n                    \"Gateway\": \"<string>\",\n                    \"IPProtocol\": \"<string>\",\n                    \"InterfaceName\": \"<string>\",\n                    \"IpAddress\": \"<string>\",\n                    \"MacAddress\": \"<string>\",\n                    \"MultiVlanEnabled\": \"<boolean>\",\n                    \"NetMask\": \"<string>\",\n                    \"NetworkMoref\": \"<string>\",\n                    \"Vlans\": [\n                        {\n                            \"Gateway\": \"<string>\",\n                            \"IpAddress\": \"<string>\",\n                            \"Mtu\": \"<integer>\",\n                            \"Netmask\": \"<string>\",\n                            \"Routes\": [\n                                {\n                                    \"Gateway\": \"<string>\",\n                                    \"Netmask\": \"<string>\",\n                                    \"Source\": \"<string>\",\n                                    \"Type\": \"<string>\"\n                                },\n                                {\n                                    \"Gateway\": \"<string>\",\n                                    \"Netmask\": \"<string>\",\n                                    \"Source\": \"<string>\",\n                                    \"Type\": \"<string>\"\n                                }\n                            ],\n                            \"VlanId\": \"<integer>\"\n                        },\n                        {\n                            \"Gateway\": \"<string>\",\n                            \"IpAddress\": \"<string>\",\n                            \"Mtu\": \"<integer>\",\n                            \"Netmask\": \"<string>\",\n                            \"Routes\": [\n                                {\n                                    \"Gateway\": \"<string>\",\n                                    \"Netmask\": \"<string>\",\n                                    \"Source\": \"<string>\",\n                                    \"Type\": \"<string>\"\n                                },\n                                {\n                                    \"Gateway\": \"<string>\",\n                                    \"Netmask\": \"<string>\",\n                                    \"Source\": \"<string>\",\n                                    \"Type\": \"<string>\"\n                                }\n                            ],\n                            \"VlanId\": \"<integer>\"\n                        }\n                    ]\n                }\n            ],\n            \"Dns\": \"<string>\",\n            \"Fqdn\": \"<string>\",\n            \"Gateway\": \"<string>\",\n            \"IPProtocol\": \"<string>\",\n            \"InterfaceName\": \"<string>\",\n            \"IpAddress\": \"<string>\",\n            \"Location\": {\n                \"ClusterMoref\": \"<string>\",\n                \"DatastoreMoref\": \"<string>\",\n                \"FolderMoref\": \"<string>\",\n                \"HostMoref\": \"<string>\",\n                \"NetworkMoref\": \"<string>\",\n                \"ResourcePoolMoref\": \"<string>\"\n            },\n            \"MacAddress\": \"<string>\",\n            \"MultiVlanEnabled\": \"<boolean>\",\n            \"NTPServer\": \"<string>\",\n            \"NetMask\": \"<string>\",\n            \"NetworkMoref\": \"<string>\",\n            \"OvaFile\": \"<string>\",\n            \"RootCredential\": {\n                \"ObjectId\": \"<string>\",\n                \"Password\": \"<string>\",\n                \"Type\": \"<string>\",\n                \"UserName\": \"<string>\"\n            },\n            \"Timezone\": \"<string>\",\n            \"VMName\": \"<string>\",\n            \"Vlans\": [\n                {\n                    \"Gateway\": \"<string>\",\n                    \"IpAddress\": \"<string>\",\n                    \"Mtu\": \"<integer>\",\n                    \"Netmask\": \"<string>\",\n                    \"Routes\": [\n                        {\n                            \"Gateway\": \"<string>\",\n                            \"Netmask\": \"<string>\",\n                            \"Source\": \"<string>\",\n                            \"Type\": \"<string>\"\n                        },\n                        {\n                            \"Gateway\": \"<string>\",\n                            \"Netmask\": \"<string>\",\n                            \"Source\": \"<string>\",\n                            \"Type\": \"<string>\"\n                        }\n                    ],\n                    \"VlanId\": \"<integer>\"\n                },\n                {\n                    \"Gateway\": \"<string>\",\n                    \"IpAddress\": \"<string>\",\n                    \"Mtu\": \"<integer>\",\n                    \"Netmask\": \"<string>\",\n                    \"Routes\": [\n                        {\n                            \"Gateway\": \"<string>\",\n                            \"Netmask\": \"<string>\",\n                            \"Source\": \"<string>\",\n                            \"Type\": \"<string>\"\n                        },\n                        {\n                            \"Gateway\": \"<string>\",\n                            \"Netmask\": \"<string>\",\n                            \"Source\": \"<string>\",\n                            \"Type\": \"<string>\"\n                        }\n                    ],\n                    \"VlanId\": \"<integer>\"\n                }\n            ]\n        },\n        \"ProxyType\": \"<string>\",\n        \"SkipRegistration\": \"<boolean>\",\n        \"SupportedProtectionTypes\": [\n            \"<string>\",\n            \"<string>\"\n        ],\n        \"UpdateCredentials\": \"<boolean>\",\n        \"VimServerRef\": {\n            \"ObjectId\": \"<string>\",\n            \"Type\": \"<string>\",\n            \"Vcenter\": {\n                \"HostName\": \"<string>\",\n                \"HypervisorMode\": \"<string>\",\n                \"TcpPort\": \"<long>\",\n                \"UserName\": \"<string>\",\n                \"UserPassword\": \"<string>\"\n            }\n        }\n    },\n    \"Id\": \"<string>\",\n    \"Status\": {\n        \"Aliases\": [\n            \"<string>\",\n            \"<string>\"\n        ],\n        \"AllottedModes\": [\n            {\n                \"CapacityUnits\": \"<integer>\",\n                \"ReservedBy\": {\n                    \"SessionId\": \"<string>\",\n                    \"SessionType\": \"<string>\"\n                },\n                \"TotalControlSessions\": \"<integer>\",\n                \"TotalTransportSessions\": \"<integer>\"\n            },\n            {\n                \"CapacityUnits\": \"<integer>\",\n                \"ReservedBy\": {\n                    \"SessionId\": \"<string>\",\n                    \"SessionType\": \"<string>\"\n                },\n                \"TotalControlSessions\": \"<integer>\",\n                \"TotalTransportSessions\": \"<integer>\"\n            }\n        ],\n        \"DaemonStatus\": [\n            {\n                \"DaemonName\": \"<string>\",\n                \"Resources\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"Status\": \"<string>\"\n            },\n            {\n                \"DaemonName\": \"<string>\",\n                \"Resources\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"Status\": \"<string>\"\n            }\n        ],\n        \"DatacenterMoref\": \"<string>\",\n        \"Datastores\": [\n            \"<string>\",\n            \"<string>\"\n        ],\n        \"DeployedTime\": \"<string>\",\n        \"HostedComputeRes\": {\n            \"MOref\": \"<string>\",\n            \"Type\": \"<string>\"\n        },\n        \"LastCheckedTime\": \"<string>\",\n        \"LastOperation\": {\n            \"Detail\": \"<string>\",\n            \"Operation\": \"<string>\",\n            \"Status\": \"<string>\"\n        },\n        \"ModesAvailable\": {\n            \"CapacityUnits\": \"<integer>\",\n            \"Mode\": \"<string>\",\n            \"UseSsl\": \"<boolean>\"\n        },\n        \"Networks\": [\n            {\n                \"Connected\": \"<boolean>\",\n                \"DeviceLabel\": \"<string>\",\n                \"Dns\": {\n                    \"DhcpEnabled\": \"<boolean>\",\n                    \"DomainName\": \"<string>\",\n                    \"HostName\": \"<string>\",\n                    \"SearchDomains\": [\n                        \"<string>\",\n                        \"<string>\"\n                    ],\n                    \"Servers\": [\n                        \"<string>\",\n                        \"<string>\"\n                    ]\n                },\n                \"GatewayV4\": \"<string>\",\n                \"GatewayV6\": \"<string>\",\n                \"IpAddrV4\": {\n                    \"Address\": \"<string>\",\n                    \"IpCidr\": \"<string>\",\n                    \"NetMask\": \"<string>\",\n                    \"PrefixLength\": \"<integer>\",\n                    \"SubnetCidr\": \"<string>\",\n                    \"Version\": \"<string>\"\n                },\n                \"IpAddrV6\": {\n                    \"Address\": \"<string>\",\n                    \"IpCidr\": \"<string>\",\n                    \"NetMask\": \"<string>\",\n                    \"PrefixLength\": \"<integer>\",\n                    \"SubnetCidr\": \"<string>\",\n                    \"Version\": \"<string>\"\n                },\n                \"MAC\": \"<string>\",\n                \"VirtualDeviceId\": \"<integer>\",\n                \"VirtualNetworkName\": \"<string>\"\n            },\n            {\n                \"Connected\": \"<boolean>\",\n                \"DeviceLabel\": \"<string>\",\n                \"Dns\": {\n                    \"DhcpEnabled\": \"<boolean>\",\n                    \"DomainName\": \"<string>\",\n                    \"HostName\": \"<string>\",\n                    \"SearchDomains\": [\n                        \"<string>\",\n                        \"<string>\"\n                    ],\n                    \"Servers\": [\n                        \"<string>\",\n                        \"<string>\"\n                    ]\n                },\n                \"GatewayV4\": \"<string>\",\n                \"GatewayV6\": \"<string>\",\n                \"IpAddrV4\": {\n                    \"Address\": \"<string>\",\n                    \"IpCidr\": \"<string>\",\n                    \"NetMask\": \"<string>\",\n                    \"PrefixLength\": \"<integer>\",\n                    \"SubnetCidr\": \"<string>\",\n                    \"Version\": \"<string>\"\n                },\n                \"IpAddrV6\": {\n                    \"Address\": \"<string>\",\n                    \"IpCidr\": \"<string>\",\n                    \"NetMask\": \"<string>\",\n                    \"PrefixLength\": \"<integer>\",\n                    \"SubnetCidr\": \"<string>\",\n                    \"Version\": \"<string>\"\n                },\n                \"MAC\": \"<string>\",\n                \"VirtualDeviceId\": \"<integer>\",\n                \"VirtualNetworkName\": \"<string>\"\n            }\n        ],\n        \"PowerState\": \"<string>\",\n        \"ProxyDeployed\": \"<boolean>\",\n        \"ProxyRegistered\": \"<boolean>\",\n        \"ProxyState\": \"<string>\",\n        \"ProxyStatus\": {\n            \"Detail\": \"<string>\",\n            \"Status\": \"<string>\"\n        },\n        \"RegisteredTime\": \"<string>\",\n        \"Thumbprint\": \"<string>\",\n        \"Uuid\": \"<string>\",\n        \"Version\": \"<string>\",\n        \"VlanStatus\": [\n            {\n                \"Detail\": \"<string>\",\n                \"IpAddress\": \"<string>\",\n                \"Status\": \"<string>\",\n                \"VlanId\": \"<integer>\"\n            },\n            {\n                \"Detail\": \"<string>\",\n                \"IpAddress\": \"<string>\",\n                \"Status\": \"<string>\",\n                \"VlanId\": \"<integer>\"\n            }\n        ]\n    }\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/protection-engines/:id/proxies",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"protection-engines",
																":id",
																"proxies"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
												}
											]
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "proxy-bundles",
									"item": [
										{
											"name": "{session Id}",
											"item": [
												{
													"name": "Delete protection engine proxy bundle session.",
													"request": {
														"auth": {
															"type": "apikey",
															"apikey": [
																{
																	"key": "key",
																	"value": "Authorization",
																	"type": "string"
																},
																{
																	"key": "value",
																	"value": true,
																	"type": "boolean"
																},
																{
																	"key": "in",
																	"value": "header",
																	"type": "string"
																}
															]
														},
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/v2/protection-engines/:id/proxy-bundles/:sessionId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"protection-engines",
																":id",
																"proxy-bundles",
																":sessionId"
															],
															"variable": [
																{
																	"id": "b78dfa44-1ff4-4640-8cbc-a69ba2c39a5b",
																	"key": "id",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) The ID of the VPE protection engine."
																},
																{
																	"id": "3ecb7c43-c4ba-469e-8876-aa19b62b775c",
																	"key": "sessionId",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) The log bundle session ID."
																}
															]
														},
														"description": "Deletes protection engine proxy bundle session.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
													},
													"response": [
														{
															"name": "An unexpected error prevented the server from fulfilling your request.",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": {
																			"content": "Added as a part of security scheme: apikey",
																			"type": "text/plain"
																		},
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/protection-engines/:id/proxy-bundles/:sessionId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"protection-engines",
																		":id",
																		"proxy-bundles",
																		":sessionId"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "sessionId"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
														},
														{
															"name": "The requestor is not allowed to perform this operation.",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": {
																			"content": "Added as a part of security scheme: apikey",
																			"type": "text/plain"
																		},
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/protection-engines/:id/proxy-bundles/:sessionId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"protection-engines",
																		":id",
																		"proxy-bundles",
																		":sessionId"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "sessionId"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
														},
														{
															"name": "The requested resource was not found.",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": {
																			"content": "Added as a part of security scheme: apikey",
																			"type": "text/plain"
																		},
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/protection-engines/:id/proxy-bundles/:sessionId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"protection-engines",
																		":id",
																		"proxy-bundles",
																		":sessionId"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "sessionId"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
														},
														{
															"name": "The request is not valid.",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": {
																			"content": "Added as a part of security scheme: apikey",
																			"type": "text/plain"
																		},
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/protection-engines/:id/proxy-bundles/:sessionId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"protection-engines",
																		":id",
																		"proxy-bundles",
																		":sessionId"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "sessionId"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
														},
														{
															"name": "The requestor is not authorized to perform this operation.",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": {
																			"content": "Added as a part of security scheme: apikey",
																			"type": "text/plain"
																		},
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/protection-engines/:id/proxy-bundles/:sessionId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"protection-engines",
																		":id",
																		"proxy-bundles",
																		":sessionId"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "sessionId"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
														},
														{
															"name": "The request was accepted for processing.",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": {
																			"content": "Added as a part of security scheme: apikey",
																			"type": "text/plain"
																		},
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/protection-engines/:id/proxy-bundles/:sessionId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"protection-engines",
																		":id",
																		"proxy-bundles",
																		":sessionId"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "sessionId"
																		}
																	]
																}
															},
															"status": "No Content",
															"code": 204,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												},
												{
													"name": "Get protection engine proxy bundle session.",
													"request": {
														"auth": {
															"type": "apikey",
															"apikey": [
																{
																	"key": "key",
																	"value": "Authorization",
																	"type": "string"
																},
																{
																	"key": "value",
																	"value": true,
																	"type": "boolean"
																},
																{
																	"key": "in",
																	"value": "header",
																	"type": "string"
																}
															]
														},
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/v2/protection-engines/:id/proxy-bundles/:sessionId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"protection-engines",
																":id",
																"proxy-bundles",
																":sessionId"
															],
															"variable": [
																{
																	"id": "986ac5b6-49b4-4468-bd69-260ea17b2795",
																	"key": "id",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) The ID of the VPE protection engine."
																},
																{
																	"id": "2eb400f9-e0ea-487e-957a-cb318fa5b208",
																	"key": "sessionId",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) The protection engine proxy bundle session ID."
																}
															]
														},
														"description": "Retrieves the protection engine proxy bundle session.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
													},
													"response": [
														{
															"name": "The requestor is not allowed to perform this operation.",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": {
																			"content": "Added as a part of security scheme: apikey",
																			"type": "text/plain"
																		},
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/protection-engines/:id/proxy-bundles/:sessionId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"protection-engines",
																		":id",
																		"proxy-bundles",
																		":sessionId"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "sessionId"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
														},
														{
															"name": "Successfully returned VPE proxy resource.",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": {
																			"content": "Added as a part of security scheme: apikey",
																			"type": "text/plain"
																		},
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/protection-engines/:id/proxy-bundles/:sessionId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"protection-engines",
																		":id",
																		"proxy-bundles",
																		":sessionId"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "sessionId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"Config\": {\n  \"AdvancedOptions\": {\n   \"CapacityPercentage\": 45629334,\n   \"Datastores\": [\n    \"proide\",\n    \"anim reprehenderit nostrud \"\n   ],\n   \"TransportSessions\": {\n    \"Mode\": \"HotaddPreferred\",\n    \"UseSsl\": false,\n    \"UserDefined\": true\n   }\n  },\n  \"ApplicationData\": {},\n  \"AutoUpdateConfig\": true,\n  \"Credential\": {\n   \"ObjectId\": \"labore mollit\",\n   \"Password\": \"dolor\",\n   \"Type\": \"Object\",\n   \"UserName\": \"Ut\"\n  },\n  \"DeployProxy\": true,\n  \"Disabled\": false,\n  \"HealthCheckInterval\": 82082786,\n  \"HostName\": \"ex veniam\",\n  \"InstanceUuid\": \"enim ex\",\n  \"MORef\": \"dolore incididunt sint\",\n  \"Operation\": \"upgrade\",\n  \"Port\": -81697983,\n  \"ProxyDeploymentConfig\": {\n   \"AdditionalVMNetworks\": [\n    {\n     \"Fqdn\": \"non\",\n     \"Gateway\": \"ullamco exercitation id irure qui\",\n     \"IPProtocol\": \"IPv4\",\n     \"InterfaceName\": \"voluptate\",\n     \"IpAddress\": \"laborum aliqua\",\n     \"MacAddress\": \"irure tempor\",\n     \"MultiVlanEnabled\": true,\n     \"NetMask\": \"in velit pariatur\",\n     \"NetworkMoref\": \"nisi\",\n     \"Vlans\": [\n      {\n       \"Gateway\": \"anim veniam officia id\",\n       \"IpAddress\": \"Excepteur Ut esse\",\n       \"Mtu\": -10182718,\n       \"Netmask\": \"ipsum in quis\",\n       \"Routes\": [\n        {\n         \"Gateway\": \"in cillum\",\n         \"Netmask\": \"incididunt ipsum ex reprehenderit sed\",\n         \"Source\": \"Ut nostrud\",\n         \"Type\": \"Excepteur proident in\"\n        },\n        {\n         \"Gateway\": \"aliqua elit\",\n         \"Netmask\": \"par\",\n         \"Source\": \"labore\",\n         \"Type\": \"et ullamco officia irure\"\n        }\n       ],\n       \"VlanId\": 50048506\n      },\n      {\n       \"Gateway\": \"exercitation aliqua fugiat\",\n       \"IpAddress\": \"voluptate laboris in\",\n       \"Mtu\": -77893727,\n       \"Netmask\": \"exercitatio\",\n       \"Routes\": [\n        {\n         \"Gateway\": \"Lorem\",\n         \"Netmask\": \"Ut est id\",\n         \"Source\": \"reprehenderit nostrud et minim\",\n         \"Type\": \"nisi aliqua id\"\n        },\n        {\n         \"Gateway\": \"ut cupidatat commodo incididunt\",\n         \"Netmask\": \"dolor cupidatat\",\n         \"Source\": \"commodo Excepteur sint non labore\",\n         \"Type\": \"voluptate id Excepteur dolore occ\"\n        }\n       ],\n       \"VlanId\": -47644326\n      }\n     ]\n    },\n    {\n     \"Fqdn\": \"cupidatat adipisicing aliquip in\",\n     \"Gateway\": \"in velit\",\n     \"IPProtocol\": \"IPv4\",\n     \"InterfaceName\": \"aliqua proid\",\n     \"IpAddress\": \"occaecat aliquip do\",\n     \"MacAddress\": \"fugiat ea\",\n     \"MultiVlanEnabled\": true,\n     \"NetMask\": \"eu officia ad voluptate\",\n     \"NetworkMoref\": \"cupidatat dolore elit irure\",\n     \"Vlans\": [\n      {\n       \"Gateway\": \"magna quis consequat nostrud\",\n       \"IpAddress\": \"aute\",\n       \"Mtu\": -51977868,\n       \"Netmask\": \"officia sunt elit labore\",\n       \"Routes\": [\n        {\n         \"Gateway\": \"magna enim\",\n         \"Netmask\": \"est l\",\n         \"Source\": \"Duis cillum ut id officia\",\n         \"Type\": \"ut sint\"\n        },\n        {\n         \"Gateway\": \"Lorem aliqua ullamco aliquip Duis\",\n         \"Netmask\": \"eiusmod non irure\",\n         \"Source\": \"sint\",\n         \"Type\": \"elit magna id\"\n        }\n       ],\n       \"VlanId\": 28111220\n      },\n      {\n       \"Gateway\": \"aute non sunt\",\n       \"IpAddress\": \"veniam elit ut\",\n       \"Mtu\": -36377772,\n       \"Netmask\": \"in laborum Lorem\",\n       \"Routes\": [\n        {\n         \"Gateway\": \"ut dolor anim\",\n         \"Netmask\": \"nulla exercitation\",\n         \"Source\": \"pariatur in Lorem veniam\",\n         \"Type\": \"dolor reprehenderit dolor\"\n        },\n        {\n         \"Gateway\": \"nostrud voluptate\",\n         \"Netmask\": \"minim nostrud ullamco quis\",\n         \"Source\": \"voluptate anim\",\n         \"Type\": \"ex minim tempor\"\n        }\n       ],\n       \"VlanId\": 17088502\n      }\n     ]\n    }\n   ],\n   \"Dns\": \"dolor proident elit\",\n   \"Fqdn\": \"officia deserunt\",\n   \"Gateway\": \"proident amet dolore sint ad\",\n   \"IPProtocol\": \"IPv4\",\n   \"InterfaceName\": \"Exc\",\n   \"IpAddress\": \"nulla occaecat Duis\",\n   \"Location\": {\n    \"ClusterMoref\": \"sed\",\n    \"DatastoreMoref\": \"eiusmod anim\",\n    \"FolderMoref\": \"in adipisicing Excepteur minim\",\n    \"HostMoref\": \"elit id eu velit\",\n    \"NetworkMoref\": \"no\",\n    \"ResourcePoolMoref\": \"ex cillum laborum\"\n   },\n   \"MacAddress\": \"aute eiusmod do\",\n   \"MultiVlanEnabled\": true,\n   \"NTPServer\": \"fugiat culpa\",\n   \"NetMask\": \"reprehenderit ut Lorem veniam\",\n   \"NetworkMoref\": \"enim irure minim\",\n   \"OvaFile\": \"dolor ipsum velit\",\n   \"RootCredential\": {\n    \"ObjectId\": \"enim\",\n    \"Password\": \"occaecat sed\",\n    \"Type\": \"ObjectId\",\n    \"UserName\": \"mollit eiusmod\"\n   },\n   \"Timezone\": \"incididunt velit fugiat\",\n   \"VMName\": \"exercitation eu ex proid\",\n   \"Vlans\": [\n    {\n     \"Gateway\": \"d\",\n     \"IpAddress\": \"incididunt ex laboris aute\",\n     \"Mtu\": -49634533,\n     \"Netmask\": \"consec\",\n     \"Routes\": [\n      {\n       \"Gateway\": \"tempor dolor dolore\",\n       \"Netmask\": \"ut ea sint ex\",\n       \"Source\": \"eiusmo\",\n       \"Type\": \"labore ex Ut Duis\"\n      },\n      {\n       \"Gateway\": \"irure nisi commodo veniam culpa\",\n       \"Netmask\": \"occaecat qui in proident\",\n       \"Source\": \"laborum sed velit labore\",\n       \"Type\": \"esse officia est Ut magna\"\n      }\n     ],\n     \"VlanId\": -48416384\n    },\n    {\n     \"Gateway\": \"in quis\",\n     \"IpAddress\": \"Excepteur\",\n     \"Mtu\": -43416269,\n     \"Netmask\": \"in cupidatat sed do\",\n     \"Routes\": [\n      {\n       \"Gateway\": \"anim irure\",\n       \"Netmask\": \"irure exerci\",\n       \"Source\": \"qui adipisicing cillum\",\n       \"Type\": \"tempor velit in\"\n      },\n      {\n       \"Gateway\": \"dolore\",\n       \"Netmask\": \"ipsum commodo sunt laboris ullamco\",\n       \"Source\": \"ex ad dolor eiusmod tempor\",\n       \"Type\": \"Duis reprehenderit sed ea commodo\"\n      }\n     ],\n     \"VlanId\": 89505155\n    }\n   ]\n  },\n  \"ProxyType\": \"External\",\n  \"SkipRegistration\": false,\n  \"SupportedProtectionTypes\": [\n   \"Kubernetes\",\n   \"VM\"\n  ],\n  \"UpdateCredentials\": true,\n  \"VimServerRef\": {\n   \"ObjectId\": \"ea esse\",\n   \"Type\": \"ObjectId\",\n   \"Vcenter\": {\n    \"HostName\": \"in Ut non\",\n    \"HypervisorMode\": \"vSphere\",\n    \"TcpPort\": -12918063,\n    \"UserName\": \"do\",\n    \"UserPassword\": \"ut veniam aute\"\n   }\n  }\n },\n \"Id\": \"ex aliqua\",\n \"Status\": {\n  \"Aliases\": [\n   \"dolor ad ea tempor minim\",\n   \"in ut ullamco sed\"\n  ],\n  \"AllottedModes\": [\n   {\n    \"CapacityUnits\": -98770877,\n    \"ReservedBy\": {\n     \"SessionId\": \"nulla et\",\n     \"SessionType\": \"in reprehenderit\"\n    },\n    \"TotalControlSessions\": 56355273,\n    \"TotalTransportSessions\": 88629989\n   },\n   {\n    \"CapacityUnits\": 12538061,\n    \"ReservedBy\": {\n     \"SessionId\": \"in eiusmod Excepteur in amet\",\n     \"SessionType\": \"Duis la\"\n    },\n    \"TotalControlSessions\": -92288316,\n    \"TotalTransportSessions\": 54818020\n   }\n  ],\n  \"DaemonStatus\": [\n   {\n    \"DaemonName\": \"occaecat\",\n    \"Resources\": [\n     \"consequat officia labore minim\",\n     \"dolor\"\n    ],\n    \"Status\": \"Duis reprehenderit ut\"\n   },\n   {\n    \"DaemonName\": \"est Ut eu non\",\n    \"Resources\": [\n     \"ipsum ullamco ad culpa in\",\n     \"laboris dolor commodo\"\n    ],\n    \"Status\": \"ut\"\n   }\n  ],\n  \"DatacenterMoref\": \"in officia\",\n  \"Datastores\": [\n   \"sed\",\n   \"ut sed\"\n  ],\n  \"DeployedTime\": \"anim aliquip\",\n  \"HostedComputeRes\": {\n   \"MOref\": \"id ullamco nisi\",\n   \"Type\": \"dolor sit eu\"\n  },\n  \"LastCheckedTime\": \"consequat velit in\",\n  \"LastOperation\": {\n   \"Detail\": \"laboris in commodo ad fugiat\",\n   \"Operation\": \"version\",\n   \"Status\": \"Mounting\"\n  },\n  \"ModesAvailable\": {\n   \"CapacityUnits\": -637642,\n   \"Mode\": \"HotaddOnly\",\n   \"UseSsl\": true\n  },\n  \"Networks\": [\n   {\n    \"Connected\": false,\n    \"DeviceLabel\": \"reprehenderit\",\n    \"Dns\": {\n     \"DhcpEnabled\": true,\n     \"DomainName\": \"exercitation in consectetur occaecat id\",\n     \"HostName\": \"dolor Except\",\n     \"SearchDomains\": [\n      \"non tempor nisi aliquip\",\n      \"ea\"\n     ],\n     \"Servers\": [\n      \"ut reprehenderit\",\n      \"sint qui magna\"\n     ]\n    },\n    \"GatewayV4\": \"consectetur velit exercitation labore\",\n    \"GatewayV6\": \"laboris non in consequat sit\",\n    \"IpAddrV4\": {\n     \"Address\": \"cupidatat aliquip\",\n     \"IpCidr\": \"quis\",\n     \"NetMask\": \"aliquip eu\",\n     \"PrefixLength\": 98506142,\n     \"SubnetCidr\": \"conse\",\n     \"Version\": \"IPv4\"\n    },\n    \"IpAddrV6\": {\n     \"Address\": \"labore\",\n     \"IpCidr\": \"dolor Lorem\",\n     \"NetMask\": \"labori\",\n     \"PrefixLength\": 7850890,\n     \"SubnetCidr\": \"veniam dolor\",\n     \"Version\": \"IPv4\"\n    },\n    \"MAC\": \"commodo Lorem minim cupidatat laborum\",\n    \"VirtualDeviceId\": 64607708,\n    \"VirtualNetworkName\": \"ut\"\n   },\n   {\n    \"Connected\": false,\n    \"DeviceLabel\": \"ut nostrud id quis\",\n    \"Dns\": {\n     \"DhcpEnabled\": true,\n     \"DomainName\": \"elit\",\n     \"HostName\": \"nisi irure sit\",\n     \"SearchDomains\": [\n      \"enim\",\n      \"officia id non dolore et\"\n     ],\n     \"Servers\": [\n      \"sint pariatur deserunt aute\",\n      \"fugiat magna\"\n     ]\n    },\n    \"GatewayV4\": \"dolore\",\n    \"GatewayV6\": \"occaecat minim ea\",\n    \"IpAddrV4\": {\n     \"Address\": \"incididunt\",\n     \"IpCidr\": \"ullamco nulla\",\n     \"NetMask\": \"pariatur ea occaecat ipsum nisi\",\n     \"PrefixLength\": -94611769,\n     \"SubnetCidr\": \"nos\",\n     \"Version\": \"IPv6\"\n    },\n    \"IpAddrV6\": {\n     \"Address\": \"do Excepteur ad elit\",\n     \"IpCidr\": \"minim nostrud fugiat nulla\",\n     \"NetMask\": \"tempor sunt\",\n     \"PrefixLength\": 87574354,\n     \"SubnetCidr\": \"proident esse\",\n     \"Version\": \"IPv4\"\n    },\n    \"MAC\": \"occaecat et do consequat\",\n    \"VirtualDeviceId\": 92931755,\n    \"VirtualNetworkName\": \"consequat\"\n   }\n  ],\n  \"PowerState\": \"Suspended\",\n  \"ProxyDeployed\": true,\n  \"ProxyRegistered\": false,\n  \"ProxyState\": \"READY\",\n  \"ProxyStatus\": {\n   \"Detail\": \"ea non mollit\",\n   \"Status\": \"Ready\"\n  },\n  \"RegisteredTime\": \"exercitation ad commodo\",\n  \"Thumbprint\": \"u\",\n  \"Uuid\": \"consequat est nulla labore\",\n  \"Version\": \"sint\",\n  \"VlanStatus\": [\n   {\n    \"Detail\": \"in labore in in\",\n    \"IpAddress\": \"occaecat anim ex exercitation\",\n    \"Status\": \"CONNECTED\",\n    \"VlanId\": -67427392\n   },\n   {\n    \"Detail\": \"ipsum dolor\",\n    \"IpAddress\": \"est in ut\",\n    \"Status\": \"CONNECTED\",\n    \"VlanId\": 3627378\n   }\n  ]\n }\n}"
														},
														{
															"name": "The requestor is not authorized to perform this operation.",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": {
																			"content": "Added as a part of security scheme: apikey",
																			"type": "text/plain"
																		},
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/protection-engines/:id/proxy-bundles/:sessionId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"protection-engines",
																		":id",
																		"proxy-bundles",
																		":sessionId"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "sessionId"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
														},
														{
															"name": "The request is not valid.",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": {
																			"content": "Added as a part of security scheme: apikey",
																			"type": "text/plain"
																		},
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/protection-engines/:id/proxy-bundles/:sessionId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"protection-engines",
																		":id",
																		"proxy-bundles",
																		":sessionId"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "sessionId"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
														},
														{
															"name": "An unexpected error prevented the server from fulfilling your request.",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": {
																			"content": "Added as a part of security scheme: apikey",
																			"type": "text/plain"
																		},
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/protection-engines/:id/proxy-bundles/:sessionId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"protection-engines",
																		":id",
																		"proxy-bundles",
																		":sessionId"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "sessionId"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
														}
													]
												}
											],
											"protocolProfileBehavior": {},
											"_postman_isSubFolder": true
										},
										{
											"name": "Get all protection engine proxy log bundles.",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": true,
															"type": "boolean"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/v2/protection-engines/:id/proxy-bundles?page=1&pageSize=100&filter=<string>&orderby=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"protection-engines",
														":id",
														"proxy-bundles"
													],
													"query": [
														{
															"key": "page",
															"value": "1",
															"description": "The page number to be returned. Must not be less than 1. See Tutorials - Page the List Result."
														},
														{
															"key": "pageSize",
															"value": "100",
															"description": "The number of resources to be returned. Must not be less than 1. See Tutorials - Page the List Result."
														},
														{
															"key": "filter",
															"value": "<string>",
															"description": "The filter string that is expressed using PowerProtect Data Manager filter syntax. See Tutorials - Filter the List Result."
														},
														{
															"key": "orderby",
															"value": "<string>",
															"description": "The attributes/fields to be sorted by. This parameter can combine with sort direction \"ASC\" or \"DESC\". Default direction is ASC. See Tutorials - Sort the List Result."
														}
													],
													"variable": [
														{
															"id": "0c5fd855-8bd8-452e-8968-7c64d74a18b5",
															"key": "id",
															"value": "<string>",
															"type": "string",
															"description": "(Required) The ID of the VPE protection engine."
														}
													]
												},
												"description": "Retrieves all protection engine proxy log bundles.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
											},
											"response": [
												{
													"name": "An unexpected error prevented the server from fulfilling your request.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: apikey",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/protection-engines/:id/proxy-bundles?page=1&pageSize=100&filter=<string>&orderby=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"protection-engines",
																":id",
																"proxy-bundles"
															],
															"query": [
																{
																	"key": "page",
																	"value": "1"
																},
																{
																	"key": "pageSize",
																	"value": "100"
																},
																{
																	"key": "filter",
																	"value": "<string>"
																},
																{
																	"key": "orderby",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
												},
												{
													"name": "The requestor is not allowed to perform this operation.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: apikey",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/protection-engines/:id/proxy-bundles?page=1&pageSize=100&filter=<string>&orderby=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"protection-engines",
																":id",
																"proxy-bundles"
															],
															"query": [
																{
																	"key": "page",
																	"value": "1"
																},
																{
																	"key": "pageSize",
																	"value": "100"
																},
																{
																	"key": "filter",
																	"value": "<string>"
																},
																{
																	"key": "orderby",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
												},
												{
													"name": "Successfully returned available proxy bundle sessions.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: apikey",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/protection-engines/:id/proxy-bundles?page=1&pageSize=100&filter=<string>&orderby=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"protection-engines",
																":id",
																"proxy-bundles"
															],
															"query": [
																{
																	"key": "page",
																	"value": "1"
																},
																{
																	"key": "pageSize",
																	"value": "100"
																},
																{
																	"key": "filter",
																	"value": "<string>"
																},
																{
																	"key": "orderby",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"content\": [\n  {\n   \"Id\": \"occaecat consectetur\",\n   \"Config\": {\n    \"AcceptedLanguage\": \"en\",\n    \"ClientSessionData\": {},\n    \"IdleTimeout\": 53080467,\n    \"LogBundleRange\": {\n     \"EndDate\": \"m\",\n     \"StartDate\": \"ea co\"\n    },\n    \"LogDetail\": \"quis Duis ea\",\n    \"LogLevel\": \"aliqua mollit id\",\n    \"LogTag\": \"commodo in eiusmod veniam\",\n    \"NoCancelOnTimeout\": false,\n    \"ProxySpec\": [\n     {\n      \"LogBundlePath\": \"c\",\n      \"ProxySessionId\": \"fugiat irure dolo\"\n     },\n     {\n      \"LogBundlePath\": \"sin\",\n      \"ProxySessionId\": \"mi\"\n     }\n    ],\n    \"SessionId\": \"eiusmod nostrud sint ullamco amet\"\n   },\n   \"Status\": {\n    \"ApplicationData\": \"nulla la\",\n    \"ApplicationVersion\": \"non in\",\n    \"Description\": \"id reprehenderit deserunt nostrud\",\n    \"EndTime\": \"sint anim quis\",\n    \"Error\": {\n     \"Classifications\": [\n      \"est quis\",\n      \"consequat deserunt anim\"\n     ],\n     \"Code\": 9998148,\n     \"Remedy\": [\n      \"commodo adipisicing magna\",\n      \"pariatur est sit minim deserunt\"\n     ],\n     \"Retryable\": false,\n     \"Text\": \"qui eu\"\n    },\n    \"Progress\": -74959387,\n    \"ProxyLogBundleStatus\": [\n     {\n      \"Error\": {\n       \"Classifications\": [\n        \"aute ullamco ex voluptate sint\",\n        \"aliquip sunt\"\n       ],\n       \"Code\": -22508833,\n       \"Remedy\": [\n        \"magna pariatur\",\n        \"incididunt eu\"\n       ],\n       \"Retryable\": true,\n       \"Text\": \"aliquip magna nostrud mollit ut\"\n      },\n      \"FilesCollected\": -12754685,\n      \"LogBundle\": \"in adipisicing nisi q\",\n      \"ProxySessionId\": \"labore ipsum\",\n      \"State\": \"Cancelling\"\n     },\n     {\n      \"Error\": {\n       \"Classifications\": [\n        \"deserunt officia cupidatat\",\n        \"labore ut ea\"\n       ],\n       \"Code\": 39982086,\n       \"Remedy\": [\n        \"officia veniam enim id aliqua\",\n        \"laboris non quis dol\"\n       ],\n       \"Retryable\": true,\n       \"Text\": \"aute nostrud qui\"\n      },\n      \"FilesCollected\": -74065452,\n      \"LogBundle\": \"ex ut ullamco adipisicing tempor\",\n      \"ProxySessionId\": \"occaecat veniam laborum aliqua\",\n      \"State\": \"Cancelled\"\n     }\n    ],\n    \"StartTime\": \"in exercitation incididunt occaecat amet\",\n    \"State\": \"Unmounting\",\n    \"Warnings\": [\n     \"cons\",\n     \"mollit aute in\"\n    ]\n   }\n  },\n  {\n   \"Id\": \"nulla dolore non\",\n   \"Config\": {\n    \"AcceptedLanguage\": \"en\",\n    \"ClientSessionData\": {},\n    \"IdleTimeout\": 94314550,\n    \"LogBundleRange\": {\n     \"EndDate\": \"est aute\",\n     \"StartDate\": \"cupidatat reprehenderit\"\n    },\n    \"LogDetail\": \"voluptate minim\",\n    \"LogLevel\": \"enim do incididunt\",\n    \"LogTag\": \"e\",\n    \"NoCancelOnTimeout\": true,\n    \"ProxySpec\": [\n     {\n      \"LogBundlePath\": \"aute anim mollit culpa\",\n      \"ProxySessionId\": \"dolor ut ea\"\n     },\n     {\n      \"LogBundlePath\": \"Duis dolore commodo magna sed\",\n      \"ProxySessionId\": \"quis ipsum\"\n     }\n    ],\n    \"SessionId\": \"id Ut\"\n   },\n   \"Status\": {\n    \"ApplicationData\": \"minim ut\",\n    \"ApplicationVersion\": \"laboris consectetur\",\n    \"Description\": \"in\",\n    \"EndTime\": \"ullamco sint occaecat dolor est\",\n    \"Error\": {\n     \"Classifications\": [\n      \"ut ex\",\n      \"elit\"\n     ],\n     \"Code\": -85775113,\n     \"Remedy\": [\n      \"id Excepteur in aliquip\",\n      \"qui\"\n     ],\n     \"Retryable\": true,\n     \"Text\": \"ullamco ut\"\n    },\n    \"Progress\": -6352966,\n    \"ProxyLogBundleStatus\": [\n     {\n      \"Error\": {\n       \"Classifications\": [\n        \"esse reprehenderit incididunt\",\n        \"consequat deserunt\"\n       ],\n       \"Code\": -52862644,\n       \"Remedy\": [\n        \"exercitation in aliqui\",\n        \"voluptate consectetur nisi Ut\"\n       ],\n       \"Retryable\": false,\n       \"Text\": \"culpa\"\n      },\n      \"FilesCollected\": 75811965,\n      \"LogBundle\": \"consectetur incididunt voluptate t\",\n      \"ProxySessionId\": \"proident\",\n      \"State\": \"Running\"\n     },\n     {\n      \"Error\": {\n       \"Classifications\": [\n        \"sint elit irure culpa\",\n        \"culpa dolore\"\n       ],\n       \"Code\": 16458131,\n       \"Remedy\": [\n        \"reprehenderit irure sunt commodo voluptate\",\n        \"mollit laboris proident\"\n       ],\n       \"Retryable\": true,\n       \"Text\": \"cillum esse aliqua proident in\"\n      },\n      \"FilesCollected\": 98977404,\n      \"LogBundle\": \"nostrud ut ut culpa\",\n      \"ProxySessionId\": \"officia aute esse\",\n      \"State\": \"Mounted\"\n     }\n    ],\n    \"StartTime\": \"eiu\",\n    \"State\": \"Mounted\",\n    \"Warnings\": [\n     \"laboris officia anim dolore\",\n     \"sit id et minim\"\n    ]\n   }\n  }\n ],\n \"page\": {\n  \"number\": -62602881,\n  \"queryState\": \"nisi\",\n  \"size\": 59096086,\n  \"totalElements\": 70685721,\n  \"totalPages\": -84779010\n }\n}"
												},
												{
													"name": "The requestor is not authorized to perform this operation.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: apikey",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/protection-engines/:id/proxy-bundles?page=1&pageSize=100&filter=<string>&orderby=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"protection-engines",
																":id",
																"proxy-bundles"
															],
															"query": [
																{
																	"key": "page",
																	"value": "1"
																},
																{
																	"key": "pageSize",
																	"value": "100"
																},
																{
																	"key": "filter",
																	"value": "<string>"
																},
																{
																	"key": "orderby",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
												},
												{
													"name": "The request is not valid.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: apikey",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/protection-engines/:id/proxy-bundles?page=1&pageSize=100&filter=<string>&orderby=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"protection-engines",
																":id",
																"proxy-bundles"
															],
															"query": [
																{
																	"key": "page",
																	"value": "1"
																},
																{
																	"key": "pageSize",
																	"value": "100"
																},
																{
																	"key": "filter",
																	"value": "<string>"
																},
																{
																	"key": "orderby",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
												}
											]
										},
										{
											"name": "Collect protection engine proxy bundles.",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": true,
															"type": "boolean"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"IdleTimeout\": \"<long>\",\n    \"LogBundleRange\": {\n        \"EndDate\": \"<string>\",\n        \"StartDate\": \"<string>\"\n    },\n    \"LogDirectory\": \"<string>\"\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/protection-engines/:id/proxy-bundles",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"protection-engines",
														":id",
														"proxy-bundles"
													],
													"variable": [
														{
															"id": "c4da54ac-9bae-4b0f-a52f-41d655257f6a",
															"key": "id",
															"value": "<string>",
															"type": "string",
															"description": "(Required) The ID of the VPE protection engine."
														}
													]
												},
												"description": "Collects protection engine proxy bundles.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
											},
											"response": [
												{
													"name": "The requestor is not authorized to perform this operation.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: apikey",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"IdleTimeout\": \"<long>\",\n    \"LogBundleRange\": {\n        \"EndDate\": \"<string>\",\n        \"StartDate\": \"<string>\"\n    },\n    \"LogDirectory\": \"<string>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/protection-engines/:id/proxy-bundles",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"protection-engines",
																":id",
																"proxy-bundles"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
												},
												{
													"name": "The request is not valid.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: apikey",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"IdleTimeout\": \"<long>\",\n    \"LogBundleRange\": {\n        \"EndDate\": \"<string>\",\n        \"StartDate\": \"<string>\"\n    },\n    \"LogDirectory\": \"<string>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/protection-engines/:id/proxy-bundles",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"protection-engines",
																":id",
																"proxy-bundles"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
												},
												{
													"name": "Successful operation.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: apikey",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"IdleTimeout\": \"<long>\",\n    \"LogBundleRange\": {\n        \"EndDate\": \"<string>\",\n        \"StartDate\": \"<string>\"\n    },\n    \"LogDirectory\": \"<string>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/protection-engines/:id/proxy-bundles",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"protection-engines",
																":id",
																"proxy-bundles"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"Id\": \"officia\",\n \"Config\": {\n  \"AcceptedLanguage\": \"en\",\n  \"ClientSessionData\": {},\n  \"IdleTimeout\": 38980240,\n  \"LogBundleRange\": {\n   \"EndDate\": \"tempor irure aliquip ullamco ipsum\",\n   \"StartDate\": \"tempor laborum\"\n  },\n  \"LogDetail\": \"nulla \",\n  \"LogLevel\": \"in proident id\",\n  \"LogTag\": \"incididunt et quis\",\n  \"NoCancelOnTimeout\": true,\n  \"ProxySpec\": [\n   {\n    \"LogBundlePath\": \"elit ex amet\",\n    \"ProxySessionId\": \"nostrud pariatur tempor\"\n   },\n   {\n    \"LogBundlePath\": \"deserunt\",\n    \"ProxySessionId\": \"qui\"\n   }\n  ],\n  \"SessionId\": \"officia cillum laboris\"\n },\n \"Status\": {\n  \"ApplicationData\": \"occaecat Excepteur c\",\n  \"ApplicationVersion\": \"sed consequat velit\",\n  \"Description\": \"sint elit laboris reprehenderit veniam\",\n  \"EndTime\": \"Duis labore reprehenderit do culpa\",\n  \"Error\": {\n   \"Classifications\": [\n    \"labore dolor est in magna\",\n    \"et culpa nulla sit\"\n   ],\n   \"Code\": -38407590,\n   \"Remedy\": [\n    \"mollit est quis ut\",\n    \"in deserunt cillum in et\"\n   ],\n   \"Retryable\": false,\n   \"Text\": \"consectetur velit ex\"\n  },\n  \"Progress\": 90746065,\n  \"ProxyLogBundleStatus\": [\n   {\n    \"Error\": {\n     \"Classifications\": [\n      \"minim laboris velit veniam\",\n      \"laboris minim\"\n     ],\n     \"Code\": 47275646,\n     \"Remedy\": [\n      \"reprehenderit in\",\n      \"occaecat laboris reprehenderit in\"\n     ],\n     \"Retryable\": true,\n     \"Text\": \"ex exercitation\"\n    },\n    \"FilesCollected\": 17513864,\n    \"LogBundle\": \"irure ullamco quis\",\n    \"ProxySessionId\": \"nulla\",\n    \"State\": \"Success\"\n   },\n   {\n    \"Error\": {\n     \"Classifications\": [\n      \"qui Excepte\",\n      \"laboris culpa ex velit\"\n     ],\n     \"Code\": -22559184,\n     \"Remedy\": [\n      \"qui deserunt cillum in\",\n      \"amet fugiat enim\"\n     ],\n     \"Retryable\": true,\n     \"Text\": \"incididunt\"\n    },\n    \"FilesCollected\": 71845426,\n    \"LogBundle\": \"cillum amet velit sit laborum\",\n    \"ProxySessionId\": \"enim ex aliqua aliquip consequat\",\n    \"State\": \"Stopped\"\n   }\n  ],\n  \"StartTime\": \"labore laboris anim fugiat et\",\n  \"State\": \"Mounted\",\n  \"Warnings\": [\n   \"dolore in officia\",\n   \"culpa\"\n  ]\n }\n}"
												},
												{
													"name": "The requestor is not allowed to perform this operation.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: apikey",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"IdleTimeout\": \"<long>\",\n    \"LogBundleRange\": {\n        \"EndDate\": \"<string>\",\n        \"StartDate\": \"<string>\"\n    },\n    \"LogDirectory\": \"<string>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/protection-engines/:id/proxy-bundles",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"protection-engines",
																":id",
																"proxy-bundles"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
												},
												{
													"name": "The request was accepted for processing.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: apikey",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"IdleTimeout\": \"<long>\",\n    \"LogBundleRange\": {\n        \"EndDate\": \"<string>\",\n        \"StartDate\": \"<string>\"\n    },\n    \"LogDirectory\": \"<string>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/protection-engines/:id/proxy-bundles",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"protection-engines",
																":id",
																"proxy-bundles"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Accepted",
													"code": 202,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"Id\": \"officia\",\n \"Config\": {\n  \"AcceptedLanguage\": \"en\",\n  \"ClientSessionData\": {},\n  \"IdleTimeout\": 38980240,\n  \"LogBundleRange\": {\n   \"EndDate\": \"tempor irure aliquip ullamco ipsum\",\n   \"StartDate\": \"tempor laborum\"\n  },\n  \"LogDetail\": \"nulla \",\n  \"LogLevel\": \"in proident id\",\n  \"LogTag\": \"incididunt et quis\",\n  \"NoCancelOnTimeout\": true,\n  \"ProxySpec\": [\n   {\n    \"LogBundlePath\": \"elit ex amet\",\n    \"ProxySessionId\": \"nostrud pariatur tempor\"\n   },\n   {\n    \"LogBundlePath\": \"deserunt\",\n    \"ProxySessionId\": \"qui\"\n   }\n  ],\n  \"SessionId\": \"officia cillum laboris\"\n },\n \"Status\": {\n  \"ApplicationData\": \"occaecat Excepteur c\",\n  \"ApplicationVersion\": \"sed consequat velit\",\n  \"Description\": \"sint elit laboris reprehenderit veniam\",\n  \"EndTime\": \"Duis labore reprehenderit do culpa\",\n  \"Error\": {\n   \"Classifications\": [\n    \"labore dolor est in magna\",\n    \"et culpa nulla sit\"\n   ],\n   \"Code\": -38407590,\n   \"Remedy\": [\n    \"mollit est quis ut\",\n    \"in deserunt cillum in et\"\n   ],\n   \"Retryable\": false,\n   \"Text\": \"consectetur velit ex\"\n  },\n  \"Progress\": 90746065,\n  \"ProxyLogBundleStatus\": [\n   {\n    \"Error\": {\n     \"Classifications\": [\n      \"minim laboris velit veniam\",\n      \"laboris minim\"\n     ],\n     \"Code\": 47275646,\n     \"Remedy\": [\n      \"reprehenderit in\",\n      \"occaecat laboris reprehenderit in\"\n     ],\n     \"Retryable\": true,\n     \"Text\": \"ex exercitation\"\n    },\n    \"FilesCollected\": 17513864,\n    \"LogBundle\": \"irure ullamco quis\",\n    \"ProxySessionId\": \"nulla\",\n    \"State\": \"Success\"\n   },\n   {\n    \"Error\": {\n     \"Classifications\": [\n      \"qui Excepte\",\n      \"laboris culpa ex velit\"\n     ],\n     \"Code\": -22559184,\n     \"Remedy\": [\n      \"qui deserunt cillum in\",\n      \"amet fugiat enim\"\n     ],\n     \"Retryable\": true,\n     \"Text\": \"incididunt\"\n    },\n    \"FilesCollected\": 71845426,\n    \"LogBundle\": \"cillum amet velit sit laborum\",\n    \"ProxySessionId\": \"enim ex aliqua aliquip consequat\",\n    \"State\": \"Stopped\"\n   }\n  ],\n  \"StartTime\": \"labore laboris anim fugiat et\",\n  \"State\": \"Mounted\",\n  \"Warnings\": [\n   \"dolore in officia\",\n   \"culpa\"\n  ]\n }\n}"
												},
												{
													"name": "An unexpected error prevented the server from fulfilling your request.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: apikey",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"IdleTimeout\": \"<long>\",\n    \"LogBundleRange\": {\n        \"EndDate\": \"<string>\",\n        \"StartDate\": \"<string>\"\n    },\n    \"LogDirectory\": \"<string>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/protection-engines/:id/proxy-bundles",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"protection-engines",
																":id",
																"proxy-bundles"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
												}
											]
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Unregister protection engine.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/protection-engines/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"protection-engines",
												":id"
											],
											"variable": [
												{
													"id": "4225a73a-79fb-4a72-afac-4fd3f484ebfe",
													"key": "id",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The ID of the protection engine to be deleted."
												}
											]
										},
										"description": "Unregisters the protection engine, specified by its ID, from PowerProtect Data Manager.  A prerequisite is that the protection engine with the specified ID is already registered with PowerProtect Data Manager.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
									},
									"response": [
										{
											"name": "The request is not valid.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/protection-engines/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"protection-engines",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/protection-engines/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"protection-engines",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The requestor is not allowed to perform this operation.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/protection-engines/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"protection-engines",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/protection-engines/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"protection-engines",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The requested resource was not found.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/protection-engines/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"protection-engines",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "Successfully deleted the protection engine.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/protection-engines/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"protection-engines",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Get protection engine.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/protection-engines/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"protection-engines",
												":id"
											],
											"variable": [
												{
													"id": "e9ed43a9-285f-4bcb-bf37-5a06999aa7cb",
													"key": "id",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The ID of the protection engine to be retrieved."
												}
											]
										},
										"description": "Retrieves the registered protection engine with the specified ID.  A prerequisite is that the protection engine with the specified ID is already registered with PowerProtect Data Manager.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
									},
									"response": [
										{
											"name": "The request is not valid.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/protection-engines/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"protection-engines",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The requestor is not allowed to perform this operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/protection-engines/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"protection-engines",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The protection engine ID does not exist.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/protection-engines/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"protection-engines",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/protection-engines/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"protection-engines",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "Successfully returned the protection engine.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/protection-engines/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"protection-engines",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"name\": \"qui sit\",\n \"type\": \"VPE\",\n \"ipAddress\": \"minim et amet\",\n \"status\": \"REGISTERING, OPERATIONAL\",\n \"credentials\": {\n  \"id\": \"fugiat aliqua\"\n },\n \"detail\": {\n  \"vpe\": {\n   \"protectionSummary\": {\n    \"maxNoOfProtectableVms\": 15535262,\n    \"noOfProtectedVms\": 26453268,\n    \"totalProtectedSizeInBytes\": 15026186\n   },\n   \"totalDisabledProxies\": -43925980,\n   \"totalFailedProxies\": -4623843,\n   \"totalReadyProxies\": -17036188,\n   \"vcsStatuses\": [\n    {\n     \"ipAddress\": \"ea dolor ex\",\n     \"name\": \"nulla dolor fugiat Ut\",\n     \"status\": \"UNSUPPORTED_VERSION\"\n    },\n    {\n     \"ipAddress\": \"fugiat\",\n     \"name\": \"Excepteur et\",\n     \"status\": \"AUTHENTICATION_FAILURE\"\n    }\n   ]\n  }\n },\n \"_embedded\": {\n  \"dataDomainMtree\": {\n   \"id\": \"et amet\",\n   \"name\": \"Lorem in\"\n  },\n  \"storageSystem\": {\n   \"id\": \"do exercitation amet commodo in\",\n   \"location\": \"ipsum laboris ea ut\",\n   \"name\": \"commodo ullamco\"\n  }\n },\n \"id\": \"Excepteur eiusmod anim\",\n \"registeredAt\": \"1985-05-14T03:11:09.387Z\"\n}"
										},
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/protection-engines/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"protection-engines",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										}
									]
								},
								{
									"name": "Update protection engine.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"<string>\",\n    \"type\": \"<string>\",\n    \"ipAddress\": \"<string>\",\n    \"status\": \"<string>\",\n    \"credentials\": {\n        \"id\": \"<string>\"\n    },\n    \"detail\": {\n        \"vpe\": {\n            \"protectionSummary\": {\n                \"maxNoOfProtectableVms\": \"<long>\",\n                \"noOfProtectedVms\": \"<long>\",\n                \"totalProtectedSizeInBytes\": \"<long>\"\n            },\n            \"totalDisabledProxies\": \"<integer>\",\n            \"totalFailedProxies\": \"<integer>\",\n            \"totalReadyProxies\": \"<integer>\",\n            \"vcsStatuses\": [\n                {\n                    \"ipAddress\": \"<string>\",\n                    \"name\": \"<string>\",\n                    \"status\": \"<string>\"\n                },\n                {\n                    \"ipAddress\": \"<string>\",\n                    \"name\": \"<string>\",\n                    \"status\": \"<string>\"\n                }\n            ]\n        }\n    },\n    \"_embedded\": {\n        \"dataDomainMtree\": {\n            \"id\": \"<string>\",\n            \"name\": \"<string>\"\n        },\n        \"storageSystem\": {\n            \"id\": \"<string>\",\n            \"location\": \"<string>\",\n            \"name\": \"<string>\"\n        }\n    },\n    \"id\": \"<string>\",\n    \"registeredAt\": \"<dateTime>\"\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/protection-engines/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"protection-engines",
												":id"
											],
											"variable": [
												{
													"id": "98949902-49c5-49f1-ad4b-991f134fd9d3",
													"key": "id",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The ID of the protection engine to be updated."
												}
											]
										},
										"description": "Updates the protection engine with the specified ID. The protection engine with the specified ID must already be registered with PowerProtect Data Manager.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
									},
									"response": [
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"<string>\",\n    \"type\": \"<string>\",\n    \"ipAddress\": \"<string>\",\n    \"status\": \"REGISTERING, OPERATIONAL\",\n    \"credentials\": {\n        \"id\": \"<string>\"\n    },\n    \"detail\": {\n        \"vpe\": {\n            \"protectionSummary\": {\n                \"maxNoOfProtectableVms\": \"<long>\",\n                \"noOfProtectedVms\": \"<long>\",\n                \"totalProtectedSizeInBytes\": \"<long>\"\n            },\n            \"totalDisabledProxies\": \"<integer>\",\n            \"totalFailedProxies\": \"<integer>\",\n            \"totalReadyProxies\": \"<integer>\",\n            \"vcsStatuses\": [\n                {\n                    \"ipAddress\": \"<string>\",\n                    \"name\": \"<string>\",\n                    \"status\": \"<string>\"\n                },\n                {\n                    \"ipAddress\": \"<string>\",\n                    \"name\": \"<string>\",\n                    \"status\": \"<string>\"\n                }\n            ]\n        }\n    },\n    \"_embedded\": {\n        \"dataDomainMtree\": {\n            \"id\": \"<string>\",\n            \"name\": \"<string>\"\n        },\n        \"storageSystem\": {\n            \"id\": \"<string>\",\n            \"location\": \"<string>\",\n            \"name\": \"<string>\"\n        }\n    },\n    \"id\": \"<string>\",\n    \"registeredAt\": \"<dateTime>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/protection-engines/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"protection-engines",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The requested resource was not found.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"<string>\",\n    \"type\": \"<string>\",\n    \"ipAddress\": \"<string>\",\n    \"status\": \"REGISTERING, OPERATIONAL\",\n    \"credentials\": {\n        \"id\": \"<string>\"\n    },\n    \"detail\": {\n        \"vpe\": {\n            \"protectionSummary\": {\n                \"maxNoOfProtectableVms\": \"<long>\",\n                \"noOfProtectedVms\": \"<long>\",\n                \"totalProtectedSizeInBytes\": \"<long>\"\n            },\n            \"totalDisabledProxies\": \"<integer>\",\n            \"totalFailedProxies\": \"<integer>\",\n            \"totalReadyProxies\": \"<integer>\",\n            \"vcsStatuses\": [\n                {\n                    \"ipAddress\": \"<string>\",\n                    \"name\": \"<string>\",\n                    \"status\": \"<string>\"\n                },\n                {\n                    \"ipAddress\": \"<string>\",\n                    \"name\": \"<string>\",\n                    \"status\": \"<string>\"\n                }\n            ]\n        }\n    },\n    \"_embedded\": {\n        \"dataDomainMtree\": {\n            \"id\": \"<string>\",\n            \"name\": \"<string>\"\n        },\n        \"storageSystem\": {\n            \"id\": \"<string>\",\n            \"location\": \"<string>\",\n            \"name\": \"<string>\"\n        }\n    },\n    \"id\": \"<string>\",\n    \"registeredAt\": \"<dateTime>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/protection-engines/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"protection-engines",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The requestor is not allowed to perform this operation as it is not implemented.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"<string>\",\n    \"type\": \"<string>\",\n    \"ipAddress\": \"<string>\",\n    \"status\": \"REGISTERING, OPERATIONAL\",\n    \"credentials\": {\n        \"id\": \"<string>\"\n    },\n    \"detail\": {\n        \"vpe\": {\n            \"protectionSummary\": {\n                \"maxNoOfProtectableVms\": \"<long>\",\n                \"noOfProtectedVms\": \"<long>\",\n                \"totalProtectedSizeInBytes\": \"<long>\"\n            },\n            \"totalDisabledProxies\": \"<integer>\",\n            \"totalFailedProxies\": \"<integer>\",\n            \"totalReadyProxies\": \"<integer>\",\n            \"vcsStatuses\": [\n                {\n                    \"ipAddress\": \"<string>\",\n                    \"name\": \"<string>\",\n                    \"status\": \"<string>\"\n                },\n                {\n                    \"ipAddress\": \"<string>\",\n                    \"name\": \"<string>\",\n                    \"status\": \"<string>\"\n                }\n            ]\n        }\n    },\n    \"_embedded\": {\n        \"dataDomainMtree\": {\n            \"id\": \"<string>\",\n            \"name\": \"<string>\"\n        },\n        \"storageSystem\": {\n            \"id\": \"<string>\",\n            \"location\": \"<string>\",\n            \"name\": \"<string>\"\n        }\n    },\n    \"id\": \"<string>\",\n    \"registeredAt\": \"<dateTime>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/protection-engines/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"protection-engines",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Method Not Allowed",
											"code": 405,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"<string>\",\n    \"type\": \"<string>\",\n    \"ipAddress\": \"<string>\",\n    \"status\": \"REGISTERING, OPERATIONAL\",\n    \"credentials\": {\n        \"id\": \"<string>\"\n    },\n    \"detail\": {\n        \"vpe\": {\n            \"protectionSummary\": {\n                \"maxNoOfProtectableVms\": \"<long>\",\n                \"noOfProtectedVms\": \"<long>\",\n                \"totalProtectedSizeInBytes\": \"<long>\"\n            },\n            \"totalDisabledProxies\": \"<integer>\",\n            \"totalFailedProxies\": \"<integer>\",\n            \"totalReadyProxies\": \"<integer>\",\n            \"vcsStatuses\": [\n                {\n                    \"ipAddress\": \"<string>\",\n                    \"name\": \"<string>\",\n                    \"status\": \"<string>\"\n                },\n                {\n                    \"ipAddress\": \"<string>\",\n                    \"name\": \"<string>\",\n                    \"status\": \"<string>\"\n                }\n            ]\n        }\n    },\n    \"_embedded\": {\n        \"dataDomainMtree\": {\n            \"id\": \"<string>\",\n            \"name\": \"<string>\"\n        },\n        \"storageSystem\": {\n            \"id\": \"<string>\",\n            \"location\": \"<string>\",\n            \"name\": \"<string>\"\n        }\n    },\n    \"id\": \"<string>\",\n    \"registeredAt\": \"<dateTime>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/protection-engines/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"protection-engines",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The requestor is not allowed to perform this operation.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"<string>\",\n    \"type\": \"<string>\",\n    \"ipAddress\": \"<string>\",\n    \"status\": \"REGISTERING, OPERATIONAL\",\n    \"credentials\": {\n        \"id\": \"<string>\"\n    },\n    \"detail\": {\n        \"vpe\": {\n            \"protectionSummary\": {\n                \"maxNoOfProtectableVms\": \"<long>\",\n                \"noOfProtectedVms\": \"<long>\",\n                \"totalProtectedSizeInBytes\": \"<long>\"\n            },\n            \"totalDisabledProxies\": \"<integer>\",\n            \"totalFailedProxies\": \"<integer>\",\n            \"totalReadyProxies\": \"<integer>\",\n            \"vcsStatuses\": [\n                {\n                    \"ipAddress\": \"<string>\",\n                    \"name\": \"<string>\",\n                    \"status\": \"<string>\"\n                },\n                {\n                    \"ipAddress\": \"<string>\",\n                    \"name\": \"<string>\",\n                    \"status\": \"<string>\"\n                }\n            ]\n        }\n    },\n    \"_embedded\": {\n        \"dataDomainMtree\": {\n            \"id\": \"<string>\",\n            \"name\": \"<string>\"\n        },\n        \"storageSystem\": {\n            \"id\": \"<string>\",\n            \"location\": \"<string>\",\n            \"name\": \"<string>\"\n        }\n    },\n    \"id\": \"<string>\",\n    \"registeredAt\": \"<dateTime>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/protection-engines/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"protection-engines",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "Successful operation.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"<string>\",\n    \"type\": \"<string>\",\n    \"ipAddress\": \"<string>\",\n    \"status\": \"REGISTERING, OPERATIONAL\",\n    \"credentials\": {\n        \"id\": \"<string>\"\n    },\n    \"detail\": {\n        \"vpe\": {\n            \"protectionSummary\": {\n                \"maxNoOfProtectableVms\": \"<long>\",\n                \"noOfProtectedVms\": \"<long>\",\n                \"totalProtectedSizeInBytes\": \"<long>\"\n            },\n            \"totalDisabledProxies\": \"<integer>\",\n            \"totalFailedProxies\": \"<integer>\",\n            \"totalReadyProxies\": \"<integer>\",\n            \"vcsStatuses\": [\n                {\n                    \"ipAddress\": \"<string>\",\n                    \"name\": \"<string>\",\n                    \"status\": \"<string>\"\n                },\n                {\n                    \"ipAddress\": \"<string>\",\n                    \"name\": \"<string>\",\n                    \"status\": \"<string>\"\n                }\n            ]\n        }\n    },\n    \"_embedded\": {\n        \"dataDomainMtree\": {\n            \"id\": \"<string>\",\n            \"name\": \"<string>\"\n        },\n        \"storageSystem\": {\n            \"id\": \"<string>\",\n            \"location\": \"<string>\",\n            \"name\": \"<string>\"\n        }\n    },\n    \"id\": \"<string>\",\n    \"registeredAt\": \"<dateTime>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/protection-engines/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"protection-engines",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"name\": \"qui sit\",\n \"type\": \"VPE\",\n \"ipAddress\": \"minim et amet\",\n \"status\": \"REGISTERING, OPERATIONAL\",\n \"credentials\": {\n  \"id\": \"fugiat aliqua\"\n },\n \"detail\": {\n  \"vpe\": {\n   \"protectionSummary\": {\n    \"maxNoOfProtectableVms\": 15535262,\n    \"noOfProtectedVms\": 26453268,\n    \"totalProtectedSizeInBytes\": 15026186\n   },\n   \"totalDisabledProxies\": -43925980,\n   \"totalFailedProxies\": -4623843,\n   \"totalReadyProxies\": -17036188,\n   \"vcsStatuses\": [\n    {\n     \"ipAddress\": \"ea dolor ex\",\n     \"name\": \"nulla dolor fugiat Ut\",\n     \"status\": \"UNSUPPORTED_VERSION\"\n    },\n    {\n     \"ipAddress\": \"fugiat\",\n     \"name\": \"Excepteur et\",\n     \"status\": \"AUTHENTICATION_FAILURE\"\n    }\n   ]\n  }\n },\n \"_embedded\": {\n  \"dataDomainMtree\": {\n   \"id\": \"et amet\",\n   \"name\": \"Lorem in\"\n  },\n  \"storageSystem\": {\n   \"id\": \"do exercitation amet commodo in\",\n   \"location\": \"ipsum laboris ea ut\",\n   \"name\": \"commodo ullamco\"\n  }\n },\n \"id\": \"Excepteur eiusmod anim\",\n \"registeredAt\": \"1985-05-14T03:11:09.387Z\"\n}"
										},
										{
											"name": "The request was accepted for processing.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"<string>\",\n    \"type\": \"<string>\",\n    \"ipAddress\": \"<string>\",\n    \"status\": \"REGISTERING, OPERATIONAL\",\n    \"credentials\": {\n        \"id\": \"<string>\"\n    },\n    \"detail\": {\n        \"vpe\": {\n            \"protectionSummary\": {\n                \"maxNoOfProtectableVms\": \"<long>\",\n                \"noOfProtectedVms\": \"<long>\",\n                \"totalProtectedSizeInBytes\": \"<long>\"\n            },\n            \"totalDisabledProxies\": \"<integer>\",\n            \"totalFailedProxies\": \"<integer>\",\n            \"totalReadyProxies\": \"<integer>\",\n            \"vcsStatuses\": [\n                {\n                    \"ipAddress\": \"<string>\",\n                    \"name\": \"<string>\",\n                    \"status\": \"<string>\"\n                },\n                {\n                    \"ipAddress\": \"<string>\",\n                    \"name\": \"<string>\",\n                    \"status\": \"<string>\"\n                }\n            ]\n        }\n    },\n    \"_embedded\": {\n        \"dataDomainMtree\": {\n            \"id\": \"<string>\",\n            \"name\": \"<string>\"\n        },\n        \"storageSystem\": {\n            \"id\": \"<string>\",\n            \"location\": \"<string>\",\n            \"name\": \"<string>\"\n        }\n    },\n    \"id\": \"<string>\",\n    \"registeredAt\": \"<dateTime>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/protection-engines/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"protection-engines",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"name\": \"qui sit\",\n \"type\": \"VPE\",\n \"ipAddress\": \"minim et amet\",\n \"status\": \"REGISTERING, OPERATIONAL\",\n \"credentials\": {\n  \"id\": \"fugiat aliqua\"\n },\n \"detail\": {\n  \"vpe\": {\n   \"protectionSummary\": {\n    \"maxNoOfProtectableVms\": 15535262,\n    \"noOfProtectedVms\": 26453268,\n    \"totalProtectedSizeInBytes\": 15026186\n   },\n   \"totalDisabledProxies\": -43925980,\n   \"totalFailedProxies\": -4623843,\n   \"totalReadyProxies\": -17036188,\n   \"vcsStatuses\": [\n    {\n     \"ipAddress\": \"ea dolor ex\",\n     \"name\": \"nulla dolor fugiat Ut\",\n     \"status\": \"UNSUPPORTED_VERSION\"\n    },\n    {\n     \"ipAddress\": \"fugiat\",\n     \"name\": \"Excepteur et\",\n     \"status\": \"AUTHENTICATION_FAILURE\"\n    }\n   ]\n  }\n },\n \"_embedded\": {\n  \"dataDomainMtree\": {\n   \"id\": \"et amet\",\n   \"name\": \"Lorem in\"\n  },\n  \"storageSystem\": {\n   \"id\": \"do exercitation amet commodo in\",\n   \"location\": \"ipsum laboris ea ut\",\n   \"name\": \"commodo ullamco\"\n  }\n },\n \"id\": \"Excepteur eiusmod anim\",\n \"registeredAt\": \"1985-05-14T03:11:09.387Z\"\n}"
										},
										{
											"name": "The request is not valid.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"<string>\",\n    \"type\": \"<string>\",\n    \"ipAddress\": \"<string>\",\n    \"status\": \"REGISTERING, OPERATIONAL\",\n    \"credentials\": {\n        \"id\": \"<string>\"\n    },\n    \"detail\": {\n        \"vpe\": {\n            \"protectionSummary\": {\n                \"maxNoOfProtectableVms\": \"<long>\",\n                \"noOfProtectedVms\": \"<long>\",\n                \"totalProtectedSizeInBytes\": \"<long>\"\n            },\n            \"totalDisabledProxies\": \"<integer>\",\n            \"totalFailedProxies\": \"<integer>\",\n            \"totalReadyProxies\": \"<integer>\",\n            \"vcsStatuses\": [\n                {\n                    \"ipAddress\": \"<string>\",\n                    \"name\": \"<string>\",\n                    \"status\": \"<string>\"\n                },\n                {\n                    \"ipAddress\": \"<string>\",\n                    \"name\": \"<string>\",\n                    \"status\": \"<string>\"\n                }\n            ]\n        }\n    },\n    \"_embedded\": {\n        \"dataDomainMtree\": {\n            \"id\": \"<string>\",\n            \"name\": \"<string>\"\n        },\n        \"storageSystem\": {\n            \"id\": \"<string>\",\n            \"location\": \"<string>\",\n            \"name\": \"<string>\"\n        }\n    },\n    \"id\": \"<string>\",\n    \"registeredAt\": \"<dateTime>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/protection-engines/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"protection-engines",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										}
									]
								},
								{
									"name": "Manage protection engine.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"engineId\": \"<string>\",\n    \"engineType\": \"<string>\",\n    \"operation\": \"<string>\",\n    \"jobId\": \"<string>\",\n    \"options\": {\n        \"minimumProxyVersion\": \"<string>\",\n        \"quiesceWaitTime\": \"<integer>\"\n    }\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/protection-engines/:id/management",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"protection-engines",
												":id",
												"management"
											],
											"variable": [
												{
													"id": "7613a356-6c20-4a6e-9884-f2e562bef965",
													"key": "id",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The ID of the protection engine to be managed."
												}
											]
										},
										"description": "Performs the specified operation (ProtectionManagementResource.operation) on the protection engine with the specified ID.  The protection engine with the specified ID must already be registered with PowerProtect Data Manager.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
									},
									"response": [
										{
											"name": "The request is not valid.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"engineId\": \"<string>\",\n    \"engineType\": \"<string>\",\n    \"operation\": \"<string>\",\n    \"jobId\": \"<string>\",\n    \"options\": {\n        \"minimumProxyVersion\": \"<string>\",\n        \"quiesceWaitTime\": \"<integer>\"\n    }\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/protection-engines/:id/management",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"protection-engines",
														":id",
														"management"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"engineId\": \"<string>\",\n    \"engineType\": \"<string>\",\n    \"operation\": \"<string>\",\n    \"jobId\": \"<string>\",\n    \"options\": {\n        \"minimumProxyVersion\": \"<string>\",\n        \"quiesceWaitTime\": \"<integer>\"\n    }\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/protection-engines/:id/management",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"protection-engines",
														":id",
														"management"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The requested resource was not found.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"engineId\": \"<string>\",\n    \"engineType\": \"<string>\",\n    \"operation\": \"<string>\",\n    \"jobId\": \"<string>\",\n    \"options\": {\n        \"minimumProxyVersion\": \"<string>\",\n        \"quiesceWaitTime\": \"<integer>\"\n    }\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/protection-engines/:id/management",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"protection-engines",
														":id",
														"management"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "Successful operation.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"engineId\": \"<string>\",\n    \"engineType\": \"<string>\",\n    \"operation\": \"<string>\",\n    \"jobId\": \"<string>\",\n    \"options\": {\n        \"minimumProxyVersion\": \"<string>\",\n        \"quiesceWaitTime\": \"<integer>\"\n    }\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/protection-engines/:id/management",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"protection-engines",
														":id",
														"management"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"engineId\": \"do cillum\",\n \"engineType\": \"VPE\",\n \"operation\": \"START_PROXIES\",\n \"jobId\": \"anim ex ut\",\n \"options\": {\n  \"minimumProxyVersion\": \"consectetur consequat aliquip cillum\",\n  \"quiesceWaitTime\": 90250141\n }\n}"
										},
										{
											"name": "The requestor is not allowed to perform this operation.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"engineId\": \"<string>\",\n    \"engineType\": \"<string>\",\n    \"operation\": \"<string>\",\n    \"jobId\": \"<string>\",\n    \"options\": {\n        \"minimumProxyVersion\": \"<string>\",\n        \"quiesceWaitTime\": \"<integer>\"\n    }\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/protection-engines/:id/management",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"protection-engines",
														":id",
														"management"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The request was accepted for processing.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"engineId\": \"<string>\",\n    \"engineType\": \"<string>\",\n    \"operation\": \"<string>\",\n    \"jobId\": \"<string>\",\n    \"options\": {\n        \"minimumProxyVersion\": \"<string>\",\n        \"quiesceWaitTime\": \"<integer>\"\n    }\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/protection-engines/:id/management",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"protection-engines",
														":id",
														"management"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"engineId\": \"do cillum\",\n \"engineType\": \"VPE\",\n \"operation\": \"START_PROXIES\",\n \"jobId\": \"anim ex ut\",\n \"options\": {\n  \"minimumProxyVersion\": \"consectetur consequat aliquip cillum\",\n  \"quiesceWaitTime\": 90250141\n }\n}"
										},
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"engineId\": \"<string>\",\n    \"engineType\": \"<string>\",\n    \"operation\": \"<string>\",\n    \"jobId\": \"<string>\",\n    \"options\": {\n        \"minimumProxyVersion\": \"<string>\",\n        \"quiesceWaitTime\": \"<integer>\"\n    }\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/protection-engines/:id/management",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"protection-engines",
														":id",
														"management"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										}
									]
								},
								{
									"name": "Get all protection engine proxy images.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/protection-engines/:id/proxy-images",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"protection-engines",
												":id",
												"proxy-images"
											],
											"variable": [
												{
													"id": "8e399857-0f16-4e0b-a67f-ef112d48c8ca",
													"key": "id",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The ID of the VPE protection engine."
												}
											]
										},
										"description": "Retrieves all protection engine proxy images.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
									},
									"response": [
										{
											"name": "Successfully returned available proxy OVA files.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/protection-engines/:id/proxy-images",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"protection-engines",
														":id",
														"proxy-images"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n {\n  \"Agents\": [\n   {\n    \"Agent\": \"consectetur\",\n    \"AgentName\": \"incididunt\",\n    \"OsBits\": 48305287,\n    \"OsType\": \"officia ullamco velit Duis\",\n    \"Version\": \"in id qui eiusmod\"\n   },\n   {\n    \"Agent\": \"ex ullamco voluptate ad laboris\",\n    \"AgentName\": \"ex laboris sit exercitation commodo\",\n    \"OsBits\": 60142425,\n    \"OsType\": \"dolor Duis\",\n    \"Version\": \"est laborum\"\n   }\n  ],\n  \"LastModified\": \"anim ut\",\n  \"Name\": \"cillum laboris id laborum exercitation\",\n  \"Path\": \"laboris ad\",\n  \"Size\": 21233028,\n  \"Version\": \"sit\"\n },\n {\n  \"Agents\": [\n   {\n    \"Agent\": \"aliqua occaecat quis\",\n    \"AgentName\": \"eiusmod cupidatat minim irure in\",\n    \"OsBits\": -15198587,\n    \"OsType\": \"labore\",\n    \"Version\": \"proident cillum ut consequat\"\n   },\n   {\n    \"Agent\": \"veniam commodo Excepteur\",\n    \"AgentName\": \"eu tempor quis\",\n    \"OsBits\": 90303630,\n    \"OsType\": \"dolor culpa consectetur\",\n    \"Version\": \"qui ut Excepteur\"\n   }\n  ],\n  \"LastModified\": \"eiusmod\",\n  \"Name\": \"non\",\n  \"Path\": \"enim\",\n  \"Size\": 86718286,\n  \"Version\": \"sit est do dolor\"\n }\n]"
										},
										{
											"name": "The requestor is not allowed to perform this operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/protection-engines/:id/proxy-images",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"protection-engines",
														":id",
														"proxy-images"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/protection-engines/:id/proxy-images",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"protection-engines",
														":id",
														"proxy-images"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The request is not valid.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/protection-engines/:id/proxy-images",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"protection-engines",
														":id",
														"proxy-images"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/protection-engines/:id/proxy-images",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"protection-engines",
														":id",
														"proxy-images"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										}
									]
								},
								{
									"name": "Get protection engine supported upgrade type.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"minimumProxyVersion\": \"<string>\",\n    \"upgradeType\": \"<string>\"\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/protection-engines/:id/supported-upgrade",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"protection-engines",
												":id",
												"supported-upgrade"
											],
											"variable": [
												{
													"id": "8e5627b1-17ac-4d91-a0b2-d56f70e2c8c3",
													"key": "id",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The ID of the protection engine."
												}
											]
										},
										"description": "Retrieves protection engine supported upgrade type.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
									},
									"response": [
										{
											"name": "The request is not valid.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"minimumProxyVersion\": \"<string>\",\n    \"upgradeType\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/protection-engines/:id/supported-upgrade",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"protection-engines",
														":id",
														"supported-upgrade"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The request completed successfully.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"minimumProxyVersion\": \"<string>\",\n    \"upgradeType\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/protection-engines/:id/supported-upgrade",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"protection-engines",
														":id",
														"supported-upgrade"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"minimumProxyVersion\": \"quis laboris est\",\n \"upgradeType\": \"NDU\"\n}"
										},
										{
											"name": "The requested resource was not found.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"minimumProxyVersion\": \"<string>\",\n    \"upgradeType\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/protection-engines/:id/supported-upgrade",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"protection-engines",
														":id",
														"supported-upgrade"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"minimumProxyVersion\": \"<string>\",\n    \"upgradeType\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/protection-engines/:id/supported-upgrade",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"protection-engines",
														":id",
														"supported-upgrade"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"minimumProxyVersion\": \"<string>\",\n    \"upgradeType\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/protection-engines/:id/supported-upgrade",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"protection-engines",
														":id",
														"supported-upgrade"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The requestor is not allowed to perform this operation.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"minimumProxyVersion\": \"<string>\",\n    \"upgradeType\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/protection-engines/:id/supported-upgrade",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"protection-engines",
														":id",
														"supported-upgrade"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The request could not be completed due to a conflict with the current state of the target resource.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"minimumProxyVersion\": \"<string>\",\n    \"upgradeType\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/protection-engines/:id/supported-upgrade",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"protection-engines",
														":id",
														"supported-upgrade"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Conflict",
											"code": 409,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Get all protection engines.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/protection-engines?page=1&pageSize=100&filter=<string>&orderby=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"protection-engines"
									],
									"query": [
										{
											"key": "page",
											"value": "1",
											"description": "The page number to be returned. Must not be less than 1. See Tutorials - Page the List Result."
										},
										{
											"key": "pageSize",
											"value": "100",
											"description": "The number of resources to be returned. Must not be less than 1. See Tutorials - Page the List Result."
										},
										{
											"key": "filter",
											"value": "<string>",
											"description": "The filter string that is expressed using PowerProtect Data Manager filter syntax. See Tutorials - Filter the List Result."
										},
										{
											"key": "orderby",
											"value": "<string>",
											"description": "The attributes/fields to be sorted by. This parameter can combine with sort direction \"ASC\" or \"DESC\". Default direction is ASC. See Tutorials - Sort the List Result."
										}
									]
								},
								"description": "Retrieves all registered protection engines supported by PowerProtect Data Manager.  This list is expected to grow, and for the current release (and upcoming releases), the supported protection engine is VPE.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
							},
							"response": [
								{
									"name": "Successfully returned available protection engine.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/protection-engines?page=1&pageSize=100&filter=<string>&orderby=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"protection-engines"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "<string>"
												},
												{
													"key": "orderby",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"content\": [\n  {\n   \"name\": \"eiusmod qui conse\",\n   \"type\": \"VPE\",\n   \"ipAddress\": \"veniam proident\",\n   \"status\": \"REGISTERING, OPERATIONAL\",\n   \"credentials\": {\n    \"id\": \"cillum\"\n   },\n   \"detail\": {\n    \"vpe\": {\n     \"protectionSummary\": {\n      \"maxNoOfProtectableVms\": 79625133,\n      \"noOfProtectedVms\": -99042054,\n      \"totalProtectedSizeInBytes\": -80267283\n     },\n     \"totalDisabledProxies\": -60346039,\n     \"totalFailedProxies\": 62695396,\n     \"totalReadyProxies\": 94828921,\n     \"vcsStatuses\": [\n      {\n       \"ipAddress\": \"dolore officia nostrud anim\",\n       \"name\": \"in reprehenderit dolore\",\n       \"status\": \"AUTHENTICATION_FAILURE\"\n      },\n      {\n       \"ipAddress\": \"culpa officia\",\n       \"name\": \"occaecat exercitation ut eu cillum\",\n       \"status\": \"IP_UNREACHABLE\"\n      }\n     ]\n    }\n   },\n   \"_embedded\": {\n    \"dataDomainMtree\": {\n     \"id\": \"amet qui\",\n     \"name\": \"eiusmod\"\n    },\n    \"storageSystem\": {\n     \"id\": \"commodo nisi\",\n     \"location\": \"do ea\",\n     \"name\": \"amet quis\"\n    }\n   },\n   \"id\": \"exercitation sunt dolore fugiat eiusmod\",\n   \"registeredAt\": \"1979-07-08T09:38:17.938Z\"\n  },\n  {\n   \"name\": \"consequat amet sint ad\",\n   \"type\": \"VPE\",\n   \"ipAddress\": \"mollit commodo in est\",\n   \"status\": \"REGISTERING, OPERATIONAL\",\n   \"credentials\": {\n    \"id\": \"commodo occaecat\"\n   },\n   \"detail\": {\n    \"vpe\": {\n     \"protectionSummary\": {\n      \"maxNoOfProtectableVms\": -95020973,\n      \"noOfProtectedVms\": 76400032,\n      \"totalProtectedSizeInBytes\": -78459112\n     },\n     \"totalDisabledProxies\": -97496260,\n     \"totalFailedProxies\": -83409085,\n     \"totalReadyProxies\": 74805116,\n     \"vcsStatuses\": [\n      {\n       \"ipAddress\": \"deserunt in non dolor\",\n       \"name\": \"reprehenderit dolor\",\n       \"status\": \"AUTHENTICATION_FAILURE\"\n      },\n      {\n       \"ipAddress\": \"pariatur ex irure\",\n       \"name\": \"aliqua commodo est\",\n       \"status\": \"INVALID_PORT\"\n      }\n     ]\n    }\n   },\n   \"_embedded\": {\n    \"dataDomainMtree\": {\n     \"id\": \"tempor do laboris commodo\",\n     \"name\": \"veniam do\"\n    },\n    \"storageSystem\": {\n     \"id\": \"Lorem dolor tempor et\",\n     \"location\": \"dolore dolore ea deserunt\",\n     \"name\": \"incididunt do\"\n    }\n   },\n   \"id\": \"labore\",\n   \"registeredAt\": \"1973-05-21T03:30:21.426Z\"\n  }\n ],\n \"page\": {\n  \"number\": -83955462,\n  \"queryState\": \"exercitation\",\n  \"size\": -56432931,\n  \"totalElements\": 58808815,\n  \"totalPages\": 38534562\n }\n}"
								},
								{
									"name": "The requestor is not allowed to perform this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/protection-engines?page=1&pageSize=100&filter=<string>&orderby=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"protection-engines"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "<string>"
												},
												{
													"key": "orderby",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "An unexpected error prevented the server from fulfilling your request.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/protection-engines?page=1&pageSize=100&filter=<string>&orderby=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"protection-engines"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "<string>"
												},
												{
													"key": "orderby",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "The request is not valid.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/protection-engines?page=1&pageSize=100&filter=<string>&orderby=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"protection-engines"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "<string>"
												},
												{
													"key": "orderby",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "The requestor is not authorized to perform this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/protection-engines?page=1&pageSize=100&filter=<string>&orderby=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"protection-engines"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "<string>"
												},
												{
													"key": "orderby",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								}
							]
						},
						{
							"name": "Register protection engine.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<string>\",\n    \"type\": \"<string>\",\n    \"ipAddress\": \"<string>\",\n    \"status\": \"<string>\",\n    \"credentials\": {\n        \"id\": \"<string>\"\n    },\n    \"detail\": {\n        \"vpe\": {\n            \"protectionSummary\": {\n                \"maxNoOfProtectableVms\": \"<long>\",\n                \"noOfProtectedVms\": \"<long>\",\n                \"totalProtectedSizeInBytes\": \"<long>\"\n            },\n            \"totalDisabledProxies\": \"<integer>\",\n            \"totalFailedProxies\": \"<integer>\",\n            \"totalReadyProxies\": \"<integer>\",\n            \"vcsStatuses\": [\n                {\n                    \"ipAddress\": \"<string>\",\n                    \"name\": \"<string>\",\n                    \"status\": \"<string>\"\n                },\n                {\n                    \"ipAddress\": \"<string>\",\n                    \"name\": \"<string>\",\n                    \"status\": \"<string>\"\n                }\n            ]\n        }\n    },\n    \"_embedded\": {\n        \"dataDomainMtree\": {\n            \"id\": \"<string>\",\n            \"name\": \"<string>\"\n        },\n        \"storageSystem\": {\n            \"id\": \"<string>\",\n            \"location\": \"<string>\",\n            \"name\": \"<string>\"\n        }\n    },\n    \"id\": \"<string>\",\n    \"registeredAt\": \"<dateTime>\"\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/protection-engines",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"protection-engines"
									]
								},
								"description": "Registers a protection engine with PowerProtect Data Manager.  This list of possible protection engines is expected to grow; however, for the current release (and upcoming releases), the supported protection engine is VPE.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
							},
							"response": [
								{
									"name": "The requestor is not authorized to perform this operation.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"<string>\",\n    \"type\": \"<string>\",\n    \"ipAddress\": \"<string>\",\n    \"status\": \"REGISTERING, OPERATIONAL\",\n    \"credentials\": {\n        \"id\": \"<string>\"\n    },\n    \"detail\": {\n        \"vpe\": {\n            \"protectionSummary\": {\n                \"maxNoOfProtectableVms\": \"<long>\",\n                \"noOfProtectedVms\": \"<long>\",\n                \"totalProtectedSizeInBytes\": \"<long>\"\n            },\n            \"totalDisabledProxies\": \"<integer>\",\n            \"totalFailedProxies\": \"<integer>\",\n            \"totalReadyProxies\": \"<integer>\",\n            \"vcsStatuses\": [\n                {\n                    \"ipAddress\": \"<string>\",\n                    \"name\": \"<string>\",\n                    \"status\": \"<string>\"\n                },\n                {\n                    \"ipAddress\": \"<string>\",\n                    \"name\": \"<string>\",\n                    \"status\": \"<string>\"\n                }\n            ]\n        }\n    },\n    \"_embedded\": {\n        \"dataDomainMtree\": {\n            \"id\": \"<string>\",\n            \"name\": \"<string>\"\n        },\n        \"storageSystem\": {\n            \"id\": \"<string>\",\n            \"location\": \"<string>\",\n            \"name\": \"<string>\"\n        }\n    },\n    \"id\": \"<string>\",\n    \"registeredAt\": \"<dateTime>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/protection-engines",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"protection-engines"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "An unexpected error prevented the server from fulfilling your request.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"<string>\",\n    \"type\": \"<string>\",\n    \"ipAddress\": \"<string>\",\n    \"status\": \"REGISTERING, OPERATIONAL\",\n    \"credentials\": {\n        \"id\": \"<string>\"\n    },\n    \"detail\": {\n        \"vpe\": {\n            \"protectionSummary\": {\n                \"maxNoOfProtectableVms\": \"<long>\",\n                \"noOfProtectedVms\": \"<long>\",\n                \"totalProtectedSizeInBytes\": \"<long>\"\n            },\n            \"totalDisabledProxies\": \"<integer>\",\n            \"totalFailedProxies\": \"<integer>\",\n            \"totalReadyProxies\": \"<integer>\",\n            \"vcsStatuses\": [\n                {\n                    \"ipAddress\": \"<string>\",\n                    \"name\": \"<string>\",\n                    \"status\": \"<string>\"\n                },\n                {\n                    \"ipAddress\": \"<string>\",\n                    \"name\": \"<string>\",\n                    \"status\": \"<string>\"\n                }\n            ]\n        }\n    },\n    \"_embedded\": {\n        \"dataDomainMtree\": {\n            \"id\": \"<string>\",\n            \"name\": \"<string>\"\n        },\n        \"storageSystem\": {\n            \"id\": \"<string>\",\n            \"location\": \"<string>\",\n            \"name\": \"<string>\"\n        }\n    },\n    \"id\": \"<string>\",\n    \"registeredAt\": \"<dateTime>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/protection-engines",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"protection-engines"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "Successful operation.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"<string>\",\n    \"type\": \"<string>\",\n    \"ipAddress\": \"<string>\",\n    \"status\": \"REGISTERING, OPERATIONAL\",\n    \"credentials\": {\n        \"id\": \"<string>\"\n    },\n    \"detail\": {\n        \"vpe\": {\n            \"protectionSummary\": {\n                \"maxNoOfProtectableVms\": \"<long>\",\n                \"noOfProtectedVms\": \"<long>\",\n                \"totalProtectedSizeInBytes\": \"<long>\"\n            },\n            \"totalDisabledProxies\": \"<integer>\",\n            \"totalFailedProxies\": \"<integer>\",\n            \"totalReadyProxies\": \"<integer>\",\n            \"vcsStatuses\": [\n                {\n                    \"ipAddress\": \"<string>\",\n                    \"name\": \"<string>\",\n                    \"status\": \"<string>\"\n                },\n                {\n                    \"ipAddress\": \"<string>\",\n                    \"name\": \"<string>\",\n                    \"status\": \"<string>\"\n                }\n            ]\n        }\n    },\n    \"_embedded\": {\n        \"dataDomainMtree\": {\n            \"id\": \"<string>\",\n            \"name\": \"<string>\"\n        },\n        \"storageSystem\": {\n            \"id\": \"<string>\",\n            \"location\": \"<string>\",\n            \"name\": \"<string>\"\n        }\n    },\n    \"id\": \"<string>\",\n    \"registeredAt\": \"<dateTime>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/protection-engines",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"protection-engines"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"name\": \"qui sit\",\n \"type\": \"VPE\",\n \"ipAddress\": \"minim et amet\",\n \"status\": \"REGISTERING, OPERATIONAL\",\n \"credentials\": {\n  \"id\": \"fugiat aliqua\"\n },\n \"detail\": {\n  \"vpe\": {\n   \"protectionSummary\": {\n    \"maxNoOfProtectableVms\": 15535262,\n    \"noOfProtectedVms\": 26453268,\n    \"totalProtectedSizeInBytes\": 15026186\n   },\n   \"totalDisabledProxies\": -43925980,\n   \"totalFailedProxies\": -4623843,\n   \"totalReadyProxies\": -17036188,\n   \"vcsStatuses\": [\n    {\n     \"ipAddress\": \"ea dolor ex\",\n     \"name\": \"nulla dolor fugiat Ut\",\n     \"status\": \"UNSUPPORTED_VERSION\"\n    },\n    {\n     \"ipAddress\": \"fugiat\",\n     \"name\": \"Excepteur et\",\n     \"status\": \"AUTHENTICATION_FAILURE\"\n    }\n   ]\n  }\n },\n \"_embedded\": {\n  \"dataDomainMtree\": {\n   \"id\": \"et amet\",\n   \"name\": \"Lorem in\"\n  },\n  \"storageSystem\": {\n   \"id\": \"do exercitation amet commodo in\",\n   \"location\": \"ipsum laboris ea ut\",\n   \"name\": \"commodo ullamco\"\n  }\n },\n \"id\": \"Excepteur eiusmod anim\",\n \"registeredAt\": \"1985-05-14T03:11:09.387Z\"\n}"
								},
								{
									"name": "The request is not valid.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"<string>\",\n    \"type\": \"<string>\",\n    \"ipAddress\": \"<string>\",\n    \"status\": \"REGISTERING, OPERATIONAL\",\n    \"credentials\": {\n        \"id\": \"<string>\"\n    },\n    \"detail\": {\n        \"vpe\": {\n            \"protectionSummary\": {\n                \"maxNoOfProtectableVms\": \"<long>\",\n                \"noOfProtectedVms\": \"<long>\",\n                \"totalProtectedSizeInBytes\": \"<long>\"\n            },\n            \"totalDisabledProxies\": \"<integer>\",\n            \"totalFailedProxies\": \"<integer>\",\n            \"totalReadyProxies\": \"<integer>\",\n            \"vcsStatuses\": [\n                {\n                    \"ipAddress\": \"<string>\",\n                    \"name\": \"<string>\",\n                    \"status\": \"<string>\"\n                },\n                {\n                    \"ipAddress\": \"<string>\",\n                    \"name\": \"<string>\",\n                    \"status\": \"<string>\"\n                }\n            ]\n        }\n    },\n    \"_embedded\": {\n        \"dataDomainMtree\": {\n            \"id\": \"<string>\",\n            \"name\": \"<string>\"\n        },\n        \"storageSystem\": {\n            \"id\": \"<string>\",\n            \"location\": \"<string>\",\n            \"name\": \"<string>\"\n        }\n    },\n    \"id\": \"<string>\",\n    \"registeredAt\": \"<dateTime>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/protection-engines",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"protection-engines"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "The request was accepted for processing.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"<string>\",\n    \"type\": \"<string>\",\n    \"ipAddress\": \"<string>\",\n    \"status\": \"REGISTERING, OPERATIONAL\",\n    \"credentials\": {\n        \"id\": \"<string>\"\n    },\n    \"detail\": {\n        \"vpe\": {\n            \"protectionSummary\": {\n                \"maxNoOfProtectableVms\": \"<long>\",\n                \"noOfProtectedVms\": \"<long>\",\n                \"totalProtectedSizeInBytes\": \"<long>\"\n            },\n            \"totalDisabledProxies\": \"<integer>\",\n            \"totalFailedProxies\": \"<integer>\",\n            \"totalReadyProxies\": \"<integer>\",\n            \"vcsStatuses\": [\n                {\n                    \"ipAddress\": \"<string>\",\n                    \"name\": \"<string>\",\n                    \"status\": \"<string>\"\n                },\n                {\n                    \"ipAddress\": \"<string>\",\n                    \"name\": \"<string>\",\n                    \"status\": \"<string>\"\n                }\n            ]\n        }\n    },\n    \"_embedded\": {\n        \"dataDomainMtree\": {\n            \"id\": \"<string>\",\n            \"name\": \"<string>\"\n        },\n        \"storageSystem\": {\n            \"id\": \"<string>\",\n            \"location\": \"<string>\",\n            \"name\": \"<string>\"\n        }\n    },\n    \"id\": \"<string>\",\n    \"registeredAt\": \"<dateTime>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/protection-engines",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"protection-engines"
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"name\": \"qui sit\",\n \"type\": \"VPE\",\n \"ipAddress\": \"minim et amet\",\n \"status\": \"REGISTERING, OPERATIONAL\",\n \"credentials\": {\n  \"id\": \"fugiat aliqua\"\n },\n \"detail\": {\n  \"vpe\": {\n   \"protectionSummary\": {\n    \"maxNoOfProtectableVms\": 15535262,\n    \"noOfProtectedVms\": 26453268,\n    \"totalProtectedSizeInBytes\": 15026186\n   },\n   \"totalDisabledProxies\": -43925980,\n   \"totalFailedProxies\": -4623843,\n   \"totalReadyProxies\": -17036188,\n   \"vcsStatuses\": [\n    {\n     \"ipAddress\": \"ea dolor ex\",\n     \"name\": \"nulla dolor fugiat Ut\",\n     \"status\": \"UNSUPPORTED_VERSION\"\n    },\n    {\n     \"ipAddress\": \"fugiat\",\n     \"name\": \"Excepteur et\",\n     \"status\": \"AUTHENTICATION_FAILURE\"\n    }\n   ]\n  }\n },\n \"_embedded\": {\n  \"dataDomainMtree\": {\n   \"id\": \"et amet\",\n   \"name\": \"Lorem in\"\n  },\n  \"storageSystem\": {\n   \"id\": \"do exercitation amet commodo in\",\n   \"location\": \"ipsum laboris ea ut\",\n   \"name\": \"commodo ullamco\"\n  }\n },\n \"id\": \"Excepteur eiusmod anim\",\n \"registeredAt\": \"1985-05-14T03:11:09.387Z\"\n}"
								},
								{
									"name": "The requestor is not allowed to perform this operation.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"<string>\",\n    \"type\": \"<string>\",\n    \"ipAddress\": \"<string>\",\n    \"status\": \"REGISTERING, OPERATIONAL\",\n    \"credentials\": {\n        \"id\": \"<string>\"\n    },\n    \"detail\": {\n        \"vpe\": {\n            \"protectionSummary\": {\n                \"maxNoOfProtectableVms\": \"<long>\",\n                \"noOfProtectedVms\": \"<long>\",\n                \"totalProtectedSizeInBytes\": \"<long>\"\n            },\n            \"totalDisabledProxies\": \"<integer>\",\n            \"totalFailedProxies\": \"<integer>\",\n            \"totalReadyProxies\": \"<integer>\",\n            \"vcsStatuses\": [\n                {\n                    \"ipAddress\": \"<string>\",\n                    \"name\": \"<string>\",\n                    \"status\": \"<string>\"\n                },\n                {\n                    \"ipAddress\": \"<string>\",\n                    \"name\": \"<string>\",\n                    \"status\": \"<string>\"\n                }\n            ]\n        }\n    },\n    \"_embedded\": {\n        \"dataDomainMtree\": {\n            \"id\": \"<string>\",\n            \"name\": \"<string>\"\n        },\n        \"storageSystem\": {\n            \"id\": \"<string>\",\n            \"location\": \"<string>\",\n            \"name\": \"<string>\"\n        }\n    },\n    \"id\": \"<string>\",\n    \"registeredAt\": \"<dateTime>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/protection-engines",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"protection-engines"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "protection-policies",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "asset-assignments",
									"item": [
										{
											"name": "Get all assets protected by protection policy ID.",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": true,
															"type": "boolean"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/v2/protection-policies/:id/asset-assignments?page=1&pageSize=100&filter=<string>&orderby=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"protection-policies",
														":id",
														"asset-assignments"
													],
													"query": [
														{
															"key": "page",
															"value": "1",
															"description": "The page number to be returned. Must not be less than 1. See Tutorials - Page the List Result."
														},
														{
															"key": "pageSize",
															"value": "100",
															"description": "The number of resources to be returned. Must not be less than 1. See Tutorials - Page the List Result."
														},
														{
															"key": "filter",
															"value": "<string>",
															"description": "The filter string that is expressed using PowerProtect Data Manager filter syntax. See Tutorials - Filter the List Result."
														},
														{
															"key": "orderby",
															"value": "<string>",
															"description": "The attributes/fields to be sorted by. This parameter can combine with sort direction \"ASC\" or \"DESC\". Default direction is ASC. See Tutorials - Sort the List Result."
														}
													],
													"variable": [
														{
															"id": "160bd307-6d4e-43af-bdb1-db4c6eb5dbd5",
															"key": "id",
															"value": "<string>",
															"type": "string",
															"description": "(Required) The protection policy ID."
														}
													]
												},
												"description": "Retrieves all assets that are protected with the specified protection policy ID.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
											},
											"response": [
												{
													"name": "The request is not valid.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: apikey",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/protection-policies/:id/asset-assignments?page=1&pageSize=100&filter=<string>&orderby=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"protection-policies",
																":id",
																"asset-assignments"
															],
															"query": [
																{
																	"key": "page",
																	"value": "1"
																},
																{
																	"key": "pageSize",
																	"value": "100"
																},
																{
																	"key": "filter",
																	"value": "<string>"
																},
																{
																	"key": "orderby",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
												},
												{
													"name": "The requestor is not authorized to perform this operation.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: apikey",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/protection-policies/:id/asset-assignments?page=1&pageSize=100&filter=<string>&orderby=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"protection-policies",
																":id",
																"asset-assignments"
															],
															"query": [
																{
																	"key": "page",
																	"value": "1"
																},
																{
																	"key": "pageSize",
																	"value": "100"
																},
																{
																	"key": "filter",
																	"value": "<string>"
																},
																{
																	"key": "orderby",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
												},
												{
													"name": "An unexpected error prevented the server from fulfilling your request.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: apikey",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/protection-policies/:id/asset-assignments?page=1&pageSize=100&filter=<string>&orderby=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"protection-policies",
																":id",
																"asset-assignments"
															],
															"query": [
																{
																	"key": "page",
																	"value": "1"
																},
																{
																	"key": "pageSize",
																	"value": "100"
																},
																{
																	"key": "filter",
																	"value": "<string>"
																},
																{
																	"key": "orderby",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
												},
												{
													"name": "The requestor is not allowed to perform this operation.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: apikey",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/protection-policies/:id/asset-assignments?page=1&pageSize=100&filter=<string>&orderby=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"protection-policies",
																":id",
																"asset-assignments"
															],
															"query": [
																{
																	"key": "page",
																	"value": "1"
																},
																{
																	"key": "pageSize",
																	"value": "100"
																},
																{
																	"key": "filter",
																	"value": "<string>"
																},
																{
																	"key": "orderby",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
												},
												{
													"name": "Successfully returned available assets.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: apikey",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/protection-policies/:id/asset-assignments?page=1&pageSize=100&filter=<string>&orderby=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"protection-policies",
																":id",
																"asset-assignments"
															],
															"query": [
																{
																	"key": "page",
																	"value": "1"
																},
																{
																	"key": "pageSize",
																	"value": "100"
																},
																{
																	"key": "filter",
																	"value": "<string>"
																},
																{
																	"key": "orderby",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"content\": [\n  {\n   \"name\": \"nisi non enim\",\n   \"type\": \"VMAX_STORAGE_GROUP\",\n   \"details\": {\n    \"database\": {\n     \"appServerId\": \"sed aliquip consequat laboris qui\",\n     \"appServerName\": \"do et\",\n     \"appVersion\": \"nisi laboris deserunt\",\n     \"asm\": \"reprehenderit anim\",\n     \"clusterName\": \"sit Duis irure aliqua\",\n     \"clusterType\": \"quis voluptate pariatur\",\n     \"dbId\": \"anim\",\n     \"lastBackup\": \"ex \",\n     \"protectionEngineFlow\": \"VMDIRECT\",\n     \"protectionType\": \"culpa cupidatat pariatur\",\n     \"sid\": \"labore\"\n    },\n    \"fileSystem\": {\n     \"fileSystemType\": \"laborum non Du\",\n     \"guid\": \"et nulla tempor\",\n     \"hostName\": \"reprehenderit do eu veniam\",\n     \"hostOS\": \"enim minim elit reprehenderit amet\",\n     \"lastBackup\": \"ut incididunt\",\n     \"protectionType\": \"in deserunt enim\"\n    },\n    \"k8s\": {\n     \"externalCreatedAt\": \"aliquip e\",\n     \"inventorySourceId\": \"adipisicing fugiat veniam tempor dolore\",\n     \"inventorySourceName\": \"ea deserunt sunt\",\n     \"lastBackup\": \"consectetur aliqua in id\",\n     \"namespace\": \"Ut nisi amet\",\n     \"persistentVolumeClaim\": {\n      \"accessModes\": [\n       \"cupidatat adipisicing tempor eiusmod\",\n       \"cupidatat eu culpa velit\"\n      ],\n      \"excluded\": true,\n      \"status\": \"ut dolore aliqua\",\n      \"storageClassName\": \"anim\",\n      \"volumeMode\": \"laboris sed culpa\",\n      \"volumeName\": \"eiusmod\"\n     },\n     \"size\": -91438579,\n     \"subType\": \"dolor nisi consectetur\",\n     \"uid\": \"ut consectetur\"\n    },\n    \"nasShare\": {\n     \"fileSystemName\": \"culpa\",\n     \"nasServer\": {\n      \"addresses\": [\n       {\n        \"type\": \"IPV4\",\n        \"value\": \"aliqua enim\"\n       },\n       {\n        \"type\": \"IPV4\",\n        \"value\": \"do cillum\"\n       }\n      ],\n      \"name\": \"Excepteur sit\"\n     },\n     \"protocol\": \"CIFS\"\n    },\n    \"vm\": {\n     \"clusterName\": \"aute\",\n     \"dataMoverType\": \"SDM\",\n     \"datacenter\": \"aute do\",\n     \"datastore\": [\n      {\n       \"datastoreMoref\": \"eiusmod anim\",\n       \"datastoreName\": \"elit sunt\"\n      },\n      {\n       \"datastoreMoref\": \"aliqua eiusmod id occaecat\",\n       \"datastoreName\": \"consectetur fugiat Ut\"\n      }\n     ],\n     \"disks\": [\n      {\n       \"datastoreMoref\": \"velit dolo\",\n       \"eagerlyScrub\": false,\n       \"excluded\": true,\n       \"key\": -28044482,\n       \"label\": \"in consequat\",\n       \"name\": \"laboris\",\n       \"sizeInBytes\": -97427047,\n       \"thinProvisioned\": true,\n       \"usedBytes\": -60123567.77108869\n      },\n      {\n       \"datastoreMoref\": \"com\",\n       \"eagerlyScrub\": true,\n       \"excluded\": false,\n       \"key\": 14376209,\n       \"label\": \"dolor ipsum aliquip velit in\",\n       \"name\": \"voluptate dolore\",\n       \"sizeInBytes\": 57352901,\n       \"thinProvisioned\": true,\n       \"usedBytes\": 7600040.199953899\n      }\n     ],\n     \"dnsName\": \"minim pariatur enim est\",\n     \"esxName\": \"sit\",\n     \"externalId\": \"consect\",\n     \"folder\": \"labore occaecat\",\n     \"guestOS\": \"dolor dolore\",\n     \"hostMoref\": \"deserunt id amet\",\n     \"hostName\": \"voluptate do\",\n     \"inventoryPath\": \"ea sunt\",\n     \"inventorySourceId\": \"voluptate\",\n     \"inventorySourceName\": \"cillum L\",\n     \"primaryIpAddress\": \"tempor dolor\",\n     \"protectedApplication\": \"NONE\",\n     \"resourcePool\": \"Duis ut nulla qui mollit\",\n     \"vApp\": \"amet cillum in magna\",\n     \"vcenterName\": \"laboris et in velit\",\n     \"vmBiosUuid\": \"qui\",\n     \"vmMoref\": \"ut amet tempor\"\n    },\n    \"vmaxStorageGroup\": {\n     \"configuration\": {\n      \"backupDevice\": {\n       \"guid\": \"adipisicing ipsum reprehenderit\",\n       \"name\": \"id dolor eiusmod ex\",\n       \"uri\": \"aliquip laboris consectetur\"\n      },\n      \"backupStorage\": {\n       \"guid\": \"in sit enim deserunt amet\",\n       \"name\": \"ullamco deserunt aute\",\n       \"uri\": \"ut Duis\"\n      },\n      \"restoreDevice\": {\n       \"guid\": \"enim veniam ut\",\n       \"name\": \"esse amet fugiat laboris\",\n       \"uri\": \"in\"\n      },\n      \"restoreStorage\": {\n       \"guid\": \"est sit esse\",\n       \"name\": \"ipsum laborum aliqua\",\n       \"uri\": \"cupidatat officia elit dolor\"\n      }\n     },\n     \"coordinatingHostId\": \"in dolore dolore\",\n     \"coordinatingHostname\": \"aliquip est nisi\"\n    }\n   },\n   \"_embedded\": {\n    \"protectionPolicy\": {\n     \"id\": \"incididunt dolor aliqua ad\",\n     \"name\": \"ad reprehenderit aliquip\",\n     \"protectionEngine\": \"Lorem c\",\n     \"type\": \"exercitation pariatur\"\n    },\n    \"protectionlifeCycle\": {\n     \"id\": \"magna consectetur\",\n     \"name\": \"ullamco eu eiusmod Ut eni\",\n     \"protectionEngine\": \"sunt laboris qui ex\",\n     \"type\": \"sed ullamco esse\"\n    },\n    \"storageSystem\": {\n     \"id\": \"consectetur labore\",\n     \"name\": \"elit qui officia exercitation\"\n    }\n   },\n   \"assetGroupId\": \"in cupidatat nostrud\",\n   \"backupDetails\": [\n    {\n     \"backupType\": \"INCREMENTAL\",\n     \"parallelism\": 80949134\n    },\n    {\n     \"backupType\": \"CUMULATIVE\",\n     \"parallelism\": 79114740\n    }\n   ],\n   \"createdAt\": \"2008-02-07T16:23:32.129Z\",\n   \"credentialId\": \"velit aute\",\n   \"dataTargetIds\": \"eiusmod ea esse dolore\",\n   \"deleted\": false,\n   \"filterIds\": [\n    \"ex aliquip magna\",\n    \"ut incididunt id\"\n   ],\n   \"id\": \"Duis exercitation cillum consectetur ut\",\n   \"lastAvailableCopyTime\": \"2015-09-18T05:40:18.302Z\",\n   \"networkLabel\": \"eu\",\n   \"protectable\": true,\n   \"protectionCapacity\": {\n    \"size\": 2723607,\n    \"time\": \"1949-04-20T21:36:17.828Z\"\n   },\n   \"protectionLifeCycleId\": \"sunt in aliquip\",\n   \"protectionPolicy\": {\n    \"id\": \"dolor eu fugiat\",\n    \"name\": \"ut velit\",\n    \"protectionEngine\": \"esse qui irure anim\",\n    \"type\": \"deserunt aute est aliquip\"\n   },\n   \"protectionPolicyId\": \"sed exercitation amet\",\n   \"ruleId\": \"Ut occaecat aliquip\",\n   \"ruleName\": \"Lorem \",\n   \"size\": 4739015,\n   \"updatedAt\": \"2011-07-15T03:12:31.176Z\",\n   \"userTags\": [\n    \"ipsum eiusmod aliqua Lorem dolor\",\n    \"do sint sed\"\n   ],\n   \"vmMoref\": \"do amet officia esse\"\n  },\n  {\n   \"name\": \"amet eu\",\n   \"type\": \"ORACLE_DATABASE\",\n   \"details\": {\n    \"database\": {\n     \"appServerId\": \"non\",\n     \"appServerName\": \"laboris ut\",\n     \"appVersion\": \"et deserunt cillum reprehenderit amet\",\n     \"asm\": \"reprehenderit dolore nostrud pariatur\",\n     \"clusterName\": \"pariatur sint\",\n     \"clusterType\": \"labo\",\n     \"dbId\": \"pariatur quis veniam nostrud in\",\n     \"lastBackup\": \"est incididunt Lorem voluptate\",\n     \"protectionEngineFlow\": \"APPDIRECT\",\n     \"protectionType\": \"pariatur non commodo ipsum\",\n     \"sid\": \"fugiat elit do et in\"\n    },\n    \"fileSystem\": {\n     \"fileSystemType\": \"tempor\",\n     \"guid\": \"commodo et Excepteur\",\n     \"hostName\": \"ipsum adipi\",\n     \"hostOS\": \"enim laboris elit\",\n     \"lastBackup\": \"ex non\",\n     \"protectionType\": \"anim tempor\"\n    },\n    \"k8s\": {\n     \"externalCreatedAt\": \"in veniam Excepteur pariatur\",\n     \"inventorySourceId\": \"ex\",\n     \"inventorySourceName\": \"voluptate cillum esse ex\",\n     \"lastBackup\": \"labore\",\n     \"namespace\": \"ut id\",\n     \"persistentVolumeClaim\": {\n      \"accessModes\": [\n       \"pariatur\",\n       \"Lo\"\n      ],\n      \"excluded\": false,\n      \"status\": \"enim Ut nisi veniam id\",\n      \"storageClassName\": \"Ut sit\",\n      \"volumeMode\": \"veniam reprehenderit\",\n      \"volumeName\": \"nisi proident cillum cupidatat\"\n     },\n     \"size\": -95108959,\n     \"subType\": \"eu\",\n     \"uid\": \"Duis exercitation sint\"\n    },\n    \"nasShare\": {\n     \"fileSystemName\": \"aute velit est elit\",\n     \"nasServer\": {\n      \"addresses\": [\n       {\n        \"type\": \"IPV6\",\n        \"value\": \"veniam qui sunt deserunt exercitation\"\n       },\n       {\n        \"type\": \"IPV4\",\n        \"value\": \"elit proident eiusm\"\n       }\n      ],\n      \"name\": \"sit mollit commodo ut reprehenderit\"\n     },\n     \"protocol\": \"CIFS\"\n    },\n    \"vm\": {\n     \"clusterName\": \"ut mollit\",\n     \"dataMoverType\": \"VADP\",\n     \"datacenter\": \"esse\",\n     \"datastore\": [\n      {\n       \"datastoreMoref\": \"laborum tempor reprehenderit\",\n       \"datastoreName\": \"amet in dolore deserunt Ut\"\n      },\n      {\n       \"datastoreMoref\": \"voluptate minim exercitation qui\",\n       \"datastoreName\": \"laboris non nostrud eu\"\n      }\n     ],\n     \"disks\": [\n      {\n       \"datastoreMoref\": \"non exercitation \",\n       \"eagerlyScrub\": false,\n       \"excluded\": false,\n       \"key\": 47380535,\n       \"label\": \"ad\",\n       \"name\": \"deserunt\",\n       \"sizeInBytes\": 31593867,\n       \"thinProvisioned\": false,\n       \"usedBytes\": -21418113.41700141\n      },\n      {\n       \"datastoreMoref\": \"Excepteur in labore\",\n       \"eagerlyScrub\": true,\n       \"excluded\": false,\n       \"key\": 56979628,\n       \"label\": \"ex ad dolore\",\n       \"name\": \"ut nostrud Duis exercitation\",\n       \"sizeInBytes\": 6019567,\n       \"thinProvisioned\": true,\n       \"usedBytes\": 31083385.49239482\n      }\n     ],\n     \"dnsName\": \"pariatur ipsum non\",\n     \"esxName\": \"et laborum labore\",\n     \"externalId\": \"anim fugiat quis sit\",\n     \"folder\": \"commodo laboris consequat\",\n     \"guestOS\": \"laboris\",\n     \"hostMoref\": \"commodo laborum in deserunt\",\n     \"hostName\": \"dolore\",\n     \"inventoryPath\": \"aliqua laboris amet\",\n     \"inventorySourceId\": \"tempor do sed ipsum\",\n     \"inventorySourceName\": \"nisi\",\n     \"primaryIpAddress\": \"minim veniam qui adipisicing magna\",\n     \"protectedApplication\": \"MSSQL\",\n     \"resourcePool\": \"quis u\",\n     \"vApp\": \"amet ut cupidatat sint velit\",\n     \"vcenterName\": \"aute deserunt\",\n     \"vmBiosUuid\": \"laboris ut commodo\",\n     \"vmMoref\": \"Lorem velit ut dolor\"\n    },\n    \"vmaxStorageGroup\": {\n     \"configuration\": {\n      \"backupDevice\": {\n       \"guid\": \"dolore velit\",\n       \"name\": \"non adipisicing\",\n       \"uri\": \"incididunt Lorem\"\n      },\n      \"backupStorage\": {\n       \"guid\": \"dolor Ut laborum reprehenderit\",\n       \"name\": \"velit non tempor enim\",\n       \"uri\": \"laboris aute adipisicing\"\n      },\n      \"restoreDevice\": {\n       \"guid\": \"dolore adipisicing\",\n       \"name\": \"officia \",\n       \"uri\": \"proident dolore nostrud Lorem\"\n      },\n      \"restoreStorage\": {\n       \"guid\": \"dolor Ut mollit dolor\",\n       \"name\": \"adipis\",\n       \"uri\": \"esse\"\n      }\n     },\n     \"coordinatingHostId\": \"enim cupidatat do officia\",\n     \"coordinatingHostname\": \"mollit minim\"\n    }\n   },\n   \"_embedded\": {\n    \"protectionPolicy\": {\n     \"id\": \"labore\",\n     \"name\": \"Ut in non i\",\n     \"protectionEngine\": \"aliqua dolor consectetur est\",\n     \"type\": \"null\"\n    },\n    \"protectionlifeCycle\": {\n     \"id\": \"minim\",\n     \"name\": \"et mollit voluptate est\",\n     \"protectionEngine\": \"exercitation\",\n     \"type\": \"sit id ad adipisicing cupidatat\"\n    },\n    \"storageSystem\": {\n     \"id\": \"cillum dolore aute\",\n     \"name\": \"magna nostrud velit sed\"\n    }\n   },\n   \"assetGroupId\": \"do pariatur\",\n   \"backupDetails\": [\n    {\n     \"backupType\": \"CUMULATIVE\",\n     \"parallelism\": -59155555\n    },\n    {\n     \"backupType\": \"DIFFERENTIAL\",\n     \"parallelism\": 67119437\n    }\n   ],\n   \"createdAt\": \"2008-10-07T23:43:54.006Z\",\n   \"credentialId\": \"dolor id aliqua\",\n   \"dataTargetIds\": \"non nulla irure\",\n   \"deleted\": false,\n   \"filterIds\": [\n    \"tempor dolore en\",\n    \"adipisicing sunt ex voluptate dolor\"\n   ],\n   \"id\": \"sit cupidatat et\",\n   \"lastAvailableCopyTime\": \"1959-05-12T15:56:05.675Z\",\n   \"networkLabel\": \"mollit sit\",\n   \"protectable\": true,\n   \"protectionCapacity\": {\n    \"size\": -47189874,\n    \"time\": \"2003-05-24T19:09:51.724Z\"\n   },\n   \"protectionLifeCycleId\": \"nostrud l\",\n   \"protectionPolicy\": {\n    \"id\": \"Ut adipisicing ea in\",\n    \"name\": \"id\",\n    \"protectionEngine\": \"adipisicing in quis\",\n    \"type\": \"occaecat\"\n   },\n   \"protectionPolicyId\": \"nisi Excepteur in laboris\",\n   \"ruleId\": \"enim velit irure\",\n   \"ruleName\": \"in laboris aute dese\",\n   \"size\": 32924297,\n   \"updatedAt\": \"1993-07-07T18:40:32.205Z\",\n   \"userTags\": [\n    \"cupidatat\",\n    \"do\"\n   ],\n   \"vmMoref\": \"id aliquip\"\n  }\n ],\n \"page\": {\n  \"number\": -36192287,\n  \"queryState\": \"cupidatat\",\n  \"size\": -38315227,\n  \"totalElements\": 3040318,\n  \"totalPages\": -90422954\n }\n}"
												}
											]
										},
										{
											"name": "Assign assets to the protection policy by protection policy ID.",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": true,
															"type": "boolean"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n    \"<string>\",\n    \"<string>\"\n]",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/protection-policies/:id/asset-assignments",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"protection-policies",
														":id",
														"asset-assignments"
													],
													"variable": [
														{
															"id": "5179686b-ed32-4452-929d-ff97b2f292ec",
															"key": "id",
															"value": "<string>",
															"type": "string",
															"description": "(Required) The protection policy ID."
														}
													]
												},
												"description": "Assigns the assets to the protection policy with the specified protection policy ID.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
											},
											"response": [
												{
													"name": "An unexpected error prevented the server from fulfilling your request.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: apikey",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n    \"<string>\",\n    \"<string>\"\n]"
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/protection-policies/:id/asset-assignments",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"protection-policies",
																":id",
																"asset-assignments"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
												},
												{
													"name": "The request is not valid.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: apikey",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n    \"<string>\",\n    \"<string>\"\n]"
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/protection-policies/:id/asset-assignments",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"protection-policies",
																":id",
																"asset-assignments"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
												},
												{
													"name": "The requestor is not allowed to perform this operation.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: apikey",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n    \"<string>\",\n    \"<string>\"\n]"
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/protection-policies/:id/asset-assignments",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"protection-policies",
																":id",
																"asset-assignments"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
												},
												{
													"name": "Successfully assign the assets.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: apikey",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n    \"<string>\",\n    \"<string>\"\n]"
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/protection-policies/:id/asset-assignments",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"protection-policies",
																":id",
																"asset-assignments"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "The requestor is not authorized to perform this operation.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: apikey",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n    \"<string>\",\n    \"<string>\"\n]"
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/protection-policies/:id/asset-assignments",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"protection-policies",
																":id",
																"asset-assignments"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
												}
											]
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Delete protection policy by ID.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/protection-policies/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"protection-policies",
												":id"
											],
											"variable": [
												{
													"id": "4388676a-876f-49ca-ba61-a775474db453",
													"key": "id",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The protection policy ID."
												}
											]
										},
										"description": "Deletes protection policy by ID.\n> This endpoint supports execution by the following roles: admin,export-and-recovery-admin\n"
									},
									"response": [
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/protection-policies/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"protection-policies",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The requestor is not allowed to perform this operation.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/protection-policies/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"protection-policies",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "Successfully deleted the protection policy.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/protection-policies/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"protection-policies",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/protection-policies/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"protection-policies",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The request is not valid.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/protection-policies/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"protection-policies",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										}
									]
								},
								{
									"name": "Get a protection policy by ID.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/protection-policies/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"protection-policies",
												":id"
											],
											"variable": [
												{
													"id": "5a6caef0-9aef-4741-a776-7e03eaea860e",
													"key": "id",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The protection policy ID."
												}
											]
										},
										"description": "Retrieves a protection policy by ID.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
									},
									"response": [
										{
											"name": "The requested protection policy does not exist.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/protection-policies/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"protection-policies",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/protection-policies/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"protection-policies",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The request is not valid.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/protection-policies/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"protection-policies",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "Successfully returned the protection policy.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/protection-policies/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"protection-policies",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"id\": \"ullamco tempor cillum\",\n \"name\": \"Duis\",\n \"assetType\": \"SAP_HANA_DATABASE\",\n \"type\": \"ACTIVE\",\n \"enabled\": false,\n \"priority\": 17010214,\n \"encrypted\": true,\n \"complianceInterval\": \"minim ut\",\n \"createdAt\": \"1952-05-01T15:40:11.760Z\",\n \"credentials\": {\n  \"id\": \"mollit ex\",\n  \"type\": \"VCENTER\"\n },\n \"dataConsistency\": \"CRASH_CONSISTENT\",\n \"description\": \"consectetur in aute dolor\",\n \"details\": {\n  \"oracle\": {\n   \"dbConnection\": {\n    \"tnsAdmin\": \"sed veniam in nulla aliquip\",\n    \"tnsName\": \"Duis consectetur fugiat incididun\"\n   },\n   \"rmanConnection\": {\n    \"credentialId\": \"ex non occaecat\",\n    \"tnsAdmin\": \"Excepteur nulla in qui\",\n    \"tnsName\": \"cillum Lorem\",\n    \"type\": \"DBUSER\"\n   }\n  },\n  \"vm\": {\n   \"metadataIndexingEnabled\": false,\n   \"protectionEngine\": \"HYPERVISORDIRECT\"\n  }\n },\n \"filterIds\": [\n  \"do Ut culpa\",\n  \"sit aute\"\n ],\n \"forceFull\": false,\n \"passive\": false,\n \"slaId\": \"minim aliquip\",\n \"stages\": [\n  {\n   \"id\": \"in enim irure te\",\n   \"type\": \"CLOUD_TIER\",\n   \"passive\": false,\n   \"attributes\": {\n    \"cloudTier\": {\n     \"cloudUnit\": {\n      \"id\": \"laborum cillum aute culpa ea\",\n      \"name\": \"magna in cupidatat quis\"\n     },\n     \"tierAfter\": {\n      \"interval\": 81991435,\n      \"unit\": \"YEAR\"\n     }\n    },\n    \"exchange\": {\n     \"consistencyCheck\": \"DATABASE_ONLY\",\n     \"troubleShootingOption\": \"eiusmod voluptate aute Ut\"\n    },\n    \"fileSystem\": {\n     \"troubleShootingOption\": \"consectetur est\"\n    },\n    \"mssql\": {\n     \"autoPromote\": true,\n     \"backUpExpirationDays\": 25612941,\n     \"excludeSystemDatabase\": true,\n     \"parallelism\": 71932116,\n     \"troubleShootingOption\": \"Lorem dolor deserunt\"\n    },\n    \"oracle\": {\n     \"archiveLogDeletionDays\": 41939476,\n     \"parallelism\": 91805702,\n     \"troubleShootingOption\": \"adipisicing quis laborum\"\n    },\n    \"protection\": {\n     \"backupMode\": \"FSS\",\n     \"forceFullRules\": [\n      \"VSO_NODE_FAILURE\"\n     ]\n    },\n    \"sapHana\": {\n     \"troubleShootingOption\": \"sunt id enim labore\"\n    },\n    \"vm\": {\n     \"appConsistentProtection\": false,\n     \"dataMoverType\": \"INHERIT_FROM_POLICY\",\n     \"disableQuiescing\": false,\n     \"excludeSwapFiles\": false\n    },\n    \"vmax\": {\n     \"postSnapshotFileName\": \"ipsum velit\",\n     \"preSnapshotFileName\": \"minim qui\"\n    }\n   },\n   \"operations\": [\n    {\n     \"backupType\": \"CUMULATIVE\",\n     \"schedule\": {\n      \"dayOfMonth\": 43672457,\n      \"duration\": \"tempor Excepteur dolor Ut\",\n      \"frequency\": \"DAILY\",\n      \"genericDay\": \"FIRST\",\n      \"interval\": 53616212,\n      \"month\": \"JUNE\",\n      \"startTime\": \"1987-03-14T20:22:29.581Z\",\n      \"weekDays\": [\n       \"SUNDAY\",\n       \"SATURDAY\"\n      ],\n      \"weekOfMonth\": 53753069\n     },\n     \"type\": \"AUTO_FULL\"\n    },\n    {\n     \"backupType\": \"LOG\",\n     \"schedule\": {\n      \"dayOfMonth\": 71945943,\n      \"duration\": \"reprehenderit laboris\",\n      \"frequency\": \"WEEKLY\",\n      \"genericDay\": \"LAST\",\n      \"interval\": -20955454,\n      \"month\": \"JANUARY\",\n      \"startTime\": \"1962-06-25T00:46:56.271Z\",\n      \"weekDays\": [\n       \"WEDNESDAY\",\n       \"FRIDAY\"\n      ],\n      \"weekOfMonth\": -8514081\n     },\n     \"type\": \"LOG\"\n    }\n   ],\n   \"options\": {\n    \"promotionType\": \"NONE\",\n    \"skipSimpleDatabase\": false\n   },\n   \"retention\": {\n    \"interval\": 58695242,\n    \"unit\": \"WEEK\",\n    \"storageSystemRetentionLock\": true\n   },\n   \"slaId\": \"eiusmod commodo deserunt cupidatat exercitation\",\n   \"sourceStageId\": \"labore anim consectetur\",\n   \"target\": {\n    \"storageSystemId\": \"v\",\n    \"dataTargetId\": \"velit ea reprehenderit consequat\",\n    \"hardCapacityQuotaLevel\": 27465154,\n    \"hardStreamQuotaLevel\": 63985239,\n    \"preferredInterface\": \"ad Ut\",\n    \"softCapacityQuotaLevel\": 53973756,\n    \"softStreamQuotaLevel\": -25500763\n   }\n  },\n  {\n   \"id\": \"commodo ut\",\n   \"type\": \"PROMOTION\",\n   \"passive\": false,\n   \"attributes\": {\n    \"cloudTier\": {\n     \"cloudUnit\": {\n      \"id\": \"veniam est mollit\",\n      \"name\": \"deserunt\"\n     },\n     \"tierAfter\": {\n      \"interval\": 18647843,\n      \"unit\": \"YEAR\"\n     }\n    },\n    \"exchange\": {\n     \"consistencyCheck\": \"LOGS_ONLY\",\n     \"troubleShootingOption\": \"ipsum ullamco elit\"\n    },\n    \"fileSystem\": {\n     \"troubleShootingOption\": \"ex reprehenderit commodo Duis\"\n    },\n    \"mssql\": {\n     \"autoPromote\": true,\n     \"backUpExpirationDays\": 13645530,\n     \"excludeSystemDatabase\": false,\n     \"parallelism\": -29138322,\n     \"troubleShootingOption\": \"eu quis\"\n    },\n    \"oracle\": {\n     \"archiveLogDeletionDays\": 52711163,\n     \"parallelism\": -95692492,\n     \"troubleShootingOption\": \"ut\"\n    },\n    \"protection\": {\n     \"backupMode\": \"VSS\",\n     \"forceFullRules\": [\n      \"VSO_NODE_FAILURE\"\n     ]\n    },\n    \"sapHana\": {\n     \"troubleShootingOption\": \"mollit anim sunt non\"\n    },\n    \"vm\": {\n     \"appConsistentProtection\": false,\n     \"dataMoverType\": \"INHERIT_FROM_POLICY\",\n     \"disableQuiescing\": false,\n     \"excludeSwapFiles\": false\n    },\n    \"vmax\": {\n     \"postSnapshotFileName\": \"commodo in\",\n     \"preSnapshotFileName\": \"co\"\n    }\n   },\n   \"operations\": [\n    {\n     \"backupType\": \"SYNTHETIC_FULL\",\n     \"schedule\": {\n      \"dayOfMonth\": 10722047,\n      \"duration\": \"ex Lorem voluptate\",\n      \"frequency\": \"DAILY\",\n      \"genericDay\": \"LAST\",\n      \"interval\": 74523778,\n      \"month\": \"MARCH\",\n      \"startTime\": \"1950-03-18T15:42:46.230Z\",\n      \"weekDays\": [\n       \"TUESDAY\",\n       \"MONDAY\"\n      ],\n      \"weekOfMonth\": 62893767\n     },\n     \"type\": \"AUTO_FULL\"\n    },\n    {\n     \"backupType\": \"SYNTHETIC_FULL\",\n     \"schedule\": {\n      \"dayOfMonth\": 38838331,\n      \"duration\": \"nisi enim\",\n      \"frequency\": \"YEARLY\",\n      \"genericDay\": \"LAST\",\n      \"interval\": -19861406,\n      \"month\": \"DECEMBER\",\n      \"startTime\": \"2014-07-06T07:11:20.681Z\",\n      \"weekDays\": [\n       \"FRIDAY\",\n       \"SATURDAY\"\n      ],\n      \"weekOfMonth\": 19958370\n     },\n     \"type\": \"INCREMENTAL\"\n    }\n   ],\n   \"options\": {\n    \"promotionType\": \"NONE_WITH_WARNINGS\",\n    \"skipSimpleDatabase\": true\n   },\n   \"retention\": {\n    \"interval\": 9342609,\n    \"unit\": \"YEAR\",\n    \"storageSystemRetentionLock\": false\n   },\n   \"slaId\": \"nisi pariatur aliquip do esse\",\n   \"sourceStageId\": \"et \",\n   \"target\": {\n    \"storageSystemId\": \"sunt laborum ad ipsum\",\n    \"dataTargetId\": \"esse Ut ea consequat\",\n    \"hardCapacityQuotaLevel\": -19576563,\n    \"hardStreamQuotaLevel\": 70652732,\n    \"preferredInterface\": \"dolore mollit\",\n    \"softCapacityQuotaLevel\": 17754500,\n    \"softStreamQuotaLevel\": 55606710\n   }\n  }\n ],\n \"summary\": {\n  \"lastExecutionStatus\": \"IDLE\",\n  \"numberOfAssets\": 21153101,\n  \"numberOfJobFailures\": 99465142,\n  \"numberOfSlaFailures\": 92971705,\n  \"numberOfSlaSuccess\": -1567924,\n  \"totalAssetCapacity\": -62332054.660262816,\n  \"totalAssetProtectionCapacity\": -31545874.216773346\n },\n \"targetStorageProvisionStrategy\": \"AUTO_PROVISION\",\n \"updatedAt\": \"1982-02-22T01:31:22.368Z\"\n}"
										},
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/protection-policies/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"protection-policies",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The requestor is not allowed to perform this operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/protection-policies/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"protection-policies",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										}
									]
								},
								{
									"name": "Update protection policy by ID.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"assetType\": \"<string>\",\n    \"type\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"priority\": \"<integer>\",\n    \"encrypted\": \"<boolean>\",\n    \"complianceInterval\": \"<string>\",\n    \"createdAt\": \"<dateTime>\",\n    \"credentials\": {\n        \"id\": \"<string>\",\n        \"type\": \"<string>\"\n    },\n    \"dataConsistency\": \"<string>\",\n    \"description\": \"<string>\",\n    \"details\": {\n        \"oracle\": {\n            \"dbConnection\": {\n                \"tnsAdmin\": \"<string>\",\n                \"tnsName\": \"<string>\"\n            },\n            \"rmanConnection\": {\n                \"credentialId\": \"<string>\",\n                \"tnsAdmin\": \"<string>\",\n                \"tnsName\": \"<string>\",\n                \"type\": \"<string>\"\n            }\n        },\n        \"vm\": {\n            \"metadataIndexingEnabled\": \"<boolean>\",\n            \"protectionEngine\": \"<string>\"\n        }\n    },\n    \"filterIds\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"forceFull\": \"<boolean>\",\n    \"passive\": \"<boolean>\",\n    \"slaId\": \"<string>\",\n    \"stages\": [\n        {\n            \"id\": \"<string>\",\n            \"type\": \"<string>\",\n            \"passive\": \"<boolean>\",\n            \"attributes\": {\n                \"cloudTier\": {\n                    \"cloudUnit\": {\n                        \"id\": \"<string>\",\n                        \"name\": \"<string>\"\n                    },\n                    \"tierAfter\": {\n                        \"interval\": \"<integer>\",\n                        \"unit\": \"<string>\"\n                    }\n                },\n                \"exchange\": {\n                    \"consistencyCheck\": \"<string>\",\n                    \"troubleShootingOption\": \"<string>\"\n                },\n                \"fileSystem\": {\n                    \"troubleShootingOption\": \"<string>\"\n                },\n                \"mssql\": {\n                    \"autoPromote\": \"<boolean>\",\n                    \"backUpExpirationDays\": \"<integer>\",\n                    \"excludeSystemDatabase\": \"<boolean>\",\n                    \"parallelism\": \"<integer>\",\n                    \"troubleShootingOption\": \"<string>\"\n                },\n                \"oracle\": {\n                    \"archiveLogDeletionDays\": \"<integer>\",\n                    \"parallelism\": \"<integer>\",\n                    \"troubleShootingOption\": \"<string>\"\n                },\n                \"protection\": {\n                    \"backupMode\": \"<string>\",\n                    \"forceFullRules\": [\n                        \"<string>\"\n                    ]\n                },\n                \"sapHana\": {\n                    \"troubleShootingOption\": \"<string>\"\n                },\n                \"vm\": {\n                    \"appConsistentProtection\": \"<boolean>\",\n                    \"dataMoverType\": \"<string>\",\n                    \"disableQuiescing\": \"<boolean>\",\n                    \"excludeSwapFiles\": \"<boolean>\"\n                },\n                \"vmax\": {\n                    \"postSnapshotFileName\": \"<string>\",\n                    \"preSnapshotFileName\": \"<string>\"\n                }\n            },\n            \"operations\": [\n                {\n                    \"backupType\": \"<string>\",\n                    \"schedule\": {\n                        \"dayOfMonth\": \"<integer>\",\n                        \"duration\": \"<string>\",\n                        \"frequency\": \"<string>\",\n                        \"genericDay\": \"<string>\",\n                        \"interval\": \"<integer>\",\n                        \"month\": \"<string>\",\n                        \"startTime\": \"<dateTime>\",\n                        \"weekDays\": [\n                            \"<string>\"\n                        ],\n                        \"weekOfMonth\": \"<integer>\"\n                    },\n                    \"type\": \"<string>\"\n                }\n            ],\n            \"options\": {\n                \"promotionType\": \"<string>\",\n                \"skipSimpleDatabase\": \"<boolean>\"\n            },\n            \"retention\": {\n                \"interval\": \"<integer>\",\n                \"unit\": \"<string>\",\n                \"storageSystemRetentionLock\": \"<boolean>\"\n            },\n            \"slaId\": \"<string>\",\n            \"sourceStageId\": \"<string>\",\n            \"target\": {\n                \"storageSystemId\": \"<string>\",\n                \"dataTargetId\": \"<string>\",\n                \"hardCapacityQuotaLevel\": \"<long>\",\n                \"hardStreamQuotaLevel\": \"<long>\",\n                \"preferredInterface\": \"<string>\",\n                \"softCapacityQuotaLevel\": \"<long>\",\n                \"softStreamQuotaLevel\": \"<long>\"\n            }\n        },\n        {\n            \"id\": \"<string>\",\n            \"type\": \"<string>\",\n            \"passive\": \"<boolean>\",\n            \"attributes\": {\n                \"cloudTier\": {\n                    \"cloudUnit\": {\n                        \"id\": \"<string>\",\n                        \"name\": \"<string>\"\n                    },\n                    \"tierAfter\": {\n                        \"interval\": \"<integer>\",\n                        \"unit\": \"<string>\"\n                    }\n                },\n                \"exchange\": {\n                    \"consistencyCheck\": \"<string>\",\n                    \"troubleShootingOption\": \"<string>\"\n                },\n                \"fileSystem\": {\n                    \"troubleShootingOption\": \"<string>\"\n                },\n                \"mssql\": {\n                    \"autoPromote\": \"<boolean>\",\n                    \"backUpExpirationDays\": \"<integer>\",\n                    \"excludeSystemDatabase\": \"<boolean>\",\n                    \"parallelism\": \"<integer>\",\n                    \"troubleShootingOption\": \"<string>\"\n                },\n                \"oracle\": {\n                    \"archiveLogDeletionDays\": \"<integer>\",\n                    \"parallelism\": \"<integer>\",\n                    \"troubleShootingOption\": \"<string>\"\n                },\n                \"protection\": {\n                    \"backupMode\": \"<string>\",\n                    \"forceFullRules\": [\n                        \"<string>\"\n                    ]\n                },\n                \"sapHana\": {\n                    \"troubleShootingOption\": \"<string>\"\n                },\n                \"vm\": {\n                    \"appConsistentProtection\": \"<boolean>\",\n                    \"dataMoverType\": \"<string>\",\n                    \"disableQuiescing\": \"<boolean>\",\n                    \"excludeSwapFiles\": \"<boolean>\"\n                },\n                \"vmax\": {\n                    \"postSnapshotFileName\": \"<string>\",\n                    \"preSnapshotFileName\": \"<string>\"\n                }\n            },\n            \"operations\": [\n                {\n                    \"backupType\": \"<string>\",\n                    \"schedule\": {\n                        \"dayOfMonth\": \"<integer>\",\n                        \"duration\": \"<string>\",\n                        \"frequency\": \"<string>\",\n                        \"genericDay\": \"<string>\",\n                        \"interval\": \"<integer>\",\n                        \"month\": \"<string>\",\n                        \"startTime\": \"<dateTime>\",\n                        \"weekDays\": [\n                            \"<string>\"\n                        ],\n                        \"weekOfMonth\": \"<integer>\"\n                    },\n                    \"type\": \"<string>\"\n                }\n            ],\n            \"options\": {\n                \"promotionType\": \"<string>\",\n                \"skipSimpleDatabase\": \"<boolean>\"\n            },\n            \"retention\": {\n                \"interval\": \"<integer>\",\n                \"unit\": \"<string>\",\n                \"storageSystemRetentionLock\": \"<boolean>\"\n            },\n            \"slaId\": \"<string>\",\n            \"sourceStageId\": \"<string>\",\n            \"target\": {\n                \"storageSystemId\": \"<string>\",\n                \"dataTargetId\": \"<string>\",\n                \"hardCapacityQuotaLevel\": \"<long>\",\n                \"hardStreamQuotaLevel\": \"<long>\",\n                \"preferredInterface\": \"<string>\",\n                \"softCapacityQuotaLevel\": \"<long>\",\n                \"softStreamQuotaLevel\": \"<long>\"\n            }\n        }\n    ],\n    \"summary\": {\n        \"lastExecutionStatus\": \"<string>\",\n        \"totalAssetCapacity\": \"<double>\",\n        \"totalAssetProtectionCapacity\": \"<double>\"\n    },\n    \"targetStorageProvisionStrategy\": \"<string>\",\n    \"updatedAt\": \"<dateTime>\"\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/protection-policies/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"protection-policies",
												":id"
											],
											"variable": [
												{
													"id": "e0130595-4e73-47c0-a4f0-a49ced9224e7",
													"key": "id",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The protection policy ID."
												}
											]
										},
										"description": "Updates protection policy by ID.\n> This endpoint supports execution by the following roles: admin,export-and-recovery-admin\n"
									},
									"response": [
										{
											"name": "Successfully updated the protection policy.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"assetType\": \"<string>\",\n    \"type\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"priority\": \"<integer>\",\n    \"encrypted\": \"<boolean>\",\n    \"complianceInterval\": \"<string>\",\n    \"createdAt\": \"<dateTime>\",\n    \"credentials\": {\n        \"id\": \"<string>\",\n        \"type\": \"<string>\"\n    },\n    \"dataConsistency\": \"<string>\",\n    \"description\": \"<string>\",\n    \"details\": {\n        \"oracle\": {\n            \"dbConnection\": {\n                \"tnsAdmin\": \"<string>\",\n                \"tnsName\": \"<string>\"\n            },\n            \"rmanConnection\": {\n                \"credentialId\": \"<string>\",\n                \"tnsAdmin\": \"<string>\",\n                \"tnsName\": \"<string>\",\n                \"type\": \"<string>\"\n            }\n        },\n        \"vm\": {\n            \"metadataIndexingEnabled\": \"<boolean>\",\n            \"protectionEngine\": \"<string>\"\n        }\n    },\n    \"filterIds\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"forceFull\": \"<boolean>\",\n    \"passive\": \"<boolean>\",\n    \"slaId\": \"<string>\",\n    \"stages\": [\n        {\n            \"id\": \"<string>\",\n            \"type\": \"<string>\",\n            \"passive\": \"<boolean>\",\n            \"attributes\": {\n                \"cloudTier\": {\n                    \"cloudUnit\": {\n                        \"id\": \"<string>\",\n                        \"name\": \"<string>\"\n                    },\n                    \"tierAfter\": {\n                        \"interval\": \"<integer>\",\n                        \"unit\": \"<string>\"\n                    }\n                },\n                \"exchange\": {\n                    \"consistencyCheck\": \"<string>\",\n                    \"troubleShootingOption\": \"<string>\"\n                },\n                \"fileSystem\": {\n                    \"troubleShootingOption\": \"<string>\"\n                },\n                \"mssql\": {\n                    \"autoPromote\": \"<boolean>\",\n                    \"backUpExpirationDays\": \"<integer>\",\n                    \"excludeSystemDatabase\": \"<boolean>\",\n                    \"parallelism\": \"<integer>\",\n                    \"troubleShootingOption\": \"<string>\"\n                },\n                \"oracle\": {\n                    \"archiveLogDeletionDays\": \"<integer>\",\n                    \"parallelism\": \"<integer>\",\n                    \"troubleShootingOption\": \"<string>\"\n                },\n                \"protection\": {\n                    \"backupMode\": \"<string>\",\n                    \"forceFullRules\": [\n                        \"<string>\"\n                    ]\n                },\n                \"sapHana\": {\n                    \"troubleShootingOption\": \"<string>\"\n                },\n                \"vm\": {\n                    \"appConsistentProtection\": \"<boolean>\",\n                    \"dataMoverType\": \"<string>\",\n                    \"disableQuiescing\": \"<boolean>\",\n                    \"excludeSwapFiles\": \"<boolean>\"\n                },\n                \"vmax\": {\n                    \"postSnapshotFileName\": \"<string>\",\n                    \"preSnapshotFileName\": \"<string>\"\n                }\n            },\n            \"operations\": [\n                {\n                    \"backupType\": \"<string>\",\n                    \"schedule\": {\n                        \"dayOfMonth\": \"<integer>\",\n                        \"duration\": \"<string>\",\n                        \"frequency\": \"<string>\",\n                        \"genericDay\": \"<string>\",\n                        \"interval\": \"<integer>\",\n                        \"month\": \"<string>\",\n                        \"startTime\": \"<dateTime>\",\n                        \"weekDays\": [\n                            \"<string>\"\n                        ],\n                        \"weekOfMonth\": \"<integer>\"\n                    },\n                    \"type\": \"<string>\"\n                }\n            ],\n            \"options\": {\n                \"promotionType\": \"<string>\",\n                \"skipSimpleDatabase\": \"<boolean>\"\n            },\n            \"retention\": {\n                \"interval\": \"<integer>\",\n                \"unit\": \"<string>\",\n                \"storageSystemRetentionLock\": \"<boolean>\"\n            },\n            \"slaId\": \"<string>\",\n            \"sourceStageId\": \"<string>\",\n            \"target\": {\n                \"storageSystemId\": \"<string>\",\n                \"dataTargetId\": \"<string>\",\n                \"hardCapacityQuotaLevel\": \"<long>\",\n                \"hardStreamQuotaLevel\": \"<long>\",\n                \"preferredInterface\": \"<string>\",\n                \"softCapacityQuotaLevel\": \"<long>\",\n                \"softStreamQuotaLevel\": \"<long>\"\n            }\n        },\n        {\n            \"id\": \"<string>\",\n            \"type\": \"<string>\",\n            \"passive\": \"<boolean>\",\n            \"attributes\": {\n                \"cloudTier\": {\n                    \"cloudUnit\": {\n                        \"id\": \"<string>\",\n                        \"name\": \"<string>\"\n                    },\n                    \"tierAfter\": {\n                        \"interval\": \"<integer>\",\n                        \"unit\": \"<string>\"\n                    }\n                },\n                \"exchange\": {\n                    \"consistencyCheck\": \"<string>\",\n                    \"troubleShootingOption\": \"<string>\"\n                },\n                \"fileSystem\": {\n                    \"troubleShootingOption\": \"<string>\"\n                },\n                \"mssql\": {\n                    \"autoPromote\": \"<boolean>\",\n                    \"backUpExpirationDays\": \"<integer>\",\n                    \"excludeSystemDatabase\": \"<boolean>\",\n                    \"parallelism\": \"<integer>\",\n                    \"troubleShootingOption\": \"<string>\"\n                },\n                \"oracle\": {\n                    \"archiveLogDeletionDays\": \"<integer>\",\n                    \"parallelism\": \"<integer>\",\n                    \"troubleShootingOption\": \"<string>\"\n                },\n                \"protection\": {\n                    \"backupMode\": \"<string>\",\n                    \"forceFullRules\": [\n                        \"<string>\"\n                    ]\n                },\n                \"sapHana\": {\n                    \"troubleShootingOption\": \"<string>\"\n                },\n                \"vm\": {\n                    \"appConsistentProtection\": \"<boolean>\",\n                    \"dataMoverType\": \"<string>\",\n                    \"disableQuiescing\": \"<boolean>\",\n                    \"excludeSwapFiles\": \"<boolean>\"\n                },\n                \"vmax\": {\n                    \"postSnapshotFileName\": \"<string>\",\n                    \"preSnapshotFileName\": \"<string>\"\n                }\n            },\n            \"operations\": [\n                {\n                    \"backupType\": \"<string>\",\n                    \"schedule\": {\n                        \"dayOfMonth\": \"<integer>\",\n                        \"duration\": \"<string>\",\n                        \"frequency\": \"<string>\",\n                        \"genericDay\": \"<string>\",\n                        \"interval\": \"<integer>\",\n                        \"month\": \"<string>\",\n                        \"startTime\": \"<dateTime>\",\n                        \"weekDays\": [\n                            \"<string>\"\n                        ],\n                        \"weekOfMonth\": \"<integer>\"\n                    },\n                    \"type\": \"<string>\"\n                }\n            ],\n            \"options\": {\n                \"promotionType\": \"<string>\",\n                \"skipSimpleDatabase\": \"<boolean>\"\n            },\n            \"retention\": {\n                \"interval\": \"<integer>\",\n                \"unit\": \"<string>\",\n                \"storageSystemRetentionLock\": \"<boolean>\"\n            },\n            \"slaId\": \"<string>\",\n            \"sourceStageId\": \"<string>\",\n            \"target\": {\n                \"storageSystemId\": \"<string>\",\n                \"dataTargetId\": \"<string>\",\n                \"hardCapacityQuotaLevel\": \"<long>\",\n                \"hardStreamQuotaLevel\": \"<long>\",\n                \"preferredInterface\": \"<string>\",\n                \"softCapacityQuotaLevel\": \"<long>\",\n                \"softStreamQuotaLevel\": \"<long>\"\n            }\n        }\n    ],\n    \"summary\": {\n        \"lastExecutionStatus\": \"<string>\",\n        \"totalAssetCapacity\": \"<double>\",\n        \"totalAssetProtectionCapacity\": \"<double>\"\n    },\n    \"targetStorageProvisionStrategy\": \"<string>\",\n    \"updatedAt\": \"<dateTime>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/protection-policies/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"protection-policies",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"id\": \"ullamco tempor cillum\",\n \"name\": \"Duis\",\n \"assetType\": \"SAP_HANA_DATABASE\",\n \"type\": \"ACTIVE\",\n \"enabled\": false,\n \"priority\": 17010214,\n \"encrypted\": true,\n \"complianceInterval\": \"minim ut\",\n \"createdAt\": \"1952-05-01T15:40:11.760Z\",\n \"credentials\": {\n  \"id\": \"mollit ex\",\n  \"type\": \"VCENTER\"\n },\n \"dataConsistency\": \"CRASH_CONSISTENT\",\n \"description\": \"consectetur in aute dolor\",\n \"details\": {\n  \"oracle\": {\n   \"dbConnection\": {\n    \"tnsAdmin\": \"sed veniam in nulla aliquip\",\n    \"tnsName\": \"Duis consectetur fugiat incididun\"\n   },\n   \"rmanConnection\": {\n    \"credentialId\": \"ex non occaecat\",\n    \"tnsAdmin\": \"Excepteur nulla in qui\",\n    \"tnsName\": \"cillum Lorem\",\n    \"type\": \"DBUSER\"\n   }\n  },\n  \"vm\": {\n   \"metadataIndexingEnabled\": false,\n   \"protectionEngine\": \"HYPERVISORDIRECT\"\n  }\n },\n \"filterIds\": [\n  \"do Ut culpa\",\n  \"sit aute\"\n ],\n \"forceFull\": false,\n \"passive\": false,\n \"slaId\": \"minim aliquip\",\n \"stages\": [\n  {\n   \"id\": \"in enim irure te\",\n   \"type\": \"CLOUD_TIER\",\n   \"passive\": false,\n   \"attributes\": {\n    \"cloudTier\": {\n     \"cloudUnit\": {\n      \"id\": \"laborum cillum aute culpa ea\",\n      \"name\": \"magna in cupidatat quis\"\n     },\n     \"tierAfter\": {\n      \"interval\": 81991435,\n      \"unit\": \"YEAR\"\n     }\n    },\n    \"exchange\": {\n     \"consistencyCheck\": \"DATABASE_ONLY\",\n     \"troubleShootingOption\": \"eiusmod voluptate aute Ut\"\n    },\n    \"fileSystem\": {\n     \"troubleShootingOption\": \"consectetur est\"\n    },\n    \"mssql\": {\n     \"autoPromote\": true,\n     \"backUpExpirationDays\": 25612941,\n     \"excludeSystemDatabase\": true,\n     \"parallelism\": 71932116,\n     \"troubleShootingOption\": \"Lorem dolor deserunt\"\n    },\n    \"oracle\": {\n     \"archiveLogDeletionDays\": 41939476,\n     \"parallelism\": 91805702,\n     \"troubleShootingOption\": \"adipisicing quis laborum\"\n    },\n    \"protection\": {\n     \"backupMode\": \"FSS\",\n     \"forceFullRules\": [\n      \"VSO_NODE_FAILURE\"\n     ]\n    },\n    \"sapHana\": {\n     \"troubleShootingOption\": \"sunt id enim labore\"\n    },\n    \"vm\": {\n     \"appConsistentProtection\": false,\n     \"dataMoverType\": \"INHERIT_FROM_POLICY\",\n     \"disableQuiescing\": false,\n     \"excludeSwapFiles\": false\n    },\n    \"vmax\": {\n     \"postSnapshotFileName\": \"ipsum velit\",\n     \"preSnapshotFileName\": \"minim qui\"\n    }\n   },\n   \"operations\": [\n    {\n     \"backupType\": \"CUMULATIVE\",\n     \"schedule\": {\n      \"dayOfMonth\": 43672457,\n      \"duration\": \"tempor Excepteur dolor Ut\",\n      \"frequency\": \"DAILY\",\n      \"genericDay\": \"FIRST\",\n      \"interval\": 53616212,\n      \"month\": \"JUNE\",\n      \"startTime\": \"1987-03-14T20:22:29.581Z\",\n      \"weekDays\": [\n       \"SUNDAY\",\n       \"SATURDAY\"\n      ],\n      \"weekOfMonth\": 53753069\n     },\n     \"type\": \"AUTO_FULL\"\n    },\n    {\n     \"backupType\": \"LOG\",\n     \"schedule\": {\n      \"dayOfMonth\": 71945943,\n      \"duration\": \"reprehenderit laboris\",\n      \"frequency\": \"WEEKLY\",\n      \"genericDay\": \"LAST\",\n      \"interval\": -20955454,\n      \"month\": \"JANUARY\",\n      \"startTime\": \"1962-06-25T00:46:56.271Z\",\n      \"weekDays\": [\n       \"WEDNESDAY\",\n       \"FRIDAY\"\n      ],\n      \"weekOfMonth\": -8514081\n     },\n     \"type\": \"LOG\"\n    }\n   ],\n   \"options\": {\n    \"promotionType\": \"NONE\",\n    \"skipSimpleDatabase\": false\n   },\n   \"retention\": {\n    \"interval\": 58695242,\n    \"unit\": \"WEEK\",\n    \"storageSystemRetentionLock\": true\n   },\n   \"slaId\": \"eiusmod commodo deserunt cupidatat exercitation\",\n   \"sourceStageId\": \"labore anim consectetur\",\n   \"target\": {\n    \"storageSystemId\": \"v\",\n    \"dataTargetId\": \"velit ea reprehenderit consequat\",\n    \"hardCapacityQuotaLevel\": 27465154,\n    \"hardStreamQuotaLevel\": 63985239,\n    \"preferredInterface\": \"ad Ut\",\n    \"softCapacityQuotaLevel\": 53973756,\n    \"softStreamQuotaLevel\": -25500763\n   }\n  },\n  {\n   \"id\": \"commodo ut\",\n   \"type\": \"PROMOTION\",\n   \"passive\": false,\n   \"attributes\": {\n    \"cloudTier\": {\n     \"cloudUnit\": {\n      \"id\": \"veniam est mollit\",\n      \"name\": \"deserunt\"\n     },\n     \"tierAfter\": {\n      \"interval\": 18647843,\n      \"unit\": \"YEAR\"\n     }\n    },\n    \"exchange\": {\n     \"consistencyCheck\": \"LOGS_ONLY\",\n     \"troubleShootingOption\": \"ipsum ullamco elit\"\n    },\n    \"fileSystem\": {\n     \"troubleShootingOption\": \"ex reprehenderit commodo Duis\"\n    },\n    \"mssql\": {\n     \"autoPromote\": true,\n     \"backUpExpirationDays\": 13645530,\n     \"excludeSystemDatabase\": false,\n     \"parallelism\": -29138322,\n     \"troubleShootingOption\": \"eu quis\"\n    },\n    \"oracle\": {\n     \"archiveLogDeletionDays\": 52711163,\n     \"parallelism\": -95692492,\n     \"troubleShootingOption\": \"ut\"\n    },\n    \"protection\": {\n     \"backupMode\": \"VSS\",\n     \"forceFullRules\": [\n      \"VSO_NODE_FAILURE\"\n     ]\n    },\n    \"sapHana\": {\n     \"troubleShootingOption\": \"mollit anim sunt non\"\n    },\n    \"vm\": {\n     \"appConsistentProtection\": false,\n     \"dataMoverType\": \"INHERIT_FROM_POLICY\",\n     \"disableQuiescing\": false,\n     \"excludeSwapFiles\": false\n    },\n    \"vmax\": {\n     \"postSnapshotFileName\": \"commodo in\",\n     \"preSnapshotFileName\": \"co\"\n    }\n   },\n   \"operations\": [\n    {\n     \"backupType\": \"SYNTHETIC_FULL\",\n     \"schedule\": {\n      \"dayOfMonth\": 10722047,\n      \"duration\": \"ex Lorem voluptate\",\n      \"frequency\": \"DAILY\",\n      \"genericDay\": \"LAST\",\n      \"interval\": 74523778,\n      \"month\": \"MARCH\",\n      \"startTime\": \"1950-03-18T15:42:46.230Z\",\n      \"weekDays\": [\n       \"TUESDAY\",\n       \"MONDAY\"\n      ],\n      \"weekOfMonth\": 62893767\n     },\n     \"type\": \"AUTO_FULL\"\n    },\n    {\n     \"backupType\": \"SYNTHETIC_FULL\",\n     \"schedule\": {\n      \"dayOfMonth\": 38838331,\n      \"duration\": \"nisi enim\",\n      \"frequency\": \"YEARLY\",\n      \"genericDay\": \"LAST\",\n      \"interval\": -19861406,\n      \"month\": \"DECEMBER\",\n      \"startTime\": \"2014-07-06T07:11:20.681Z\",\n      \"weekDays\": [\n       \"FRIDAY\",\n       \"SATURDAY\"\n      ],\n      \"weekOfMonth\": 19958370\n     },\n     \"type\": \"INCREMENTAL\"\n    }\n   ],\n   \"options\": {\n    \"promotionType\": \"NONE_WITH_WARNINGS\",\n    \"skipSimpleDatabase\": true\n   },\n   \"retention\": {\n    \"interval\": 9342609,\n    \"unit\": \"YEAR\",\n    \"storageSystemRetentionLock\": false\n   },\n   \"slaId\": \"nisi pariatur aliquip do esse\",\n   \"sourceStageId\": \"et \",\n   \"target\": {\n    \"storageSystemId\": \"sunt laborum ad ipsum\",\n    \"dataTargetId\": \"esse Ut ea consequat\",\n    \"hardCapacityQuotaLevel\": -19576563,\n    \"hardStreamQuotaLevel\": 70652732,\n    \"preferredInterface\": \"dolore mollit\",\n    \"softCapacityQuotaLevel\": 17754500,\n    \"softStreamQuotaLevel\": 55606710\n   }\n  }\n ],\n \"summary\": {\n  \"lastExecutionStatus\": \"IDLE\",\n  \"numberOfAssets\": 21153101,\n  \"numberOfJobFailures\": 99465142,\n  \"numberOfSlaFailures\": 92971705,\n  \"numberOfSlaSuccess\": -1567924,\n  \"totalAssetCapacity\": -62332054.660262816,\n  \"totalAssetProtectionCapacity\": -31545874.216773346\n },\n \"targetStorageProvisionStrategy\": \"AUTO_PROVISION\",\n \"updatedAt\": \"1982-02-22T01:31:22.368Z\"\n}"
										},
										{
											"name": "The requestor is not allowed to perform this operation.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"assetType\": \"<string>\",\n    \"type\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"priority\": \"<integer>\",\n    \"encrypted\": \"<boolean>\",\n    \"complianceInterval\": \"<string>\",\n    \"createdAt\": \"<dateTime>\",\n    \"credentials\": {\n        \"id\": \"<string>\",\n        \"type\": \"<string>\"\n    },\n    \"dataConsistency\": \"<string>\",\n    \"description\": \"<string>\",\n    \"details\": {\n        \"oracle\": {\n            \"dbConnection\": {\n                \"tnsAdmin\": \"<string>\",\n                \"tnsName\": \"<string>\"\n            },\n            \"rmanConnection\": {\n                \"credentialId\": \"<string>\",\n                \"tnsAdmin\": \"<string>\",\n                \"tnsName\": \"<string>\",\n                \"type\": \"<string>\"\n            }\n        },\n        \"vm\": {\n            \"metadataIndexingEnabled\": \"<boolean>\",\n            \"protectionEngine\": \"<string>\"\n        }\n    },\n    \"filterIds\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"forceFull\": \"<boolean>\",\n    \"passive\": \"<boolean>\",\n    \"slaId\": \"<string>\",\n    \"stages\": [\n        {\n            \"id\": \"<string>\",\n            \"type\": \"<string>\",\n            \"passive\": \"<boolean>\",\n            \"attributes\": {\n                \"cloudTier\": {\n                    \"cloudUnit\": {\n                        \"id\": \"<string>\",\n                        \"name\": \"<string>\"\n                    },\n                    \"tierAfter\": {\n                        \"interval\": \"<integer>\",\n                        \"unit\": \"<string>\"\n                    }\n                },\n                \"exchange\": {\n                    \"consistencyCheck\": \"<string>\",\n                    \"troubleShootingOption\": \"<string>\"\n                },\n                \"fileSystem\": {\n                    \"troubleShootingOption\": \"<string>\"\n                },\n                \"mssql\": {\n                    \"autoPromote\": \"<boolean>\",\n                    \"backUpExpirationDays\": \"<integer>\",\n                    \"excludeSystemDatabase\": \"<boolean>\",\n                    \"parallelism\": \"<integer>\",\n                    \"troubleShootingOption\": \"<string>\"\n                },\n                \"oracle\": {\n                    \"archiveLogDeletionDays\": \"<integer>\",\n                    \"parallelism\": \"<integer>\",\n                    \"troubleShootingOption\": \"<string>\"\n                },\n                \"protection\": {\n                    \"backupMode\": \"<string>\",\n                    \"forceFullRules\": [\n                        \"<string>\"\n                    ]\n                },\n                \"sapHana\": {\n                    \"troubleShootingOption\": \"<string>\"\n                },\n                \"vm\": {\n                    \"appConsistentProtection\": \"<boolean>\",\n                    \"dataMoverType\": \"<string>\",\n                    \"disableQuiescing\": \"<boolean>\",\n                    \"excludeSwapFiles\": \"<boolean>\"\n                },\n                \"vmax\": {\n                    \"postSnapshotFileName\": \"<string>\",\n                    \"preSnapshotFileName\": \"<string>\"\n                }\n            },\n            \"operations\": [\n                {\n                    \"backupType\": \"<string>\",\n                    \"schedule\": {\n                        \"dayOfMonth\": \"<integer>\",\n                        \"duration\": \"<string>\",\n                        \"frequency\": \"<string>\",\n                        \"genericDay\": \"<string>\",\n                        \"interval\": \"<integer>\",\n                        \"month\": \"<string>\",\n                        \"startTime\": \"<dateTime>\",\n                        \"weekDays\": [\n                            \"<string>\"\n                        ],\n                        \"weekOfMonth\": \"<integer>\"\n                    },\n                    \"type\": \"<string>\"\n                }\n            ],\n            \"options\": {\n                \"promotionType\": \"<string>\",\n                \"skipSimpleDatabase\": \"<boolean>\"\n            },\n            \"retention\": {\n                \"interval\": \"<integer>\",\n                \"unit\": \"<string>\",\n                \"storageSystemRetentionLock\": \"<boolean>\"\n            },\n            \"slaId\": \"<string>\",\n            \"sourceStageId\": \"<string>\",\n            \"target\": {\n                \"storageSystemId\": \"<string>\",\n                \"dataTargetId\": \"<string>\",\n                \"hardCapacityQuotaLevel\": \"<long>\",\n                \"hardStreamQuotaLevel\": \"<long>\",\n                \"preferredInterface\": \"<string>\",\n                \"softCapacityQuotaLevel\": \"<long>\",\n                \"softStreamQuotaLevel\": \"<long>\"\n            }\n        },\n        {\n            \"id\": \"<string>\",\n            \"type\": \"<string>\",\n            \"passive\": \"<boolean>\",\n            \"attributes\": {\n                \"cloudTier\": {\n                    \"cloudUnit\": {\n                        \"id\": \"<string>\",\n                        \"name\": \"<string>\"\n                    },\n                    \"tierAfter\": {\n                        \"interval\": \"<integer>\",\n                        \"unit\": \"<string>\"\n                    }\n                },\n                \"exchange\": {\n                    \"consistencyCheck\": \"<string>\",\n                    \"troubleShootingOption\": \"<string>\"\n                },\n                \"fileSystem\": {\n                    \"troubleShootingOption\": \"<string>\"\n                },\n                \"mssql\": {\n                    \"autoPromote\": \"<boolean>\",\n                    \"backUpExpirationDays\": \"<integer>\",\n                    \"excludeSystemDatabase\": \"<boolean>\",\n                    \"parallelism\": \"<integer>\",\n                    \"troubleShootingOption\": \"<string>\"\n                },\n                \"oracle\": {\n                    \"archiveLogDeletionDays\": \"<integer>\",\n                    \"parallelism\": \"<integer>\",\n                    \"troubleShootingOption\": \"<string>\"\n                },\n                \"protection\": {\n                    \"backupMode\": \"<string>\",\n                    \"forceFullRules\": [\n                        \"<string>\"\n                    ]\n                },\n                \"sapHana\": {\n                    \"troubleShootingOption\": \"<string>\"\n                },\n                \"vm\": {\n                    \"appConsistentProtection\": \"<boolean>\",\n                    \"dataMoverType\": \"<string>\",\n                    \"disableQuiescing\": \"<boolean>\",\n                    \"excludeSwapFiles\": \"<boolean>\"\n                },\n                \"vmax\": {\n                    \"postSnapshotFileName\": \"<string>\",\n                    \"preSnapshotFileName\": \"<string>\"\n                }\n            },\n            \"operations\": [\n                {\n                    \"backupType\": \"<string>\",\n                    \"schedule\": {\n                        \"dayOfMonth\": \"<integer>\",\n                        \"duration\": \"<string>\",\n                        \"frequency\": \"<string>\",\n                        \"genericDay\": \"<string>\",\n                        \"interval\": \"<integer>\",\n                        \"month\": \"<string>\",\n                        \"startTime\": \"<dateTime>\",\n                        \"weekDays\": [\n                            \"<string>\"\n                        ],\n                        \"weekOfMonth\": \"<integer>\"\n                    },\n                    \"type\": \"<string>\"\n                }\n            ],\n            \"options\": {\n                \"promotionType\": \"<string>\",\n                \"skipSimpleDatabase\": \"<boolean>\"\n            },\n            \"retention\": {\n                \"interval\": \"<integer>\",\n                \"unit\": \"<string>\",\n                \"storageSystemRetentionLock\": \"<boolean>\"\n            },\n            \"slaId\": \"<string>\",\n            \"sourceStageId\": \"<string>\",\n            \"target\": {\n                \"storageSystemId\": \"<string>\",\n                \"dataTargetId\": \"<string>\",\n                \"hardCapacityQuotaLevel\": \"<long>\",\n                \"hardStreamQuotaLevel\": \"<long>\",\n                \"preferredInterface\": \"<string>\",\n                \"softCapacityQuotaLevel\": \"<long>\",\n                \"softStreamQuotaLevel\": \"<long>\"\n            }\n        }\n    ],\n    \"summary\": {\n        \"lastExecutionStatus\": \"<string>\",\n        \"totalAssetCapacity\": \"<double>\",\n        \"totalAssetProtectionCapacity\": \"<double>\"\n    },\n    \"targetStorageProvisionStrategy\": \"<string>\",\n    \"updatedAt\": \"<dateTime>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/protection-policies/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"protection-policies",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"assetType\": \"<string>\",\n    \"type\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"priority\": \"<integer>\",\n    \"encrypted\": \"<boolean>\",\n    \"complianceInterval\": \"<string>\",\n    \"createdAt\": \"<dateTime>\",\n    \"credentials\": {\n        \"id\": \"<string>\",\n        \"type\": \"<string>\"\n    },\n    \"dataConsistency\": \"<string>\",\n    \"description\": \"<string>\",\n    \"details\": {\n        \"oracle\": {\n            \"dbConnection\": {\n                \"tnsAdmin\": \"<string>\",\n                \"tnsName\": \"<string>\"\n            },\n            \"rmanConnection\": {\n                \"credentialId\": \"<string>\",\n                \"tnsAdmin\": \"<string>\",\n                \"tnsName\": \"<string>\",\n                \"type\": \"<string>\"\n            }\n        },\n        \"vm\": {\n            \"metadataIndexingEnabled\": \"<boolean>\",\n            \"protectionEngine\": \"<string>\"\n        }\n    },\n    \"filterIds\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"forceFull\": \"<boolean>\",\n    \"passive\": \"<boolean>\",\n    \"slaId\": \"<string>\",\n    \"stages\": [\n        {\n            \"id\": \"<string>\",\n            \"type\": \"<string>\",\n            \"passive\": \"<boolean>\",\n            \"attributes\": {\n                \"cloudTier\": {\n                    \"cloudUnit\": {\n                        \"id\": \"<string>\",\n                        \"name\": \"<string>\"\n                    },\n                    \"tierAfter\": {\n                        \"interval\": \"<integer>\",\n                        \"unit\": \"<string>\"\n                    }\n                },\n                \"exchange\": {\n                    \"consistencyCheck\": \"<string>\",\n                    \"troubleShootingOption\": \"<string>\"\n                },\n                \"fileSystem\": {\n                    \"troubleShootingOption\": \"<string>\"\n                },\n                \"mssql\": {\n                    \"autoPromote\": \"<boolean>\",\n                    \"backUpExpirationDays\": \"<integer>\",\n                    \"excludeSystemDatabase\": \"<boolean>\",\n                    \"parallelism\": \"<integer>\",\n                    \"troubleShootingOption\": \"<string>\"\n                },\n                \"oracle\": {\n                    \"archiveLogDeletionDays\": \"<integer>\",\n                    \"parallelism\": \"<integer>\",\n                    \"troubleShootingOption\": \"<string>\"\n                },\n                \"protection\": {\n                    \"backupMode\": \"<string>\",\n                    \"forceFullRules\": [\n                        \"<string>\"\n                    ]\n                },\n                \"sapHana\": {\n                    \"troubleShootingOption\": \"<string>\"\n                },\n                \"vm\": {\n                    \"appConsistentProtection\": \"<boolean>\",\n                    \"dataMoverType\": \"<string>\",\n                    \"disableQuiescing\": \"<boolean>\",\n                    \"excludeSwapFiles\": \"<boolean>\"\n                },\n                \"vmax\": {\n                    \"postSnapshotFileName\": \"<string>\",\n                    \"preSnapshotFileName\": \"<string>\"\n                }\n            },\n            \"operations\": [\n                {\n                    \"backupType\": \"<string>\",\n                    \"schedule\": {\n                        \"dayOfMonth\": \"<integer>\",\n                        \"duration\": \"<string>\",\n                        \"frequency\": \"<string>\",\n                        \"genericDay\": \"<string>\",\n                        \"interval\": \"<integer>\",\n                        \"month\": \"<string>\",\n                        \"startTime\": \"<dateTime>\",\n                        \"weekDays\": [\n                            \"<string>\"\n                        ],\n                        \"weekOfMonth\": \"<integer>\"\n                    },\n                    \"type\": \"<string>\"\n                }\n            ],\n            \"options\": {\n                \"promotionType\": \"<string>\",\n                \"skipSimpleDatabase\": \"<boolean>\"\n            },\n            \"retention\": {\n                \"interval\": \"<integer>\",\n                \"unit\": \"<string>\",\n                \"storageSystemRetentionLock\": \"<boolean>\"\n            },\n            \"slaId\": \"<string>\",\n            \"sourceStageId\": \"<string>\",\n            \"target\": {\n                \"storageSystemId\": \"<string>\",\n                \"dataTargetId\": \"<string>\",\n                \"hardCapacityQuotaLevel\": \"<long>\",\n                \"hardStreamQuotaLevel\": \"<long>\",\n                \"preferredInterface\": \"<string>\",\n                \"softCapacityQuotaLevel\": \"<long>\",\n                \"softStreamQuotaLevel\": \"<long>\"\n            }\n        },\n        {\n            \"id\": \"<string>\",\n            \"type\": \"<string>\",\n            \"passive\": \"<boolean>\",\n            \"attributes\": {\n                \"cloudTier\": {\n                    \"cloudUnit\": {\n                        \"id\": \"<string>\",\n                        \"name\": \"<string>\"\n                    },\n                    \"tierAfter\": {\n                        \"interval\": \"<integer>\",\n                        \"unit\": \"<string>\"\n                    }\n                },\n                \"exchange\": {\n                    \"consistencyCheck\": \"<string>\",\n                    \"troubleShootingOption\": \"<string>\"\n                },\n                \"fileSystem\": {\n                    \"troubleShootingOption\": \"<string>\"\n                },\n                \"mssql\": {\n                    \"autoPromote\": \"<boolean>\",\n                    \"backUpExpirationDays\": \"<integer>\",\n                    \"excludeSystemDatabase\": \"<boolean>\",\n                    \"parallelism\": \"<integer>\",\n                    \"troubleShootingOption\": \"<string>\"\n                },\n                \"oracle\": {\n                    \"archiveLogDeletionDays\": \"<integer>\",\n                    \"parallelism\": \"<integer>\",\n                    \"troubleShootingOption\": \"<string>\"\n                },\n                \"protection\": {\n                    \"backupMode\": \"<string>\",\n                    \"forceFullRules\": [\n                        \"<string>\"\n                    ]\n                },\n                \"sapHana\": {\n                    \"troubleShootingOption\": \"<string>\"\n                },\n                \"vm\": {\n                    \"appConsistentProtection\": \"<boolean>\",\n                    \"dataMoverType\": \"<string>\",\n                    \"disableQuiescing\": \"<boolean>\",\n                    \"excludeSwapFiles\": \"<boolean>\"\n                },\n                \"vmax\": {\n                    \"postSnapshotFileName\": \"<string>\",\n                    \"preSnapshotFileName\": \"<string>\"\n                }\n            },\n            \"operations\": [\n                {\n                    \"backupType\": \"<string>\",\n                    \"schedule\": {\n                        \"dayOfMonth\": \"<integer>\",\n                        \"duration\": \"<string>\",\n                        \"frequency\": \"<string>\",\n                        \"genericDay\": \"<string>\",\n                        \"interval\": \"<integer>\",\n                        \"month\": \"<string>\",\n                        \"startTime\": \"<dateTime>\",\n                        \"weekDays\": [\n                            \"<string>\"\n                        ],\n                        \"weekOfMonth\": \"<integer>\"\n                    },\n                    \"type\": \"<string>\"\n                }\n            ],\n            \"options\": {\n                \"promotionType\": \"<string>\",\n                \"skipSimpleDatabase\": \"<boolean>\"\n            },\n            \"retention\": {\n                \"interval\": \"<integer>\",\n                \"unit\": \"<string>\",\n                \"storageSystemRetentionLock\": \"<boolean>\"\n            },\n            \"slaId\": \"<string>\",\n            \"sourceStageId\": \"<string>\",\n            \"target\": {\n                \"storageSystemId\": \"<string>\",\n                \"dataTargetId\": \"<string>\",\n                \"hardCapacityQuotaLevel\": \"<long>\",\n                \"hardStreamQuotaLevel\": \"<long>\",\n                \"preferredInterface\": \"<string>\",\n                \"softCapacityQuotaLevel\": \"<long>\",\n                \"softStreamQuotaLevel\": \"<long>\"\n            }\n        }\n    ],\n    \"summary\": {\n        \"lastExecutionStatus\": \"<string>\",\n        \"totalAssetCapacity\": \"<double>\",\n        \"totalAssetProtectionCapacity\": \"<double>\"\n    },\n    \"targetStorageProvisionStrategy\": \"<string>\",\n    \"updatedAt\": \"<dateTime>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/protection-policies/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"protection-policies",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"assetType\": \"<string>\",\n    \"type\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"priority\": \"<integer>\",\n    \"encrypted\": \"<boolean>\",\n    \"complianceInterval\": \"<string>\",\n    \"createdAt\": \"<dateTime>\",\n    \"credentials\": {\n        \"id\": \"<string>\",\n        \"type\": \"<string>\"\n    },\n    \"dataConsistency\": \"<string>\",\n    \"description\": \"<string>\",\n    \"details\": {\n        \"oracle\": {\n            \"dbConnection\": {\n                \"tnsAdmin\": \"<string>\",\n                \"tnsName\": \"<string>\"\n            },\n            \"rmanConnection\": {\n                \"credentialId\": \"<string>\",\n                \"tnsAdmin\": \"<string>\",\n                \"tnsName\": \"<string>\",\n                \"type\": \"<string>\"\n            }\n        },\n        \"vm\": {\n            \"metadataIndexingEnabled\": \"<boolean>\",\n            \"protectionEngine\": \"<string>\"\n        }\n    },\n    \"filterIds\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"forceFull\": \"<boolean>\",\n    \"passive\": \"<boolean>\",\n    \"slaId\": \"<string>\",\n    \"stages\": [\n        {\n            \"id\": \"<string>\",\n            \"type\": \"<string>\",\n            \"passive\": \"<boolean>\",\n            \"attributes\": {\n                \"cloudTier\": {\n                    \"cloudUnit\": {\n                        \"id\": \"<string>\",\n                        \"name\": \"<string>\"\n                    },\n                    \"tierAfter\": {\n                        \"interval\": \"<integer>\",\n                        \"unit\": \"<string>\"\n                    }\n                },\n                \"exchange\": {\n                    \"consistencyCheck\": \"<string>\",\n                    \"troubleShootingOption\": \"<string>\"\n                },\n                \"fileSystem\": {\n                    \"troubleShootingOption\": \"<string>\"\n                },\n                \"mssql\": {\n                    \"autoPromote\": \"<boolean>\",\n                    \"backUpExpirationDays\": \"<integer>\",\n                    \"excludeSystemDatabase\": \"<boolean>\",\n                    \"parallelism\": \"<integer>\",\n                    \"troubleShootingOption\": \"<string>\"\n                },\n                \"oracle\": {\n                    \"archiveLogDeletionDays\": \"<integer>\",\n                    \"parallelism\": \"<integer>\",\n                    \"troubleShootingOption\": \"<string>\"\n                },\n                \"protection\": {\n                    \"backupMode\": \"<string>\",\n                    \"forceFullRules\": [\n                        \"<string>\"\n                    ]\n                },\n                \"sapHana\": {\n                    \"troubleShootingOption\": \"<string>\"\n                },\n                \"vm\": {\n                    \"appConsistentProtection\": \"<boolean>\",\n                    \"dataMoverType\": \"<string>\",\n                    \"disableQuiescing\": \"<boolean>\",\n                    \"excludeSwapFiles\": \"<boolean>\"\n                },\n                \"vmax\": {\n                    \"postSnapshotFileName\": \"<string>\",\n                    \"preSnapshotFileName\": \"<string>\"\n                }\n            },\n            \"operations\": [\n                {\n                    \"backupType\": \"<string>\",\n                    \"schedule\": {\n                        \"dayOfMonth\": \"<integer>\",\n                        \"duration\": \"<string>\",\n                        \"frequency\": \"<string>\",\n                        \"genericDay\": \"<string>\",\n                        \"interval\": \"<integer>\",\n                        \"month\": \"<string>\",\n                        \"startTime\": \"<dateTime>\",\n                        \"weekDays\": [\n                            \"<string>\"\n                        ],\n                        \"weekOfMonth\": \"<integer>\"\n                    },\n                    \"type\": \"<string>\"\n                }\n            ],\n            \"options\": {\n                \"promotionType\": \"<string>\",\n                \"skipSimpleDatabase\": \"<boolean>\"\n            },\n            \"retention\": {\n                \"interval\": \"<integer>\",\n                \"unit\": \"<string>\",\n                \"storageSystemRetentionLock\": \"<boolean>\"\n            },\n            \"slaId\": \"<string>\",\n            \"sourceStageId\": \"<string>\",\n            \"target\": {\n                \"storageSystemId\": \"<string>\",\n                \"dataTargetId\": \"<string>\",\n                \"hardCapacityQuotaLevel\": \"<long>\",\n                \"hardStreamQuotaLevel\": \"<long>\",\n                \"preferredInterface\": \"<string>\",\n                \"softCapacityQuotaLevel\": \"<long>\",\n                \"softStreamQuotaLevel\": \"<long>\"\n            }\n        },\n        {\n            \"id\": \"<string>\",\n            \"type\": \"<string>\",\n            \"passive\": \"<boolean>\",\n            \"attributes\": {\n                \"cloudTier\": {\n                    \"cloudUnit\": {\n                        \"id\": \"<string>\",\n                        \"name\": \"<string>\"\n                    },\n                    \"tierAfter\": {\n                        \"interval\": \"<integer>\",\n                        \"unit\": \"<string>\"\n                    }\n                },\n                \"exchange\": {\n                    \"consistencyCheck\": \"<string>\",\n                    \"troubleShootingOption\": \"<string>\"\n                },\n                \"fileSystem\": {\n                    \"troubleShootingOption\": \"<string>\"\n                },\n                \"mssql\": {\n                    \"autoPromote\": \"<boolean>\",\n                    \"backUpExpirationDays\": \"<integer>\",\n                    \"excludeSystemDatabase\": \"<boolean>\",\n                    \"parallelism\": \"<integer>\",\n                    \"troubleShootingOption\": \"<string>\"\n                },\n                \"oracle\": {\n                    \"archiveLogDeletionDays\": \"<integer>\",\n                    \"parallelism\": \"<integer>\",\n                    \"troubleShootingOption\": \"<string>\"\n                },\n                \"protection\": {\n                    \"backupMode\": \"<string>\",\n                    \"forceFullRules\": [\n                        \"<string>\"\n                    ]\n                },\n                \"sapHana\": {\n                    \"troubleShootingOption\": \"<string>\"\n                },\n                \"vm\": {\n                    \"appConsistentProtection\": \"<boolean>\",\n                    \"dataMoverType\": \"<string>\",\n                    \"disableQuiescing\": \"<boolean>\",\n                    \"excludeSwapFiles\": \"<boolean>\"\n                },\n                \"vmax\": {\n                    \"postSnapshotFileName\": \"<string>\",\n                    \"preSnapshotFileName\": \"<string>\"\n                }\n            },\n            \"operations\": [\n                {\n                    \"backupType\": \"<string>\",\n                    \"schedule\": {\n                        \"dayOfMonth\": \"<integer>\",\n                        \"duration\": \"<string>\",\n                        \"frequency\": \"<string>\",\n                        \"genericDay\": \"<string>\",\n                        \"interval\": \"<integer>\",\n                        \"month\": \"<string>\",\n                        \"startTime\": \"<dateTime>\",\n                        \"weekDays\": [\n                            \"<string>\"\n                        ],\n                        \"weekOfMonth\": \"<integer>\"\n                    },\n                    \"type\": \"<string>\"\n                }\n            ],\n            \"options\": {\n                \"promotionType\": \"<string>\",\n                \"skipSimpleDatabase\": \"<boolean>\"\n            },\n            \"retention\": {\n                \"interval\": \"<integer>\",\n                \"unit\": \"<string>\",\n                \"storageSystemRetentionLock\": \"<boolean>\"\n            },\n            \"slaId\": \"<string>\",\n            \"sourceStageId\": \"<string>\",\n            \"target\": {\n                \"storageSystemId\": \"<string>\",\n                \"dataTargetId\": \"<string>\",\n                \"hardCapacityQuotaLevel\": \"<long>\",\n                \"hardStreamQuotaLevel\": \"<long>\",\n                \"preferredInterface\": \"<string>\",\n                \"softCapacityQuotaLevel\": \"<long>\",\n                \"softStreamQuotaLevel\": \"<long>\"\n            }\n        }\n    ],\n    \"summary\": {\n        \"lastExecutionStatus\": \"<string>\",\n        \"totalAssetCapacity\": \"<double>\",\n        \"totalAssetProtectionCapacity\": \"<double>\"\n    },\n    \"targetStorageProvisionStrategy\": \"<string>\",\n    \"updatedAt\": \"<dateTime>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/protection-policies/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"protection-policies",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The request is not valid.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"assetType\": \"<string>\",\n    \"type\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"priority\": \"<integer>\",\n    \"encrypted\": \"<boolean>\",\n    \"complianceInterval\": \"<string>\",\n    \"createdAt\": \"<dateTime>\",\n    \"credentials\": {\n        \"id\": \"<string>\",\n        \"type\": \"<string>\"\n    },\n    \"dataConsistency\": \"<string>\",\n    \"description\": \"<string>\",\n    \"details\": {\n        \"oracle\": {\n            \"dbConnection\": {\n                \"tnsAdmin\": \"<string>\",\n                \"tnsName\": \"<string>\"\n            },\n            \"rmanConnection\": {\n                \"credentialId\": \"<string>\",\n                \"tnsAdmin\": \"<string>\",\n                \"tnsName\": \"<string>\",\n                \"type\": \"<string>\"\n            }\n        },\n        \"vm\": {\n            \"metadataIndexingEnabled\": \"<boolean>\",\n            \"protectionEngine\": \"<string>\"\n        }\n    },\n    \"filterIds\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"forceFull\": \"<boolean>\",\n    \"passive\": \"<boolean>\",\n    \"slaId\": \"<string>\",\n    \"stages\": [\n        {\n            \"id\": \"<string>\",\n            \"type\": \"<string>\",\n            \"passive\": \"<boolean>\",\n            \"attributes\": {\n                \"cloudTier\": {\n                    \"cloudUnit\": {\n                        \"id\": \"<string>\",\n                        \"name\": \"<string>\"\n                    },\n                    \"tierAfter\": {\n                        \"interval\": \"<integer>\",\n                        \"unit\": \"<string>\"\n                    }\n                },\n                \"exchange\": {\n                    \"consistencyCheck\": \"<string>\",\n                    \"troubleShootingOption\": \"<string>\"\n                },\n                \"fileSystem\": {\n                    \"troubleShootingOption\": \"<string>\"\n                },\n                \"mssql\": {\n                    \"autoPromote\": \"<boolean>\",\n                    \"backUpExpirationDays\": \"<integer>\",\n                    \"excludeSystemDatabase\": \"<boolean>\",\n                    \"parallelism\": \"<integer>\",\n                    \"troubleShootingOption\": \"<string>\"\n                },\n                \"oracle\": {\n                    \"archiveLogDeletionDays\": \"<integer>\",\n                    \"parallelism\": \"<integer>\",\n                    \"troubleShootingOption\": \"<string>\"\n                },\n                \"protection\": {\n                    \"backupMode\": \"<string>\",\n                    \"forceFullRules\": [\n                        \"<string>\"\n                    ]\n                },\n                \"sapHana\": {\n                    \"troubleShootingOption\": \"<string>\"\n                },\n                \"vm\": {\n                    \"appConsistentProtection\": \"<boolean>\",\n                    \"dataMoverType\": \"<string>\",\n                    \"disableQuiescing\": \"<boolean>\",\n                    \"excludeSwapFiles\": \"<boolean>\"\n                },\n                \"vmax\": {\n                    \"postSnapshotFileName\": \"<string>\",\n                    \"preSnapshotFileName\": \"<string>\"\n                }\n            },\n            \"operations\": [\n                {\n                    \"backupType\": \"<string>\",\n                    \"schedule\": {\n                        \"dayOfMonth\": \"<integer>\",\n                        \"duration\": \"<string>\",\n                        \"frequency\": \"<string>\",\n                        \"genericDay\": \"<string>\",\n                        \"interval\": \"<integer>\",\n                        \"month\": \"<string>\",\n                        \"startTime\": \"<dateTime>\",\n                        \"weekDays\": [\n                            \"<string>\"\n                        ],\n                        \"weekOfMonth\": \"<integer>\"\n                    },\n                    \"type\": \"<string>\"\n                }\n            ],\n            \"options\": {\n                \"promotionType\": \"<string>\",\n                \"skipSimpleDatabase\": \"<boolean>\"\n            },\n            \"retention\": {\n                \"interval\": \"<integer>\",\n                \"unit\": \"<string>\",\n                \"storageSystemRetentionLock\": \"<boolean>\"\n            },\n            \"slaId\": \"<string>\",\n            \"sourceStageId\": \"<string>\",\n            \"target\": {\n                \"storageSystemId\": \"<string>\",\n                \"dataTargetId\": \"<string>\",\n                \"hardCapacityQuotaLevel\": \"<long>\",\n                \"hardStreamQuotaLevel\": \"<long>\",\n                \"preferredInterface\": \"<string>\",\n                \"softCapacityQuotaLevel\": \"<long>\",\n                \"softStreamQuotaLevel\": \"<long>\"\n            }\n        },\n        {\n            \"id\": \"<string>\",\n            \"type\": \"<string>\",\n            \"passive\": \"<boolean>\",\n            \"attributes\": {\n                \"cloudTier\": {\n                    \"cloudUnit\": {\n                        \"id\": \"<string>\",\n                        \"name\": \"<string>\"\n                    },\n                    \"tierAfter\": {\n                        \"interval\": \"<integer>\",\n                        \"unit\": \"<string>\"\n                    }\n                },\n                \"exchange\": {\n                    \"consistencyCheck\": \"<string>\",\n                    \"troubleShootingOption\": \"<string>\"\n                },\n                \"fileSystem\": {\n                    \"troubleShootingOption\": \"<string>\"\n                },\n                \"mssql\": {\n                    \"autoPromote\": \"<boolean>\",\n                    \"backUpExpirationDays\": \"<integer>\",\n                    \"excludeSystemDatabase\": \"<boolean>\",\n                    \"parallelism\": \"<integer>\",\n                    \"troubleShootingOption\": \"<string>\"\n                },\n                \"oracle\": {\n                    \"archiveLogDeletionDays\": \"<integer>\",\n                    \"parallelism\": \"<integer>\",\n                    \"troubleShootingOption\": \"<string>\"\n                },\n                \"protection\": {\n                    \"backupMode\": \"<string>\",\n                    \"forceFullRules\": [\n                        \"<string>\"\n                    ]\n                },\n                \"sapHana\": {\n                    \"troubleShootingOption\": \"<string>\"\n                },\n                \"vm\": {\n                    \"appConsistentProtection\": \"<boolean>\",\n                    \"dataMoverType\": \"<string>\",\n                    \"disableQuiescing\": \"<boolean>\",\n                    \"excludeSwapFiles\": \"<boolean>\"\n                },\n                \"vmax\": {\n                    \"postSnapshotFileName\": \"<string>\",\n                    \"preSnapshotFileName\": \"<string>\"\n                }\n            },\n            \"operations\": [\n                {\n                    \"backupType\": \"<string>\",\n                    \"schedule\": {\n                        \"dayOfMonth\": \"<integer>\",\n                        \"duration\": \"<string>\",\n                        \"frequency\": \"<string>\",\n                        \"genericDay\": \"<string>\",\n                        \"interval\": \"<integer>\",\n                        \"month\": \"<string>\",\n                        \"startTime\": \"<dateTime>\",\n                        \"weekDays\": [\n                            \"<string>\"\n                        ],\n                        \"weekOfMonth\": \"<integer>\"\n                    },\n                    \"type\": \"<string>\"\n                }\n            ],\n            \"options\": {\n                \"promotionType\": \"<string>\",\n                \"skipSimpleDatabase\": \"<boolean>\"\n            },\n            \"retention\": {\n                \"interval\": \"<integer>\",\n                \"unit\": \"<string>\",\n                \"storageSystemRetentionLock\": \"<boolean>\"\n            },\n            \"slaId\": \"<string>\",\n            \"sourceStageId\": \"<string>\",\n            \"target\": {\n                \"storageSystemId\": \"<string>\",\n                \"dataTargetId\": \"<string>\",\n                \"hardCapacityQuotaLevel\": \"<long>\",\n                \"hardStreamQuotaLevel\": \"<long>\",\n                \"preferredInterface\": \"<string>\",\n                \"softCapacityQuotaLevel\": \"<long>\",\n                \"softStreamQuotaLevel\": \"<long>\"\n            }\n        }\n    ],\n    \"summary\": {\n        \"lastExecutionStatus\": \"<string>\",\n        \"totalAssetCapacity\": \"<double>\",\n        \"totalAssetProtectionCapacity\": \"<double>\"\n    },\n    \"targetStorageProvisionStrategy\": \"<string>\",\n    \"updatedAt\": \"<dateTime>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/protection-policies/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"protection-policies",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										}
									]
								},
								{
									"name": "Unassign assets protected from the protection policy by protection policy ID.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n    \"<string>\",\n    \"<string>\"\n]",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/protection-policies/:id/asset-unassignments",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"protection-policies",
												":id",
												"asset-unassignments"
											],
											"variable": [
												{
													"id": "027a1ed7-1a11-4ba3-b377-5d4df6d61799",
													"key": "id",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The protection policy ID."
												}
											]
										},
										"description": "Unassigns protected assets from the specified protection policy ID.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
									},
									"response": [
										{
											"name": "The request is not valid.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n    \"<string>\",\n    \"<string>\"\n]"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/protection-policies/:id/asset-unassignments",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"protection-policies",
														":id",
														"asset-unassignments"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n    \"<string>\",\n    \"<string>\"\n]"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/protection-policies/:id/asset-unassignments",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"protection-policies",
														":id",
														"asset-unassignments"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n    \"<string>\",\n    \"<string>\"\n]"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/protection-policies/:id/asset-unassignments",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"protection-policies",
														":id",
														"asset-unassignments"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The requestor is not allowed to perform this operation.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n    \"<string>\",\n    \"<string>\"\n]"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/protection-policies/:id/asset-unassignments",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"protection-policies",
														":id",
														"asset-unassignments"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "Successfully unassign the assets.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n    \"<string>\",\n    \"<string>\"\n]"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/protection-policies/:id/asset-unassignments",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"protection-policies",
														":id",
														"asset-unassignments"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Trigger manual backup at protection policy level.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"assetIds\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"backupType\": \"<string>\",\n    \"disableProtectionPolicyProcessing\": false,\n    \"retention\": {\n        \"interval\": \"<integer>\",\n        \"unit\": \"<string>\"\n    }\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/protection-policies/:id/backups",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"protection-policies",
												":id",
												"backups"
											],
											"variable": [
												{
													"id": "1c5313a5-cd9a-4b49-b44f-ae931a72a6d2",
													"key": "id",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The protection policy Id."
												}
											]
										},
										"description": "Trigger All or Selected assets in one protection policy as manual backup.\n> This endpoint supports execution by the following roles: admin\n"
									},
									"response": [
										{
											"name": "The request is not valid.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"assetIds\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"backupType\": \"<string>\",\n    \"disableProtectionPolicyProcessing\": false,\n    \"retention\": {\n        \"interval\": \"<integer>\",\n        \"unit\": \"<string>\"\n    }\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/protection-policies/:id/backups",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"protection-policies",
														":id",
														"backups"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The requestor is not allowed to perform this operation.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"assetIds\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"backupType\": \"<string>\",\n    \"disableProtectionPolicyProcessing\": false,\n    \"retention\": {\n        \"interval\": \"<integer>\",\n        \"unit\": \"<string>\"\n    }\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/protection-policies/:id/backups",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"protection-policies",
														":id",
														"backups"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Successfully triggered the adhoc backup process.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"assetIds\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"backupType\": \"<string>\",\n    \"disableProtectionPolicyProcessing\": false,\n    \"retention\": {\n        \"interval\": \"<integer>\",\n        \"unit\": \"<string>\"\n    }\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/protection-policies/:id/backups",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"protection-policies",
														":id",
														"backups"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"assetIds\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"backupType\": \"<string>\",\n    \"disableProtectionPolicyProcessing\": false,\n    \"retention\": {\n        \"interval\": \"<integer>\",\n        \"unit\": \"<string>\"\n    }\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/protection-policies/:id/backups",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"protection-policies",
														":id",
														"backups"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"assetIds\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"backupType\": \"<string>\",\n    \"disableProtectionPolicyProcessing\": false,\n    \"retention\": {\n        \"interval\": \"<integer>\",\n        \"unit\": \"<string>\"\n    }\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/protection-policies/:id/backups",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"protection-policies",
														":id",
														"backups"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Get all protection policies.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/protection-policies?page=1&pageSize=100&filter=<string>&orderby=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"protection-policies"
									],
									"query": [
										{
											"key": "page",
											"value": "1",
											"description": "The page number to be returned. Must not be less than 1. See Tutorials - Page the List Result."
										},
										{
											"key": "pageSize",
											"value": "100",
											"description": "The number of resources to be returned. Must not be less than 1. See Tutorials - Page the List Result."
										},
										{
											"key": "filter",
											"value": "<string>",
											"description": "The filter string that is expressed using PowerProtect Data Manager filter syntax. See Tutorials - Filter the List Result."
										},
										{
											"key": "orderby",
											"value": "<string>",
											"description": "The attributes/fields to be sorted by. This parameter can combine with sort direction \"ASC\" or \"DESC\". Default direction is ASC. See Tutorials - Sort the List Result."
										}
									]
								},
								"description": "Retrieves all protection policies.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n\n> This endpoint supports pagination with types: random\n"
							},
							"response": [
								{
									"name": "The requestor is not authorized to perform this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/protection-policies?page=1&pageSize=100&filter=<string>&orderby=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"protection-policies"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "<string>"
												},
												{
													"key": "orderby",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "The request is not valid.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/protection-policies?page=1&pageSize=100&filter=<string>&orderby=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"protection-policies"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "<string>"
												},
												{
													"key": "orderby",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "The requestor is not allowed to perform this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/protection-policies?page=1&pageSize=100&filter=<string>&orderby=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"protection-policies"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "<string>"
												},
												{
													"key": "orderby",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "An unexpected error prevented the server from fulfilling your request.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/protection-policies?page=1&pageSize=100&filter=<string>&orderby=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"protection-policies"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "<string>"
												},
												{
													"key": "orderby",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "Successfully returned available protection policies.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/protection-policies?page=1&pageSize=100&filter=<string>&orderby=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"protection-policies"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "<string>"
												},
												{
													"key": "orderby",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"content\": [\n  {\n   \"id\": \"in voluptate\",\n   \"name\": \"ea n\",\n   \"assetType\": \"NAS_SHARE\",\n   \"type\": \"EXCLUDED\",\n   \"enabled\": true,\n   \"priority\": 46587930,\n   \"encrypted\": true,\n   \"complianceInterval\": \"proident in adipisicing tempor id\",\n   \"createdAt\": \"1960-06-17T09:13:12.584Z\",\n   \"credentials\": {\n    \"id\": \"aliqua culpa exercitation\",\n    \"type\": \"VCENTER\"\n   },\n   \"dataConsistency\": \"CRASH_CONSISTENT\",\n   \"description\": \"mollit et\",\n   \"details\": {\n    \"oracle\": {\n     \"dbConnection\": {\n      \"tnsAdmin\": \"est\",\n      \"tnsName\": \"non fugiat Duis labore\"\n     },\n     \"rmanConnection\": {\n      \"credentialId\": \"deserunt fugiat\",\n      \"tnsAdmin\": \"deserunt consequat commodo\",\n      \"tnsName\": \"sed labore\",\n      \"type\": \"VCENTER\"\n     }\n    },\n    \"vm\": {\n     \"metadataIndexingEnabled\": true,\n     \"protectionEngine\": \"HYPERVISORDIRECT\"\n    }\n   },\n   \"filterIds\": [\n    \"culpa veniam\",\n    \"quis sunt\"\n   ],\n   \"forceFull\": true,\n   \"passive\": true,\n   \"slaId\": \"labore velit quis consequat reprehenderit\",\n   \"stages\": [\n    {\n     \"id\": \"velit fugiat Lorem in\",\n     \"type\": \"CLOUD_TIER\",\n     \"passive\": true,\n     \"attributes\": {\n      \"cloudTier\": {\n       \"cloudUnit\": {\n        \"id\": \"sint deserunt\",\n        \"name\": \"velit ut\"\n       },\n       \"tierAfter\": {\n        \"interval\": 88828637,\n        \"unit\": \"YEAR\"\n       }\n      },\n      \"exchange\": {\n       \"consistencyCheck\": \"ALL\",\n       \"troubleShootingOption\": \"est culpa\"\n      },\n      \"fileSystem\": {\n       \"troubleShootingOption\": \"fugiat\"\n      },\n      \"mssql\": {\n       \"autoPromote\": false,\n       \"backUpExpirationDays\": -29670253,\n       \"excludeSystemDatabase\": true,\n       \"parallelism\": -4767416,\n       \"troubleShootingOption\": \"cillum ullamco ea sint\"\n      },\n      \"oracle\": {\n       \"archiveLogDeletionDays\": -29030938,\n       \"parallelism\": 21597986,\n       \"troubleShootingOption\": \"ea fugiat\"\n      },\n      \"protection\": {\n       \"backupMode\": \"FSS\",\n       \"forceFullRules\": [\n        \"VSO_NODE_FAILURE\"\n       ]\n      },\n      \"sapHana\": {\n       \"troubleShootingOption\": \"minim adipisicing magna\"\n      },\n      \"vm\": {\n       \"appConsistentProtection\": false,\n       \"dataMoverType\": \"SDM\",\n       \"disableQuiescing\": false,\n       \"excludeSwapFiles\": false\n      },\n      \"vmax\": {\n       \"postSnapshotFileName\": \"dolore pariatur ut dolor\",\n       \"preSnapshotFileName\": \"aliquip qui Duis\"\n      }\n     },\n     \"operations\": [\n      {\n       \"backupType\": \"INCREMENTAL\",\n       \"schedule\": {\n        \"dayOfMonth\": -94993927,\n        \"duration\": \"ut dolore non in\",\n        \"frequency\": \"MONTHLY\",\n        \"genericDay\": \"LAST\",\n        \"interval\": -16026278,\n        \"month\": \"OCTOBER\",\n        \"startTime\": \"2009-12-29T04:15:46.889Z\",\n        \"weekDays\": [\n         \"THURSDAY\",\n         \"MONDAY\"\n        ],\n        \"weekOfMonth\": -4312710\n       },\n       \"type\": \"AUTO_FULL\"\n      },\n      {\n       \"backupType\": \"FULL\",\n       \"schedule\": {\n        \"dayOfMonth\": -81575674,\n        \"duration\": \"eiusmod velit\",\n        \"frequency\": \"MINUTELY\",\n        \"genericDay\": \"FIRST\",\n        \"interval\": 95388227,\n        \"month\": \"FEBRUARY\",\n        \"startTime\": \"1977-12-30T02:17:49.203Z\",\n        \"weekDays\": [\n         \"SUNDAY\",\n         \"SATURDAY\"\n        ],\n        \"weekOfMonth\": 2870861\n       },\n       \"type\": \"CUMULATIVE\"\n      }\n     ],\n     \"options\": {\n      \"promotionType\": \"NONE_WITH_WARNINGS\",\n      \"skipSimpleDatabase\": false\n     },\n     \"retention\": {\n      \"interval\": 31024339,\n      \"unit\": \"WEEK\",\n      \"storageSystemRetentionLock\": false\n     },\n     \"slaId\": \"mollit minim pariatur quis\",\n     \"sourceStageId\": \"fugiat est\",\n     \"target\": {\n      \"storageSystemId\": \"cillum ad in non\",\n      \"dataTargetId\": \"minim sed non irure ea\",\n      \"hardCapacityQuotaLevel\": -57713917,\n      \"hardStreamQuotaLevel\": 93189683,\n      \"preferredInterface\": \"aliquip eiusmod dolore\",\n      \"softCapacityQuotaLevel\": -61183251,\n      \"softStreamQuotaLevel\": -15559460\n     }\n    },\n    {\n     \"id\": \"commodo cillum\",\n     \"type\": \"CLOUD_TIER\",\n     \"passive\": false,\n     \"attributes\": {\n      \"cloudTier\": {\n       \"cloudUnit\": {\n        \"id\": \"dolore fugiat\",\n        \"name\": \"eiusmod aute fugiat\"\n       },\n       \"tierAfter\": {\n        \"interval\": 38529529,\n        \"unit\": \"DAY\"\n       }\n      },\n      \"exchange\": {\n       \"consistencyCheck\": \"ALL\",\n       \"troubleShootingOption\": \"deserunt nostrud\"\n      },\n      \"fileSystem\": {\n       \"troubleShootingOption\": \"culpa in ipsum\"\n      },\n      \"mssql\": {\n       \"autoPromote\": true,\n       \"backUpExpirationDays\": -50370120,\n       \"excludeSystemDatabase\": true,\n       \"parallelism\": -88976010,\n       \"troubleShootingOption\": \"cillum\"\n      },\n      \"oracle\": {\n       \"archiveLogDeletionDays\": 36698247,\n       \"parallelism\": -67488058,\n       \"troubleShootingOption\": \"et nulla ipsum amet\"\n      },\n      \"protection\": {\n       \"backupMode\": \"VSS\",\n       \"forceFullRules\": [\n        \"VSO_NODE_FAILURE\"\n       ]\n      },\n      \"sapHana\": {\n       \"troubleShootingOption\": \"sit irure\"\n      },\n      \"vm\": {\n       \"appConsistentProtection\": false,\n       \"dataMoverType\": \"INHERIT_FROM_POLICY\",\n       \"disableQuiescing\": true,\n       \"excludeSwapFiles\": true\n      },\n      \"vmax\": {\n       \"postSnapshotFileName\": \"deserunt minim nulla\",\n       \"preSnapshotFileName\": \"quis eiusmod in dolore\"\n      }\n     },\n     \"operations\": [\n      {\n       \"backupType\": \"INCREMENTAL\",\n       \"schedule\": {\n        \"dayOfMonth\": 42143585,\n        \"duration\": \"voluptate ea\",\n        \"frequency\": \"HOURLY\",\n        \"genericDay\": \"FIRST\",\n        \"interval\": 9298665,\n        \"month\": \"APRIL\",\n        \"startTime\": \"1982-07-02T20:57:02.044Z\",\n        \"weekDays\": [\n         \"TUESDAY\",\n         \"THURSDAY\"\n        ],\n        \"weekOfMonth\": 79574819\n       },\n       \"type\": \"INCREMENTAL\"\n      },\n      {\n       \"backupType\": \"SYNTHETIC_FULL\",\n       \"schedule\": {\n        \"dayOfMonth\": 22863806,\n        \"duration\": \"fugiat\",\n        \"frequency\": \"MONTHLY\",\n        \"genericDay\": \"FIRST\",\n        \"interval\": 76019794,\n        \"month\": \"AUGUST\",\n        \"startTime\": \"2009-09-23T12:39:12.536Z\",\n        \"weekDays\": [\n         \"SATURDAY\",\n         \"THURSDAY\"\n        ],\n        \"weekOfMonth\": 1904134\n       },\n       \"type\": \"LOG\"\n      }\n     ],\n     \"options\": {\n      \"promotionType\": \"ALL\",\n      \"skipSimpleDatabase\": false\n     },\n     \"retention\": {\n      \"interval\": 28048772,\n      \"unit\": \"DAY\",\n      \"storageSystemRetentionLock\": true\n     },\n     \"slaId\": \"proident fugiat ut veniam\",\n     \"sourceStageId\": \"dolore in occaecat\",\n     \"target\": {\n      \"storageSystemId\": \"ex officia nisi minim dolore\",\n      \"dataTargetId\": \"dolore Duis in\",\n      \"hardCapacityQuotaLevel\": -68464062,\n      \"hardStreamQuotaLevel\": 49386998,\n      \"preferredInterface\": \"dolor reprehenderit mollit ea\",\n      \"softCapacityQuotaLevel\": 50913012,\n      \"softStreamQuotaLevel\": 88112241\n     }\n    }\n   ],\n   \"summary\": {\n    \"lastExecutionStatus\": \"FAILED\",\n    \"numberOfAssets\": 86754878,\n    \"numberOfJobFailures\": -54120372,\n    \"numberOfSlaFailures\": -85019388,\n    \"numberOfSlaSuccess\": -58111964,\n    \"totalAssetCapacity\": -7400127.7103366405,\n    \"totalAssetProtectionCapacity\": 90396499.40333772\n   },\n   \"targetStorageProvisionStrategy\": \"AUTO_PROVISION\",\n   \"updatedAt\": \"1978-01-11T09:41:05.617Z\"\n  },\n  {\n   \"id\": \"offici\",\n   \"name\": \"esse\",\n   \"assetType\": \"MICROSOFT_SQL_DATABASE\",\n   \"type\": \"EXCLUDED\",\n   \"enabled\": false,\n   \"priority\": 61791520,\n   \"encrypted\": false,\n   \"complianceInterval\": \"Duis reprehenderit\",\n   \"createdAt\": \"1942-03-09T14:21:06.023Z\",\n   \"credentials\": {\n    \"id\": \"sed est\",\n    \"type\": \"RMAN_WALLET\"\n   },\n   \"dataConsistency\": \"APPLICATION_CONSISTENT\",\n   \"description\": \"in enim consequat\",\n   \"details\": {\n    \"oracle\": {\n     \"dbConnection\": {\n      \"tnsAdmin\": \"amet est esse ut\",\n      \"tnsName\": \"Lorem pariatur occaecat qui\"\n     },\n     \"rmanConnection\": {\n      \"credentialId\": \"laboris commodo pa\",\n      \"tnsAdmin\": \"ut tempor\",\n      \"tnsName\": \"eu irure ea\",\n      \"type\": \"DBUSER\"\n     }\n    },\n    \"vm\": {\n     \"metadataIndexingEnabled\": false,\n     \"protectionEngine\": \"HYPERVISORDIRECT\"\n    }\n   },\n   \"filterIds\": [\n    \"occaecat non deserunt sed eu\",\n    \"anim non Lorem\"\n   ],\n   \"forceFull\": true,\n   \"passive\": false,\n   \"slaId\": \"sunt\",\n   \"stages\": [\n    {\n     \"id\": \"deser\",\n     \"type\": \"CLOUD_TIER\",\n     \"passive\": true,\n     \"attributes\": {\n      \"cloudTier\": {\n       \"cloudUnit\": {\n        \"id\": \"in in\",\n        \"name\": \"fugiat ad elit\"\n       },\n       \"tierAfter\": {\n        \"interval\": -41274846,\n        \"unit\": \"DAY\"\n       }\n      },\n      \"exchange\": {\n       \"consistencyCheck\": \"DATABASE_ONLY\",\n       \"troubleShootingOption\": \"aute sed incididunt adipi\"\n      },\n      \"fileSystem\": {\n       \"troubleShootingOption\": \"cillum in in eu\"\n      },\n      \"mssql\": {\n       \"autoPromote\": false,\n       \"backUpExpirationDays\": 98969266,\n       \"excludeSystemDatabase\": false,\n       \"parallelism\": -44702655,\n       \"troubleShootingOption\": \"dolore amet\"\n      },\n      \"oracle\": {\n       \"archiveLogDeletionDays\": -90453724,\n       \"parallelism\": -89783446,\n       \"troubleShootingOption\": \"labore magna nostrud non\"\n      },\n      \"protection\": {\n       \"backupMode\": \"FSS\",\n       \"forceFullRules\": [\n        \"VSO_NODE_FAILURE\"\n       ]\n      },\n      \"sapHana\": {\n       \"troubleShootingOption\": \"enim ex\"\n      },\n      \"vm\": {\n       \"appConsistentProtection\": false,\n       \"dataMoverType\": \"VADP\",\n       \"disableQuiescing\": false,\n       \"excludeSwapFiles\": false\n      },\n      \"vmax\": {\n       \"postSnapshotFileName\": \"tempor voluptate dolore\",\n       \"preSnapshotFileName\": \"pariatur proident\"\n      }\n     },\n     \"operations\": [\n      {\n       \"backupType\": \"FULL\",\n       \"schedule\": {\n        \"dayOfMonth\": 246794,\n        \"duration\": \"d\",\n        \"frequency\": \"YEARLY\",\n        \"genericDay\": \"LAST\",\n        \"interval\": 40364721,\n        \"month\": \"APRIL\",\n        \"startTime\": \"1956-01-24T14:49:29.777Z\",\n        \"weekDays\": [\n         \"WEDNESDAY\",\n         \"TUESDAY\"\n        ],\n        \"weekOfMonth\": 67644709\n       },\n       \"type\": \"CUMULATIVE\"\n      },\n      {\n       \"backupType\": \"CUMULATIVE\",\n       \"schedule\": {\n        \"dayOfMonth\": -76324182,\n        \"duration\": \"sunt ut est ad tempor\",\n        \"frequency\": \"MINUTELY\",\n        \"genericDay\": \"FIRST\",\n        \"interval\": -64875881,\n        \"month\": \"OCTOBER\",\n        \"startTime\": \"1949-04-05T02:28:17.563Z\",\n        \"weekDays\": [\n         \"SATURDAY\",\n         \"MONDAY\"\n        ],\n        \"weekOfMonth\": -99419175\n       },\n       \"type\": \"INCREMENTAL\"\n      }\n     ],\n     \"options\": {\n      \"promotionType\": \"NONE_WITH_WARNINGS\",\n      \"skipSimpleDatabase\": false\n     },\n     \"retention\": {\n      \"interval\": 99585739,\n      \"unit\": \"WEEK\",\n      \"storageSystemRetentionLock\": false\n     },\n     \"slaId\": \"culpa cupidatat do\",\n     \"sourceStageId\": \"eu in eiusmod enim\",\n     \"target\": {\n      \"storageSystemId\": \"proident Duis velit\",\n      \"dataTargetId\": \"ut est eiusmod ullamco\",\n      \"hardCapacityQuotaLevel\": -51539209,\n      \"hardStreamQuotaLevel\": 72489074,\n      \"preferredInterface\": \"id magna \",\n      \"softCapacityQuotaLevel\": -28782346,\n      \"softStreamQuotaLevel\": -83251022\n     }\n    },\n    {\n     \"id\": \"ex laborum sunt\",\n     \"type\": \"CLOUD_TIER\",\n     \"passive\": true,\n     \"attributes\": {\n      \"cloudTier\": {\n       \"cloudUnit\": {\n        \"id\": \"elit ipsum aliqua anim\",\n        \"name\": \"tempor aliquip esse\"\n       },\n       \"tierAfter\": {\n        \"interval\": -26597072,\n        \"unit\": \"WEEK\"\n       }\n      },\n      \"exchange\": {\n       \"consistencyCheck\": \"LOGS_ONLY\",\n       \"troubleShootingOption\": \"aute non veniam aliqua\"\n      },\n      \"fileSystem\": {\n       \"troubleShootingOption\": \"ad ut ea voluptate re\"\n      },\n      \"mssql\": {\n       \"autoPromote\": false,\n       \"backUpExpirationDays\": -81901344,\n       \"excludeSystemDatabase\": true,\n       \"parallelism\": -55222431,\n       \"troubleShootingOption\": \"incididunt dolor mollit pariatur cupidatat\"\n      },\n      \"oracle\": {\n       \"archiveLogDeletionDays\": -94869806,\n       \"parallelism\": 72641756,\n       \"troubleShootingOption\": \"nostrud do sed commodo\"\n      },\n      \"protection\": {\n       \"backupMode\": \"VSS\",\n       \"forceFullRules\": [\n        \"VSO_NODE_FAILURE\"\n       ]\n      },\n      \"sapHana\": {\n       \"troubleShootingOption\": \"do laborum nostrud\"\n      },\n      \"vm\": {\n       \"appConsistentProtection\": false,\n       \"dataMoverType\": \"VADP\",\n       \"disableQuiescing\": true,\n       \"excludeSwapFiles\": false\n      },\n      \"vmax\": {\n       \"postSnapshotFileName\": \"sed qui esse ut\",\n       \"preSnapshotFileName\": \"fugiat elit quis\"\n      }\n     },\n     \"operations\": [\n      {\n       \"backupType\": \"LOG\",\n       \"schedule\": {\n        \"dayOfMonth\": 87246550,\n        \"duration\": \"nostrud\",\n        \"frequency\": \"DAILY\",\n        \"genericDay\": \"FIRST\",\n        \"interval\": -81865184,\n        \"month\": \"JANUARY\",\n        \"startTime\": \"1989-08-11T05:00:50.630Z\",\n        \"weekDays\": [\n         \"SATURDAY\",\n         \"TUESDAY\"\n        ],\n        \"weekOfMonth\": 85367074\n       },\n       \"type\": \"AUTO_FULL\"\n      },\n      {\n       \"backupType\": \"SYNTHETIC_FULL\",\n       \"schedule\": {\n        \"dayOfMonth\": -21393370,\n        \"duration\": \"esse dolore\",\n        \"frequency\": \"WEEKLY\",\n        \"genericDay\": \"FIRST\",\n        \"interval\": -63595757,\n        \"month\": \"SEPTEMBER\",\n        \"startTime\": \"1948-07-12T14:12:50.313Z\",\n        \"weekDays\": [\n         \"MONDAY\",\n         \"WEDNESDAY\"\n        ],\n        \"weekOfMonth\": -2445694\n       },\n       \"type\": \"FULL\"\n      }\n     ],\n     \"options\": {\n      \"promotionType\": \"NONE\",\n      \"skipSimpleDatabase\": true\n     },\n     \"retention\": {\n      \"interval\": 30166052,\n      \"unit\": \"YEAR\",\n      \"storageSystemRetentionLock\": false\n     },\n     \"slaId\": \"voluptate sint aliqua nisi mollit\",\n     \"sourceStageId\": \"culpa reprehenderit dolor\",\n     \"target\": {\n      \"storageSystemId\": \"ad irure velit laboris magna\",\n      \"dataTargetId\": \"commodo tempor ullamco quis\",\n      \"hardCapacityQuotaLevel\": -15217716,\n      \"hardStreamQuotaLevel\": 24863358,\n      \"preferredInterface\": \"ex\",\n      \"softCapacityQuotaLevel\": -67437646,\n      \"softStreamQuotaLevel\": -374296\n     }\n    }\n   ],\n   \"summary\": {\n    \"lastExecutionStatus\": \"CANCELLED\",\n    \"numberOfAssets\": 25220652,\n    \"numberOfJobFailures\": 71452976,\n    \"numberOfSlaFailures\": 64310448,\n    \"numberOfSlaSuccess\": -35691436,\n    \"totalAssetCapacity\": 92607569.15891802,\n    \"totalAssetProtectionCapacity\": -33040090.53738275\n   },\n   \"targetStorageProvisionStrategy\": \"USE_CONFIGURED\",\n   \"updatedAt\": \"1978-06-19T07:03:49.051Z\"\n  }\n ],\n \"page\": {\n  \"number\": -18453339,\n  \"queryState\": \"culpa dolor\",\n  \"size\": -76592152,\n  \"totalElements\": 10075962,\n  \"totalPages\": 77359611\n }\n}"
								}
							]
						},
						{
							"name": "Create a protection policy.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"assetType\": \"<string>\",\n    \"type\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"priority\": \"<integer>\",\n    \"encrypted\": \"<boolean>\",\n    \"complianceInterval\": \"<string>\",\n    \"createdAt\": \"<dateTime>\",\n    \"credentials\": {\n        \"id\": \"<string>\",\n        \"type\": \"<string>\"\n    },\n    \"dataConsistency\": \"<string>\",\n    \"description\": \"<string>\",\n    \"details\": {\n        \"oracle\": {\n            \"dbConnection\": {\n                \"tnsAdmin\": \"<string>\",\n                \"tnsName\": \"<string>\"\n            },\n            \"rmanConnection\": {\n                \"credentialId\": \"<string>\",\n                \"tnsAdmin\": \"<string>\",\n                \"tnsName\": \"<string>\",\n                \"type\": \"<string>\"\n            }\n        },\n        \"vm\": {\n            \"metadataIndexingEnabled\": \"<boolean>\",\n            \"protectionEngine\": \"<string>\"\n        }\n    },\n    \"filterIds\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"forceFull\": \"<boolean>\",\n    \"passive\": \"<boolean>\",\n    \"slaId\": \"<string>\",\n    \"stages\": [\n        {\n            \"id\": \"<string>\",\n            \"type\": \"<string>\",\n            \"passive\": \"<boolean>\",\n            \"attributes\": {\n                \"cloudTier\": {\n                    \"cloudUnit\": {\n                        \"id\": \"<string>\",\n                        \"name\": \"<string>\"\n                    },\n                    \"tierAfter\": {\n                        \"interval\": \"<integer>\",\n                        \"unit\": \"<string>\"\n                    }\n                },\n                \"exchange\": {\n                    \"consistencyCheck\": \"<string>\",\n                    \"troubleShootingOption\": \"<string>\"\n                },\n                \"fileSystem\": {\n                    \"troubleShootingOption\": \"<string>\"\n                },\n                \"mssql\": {\n                    \"autoPromote\": \"<boolean>\",\n                    \"backUpExpirationDays\": \"<integer>\",\n                    \"excludeSystemDatabase\": \"<boolean>\",\n                    \"parallelism\": \"<integer>\",\n                    \"troubleShootingOption\": \"<string>\"\n                },\n                \"oracle\": {\n                    \"archiveLogDeletionDays\": \"<integer>\",\n                    \"parallelism\": \"<integer>\",\n                    \"troubleShootingOption\": \"<string>\"\n                },\n                \"protection\": {\n                    \"backupMode\": \"<string>\",\n                    \"forceFullRules\": [\n                        \"<string>\"\n                    ]\n                },\n                \"sapHana\": {\n                    \"troubleShootingOption\": \"<string>\"\n                },\n                \"vm\": {\n                    \"appConsistentProtection\": \"<boolean>\",\n                    \"dataMoverType\": \"<string>\",\n                    \"disableQuiescing\": \"<boolean>\",\n                    \"excludeSwapFiles\": \"<boolean>\"\n                },\n                \"vmax\": {\n                    \"postSnapshotFileName\": \"<string>\",\n                    \"preSnapshotFileName\": \"<string>\"\n                }\n            },\n            \"operations\": [\n                {\n                    \"backupType\": \"<string>\",\n                    \"schedule\": {\n                        \"dayOfMonth\": \"<integer>\",\n                        \"duration\": \"<string>\",\n                        \"frequency\": \"<string>\",\n                        \"genericDay\": \"<string>\",\n                        \"interval\": \"<integer>\",\n                        \"month\": \"<string>\",\n                        \"startTime\": \"<dateTime>\",\n                        \"weekDays\": [\n                            \"<string>\"\n                        ],\n                        \"weekOfMonth\": \"<integer>\"\n                    },\n                    \"type\": \"<string>\"\n                }\n            ],\n            \"options\": {\n                \"promotionType\": \"<string>\",\n                \"skipSimpleDatabase\": \"<boolean>\"\n            },\n            \"retention\": {\n                \"interval\": \"<integer>\",\n                \"unit\": \"<string>\",\n                \"storageSystemRetentionLock\": \"<boolean>\"\n            },\n            \"slaId\": \"<string>\",\n            \"sourceStageId\": \"<string>\",\n            \"target\": {\n                \"storageSystemId\": \"<string>\",\n                \"dataTargetId\": \"<string>\",\n                \"hardCapacityQuotaLevel\": \"<long>\",\n                \"hardStreamQuotaLevel\": \"<long>\",\n                \"preferredInterface\": \"<string>\",\n                \"softCapacityQuotaLevel\": \"<long>\",\n                \"softStreamQuotaLevel\": \"<long>\"\n            }\n        },\n        {\n            \"id\": \"<string>\",\n            \"type\": \"<string>\",\n            \"passive\": \"<boolean>\",\n            \"attributes\": {\n                \"cloudTier\": {\n                    \"cloudUnit\": {\n                        \"id\": \"<string>\",\n                        \"name\": \"<string>\"\n                    },\n                    \"tierAfter\": {\n                        \"interval\": \"<integer>\",\n                        \"unit\": \"<string>\"\n                    }\n                },\n                \"exchange\": {\n                    \"consistencyCheck\": \"<string>\",\n                    \"troubleShootingOption\": \"<string>\"\n                },\n                \"fileSystem\": {\n                    \"troubleShootingOption\": \"<string>\"\n                },\n                \"mssql\": {\n                    \"autoPromote\": \"<boolean>\",\n                    \"backUpExpirationDays\": \"<integer>\",\n                    \"excludeSystemDatabase\": \"<boolean>\",\n                    \"parallelism\": \"<integer>\",\n                    \"troubleShootingOption\": \"<string>\"\n                },\n                \"oracle\": {\n                    \"archiveLogDeletionDays\": \"<integer>\",\n                    \"parallelism\": \"<integer>\",\n                    \"troubleShootingOption\": \"<string>\"\n                },\n                \"protection\": {\n                    \"backupMode\": \"<string>\",\n                    \"forceFullRules\": [\n                        \"<string>\"\n                    ]\n                },\n                \"sapHana\": {\n                    \"troubleShootingOption\": \"<string>\"\n                },\n                \"vm\": {\n                    \"appConsistentProtection\": \"<boolean>\",\n                    \"dataMoverType\": \"<string>\",\n                    \"disableQuiescing\": \"<boolean>\",\n                    \"excludeSwapFiles\": \"<boolean>\"\n                },\n                \"vmax\": {\n                    \"postSnapshotFileName\": \"<string>\",\n                    \"preSnapshotFileName\": \"<string>\"\n                }\n            },\n            \"operations\": [\n                {\n                    \"backupType\": \"<string>\",\n                    \"schedule\": {\n                        \"dayOfMonth\": \"<integer>\",\n                        \"duration\": \"<string>\",\n                        \"frequency\": \"<string>\",\n                        \"genericDay\": \"<string>\",\n                        \"interval\": \"<integer>\",\n                        \"month\": \"<string>\",\n                        \"startTime\": \"<dateTime>\",\n                        \"weekDays\": [\n                            \"<string>\"\n                        ],\n                        \"weekOfMonth\": \"<integer>\"\n                    },\n                    \"type\": \"<string>\"\n                }\n            ],\n            \"options\": {\n                \"promotionType\": \"<string>\",\n                \"skipSimpleDatabase\": \"<boolean>\"\n            },\n            \"retention\": {\n                \"interval\": \"<integer>\",\n                \"unit\": \"<string>\",\n                \"storageSystemRetentionLock\": \"<boolean>\"\n            },\n            \"slaId\": \"<string>\",\n            \"sourceStageId\": \"<string>\",\n            \"target\": {\n                \"storageSystemId\": \"<string>\",\n                \"dataTargetId\": \"<string>\",\n                \"hardCapacityQuotaLevel\": \"<long>\",\n                \"hardStreamQuotaLevel\": \"<long>\",\n                \"preferredInterface\": \"<string>\",\n                \"softCapacityQuotaLevel\": \"<long>\",\n                \"softStreamQuotaLevel\": \"<long>\"\n            }\n        }\n    ],\n    \"summary\": {\n        \"lastExecutionStatus\": \"<string>\",\n        \"totalAssetCapacity\": \"<double>\",\n        \"totalAssetProtectionCapacity\": \"<double>\"\n    },\n    \"targetStorageProvisionStrategy\": \"<string>\",\n    \"updatedAt\": \"<dateTime>\"\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/protection-policies",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"protection-policies"
									]
								},
								"description": "Creates a protection policy.\n> This endpoint supports execution by the following roles: admin,export-and-recovery-admin\n"
							},
							"response": [
								{
									"name": "An unexpected error prevented the server from fulfilling your request.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"assetType\": \"<string>\",\n    \"type\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"priority\": \"<integer>\",\n    \"encrypted\": \"<boolean>\",\n    \"complianceInterval\": \"<string>\",\n    \"createdAt\": \"<dateTime>\",\n    \"credentials\": {\n        \"id\": \"<string>\",\n        \"type\": \"<string>\"\n    },\n    \"dataConsistency\": \"<string>\",\n    \"description\": \"<string>\",\n    \"details\": {\n        \"oracle\": {\n            \"dbConnection\": {\n                \"tnsAdmin\": \"<string>\",\n                \"tnsName\": \"<string>\"\n            },\n            \"rmanConnection\": {\n                \"credentialId\": \"<string>\",\n                \"tnsAdmin\": \"<string>\",\n                \"tnsName\": \"<string>\",\n                \"type\": \"<string>\"\n            }\n        },\n        \"vm\": {\n            \"metadataIndexingEnabled\": \"<boolean>\",\n            \"protectionEngine\": \"<string>\"\n        }\n    },\n    \"filterIds\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"forceFull\": \"<boolean>\",\n    \"passive\": \"<boolean>\",\n    \"slaId\": \"<string>\",\n    \"stages\": [\n        {\n            \"id\": \"<string>\",\n            \"type\": \"<string>\",\n            \"passive\": \"<boolean>\",\n            \"attributes\": {\n                \"cloudTier\": {\n                    \"cloudUnit\": {\n                        \"id\": \"<string>\",\n                        \"name\": \"<string>\"\n                    },\n                    \"tierAfter\": {\n                        \"interval\": \"<integer>\",\n                        \"unit\": \"<string>\"\n                    }\n                },\n                \"exchange\": {\n                    \"consistencyCheck\": \"<string>\",\n                    \"troubleShootingOption\": \"<string>\"\n                },\n                \"fileSystem\": {\n                    \"troubleShootingOption\": \"<string>\"\n                },\n                \"mssql\": {\n                    \"autoPromote\": \"<boolean>\",\n                    \"backUpExpirationDays\": \"<integer>\",\n                    \"excludeSystemDatabase\": \"<boolean>\",\n                    \"parallelism\": \"<integer>\",\n                    \"troubleShootingOption\": \"<string>\"\n                },\n                \"oracle\": {\n                    \"archiveLogDeletionDays\": \"<integer>\",\n                    \"parallelism\": \"<integer>\",\n                    \"troubleShootingOption\": \"<string>\"\n                },\n                \"protection\": {\n                    \"backupMode\": \"<string>\",\n                    \"forceFullRules\": [\n                        \"<string>\"\n                    ]\n                },\n                \"sapHana\": {\n                    \"troubleShootingOption\": \"<string>\"\n                },\n                \"vm\": {\n                    \"appConsistentProtection\": \"<boolean>\",\n                    \"dataMoverType\": \"<string>\",\n                    \"disableQuiescing\": \"<boolean>\",\n                    \"excludeSwapFiles\": \"<boolean>\"\n                },\n                \"vmax\": {\n                    \"postSnapshotFileName\": \"<string>\",\n                    \"preSnapshotFileName\": \"<string>\"\n                }\n            },\n            \"operations\": [\n                {\n                    \"backupType\": \"<string>\",\n                    \"schedule\": {\n                        \"dayOfMonth\": \"<integer>\",\n                        \"duration\": \"<string>\",\n                        \"frequency\": \"<string>\",\n                        \"genericDay\": \"<string>\",\n                        \"interval\": \"<integer>\",\n                        \"month\": \"<string>\",\n                        \"startTime\": \"<dateTime>\",\n                        \"weekDays\": [\n                            \"<string>\"\n                        ],\n                        \"weekOfMonth\": \"<integer>\"\n                    },\n                    \"type\": \"<string>\"\n                }\n            ],\n            \"options\": {\n                \"promotionType\": \"<string>\",\n                \"skipSimpleDatabase\": \"<boolean>\"\n            },\n            \"retention\": {\n                \"interval\": \"<integer>\",\n                \"unit\": \"<string>\",\n                \"storageSystemRetentionLock\": \"<boolean>\"\n            },\n            \"slaId\": \"<string>\",\n            \"sourceStageId\": \"<string>\",\n            \"target\": {\n                \"storageSystemId\": \"<string>\",\n                \"dataTargetId\": \"<string>\",\n                \"hardCapacityQuotaLevel\": \"<long>\",\n                \"hardStreamQuotaLevel\": \"<long>\",\n                \"preferredInterface\": \"<string>\",\n                \"softCapacityQuotaLevel\": \"<long>\",\n                \"softStreamQuotaLevel\": \"<long>\"\n            }\n        },\n        {\n            \"id\": \"<string>\",\n            \"type\": \"<string>\",\n            \"passive\": \"<boolean>\",\n            \"attributes\": {\n                \"cloudTier\": {\n                    \"cloudUnit\": {\n                        \"id\": \"<string>\",\n                        \"name\": \"<string>\"\n                    },\n                    \"tierAfter\": {\n                        \"interval\": \"<integer>\",\n                        \"unit\": \"<string>\"\n                    }\n                },\n                \"exchange\": {\n                    \"consistencyCheck\": \"<string>\",\n                    \"troubleShootingOption\": \"<string>\"\n                },\n                \"fileSystem\": {\n                    \"troubleShootingOption\": \"<string>\"\n                },\n                \"mssql\": {\n                    \"autoPromote\": \"<boolean>\",\n                    \"backUpExpirationDays\": \"<integer>\",\n                    \"excludeSystemDatabase\": \"<boolean>\",\n                    \"parallelism\": \"<integer>\",\n                    \"troubleShootingOption\": \"<string>\"\n                },\n                \"oracle\": {\n                    \"archiveLogDeletionDays\": \"<integer>\",\n                    \"parallelism\": \"<integer>\",\n                    \"troubleShootingOption\": \"<string>\"\n                },\n                \"protection\": {\n                    \"backupMode\": \"<string>\",\n                    \"forceFullRules\": [\n                        \"<string>\"\n                    ]\n                },\n                \"sapHana\": {\n                    \"troubleShootingOption\": \"<string>\"\n                },\n                \"vm\": {\n                    \"appConsistentProtection\": \"<boolean>\",\n                    \"dataMoverType\": \"<string>\",\n                    \"disableQuiescing\": \"<boolean>\",\n                    \"excludeSwapFiles\": \"<boolean>\"\n                },\n                \"vmax\": {\n                    \"postSnapshotFileName\": \"<string>\",\n                    \"preSnapshotFileName\": \"<string>\"\n                }\n            },\n            \"operations\": [\n                {\n                    \"backupType\": \"<string>\",\n                    \"schedule\": {\n                        \"dayOfMonth\": \"<integer>\",\n                        \"duration\": \"<string>\",\n                        \"frequency\": \"<string>\",\n                        \"genericDay\": \"<string>\",\n                        \"interval\": \"<integer>\",\n                        \"month\": \"<string>\",\n                        \"startTime\": \"<dateTime>\",\n                        \"weekDays\": [\n                            \"<string>\"\n                        ],\n                        \"weekOfMonth\": \"<integer>\"\n                    },\n                    \"type\": \"<string>\"\n                }\n            ],\n            \"options\": {\n                \"promotionType\": \"<string>\",\n                \"skipSimpleDatabase\": \"<boolean>\"\n            },\n            \"retention\": {\n                \"interval\": \"<integer>\",\n                \"unit\": \"<string>\",\n                \"storageSystemRetentionLock\": \"<boolean>\"\n            },\n            \"slaId\": \"<string>\",\n            \"sourceStageId\": \"<string>\",\n            \"target\": {\n                \"storageSystemId\": \"<string>\",\n                \"dataTargetId\": \"<string>\",\n                \"hardCapacityQuotaLevel\": \"<long>\",\n                \"hardStreamQuotaLevel\": \"<long>\",\n                \"preferredInterface\": \"<string>\",\n                \"softCapacityQuotaLevel\": \"<long>\",\n                \"softStreamQuotaLevel\": \"<long>\"\n            }\n        }\n    ],\n    \"summary\": {\n        \"lastExecutionStatus\": \"<string>\",\n        \"totalAssetCapacity\": \"<double>\",\n        \"totalAssetProtectionCapacity\": \"<double>\"\n    },\n    \"targetStorageProvisionStrategy\": \"<string>\",\n    \"updatedAt\": \"<dateTime>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/protection-policies",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"protection-policies"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "The requestor is not authorized to perform this operation.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"assetType\": \"<string>\",\n    \"type\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"priority\": \"<integer>\",\n    \"encrypted\": \"<boolean>\",\n    \"complianceInterval\": \"<string>\",\n    \"createdAt\": \"<dateTime>\",\n    \"credentials\": {\n        \"id\": \"<string>\",\n        \"type\": \"<string>\"\n    },\n    \"dataConsistency\": \"<string>\",\n    \"description\": \"<string>\",\n    \"details\": {\n        \"oracle\": {\n            \"dbConnection\": {\n                \"tnsAdmin\": \"<string>\",\n                \"tnsName\": \"<string>\"\n            },\n            \"rmanConnection\": {\n                \"credentialId\": \"<string>\",\n                \"tnsAdmin\": \"<string>\",\n                \"tnsName\": \"<string>\",\n                \"type\": \"<string>\"\n            }\n        },\n        \"vm\": {\n            \"metadataIndexingEnabled\": \"<boolean>\",\n            \"protectionEngine\": \"<string>\"\n        }\n    },\n    \"filterIds\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"forceFull\": \"<boolean>\",\n    \"passive\": \"<boolean>\",\n    \"slaId\": \"<string>\",\n    \"stages\": [\n        {\n            \"id\": \"<string>\",\n            \"type\": \"<string>\",\n            \"passive\": \"<boolean>\",\n            \"attributes\": {\n                \"cloudTier\": {\n                    \"cloudUnit\": {\n                        \"id\": \"<string>\",\n                        \"name\": \"<string>\"\n                    },\n                    \"tierAfter\": {\n                        \"interval\": \"<integer>\",\n                        \"unit\": \"<string>\"\n                    }\n                },\n                \"exchange\": {\n                    \"consistencyCheck\": \"<string>\",\n                    \"troubleShootingOption\": \"<string>\"\n                },\n                \"fileSystem\": {\n                    \"troubleShootingOption\": \"<string>\"\n                },\n                \"mssql\": {\n                    \"autoPromote\": \"<boolean>\",\n                    \"backUpExpirationDays\": \"<integer>\",\n                    \"excludeSystemDatabase\": \"<boolean>\",\n                    \"parallelism\": \"<integer>\",\n                    \"troubleShootingOption\": \"<string>\"\n                },\n                \"oracle\": {\n                    \"archiveLogDeletionDays\": \"<integer>\",\n                    \"parallelism\": \"<integer>\",\n                    \"troubleShootingOption\": \"<string>\"\n                },\n                \"protection\": {\n                    \"backupMode\": \"<string>\",\n                    \"forceFullRules\": [\n                        \"<string>\"\n                    ]\n                },\n                \"sapHana\": {\n                    \"troubleShootingOption\": \"<string>\"\n                },\n                \"vm\": {\n                    \"appConsistentProtection\": \"<boolean>\",\n                    \"dataMoverType\": \"<string>\",\n                    \"disableQuiescing\": \"<boolean>\",\n                    \"excludeSwapFiles\": \"<boolean>\"\n                },\n                \"vmax\": {\n                    \"postSnapshotFileName\": \"<string>\",\n                    \"preSnapshotFileName\": \"<string>\"\n                }\n            },\n            \"operations\": [\n                {\n                    \"backupType\": \"<string>\",\n                    \"schedule\": {\n                        \"dayOfMonth\": \"<integer>\",\n                        \"duration\": \"<string>\",\n                        \"frequency\": \"<string>\",\n                        \"genericDay\": \"<string>\",\n                        \"interval\": \"<integer>\",\n                        \"month\": \"<string>\",\n                        \"startTime\": \"<dateTime>\",\n                        \"weekDays\": [\n                            \"<string>\"\n                        ],\n                        \"weekOfMonth\": \"<integer>\"\n                    },\n                    \"type\": \"<string>\"\n                }\n            ],\n            \"options\": {\n                \"promotionType\": \"<string>\",\n                \"skipSimpleDatabase\": \"<boolean>\"\n            },\n            \"retention\": {\n                \"interval\": \"<integer>\",\n                \"unit\": \"<string>\",\n                \"storageSystemRetentionLock\": \"<boolean>\"\n            },\n            \"slaId\": \"<string>\",\n            \"sourceStageId\": \"<string>\",\n            \"target\": {\n                \"storageSystemId\": \"<string>\",\n                \"dataTargetId\": \"<string>\",\n                \"hardCapacityQuotaLevel\": \"<long>\",\n                \"hardStreamQuotaLevel\": \"<long>\",\n                \"preferredInterface\": \"<string>\",\n                \"softCapacityQuotaLevel\": \"<long>\",\n                \"softStreamQuotaLevel\": \"<long>\"\n            }\n        },\n        {\n            \"id\": \"<string>\",\n            \"type\": \"<string>\",\n            \"passive\": \"<boolean>\",\n            \"attributes\": {\n                \"cloudTier\": {\n                    \"cloudUnit\": {\n                        \"id\": \"<string>\",\n                        \"name\": \"<string>\"\n                    },\n                    \"tierAfter\": {\n                        \"interval\": \"<integer>\",\n                        \"unit\": \"<string>\"\n                    }\n                },\n                \"exchange\": {\n                    \"consistencyCheck\": \"<string>\",\n                    \"troubleShootingOption\": \"<string>\"\n                },\n                \"fileSystem\": {\n                    \"troubleShootingOption\": \"<string>\"\n                },\n                \"mssql\": {\n                    \"autoPromote\": \"<boolean>\",\n                    \"backUpExpirationDays\": \"<integer>\",\n                    \"excludeSystemDatabase\": \"<boolean>\",\n                    \"parallelism\": \"<integer>\",\n                    \"troubleShootingOption\": \"<string>\"\n                },\n                \"oracle\": {\n                    \"archiveLogDeletionDays\": \"<integer>\",\n                    \"parallelism\": \"<integer>\",\n                    \"troubleShootingOption\": \"<string>\"\n                },\n                \"protection\": {\n                    \"backupMode\": \"<string>\",\n                    \"forceFullRules\": [\n                        \"<string>\"\n                    ]\n                },\n                \"sapHana\": {\n                    \"troubleShootingOption\": \"<string>\"\n                },\n                \"vm\": {\n                    \"appConsistentProtection\": \"<boolean>\",\n                    \"dataMoverType\": \"<string>\",\n                    \"disableQuiescing\": \"<boolean>\",\n                    \"excludeSwapFiles\": \"<boolean>\"\n                },\n                \"vmax\": {\n                    \"postSnapshotFileName\": \"<string>\",\n                    \"preSnapshotFileName\": \"<string>\"\n                }\n            },\n            \"operations\": [\n                {\n                    \"backupType\": \"<string>\",\n                    \"schedule\": {\n                        \"dayOfMonth\": \"<integer>\",\n                        \"duration\": \"<string>\",\n                        \"frequency\": \"<string>\",\n                        \"genericDay\": \"<string>\",\n                        \"interval\": \"<integer>\",\n                        \"month\": \"<string>\",\n                        \"startTime\": \"<dateTime>\",\n                        \"weekDays\": [\n                            \"<string>\"\n                        ],\n                        \"weekOfMonth\": \"<integer>\"\n                    },\n                    \"type\": \"<string>\"\n                }\n            ],\n            \"options\": {\n                \"promotionType\": \"<string>\",\n                \"skipSimpleDatabase\": \"<boolean>\"\n            },\n            \"retention\": {\n                \"interval\": \"<integer>\",\n                \"unit\": \"<string>\",\n                \"storageSystemRetentionLock\": \"<boolean>\"\n            },\n            \"slaId\": \"<string>\",\n            \"sourceStageId\": \"<string>\",\n            \"target\": {\n                \"storageSystemId\": \"<string>\",\n                \"dataTargetId\": \"<string>\",\n                \"hardCapacityQuotaLevel\": \"<long>\",\n                \"hardStreamQuotaLevel\": \"<long>\",\n                \"preferredInterface\": \"<string>\",\n                \"softCapacityQuotaLevel\": \"<long>\",\n                \"softStreamQuotaLevel\": \"<long>\"\n            }\n        }\n    ],\n    \"summary\": {\n        \"lastExecutionStatus\": \"<string>\",\n        \"totalAssetCapacity\": \"<double>\",\n        \"totalAssetProtectionCapacity\": \"<double>\"\n    },\n    \"targetStorageProvisionStrategy\": \"<string>\",\n    \"updatedAt\": \"<dateTime>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/protection-policies",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"protection-policies"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "The requestor is not allowed to perform this operation.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"assetType\": \"<string>\",\n    \"type\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"priority\": \"<integer>\",\n    \"encrypted\": \"<boolean>\",\n    \"complianceInterval\": \"<string>\",\n    \"createdAt\": \"<dateTime>\",\n    \"credentials\": {\n        \"id\": \"<string>\",\n        \"type\": \"<string>\"\n    },\n    \"dataConsistency\": \"<string>\",\n    \"description\": \"<string>\",\n    \"details\": {\n        \"oracle\": {\n            \"dbConnection\": {\n                \"tnsAdmin\": \"<string>\",\n                \"tnsName\": \"<string>\"\n            },\n            \"rmanConnection\": {\n                \"credentialId\": \"<string>\",\n                \"tnsAdmin\": \"<string>\",\n                \"tnsName\": \"<string>\",\n                \"type\": \"<string>\"\n            }\n        },\n        \"vm\": {\n            \"metadataIndexingEnabled\": \"<boolean>\",\n            \"protectionEngine\": \"<string>\"\n        }\n    },\n    \"filterIds\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"forceFull\": \"<boolean>\",\n    \"passive\": \"<boolean>\",\n    \"slaId\": \"<string>\",\n    \"stages\": [\n        {\n            \"id\": \"<string>\",\n            \"type\": \"<string>\",\n            \"passive\": \"<boolean>\",\n            \"attributes\": {\n                \"cloudTier\": {\n                    \"cloudUnit\": {\n                        \"id\": \"<string>\",\n                        \"name\": \"<string>\"\n                    },\n                    \"tierAfter\": {\n                        \"interval\": \"<integer>\",\n                        \"unit\": \"<string>\"\n                    }\n                },\n                \"exchange\": {\n                    \"consistencyCheck\": \"<string>\",\n                    \"troubleShootingOption\": \"<string>\"\n                },\n                \"fileSystem\": {\n                    \"troubleShootingOption\": \"<string>\"\n                },\n                \"mssql\": {\n                    \"autoPromote\": \"<boolean>\",\n                    \"backUpExpirationDays\": \"<integer>\",\n                    \"excludeSystemDatabase\": \"<boolean>\",\n                    \"parallelism\": \"<integer>\",\n                    \"troubleShootingOption\": \"<string>\"\n                },\n                \"oracle\": {\n                    \"archiveLogDeletionDays\": \"<integer>\",\n                    \"parallelism\": \"<integer>\",\n                    \"troubleShootingOption\": \"<string>\"\n                },\n                \"protection\": {\n                    \"backupMode\": \"<string>\",\n                    \"forceFullRules\": [\n                        \"<string>\"\n                    ]\n                },\n                \"sapHana\": {\n                    \"troubleShootingOption\": \"<string>\"\n                },\n                \"vm\": {\n                    \"appConsistentProtection\": \"<boolean>\",\n                    \"dataMoverType\": \"<string>\",\n                    \"disableQuiescing\": \"<boolean>\",\n                    \"excludeSwapFiles\": \"<boolean>\"\n                },\n                \"vmax\": {\n                    \"postSnapshotFileName\": \"<string>\",\n                    \"preSnapshotFileName\": \"<string>\"\n                }\n            },\n            \"operations\": [\n                {\n                    \"backupType\": \"<string>\",\n                    \"schedule\": {\n                        \"dayOfMonth\": \"<integer>\",\n                        \"duration\": \"<string>\",\n                        \"frequency\": \"<string>\",\n                        \"genericDay\": \"<string>\",\n                        \"interval\": \"<integer>\",\n                        \"month\": \"<string>\",\n                        \"startTime\": \"<dateTime>\",\n                        \"weekDays\": [\n                            \"<string>\"\n                        ],\n                        \"weekOfMonth\": \"<integer>\"\n                    },\n                    \"type\": \"<string>\"\n                }\n            ],\n            \"options\": {\n                \"promotionType\": \"<string>\",\n                \"skipSimpleDatabase\": \"<boolean>\"\n            },\n            \"retention\": {\n                \"interval\": \"<integer>\",\n                \"unit\": \"<string>\",\n                \"storageSystemRetentionLock\": \"<boolean>\"\n            },\n            \"slaId\": \"<string>\",\n            \"sourceStageId\": \"<string>\",\n            \"target\": {\n                \"storageSystemId\": \"<string>\",\n                \"dataTargetId\": \"<string>\",\n                \"hardCapacityQuotaLevel\": \"<long>\",\n                \"hardStreamQuotaLevel\": \"<long>\",\n                \"preferredInterface\": \"<string>\",\n                \"softCapacityQuotaLevel\": \"<long>\",\n                \"softStreamQuotaLevel\": \"<long>\"\n            }\n        },\n        {\n            \"id\": \"<string>\",\n            \"type\": \"<string>\",\n            \"passive\": \"<boolean>\",\n            \"attributes\": {\n                \"cloudTier\": {\n                    \"cloudUnit\": {\n                        \"id\": \"<string>\",\n                        \"name\": \"<string>\"\n                    },\n                    \"tierAfter\": {\n                        \"interval\": \"<integer>\",\n                        \"unit\": \"<string>\"\n                    }\n                },\n                \"exchange\": {\n                    \"consistencyCheck\": \"<string>\",\n                    \"troubleShootingOption\": \"<string>\"\n                },\n                \"fileSystem\": {\n                    \"troubleShootingOption\": \"<string>\"\n                },\n                \"mssql\": {\n                    \"autoPromote\": \"<boolean>\",\n                    \"backUpExpirationDays\": \"<integer>\",\n                    \"excludeSystemDatabase\": \"<boolean>\",\n                    \"parallelism\": \"<integer>\",\n                    \"troubleShootingOption\": \"<string>\"\n                },\n                \"oracle\": {\n                    \"archiveLogDeletionDays\": \"<integer>\",\n                    \"parallelism\": \"<integer>\",\n                    \"troubleShootingOption\": \"<string>\"\n                },\n                \"protection\": {\n                    \"backupMode\": \"<string>\",\n                    \"forceFullRules\": [\n                        \"<string>\"\n                    ]\n                },\n                \"sapHana\": {\n                    \"troubleShootingOption\": \"<string>\"\n                },\n                \"vm\": {\n                    \"appConsistentProtection\": \"<boolean>\",\n                    \"dataMoverType\": \"<string>\",\n                    \"disableQuiescing\": \"<boolean>\",\n                    \"excludeSwapFiles\": \"<boolean>\"\n                },\n                \"vmax\": {\n                    \"postSnapshotFileName\": \"<string>\",\n                    \"preSnapshotFileName\": \"<string>\"\n                }\n            },\n            \"operations\": [\n                {\n                    \"backupType\": \"<string>\",\n                    \"schedule\": {\n                        \"dayOfMonth\": \"<integer>\",\n                        \"duration\": \"<string>\",\n                        \"frequency\": \"<string>\",\n                        \"genericDay\": \"<string>\",\n                        \"interval\": \"<integer>\",\n                        \"month\": \"<string>\",\n                        \"startTime\": \"<dateTime>\",\n                        \"weekDays\": [\n                            \"<string>\"\n                        ],\n                        \"weekOfMonth\": \"<integer>\"\n                    },\n                    \"type\": \"<string>\"\n                }\n            ],\n            \"options\": {\n                \"promotionType\": \"<string>\",\n                \"skipSimpleDatabase\": \"<boolean>\"\n            },\n            \"retention\": {\n                \"interval\": \"<integer>\",\n                \"unit\": \"<string>\",\n                \"storageSystemRetentionLock\": \"<boolean>\"\n            },\n            \"slaId\": \"<string>\",\n            \"sourceStageId\": \"<string>\",\n            \"target\": {\n                \"storageSystemId\": \"<string>\",\n                \"dataTargetId\": \"<string>\",\n                \"hardCapacityQuotaLevel\": \"<long>\",\n                \"hardStreamQuotaLevel\": \"<long>\",\n                \"preferredInterface\": \"<string>\",\n                \"softCapacityQuotaLevel\": \"<long>\",\n                \"softStreamQuotaLevel\": \"<long>\"\n            }\n        }\n    ],\n    \"summary\": {\n        \"lastExecutionStatus\": \"<string>\",\n        \"totalAssetCapacity\": \"<double>\",\n        \"totalAssetProtectionCapacity\": \"<double>\"\n    },\n    \"targetStorageProvisionStrategy\": \"<string>\",\n    \"updatedAt\": \"<dateTime>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/protection-policies",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"protection-policies"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "The request is not valid.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"assetType\": \"<string>\",\n    \"type\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"priority\": \"<integer>\",\n    \"encrypted\": \"<boolean>\",\n    \"complianceInterval\": \"<string>\",\n    \"createdAt\": \"<dateTime>\",\n    \"credentials\": {\n        \"id\": \"<string>\",\n        \"type\": \"<string>\"\n    },\n    \"dataConsistency\": \"<string>\",\n    \"description\": \"<string>\",\n    \"details\": {\n        \"oracle\": {\n            \"dbConnection\": {\n                \"tnsAdmin\": \"<string>\",\n                \"tnsName\": \"<string>\"\n            },\n            \"rmanConnection\": {\n                \"credentialId\": \"<string>\",\n                \"tnsAdmin\": \"<string>\",\n                \"tnsName\": \"<string>\",\n                \"type\": \"<string>\"\n            }\n        },\n        \"vm\": {\n            \"metadataIndexingEnabled\": \"<boolean>\",\n            \"protectionEngine\": \"<string>\"\n        }\n    },\n    \"filterIds\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"forceFull\": \"<boolean>\",\n    \"passive\": \"<boolean>\",\n    \"slaId\": \"<string>\",\n    \"stages\": [\n        {\n            \"id\": \"<string>\",\n            \"type\": \"<string>\",\n            \"passive\": \"<boolean>\",\n            \"attributes\": {\n                \"cloudTier\": {\n                    \"cloudUnit\": {\n                        \"id\": \"<string>\",\n                        \"name\": \"<string>\"\n                    },\n                    \"tierAfter\": {\n                        \"interval\": \"<integer>\",\n                        \"unit\": \"<string>\"\n                    }\n                },\n                \"exchange\": {\n                    \"consistencyCheck\": \"<string>\",\n                    \"troubleShootingOption\": \"<string>\"\n                },\n                \"fileSystem\": {\n                    \"troubleShootingOption\": \"<string>\"\n                },\n                \"mssql\": {\n                    \"autoPromote\": \"<boolean>\",\n                    \"backUpExpirationDays\": \"<integer>\",\n                    \"excludeSystemDatabase\": \"<boolean>\",\n                    \"parallelism\": \"<integer>\",\n                    \"troubleShootingOption\": \"<string>\"\n                },\n                \"oracle\": {\n                    \"archiveLogDeletionDays\": \"<integer>\",\n                    \"parallelism\": \"<integer>\",\n                    \"troubleShootingOption\": \"<string>\"\n                },\n                \"protection\": {\n                    \"backupMode\": \"<string>\",\n                    \"forceFullRules\": [\n                        \"<string>\"\n                    ]\n                },\n                \"sapHana\": {\n                    \"troubleShootingOption\": \"<string>\"\n                },\n                \"vm\": {\n                    \"appConsistentProtection\": \"<boolean>\",\n                    \"dataMoverType\": \"<string>\",\n                    \"disableQuiescing\": \"<boolean>\",\n                    \"excludeSwapFiles\": \"<boolean>\"\n                },\n                \"vmax\": {\n                    \"postSnapshotFileName\": \"<string>\",\n                    \"preSnapshotFileName\": \"<string>\"\n                }\n            },\n            \"operations\": [\n                {\n                    \"backupType\": \"<string>\",\n                    \"schedule\": {\n                        \"dayOfMonth\": \"<integer>\",\n                        \"duration\": \"<string>\",\n                        \"frequency\": \"<string>\",\n                        \"genericDay\": \"<string>\",\n                        \"interval\": \"<integer>\",\n                        \"month\": \"<string>\",\n                        \"startTime\": \"<dateTime>\",\n                        \"weekDays\": [\n                            \"<string>\"\n                        ],\n                        \"weekOfMonth\": \"<integer>\"\n                    },\n                    \"type\": \"<string>\"\n                }\n            ],\n            \"options\": {\n                \"promotionType\": \"<string>\",\n                \"skipSimpleDatabase\": \"<boolean>\"\n            },\n            \"retention\": {\n                \"interval\": \"<integer>\",\n                \"unit\": \"<string>\",\n                \"storageSystemRetentionLock\": \"<boolean>\"\n            },\n            \"slaId\": \"<string>\",\n            \"sourceStageId\": \"<string>\",\n            \"target\": {\n                \"storageSystemId\": \"<string>\",\n                \"dataTargetId\": \"<string>\",\n                \"hardCapacityQuotaLevel\": \"<long>\",\n                \"hardStreamQuotaLevel\": \"<long>\",\n                \"preferredInterface\": \"<string>\",\n                \"softCapacityQuotaLevel\": \"<long>\",\n                \"softStreamQuotaLevel\": \"<long>\"\n            }\n        },\n        {\n            \"id\": \"<string>\",\n            \"type\": \"<string>\",\n            \"passive\": \"<boolean>\",\n            \"attributes\": {\n                \"cloudTier\": {\n                    \"cloudUnit\": {\n                        \"id\": \"<string>\",\n                        \"name\": \"<string>\"\n                    },\n                    \"tierAfter\": {\n                        \"interval\": \"<integer>\",\n                        \"unit\": \"<string>\"\n                    }\n                },\n                \"exchange\": {\n                    \"consistencyCheck\": \"<string>\",\n                    \"troubleShootingOption\": \"<string>\"\n                },\n                \"fileSystem\": {\n                    \"troubleShootingOption\": \"<string>\"\n                },\n                \"mssql\": {\n                    \"autoPromote\": \"<boolean>\",\n                    \"backUpExpirationDays\": \"<integer>\",\n                    \"excludeSystemDatabase\": \"<boolean>\",\n                    \"parallelism\": \"<integer>\",\n                    \"troubleShootingOption\": \"<string>\"\n                },\n                \"oracle\": {\n                    \"archiveLogDeletionDays\": \"<integer>\",\n                    \"parallelism\": \"<integer>\",\n                    \"troubleShootingOption\": \"<string>\"\n                },\n                \"protection\": {\n                    \"backupMode\": \"<string>\",\n                    \"forceFullRules\": [\n                        \"<string>\"\n                    ]\n                },\n                \"sapHana\": {\n                    \"troubleShootingOption\": \"<string>\"\n                },\n                \"vm\": {\n                    \"appConsistentProtection\": \"<boolean>\",\n                    \"dataMoverType\": \"<string>\",\n                    \"disableQuiescing\": \"<boolean>\",\n                    \"excludeSwapFiles\": \"<boolean>\"\n                },\n                \"vmax\": {\n                    \"postSnapshotFileName\": \"<string>\",\n                    \"preSnapshotFileName\": \"<string>\"\n                }\n            },\n            \"operations\": [\n                {\n                    \"backupType\": \"<string>\",\n                    \"schedule\": {\n                        \"dayOfMonth\": \"<integer>\",\n                        \"duration\": \"<string>\",\n                        \"frequency\": \"<string>\",\n                        \"genericDay\": \"<string>\",\n                        \"interval\": \"<integer>\",\n                        \"month\": \"<string>\",\n                        \"startTime\": \"<dateTime>\",\n                        \"weekDays\": [\n                            \"<string>\"\n                        ],\n                        \"weekOfMonth\": \"<integer>\"\n                    },\n                    \"type\": \"<string>\"\n                }\n            ],\n            \"options\": {\n                \"promotionType\": \"<string>\",\n                \"skipSimpleDatabase\": \"<boolean>\"\n            },\n            \"retention\": {\n                \"interval\": \"<integer>\",\n                \"unit\": \"<string>\",\n                \"storageSystemRetentionLock\": \"<boolean>\"\n            },\n            \"slaId\": \"<string>\",\n            \"sourceStageId\": \"<string>\",\n            \"target\": {\n                \"storageSystemId\": \"<string>\",\n                \"dataTargetId\": \"<string>\",\n                \"hardCapacityQuotaLevel\": \"<long>\",\n                \"hardStreamQuotaLevel\": \"<long>\",\n                \"preferredInterface\": \"<string>\",\n                \"softCapacityQuotaLevel\": \"<long>\",\n                \"softStreamQuotaLevel\": \"<long>\"\n            }\n        }\n    ],\n    \"summary\": {\n        \"lastExecutionStatus\": \"<string>\",\n        \"totalAssetCapacity\": \"<double>\",\n        \"totalAssetProtectionCapacity\": \"<double>\"\n    },\n    \"targetStorageProvisionStrategy\": \"<string>\",\n    \"updatedAt\": \"<dateTime>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/protection-policies",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"protection-policies"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "Successfully created the protection policy.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"assetType\": \"<string>\",\n    \"type\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"priority\": \"<integer>\",\n    \"encrypted\": \"<boolean>\",\n    \"complianceInterval\": \"<string>\",\n    \"createdAt\": \"<dateTime>\",\n    \"credentials\": {\n        \"id\": \"<string>\",\n        \"type\": \"<string>\"\n    },\n    \"dataConsistency\": \"<string>\",\n    \"description\": \"<string>\",\n    \"details\": {\n        \"oracle\": {\n            \"dbConnection\": {\n                \"tnsAdmin\": \"<string>\",\n                \"tnsName\": \"<string>\"\n            },\n            \"rmanConnection\": {\n                \"credentialId\": \"<string>\",\n                \"tnsAdmin\": \"<string>\",\n                \"tnsName\": \"<string>\",\n                \"type\": \"<string>\"\n            }\n        },\n        \"vm\": {\n            \"metadataIndexingEnabled\": \"<boolean>\",\n            \"protectionEngine\": \"<string>\"\n        }\n    },\n    \"filterIds\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"forceFull\": \"<boolean>\",\n    \"passive\": \"<boolean>\",\n    \"slaId\": \"<string>\",\n    \"stages\": [\n        {\n            \"id\": \"<string>\",\n            \"type\": \"<string>\",\n            \"passive\": \"<boolean>\",\n            \"attributes\": {\n                \"cloudTier\": {\n                    \"cloudUnit\": {\n                        \"id\": \"<string>\",\n                        \"name\": \"<string>\"\n                    },\n                    \"tierAfter\": {\n                        \"interval\": \"<integer>\",\n                        \"unit\": \"<string>\"\n                    }\n                },\n                \"exchange\": {\n                    \"consistencyCheck\": \"<string>\",\n                    \"troubleShootingOption\": \"<string>\"\n                },\n                \"fileSystem\": {\n                    \"troubleShootingOption\": \"<string>\"\n                },\n                \"mssql\": {\n                    \"autoPromote\": \"<boolean>\",\n                    \"backUpExpirationDays\": \"<integer>\",\n                    \"excludeSystemDatabase\": \"<boolean>\",\n                    \"parallelism\": \"<integer>\",\n                    \"troubleShootingOption\": \"<string>\"\n                },\n                \"oracle\": {\n                    \"archiveLogDeletionDays\": \"<integer>\",\n                    \"parallelism\": \"<integer>\",\n                    \"troubleShootingOption\": \"<string>\"\n                },\n                \"protection\": {\n                    \"backupMode\": \"<string>\",\n                    \"forceFullRules\": [\n                        \"<string>\"\n                    ]\n                },\n                \"sapHana\": {\n                    \"troubleShootingOption\": \"<string>\"\n                },\n                \"vm\": {\n                    \"appConsistentProtection\": \"<boolean>\",\n                    \"dataMoverType\": \"<string>\",\n                    \"disableQuiescing\": \"<boolean>\",\n                    \"excludeSwapFiles\": \"<boolean>\"\n                },\n                \"vmax\": {\n                    \"postSnapshotFileName\": \"<string>\",\n                    \"preSnapshotFileName\": \"<string>\"\n                }\n            },\n            \"operations\": [\n                {\n                    \"backupType\": \"<string>\",\n                    \"schedule\": {\n                        \"dayOfMonth\": \"<integer>\",\n                        \"duration\": \"<string>\",\n                        \"frequency\": \"<string>\",\n                        \"genericDay\": \"<string>\",\n                        \"interval\": \"<integer>\",\n                        \"month\": \"<string>\",\n                        \"startTime\": \"<dateTime>\",\n                        \"weekDays\": [\n                            \"<string>\"\n                        ],\n                        \"weekOfMonth\": \"<integer>\"\n                    },\n                    \"type\": \"<string>\"\n                }\n            ],\n            \"options\": {\n                \"promotionType\": \"<string>\",\n                \"skipSimpleDatabase\": \"<boolean>\"\n            },\n            \"retention\": {\n                \"interval\": \"<integer>\",\n                \"unit\": \"<string>\",\n                \"storageSystemRetentionLock\": \"<boolean>\"\n            },\n            \"slaId\": \"<string>\",\n            \"sourceStageId\": \"<string>\",\n            \"target\": {\n                \"storageSystemId\": \"<string>\",\n                \"dataTargetId\": \"<string>\",\n                \"hardCapacityQuotaLevel\": \"<long>\",\n                \"hardStreamQuotaLevel\": \"<long>\",\n                \"preferredInterface\": \"<string>\",\n                \"softCapacityQuotaLevel\": \"<long>\",\n                \"softStreamQuotaLevel\": \"<long>\"\n            }\n        },\n        {\n            \"id\": \"<string>\",\n            \"type\": \"<string>\",\n            \"passive\": \"<boolean>\",\n            \"attributes\": {\n                \"cloudTier\": {\n                    \"cloudUnit\": {\n                        \"id\": \"<string>\",\n                        \"name\": \"<string>\"\n                    },\n                    \"tierAfter\": {\n                        \"interval\": \"<integer>\",\n                        \"unit\": \"<string>\"\n                    }\n                },\n                \"exchange\": {\n                    \"consistencyCheck\": \"<string>\",\n                    \"troubleShootingOption\": \"<string>\"\n                },\n                \"fileSystem\": {\n                    \"troubleShootingOption\": \"<string>\"\n                },\n                \"mssql\": {\n                    \"autoPromote\": \"<boolean>\",\n                    \"backUpExpirationDays\": \"<integer>\",\n                    \"excludeSystemDatabase\": \"<boolean>\",\n                    \"parallelism\": \"<integer>\",\n                    \"troubleShootingOption\": \"<string>\"\n                },\n                \"oracle\": {\n                    \"archiveLogDeletionDays\": \"<integer>\",\n                    \"parallelism\": \"<integer>\",\n                    \"troubleShootingOption\": \"<string>\"\n                },\n                \"protection\": {\n                    \"backupMode\": \"<string>\",\n                    \"forceFullRules\": [\n                        \"<string>\"\n                    ]\n                },\n                \"sapHana\": {\n                    \"troubleShootingOption\": \"<string>\"\n                },\n                \"vm\": {\n                    \"appConsistentProtection\": \"<boolean>\",\n                    \"dataMoverType\": \"<string>\",\n                    \"disableQuiescing\": \"<boolean>\",\n                    \"excludeSwapFiles\": \"<boolean>\"\n                },\n                \"vmax\": {\n                    \"postSnapshotFileName\": \"<string>\",\n                    \"preSnapshotFileName\": \"<string>\"\n                }\n            },\n            \"operations\": [\n                {\n                    \"backupType\": \"<string>\",\n                    \"schedule\": {\n                        \"dayOfMonth\": \"<integer>\",\n                        \"duration\": \"<string>\",\n                        \"frequency\": \"<string>\",\n                        \"genericDay\": \"<string>\",\n                        \"interval\": \"<integer>\",\n                        \"month\": \"<string>\",\n                        \"startTime\": \"<dateTime>\",\n                        \"weekDays\": [\n                            \"<string>\"\n                        ],\n                        \"weekOfMonth\": \"<integer>\"\n                    },\n                    \"type\": \"<string>\"\n                }\n            ],\n            \"options\": {\n                \"promotionType\": \"<string>\",\n                \"skipSimpleDatabase\": \"<boolean>\"\n            },\n            \"retention\": {\n                \"interval\": \"<integer>\",\n                \"unit\": \"<string>\",\n                \"storageSystemRetentionLock\": \"<boolean>\"\n            },\n            \"slaId\": \"<string>\",\n            \"sourceStageId\": \"<string>\",\n            \"target\": {\n                \"storageSystemId\": \"<string>\",\n                \"dataTargetId\": \"<string>\",\n                \"hardCapacityQuotaLevel\": \"<long>\",\n                \"hardStreamQuotaLevel\": \"<long>\",\n                \"preferredInterface\": \"<string>\",\n                \"softCapacityQuotaLevel\": \"<long>\",\n                \"softStreamQuotaLevel\": \"<long>\"\n            }\n        }\n    ],\n    \"summary\": {\n        \"lastExecutionStatus\": \"<string>\",\n        \"totalAssetCapacity\": \"<double>\",\n        \"totalAssetProtectionCapacity\": \"<double>\"\n    },\n    \"targetStorageProvisionStrategy\": \"<string>\",\n    \"updatedAt\": \"<dateTime>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/protection-policies",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"protection-policies"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"id\": \"ullamco tempor cillum\",\n \"name\": \"Duis\",\n \"assetType\": \"SAP_HANA_DATABASE\",\n \"type\": \"ACTIVE\",\n \"enabled\": false,\n \"priority\": 17010214,\n \"encrypted\": true,\n \"complianceInterval\": \"minim ut\",\n \"createdAt\": \"1952-05-01T15:40:11.760Z\",\n \"credentials\": {\n  \"id\": \"mollit ex\",\n  \"type\": \"VCENTER\"\n },\n \"dataConsistency\": \"CRASH_CONSISTENT\",\n \"description\": \"consectetur in aute dolor\",\n \"details\": {\n  \"oracle\": {\n   \"dbConnection\": {\n    \"tnsAdmin\": \"sed veniam in nulla aliquip\",\n    \"tnsName\": \"Duis consectetur fugiat incididun\"\n   },\n   \"rmanConnection\": {\n    \"credentialId\": \"ex non occaecat\",\n    \"tnsAdmin\": \"Excepteur nulla in qui\",\n    \"tnsName\": \"cillum Lorem\",\n    \"type\": \"DBUSER\"\n   }\n  },\n  \"vm\": {\n   \"metadataIndexingEnabled\": false,\n   \"protectionEngine\": \"HYPERVISORDIRECT\"\n  }\n },\n \"filterIds\": [\n  \"do Ut culpa\",\n  \"sit aute\"\n ],\n \"forceFull\": false,\n \"passive\": false,\n \"slaId\": \"minim aliquip\",\n \"stages\": [\n  {\n   \"id\": \"in enim irure te\",\n   \"type\": \"CLOUD_TIER\",\n   \"passive\": false,\n   \"attributes\": {\n    \"cloudTier\": {\n     \"cloudUnit\": {\n      \"id\": \"laborum cillum aute culpa ea\",\n      \"name\": \"magna in cupidatat quis\"\n     },\n     \"tierAfter\": {\n      \"interval\": 81991435,\n      \"unit\": \"YEAR\"\n     }\n    },\n    \"exchange\": {\n     \"consistencyCheck\": \"DATABASE_ONLY\",\n     \"troubleShootingOption\": \"eiusmod voluptate aute Ut\"\n    },\n    \"fileSystem\": {\n     \"troubleShootingOption\": \"consectetur est\"\n    },\n    \"mssql\": {\n     \"autoPromote\": true,\n     \"backUpExpirationDays\": 25612941,\n     \"excludeSystemDatabase\": true,\n     \"parallelism\": 71932116,\n     \"troubleShootingOption\": \"Lorem dolor deserunt\"\n    },\n    \"oracle\": {\n     \"archiveLogDeletionDays\": 41939476,\n     \"parallelism\": 91805702,\n     \"troubleShootingOption\": \"adipisicing quis laborum\"\n    },\n    \"protection\": {\n     \"backupMode\": \"FSS\",\n     \"forceFullRules\": [\n      \"VSO_NODE_FAILURE\"\n     ]\n    },\n    \"sapHana\": {\n     \"troubleShootingOption\": \"sunt id enim labore\"\n    },\n    \"vm\": {\n     \"appConsistentProtection\": false,\n     \"dataMoverType\": \"INHERIT_FROM_POLICY\",\n     \"disableQuiescing\": false,\n     \"excludeSwapFiles\": false\n    },\n    \"vmax\": {\n     \"postSnapshotFileName\": \"ipsum velit\",\n     \"preSnapshotFileName\": \"minim qui\"\n    }\n   },\n   \"operations\": [\n    {\n     \"backupType\": \"CUMULATIVE\",\n     \"schedule\": {\n      \"dayOfMonth\": 43672457,\n      \"duration\": \"tempor Excepteur dolor Ut\",\n      \"frequency\": \"DAILY\",\n      \"genericDay\": \"FIRST\",\n      \"interval\": 53616212,\n      \"month\": \"JUNE\",\n      \"startTime\": \"1987-03-14T20:22:29.581Z\",\n      \"weekDays\": [\n       \"SUNDAY\",\n       \"SATURDAY\"\n      ],\n      \"weekOfMonth\": 53753069\n     },\n     \"type\": \"AUTO_FULL\"\n    },\n    {\n     \"backupType\": \"LOG\",\n     \"schedule\": {\n      \"dayOfMonth\": 71945943,\n      \"duration\": \"reprehenderit laboris\",\n      \"frequency\": \"WEEKLY\",\n      \"genericDay\": \"LAST\",\n      \"interval\": -20955454,\n      \"month\": \"JANUARY\",\n      \"startTime\": \"1962-06-25T00:46:56.271Z\",\n      \"weekDays\": [\n       \"WEDNESDAY\",\n       \"FRIDAY\"\n      ],\n      \"weekOfMonth\": -8514081\n     },\n     \"type\": \"LOG\"\n    }\n   ],\n   \"options\": {\n    \"promotionType\": \"NONE\",\n    \"skipSimpleDatabase\": false\n   },\n   \"retention\": {\n    \"interval\": 58695242,\n    \"unit\": \"WEEK\",\n    \"storageSystemRetentionLock\": true\n   },\n   \"slaId\": \"eiusmod commodo deserunt cupidatat exercitation\",\n   \"sourceStageId\": \"labore anim consectetur\",\n   \"target\": {\n    \"storageSystemId\": \"v\",\n    \"dataTargetId\": \"velit ea reprehenderit consequat\",\n    \"hardCapacityQuotaLevel\": 27465154,\n    \"hardStreamQuotaLevel\": 63985239,\n    \"preferredInterface\": \"ad Ut\",\n    \"softCapacityQuotaLevel\": 53973756,\n    \"softStreamQuotaLevel\": -25500763\n   }\n  },\n  {\n   \"id\": \"commodo ut\",\n   \"type\": \"PROMOTION\",\n   \"passive\": false,\n   \"attributes\": {\n    \"cloudTier\": {\n     \"cloudUnit\": {\n      \"id\": \"veniam est mollit\",\n      \"name\": \"deserunt\"\n     },\n     \"tierAfter\": {\n      \"interval\": 18647843,\n      \"unit\": \"YEAR\"\n     }\n    },\n    \"exchange\": {\n     \"consistencyCheck\": \"LOGS_ONLY\",\n     \"troubleShootingOption\": \"ipsum ullamco elit\"\n    },\n    \"fileSystem\": {\n     \"troubleShootingOption\": \"ex reprehenderit commodo Duis\"\n    },\n    \"mssql\": {\n     \"autoPromote\": true,\n     \"backUpExpirationDays\": 13645530,\n     \"excludeSystemDatabase\": false,\n     \"parallelism\": -29138322,\n     \"troubleShootingOption\": \"eu quis\"\n    },\n    \"oracle\": {\n     \"archiveLogDeletionDays\": 52711163,\n     \"parallelism\": -95692492,\n     \"troubleShootingOption\": \"ut\"\n    },\n    \"protection\": {\n     \"backupMode\": \"VSS\",\n     \"forceFullRules\": [\n      \"VSO_NODE_FAILURE\"\n     ]\n    },\n    \"sapHana\": {\n     \"troubleShootingOption\": \"mollit anim sunt non\"\n    },\n    \"vm\": {\n     \"appConsistentProtection\": false,\n     \"dataMoverType\": \"INHERIT_FROM_POLICY\",\n     \"disableQuiescing\": false,\n     \"excludeSwapFiles\": false\n    },\n    \"vmax\": {\n     \"postSnapshotFileName\": \"commodo in\",\n     \"preSnapshotFileName\": \"co\"\n    }\n   },\n   \"operations\": [\n    {\n     \"backupType\": \"SYNTHETIC_FULL\",\n     \"schedule\": {\n      \"dayOfMonth\": 10722047,\n      \"duration\": \"ex Lorem voluptate\",\n      \"frequency\": \"DAILY\",\n      \"genericDay\": \"LAST\",\n      \"interval\": 74523778,\n      \"month\": \"MARCH\",\n      \"startTime\": \"1950-03-18T15:42:46.230Z\",\n      \"weekDays\": [\n       \"TUESDAY\",\n       \"MONDAY\"\n      ],\n      \"weekOfMonth\": 62893767\n     },\n     \"type\": \"AUTO_FULL\"\n    },\n    {\n     \"backupType\": \"SYNTHETIC_FULL\",\n     \"schedule\": {\n      \"dayOfMonth\": 38838331,\n      \"duration\": \"nisi enim\",\n      \"frequency\": \"YEARLY\",\n      \"genericDay\": \"LAST\",\n      \"interval\": -19861406,\n      \"month\": \"DECEMBER\",\n      \"startTime\": \"2014-07-06T07:11:20.681Z\",\n      \"weekDays\": [\n       \"FRIDAY\",\n       \"SATURDAY\"\n      ],\n      \"weekOfMonth\": 19958370\n     },\n     \"type\": \"INCREMENTAL\"\n    }\n   ],\n   \"options\": {\n    \"promotionType\": \"NONE_WITH_WARNINGS\",\n    \"skipSimpleDatabase\": true\n   },\n   \"retention\": {\n    \"interval\": 9342609,\n    \"unit\": \"YEAR\",\n    \"storageSystemRetentionLock\": false\n   },\n   \"slaId\": \"nisi pariatur aliquip do esse\",\n   \"sourceStageId\": \"et \",\n   \"target\": {\n    \"storageSystemId\": \"sunt laborum ad ipsum\",\n    \"dataTargetId\": \"esse Ut ea consequat\",\n    \"hardCapacityQuotaLevel\": -19576563,\n    \"hardStreamQuotaLevel\": 70652732,\n    \"preferredInterface\": \"dolore mollit\",\n    \"softCapacityQuotaLevel\": 17754500,\n    \"softStreamQuotaLevel\": 55606710\n   }\n  }\n ],\n \"summary\": {\n  \"lastExecutionStatus\": \"IDLE\",\n  \"numberOfAssets\": 21153101,\n  \"numberOfJobFailures\": 99465142,\n  \"numberOfSlaFailures\": 92971705,\n  \"numberOfSlaSuccess\": -1567924,\n  \"totalAssetCapacity\": -62332054.660262816,\n  \"totalAssetProtectionCapacity\": -31545874.216773346\n },\n \"targetStorageProvisionStrategy\": \"AUTO_PROVISION\",\n \"updatedAt\": \"1982-02-22T01:31:22.368Z\"\n}"
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "protection-rules",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Delete protection rule by ID.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/protection-rules/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"protection-rules",
												":id"
											],
											"variable": [
												{
													"id": "8a3c7362-b55c-4761-b2de-31ead4bb973d",
													"key": "id",
													"value": "<string>",
													"type": "string",
													"description": "(Required) ID of the protection rule."
												}
											]
										},
										"description": "Deletes protection rule by specified ID.\n> This endpoint supports execution by the following roles: admin\n"
									},
									"response": [
										{
											"name": "The request is not valid.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/protection-rules/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"protection-rules",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "Successfully deleted the protection rule.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/protection-rules/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"protection-rules",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The requestor is not allowed to perform this operation.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/protection-rules/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"protection-rules",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/protection-rules/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"protection-rules",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/protection-rules/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"protection-rules",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										}
									]
								},
								{
									"name": "Get a protection rule by ID.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/protection-rules/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"protection-rules",
												":id"
											],
											"variable": [
												{
													"id": "c948048b-c62d-44c6-a65a-8b3dbd01e1f2",
													"key": "id",
													"value": "<string>",
													"type": "string",
													"description": "(Required) ID of the protection rule."
												}
											]
										},
										"description": "Retrieves a protection rule by ID.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
									},
									"response": [
										{
											"name": "Successfully returned the protection rule.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/protection-rules/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"protection-rules",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"name\": \"nulla enim\",\n \"action\": \"MOVE_TO_GROUP\",\n \"actionResult\": \"ut laborum\",\n \"conditions\": [\n  {\n   \"inclusionIndicator\": \"BEGINS_WITH\",\n   \"inventorySourceAttribute\": \"culpa ipsum ad commodo\",\n   \"inventorySourceAttributeCompareValue\": \"magna\"\n  },\n  {\n   \"inclusionIndicator\": \"LESS_THAN\",\n   \"inventorySourceAttribute\": \"Lorem culpa elit deserunt nulla\",\n   \"inventorySourceAttributeCompareValue\": \"nulla elit dolore est\"\n  }\n ],\n \"conditionConnector\": \"AND\",\n \"inventorySourceType\": \"MICROSOFT_SQL_DATABASE\",\n \"priority\": -52478585,\n \"_embedded\": {\n  \"protectionPolicy\": {\n   \"id\": \"quis magna officia do\",\n   \"name\": \"consectetur\",\n   \"protectionEngine\": \"enim ut est fugiat\",\n   \"type\": \"n\"\n  },\n  \"protectionlifeCycle\": {\n   \"id\": \"sunt quis\",\n   \"name\": \"irure elit deserunt\",\n   \"protectionEngine\": \"ad Duis\",\n   \"type\": \"velit qui\"\n  },\n  \"storageSystem\": {\n   \"id\": \"dolor in Excepteur sit\",\n   \"name\": \"esse minim\"\n  }\n },\n \"assignedAssetsCount\": 9158082,\n \"description\": \"sunt et veniam culpa in\",\n \"displayDescription\": \"ut\",\n \"id\": \"ipsum nostrud reprehenderit\",\n \"lastRunAt\": \"1979-04-30T15:19:34.435Z\",\n \"managedBy\": \"null\",\n \"tenant\": {\n  \"id\": \"ullamco Ut\"\n }\n}"
										},
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/protection-rules/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"protection-rules",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The request is not valid.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/protection-rules/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"protection-rules",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The requested protection rule does not exist.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/protection-rules/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"protection-rules",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The requestor is not allowed to perform this operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/protection-rules/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"protection-rules",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/protection-rules/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"protection-rules",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										}
									]
								},
								{
									"name": "Update protection rule by ID.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"<string>\",\n    \"action\": \"<string>\",\n    \"actionResult\": \"<string>\",\n    \"conditions\": [\n        {\n            \"inclusionIndicator\": \"<string>\",\n            \"inventorySourceAttribute\": \"<string>\",\n            \"inventorySourceAttributeCompareValue\": \"<string>\"\n        },\n        {\n            \"inclusionIndicator\": \"<string>\",\n            \"inventorySourceAttribute\": \"<string>\",\n            \"inventorySourceAttributeCompareValue\": \"<string>\"\n        }\n    ],\n    \"conditionConnector\": \"<string>\",\n    \"inventorySourceType\": \"<string>\",\n    \"priority\": \"<integer>\",\n    \"assignedAssetsCount\": \"<integer>\",\n    \"description\": \"<string>\",\n    \"displayDescription\": \"<string>\",\n    \"id\": \"<string>\",\n    \"lastRunAt\": \"<dateTime>\",\n    \"managedBy\": \"null\",\n    \"tenant\": {\n        \"id\": \"<string>\"\n    }\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/protection-rules/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"protection-rules",
												":id"
											],
											"variable": [
												{
													"id": "84b42019-1fad-437c-bc7e-93fd69b29408",
													"key": "id",
													"value": "<string>",
													"type": "string",
													"description": "(Required) ID of the protection rule."
												}
											]
										},
										"description": "Update protection rule by ID.\n> This endpoint supports execution by the following roles: admin\n"
									},
									"response": [
										{
											"name": "Successfully updated the protection rule.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"<string>\",\n    \"action\": \"<string>\",\n    \"actionResult\": \"<string>\",\n    \"conditions\": [\n        {\n            \"inclusionIndicator\": \"<string>\",\n            \"inventorySourceAttribute\": \"<string>\",\n            \"inventorySourceAttributeCompareValue\": \"<string>\"\n        },\n        {\n            \"inclusionIndicator\": \"<string>\",\n            \"inventorySourceAttribute\": \"<string>\",\n            \"inventorySourceAttributeCompareValue\": \"<string>\"\n        }\n    ],\n    \"conditionConnector\": \"<string>\",\n    \"inventorySourceType\": \"<string>\",\n    \"priority\": \"<integer>\",\n    \"assignedAssetsCount\": \"<integer>\",\n    \"description\": \"<string>\",\n    \"displayDescription\": \"<string>\",\n    \"id\": \"<string>\",\n    \"lastRunAt\": \"<dateTime>\",\n    \"managedBy\": \"null\",\n    \"tenant\": {\n        \"id\": \"<string>\"\n    }\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/protection-rules/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"protection-rules",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"name\": \"nulla enim\",\n \"action\": \"MOVE_TO_GROUP\",\n \"actionResult\": \"ut laborum\",\n \"conditions\": [\n  {\n   \"inclusionIndicator\": \"BEGINS_WITH\",\n   \"inventorySourceAttribute\": \"culpa ipsum ad commodo\",\n   \"inventorySourceAttributeCompareValue\": \"magna\"\n  },\n  {\n   \"inclusionIndicator\": \"LESS_THAN\",\n   \"inventorySourceAttribute\": \"Lorem culpa elit deserunt nulla\",\n   \"inventorySourceAttributeCompareValue\": \"nulla elit dolore est\"\n  }\n ],\n \"conditionConnector\": \"AND\",\n \"inventorySourceType\": \"MICROSOFT_SQL_DATABASE\",\n \"priority\": -52478585,\n \"_embedded\": {\n  \"protectionPolicy\": {\n   \"id\": \"quis magna officia do\",\n   \"name\": \"consectetur\",\n   \"protectionEngine\": \"enim ut est fugiat\",\n   \"type\": \"n\"\n  },\n  \"protectionlifeCycle\": {\n   \"id\": \"sunt quis\",\n   \"name\": \"irure elit deserunt\",\n   \"protectionEngine\": \"ad Duis\",\n   \"type\": \"velit qui\"\n  },\n  \"storageSystem\": {\n   \"id\": \"dolor in Excepteur sit\",\n   \"name\": \"esse minim\"\n  }\n },\n \"assignedAssetsCount\": 9158082,\n \"description\": \"sunt et veniam culpa in\",\n \"displayDescription\": \"ut\",\n \"id\": \"ipsum nostrud reprehenderit\",\n \"lastRunAt\": \"1979-04-30T15:19:34.435Z\",\n \"managedBy\": \"null\",\n \"tenant\": {\n  \"id\": \"ullamco Ut\"\n }\n}"
										},
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"<string>\",\n    \"action\": \"<string>\",\n    \"actionResult\": \"<string>\",\n    \"conditions\": [\n        {\n            \"inclusionIndicator\": \"<string>\",\n            \"inventorySourceAttribute\": \"<string>\",\n            \"inventorySourceAttributeCompareValue\": \"<string>\"\n        },\n        {\n            \"inclusionIndicator\": \"<string>\",\n            \"inventorySourceAttribute\": \"<string>\",\n            \"inventorySourceAttributeCompareValue\": \"<string>\"\n        }\n    ],\n    \"conditionConnector\": \"<string>\",\n    \"inventorySourceType\": \"<string>\",\n    \"priority\": \"<integer>\",\n    \"assignedAssetsCount\": \"<integer>\",\n    \"description\": \"<string>\",\n    \"displayDescription\": \"<string>\",\n    \"id\": \"<string>\",\n    \"lastRunAt\": \"<dateTime>\",\n    \"managedBy\": \"null\",\n    \"tenant\": {\n        \"id\": \"<string>\"\n    }\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/protection-rules/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"protection-rules",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"<string>\",\n    \"action\": \"<string>\",\n    \"actionResult\": \"<string>\",\n    \"conditions\": [\n        {\n            \"inclusionIndicator\": \"<string>\",\n            \"inventorySourceAttribute\": \"<string>\",\n            \"inventorySourceAttributeCompareValue\": \"<string>\"\n        },\n        {\n            \"inclusionIndicator\": \"<string>\",\n            \"inventorySourceAttribute\": \"<string>\",\n            \"inventorySourceAttributeCompareValue\": \"<string>\"\n        }\n    ],\n    \"conditionConnector\": \"<string>\",\n    \"inventorySourceType\": \"<string>\",\n    \"priority\": \"<integer>\",\n    \"assignedAssetsCount\": \"<integer>\",\n    \"description\": \"<string>\",\n    \"displayDescription\": \"<string>\",\n    \"id\": \"<string>\",\n    \"lastRunAt\": \"<dateTime>\",\n    \"managedBy\": \"null\",\n    \"tenant\": {\n        \"id\": \"<string>\"\n    }\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/protection-rules/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"protection-rules",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The requestor is not allowed to perform this operation.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"<string>\",\n    \"action\": \"<string>\",\n    \"actionResult\": \"<string>\",\n    \"conditions\": [\n        {\n            \"inclusionIndicator\": \"<string>\",\n            \"inventorySourceAttribute\": \"<string>\",\n            \"inventorySourceAttributeCompareValue\": \"<string>\"\n        },\n        {\n            \"inclusionIndicator\": \"<string>\",\n            \"inventorySourceAttribute\": \"<string>\",\n            \"inventorySourceAttributeCompareValue\": \"<string>\"\n        }\n    ],\n    \"conditionConnector\": \"<string>\",\n    \"inventorySourceType\": \"<string>\",\n    \"priority\": \"<integer>\",\n    \"assignedAssetsCount\": \"<integer>\",\n    \"description\": \"<string>\",\n    \"displayDescription\": \"<string>\",\n    \"id\": \"<string>\",\n    \"lastRunAt\": \"<dateTime>\",\n    \"managedBy\": \"null\",\n    \"tenant\": {\n        \"id\": \"<string>\"\n    }\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/protection-rules/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"protection-rules",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The request is not valid.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"<string>\",\n    \"action\": \"<string>\",\n    \"actionResult\": \"<string>\",\n    \"conditions\": [\n        {\n            \"inclusionIndicator\": \"<string>\",\n            \"inventorySourceAttribute\": \"<string>\",\n            \"inventorySourceAttributeCompareValue\": \"<string>\"\n        },\n        {\n            \"inclusionIndicator\": \"<string>\",\n            \"inventorySourceAttribute\": \"<string>\",\n            \"inventorySourceAttributeCompareValue\": \"<string>\"\n        }\n    ],\n    \"conditionConnector\": \"<string>\",\n    \"inventorySourceType\": \"<string>\",\n    \"priority\": \"<integer>\",\n    \"assignedAssetsCount\": \"<integer>\",\n    \"description\": \"<string>\",\n    \"displayDescription\": \"<string>\",\n    \"id\": \"<string>\",\n    \"lastRunAt\": \"<dateTime>\",\n    \"managedBy\": \"null\",\n    \"tenant\": {\n        \"id\": \"<string>\"\n    }\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/protection-rules/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"protection-rules",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Get all protection rules.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/protection-rules?page=1&pageSize=100&filter=<string>&orderby=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"protection-rules"
									],
									"query": [
										{
											"key": "page",
											"value": "1",
											"description": "The page number to be returned. Must not be less than 1. See Tutorials - Page the List Result."
										},
										{
											"key": "pageSize",
											"value": "100",
											"description": "The number of resources to be returned. Must not be less than 1. See Tutorials - Page the List Result."
										},
										{
											"key": "filter",
											"value": "<string>",
											"description": "The filter string that is expressed using PowerProtect Data Manager filter syntax. See Tutorials - Filter the List Result."
										},
										{
											"key": "orderby",
											"value": "<string>",
											"description": "The attributes/fields to be sorted by. This parameter can combine with sort direction \"ASC\" or \"DESC\". Default direction is ASC. See Tutorials - Sort the List Result."
										}
									]
								},
								"description": "Retrieves all protection rules\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
							},
							"response": [
								{
									"name": "The requestor is not authorized to perform this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/protection-rules?page=1&pageSize=100&filter=<string>&orderby=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"protection-rules"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "<string>"
												},
												{
													"key": "orderby",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "The request is not valid.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/protection-rules?page=1&pageSize=100&filter=<string>&orderby=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"protection-rules"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "<string>"
												},
												{
													"key": "orderby",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "An unexpected error prevented the server from fulfilling your request.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/protection-rules?page=1&pageSize=100&filter=<string>&orderby=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"protection-rules"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "<string>"
												},
												{
													"key": "orderby",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "The requestor is not allowed to perform this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/protection-rules?page=1&pageSize=100&filter=<string>&orderby=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"protection-rules"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "<string>"
												},
												{
													"key": "orderby",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "Successfully returned available protection rules.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/protection-rules?page=1&pageSize=100&filter=<string>&orderby=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"protection-rules"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "<string>"
												},
												{
													"key": "orderby",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"content\": [\n  {\n   \"name\": \"qui cillum\",\n   \"action\": \"NOT_SUPPORTED\",\n   \"actionResult\": \"pariatur deserunt dolore\",\n   \"conditions\": [\n    {\n     \"inclusionIndicator\": \"ENDS_WITH\",\n     \"inventorySourceAttribute\": \"reprehenderit est\",\n     \"inventorySourceAttributeCompareValue\": \"ullamco eu\"\n    },\n    {\n     \"inclusionIndicator\": \"BEGINS_WITH\",\n     \"inventorySourceAttribute\": \"incididunt eiusmod aliquip\",\n     \"inventorySourceAttributeCompareValue\": \"\"\n    }\n   ],\n   \"conditionConnector\": \"AND\",\n   \"inventorySourceType\": \"MICROSOFT_EXCHANGE_DATABASE\",\n   \"priority\": 81116914,\n   \"_embedded\": {\n    \"protectionPolicy\": {\n     \"id\": \"aliqua consequat\",\n     \"name\": \"tempor reprehenderit Ut ad\",\n     \"protectionEngine\": \"deserunt reprehenderit\",\n     \"type\": \"ven\"\n    },\n    \"protectionlifeCycle\": {\n     \"id\": \"ex exercitation mollit id\",\n     \"name\": \"exercitation do consectetur\",\n     \"protectionEngine\": \"id commodo sed quis\",\n     \"type\": \"deserunt enim\"\n    },\n    \"storageSystem\": {\n     \"id\": \"in et irure voluptate velit\",\n     \"name\": \"consectetur\"\n    }\n   },\n   \"assignedAssetsCount\": 43801243,\n   \"description\": \"sed ullamco\",\n   \"displayDescription\": \"reprehenderit culpa\",\n   \"id\": \"labore Duis\",\n   \"lastRunAt\": \"1993-05-17T10:38:47.446Z\",\n   \"managedBy\": \"null\",\n   \"tenant\": {\n    \"id\": \"laborum ea est adipisicing nostrud\"\n   }\n  },\n  {\n   \"name\": \"elit consectetur veniam\",\n   \"action\": \"NOT_SUPPORTED\",\n   \"actionResult\": \"magna nulla\",\n   \"conditions\": [\n    {\n     \"inclusionIndicator\": \"GREATER_THAN\",\n     \"inventorySourceAttribute\": \"cupidatat nisi consectetur in aute\",\n     \"inventorySourceAttributeCompareValue\": \"ea eiusmod in\"\n    },\n    {\n     \"inclusionIndicator\": \"LESS_THAN\",\n     \"inventorySourceAttribute\": \"Ut et labore Excepteur\",\n     \"inventorySourceAttributeCompareValue\": \"ad irure elit\"\n    }\n   ],\n   \"conditionConnector\": \"AND\",\n   \"inventorySourceType\": \"VMAX_STORAGE_GROUP\",\n   \"priority\": 1493360,\n   \"_embedded\": {\n    \"protectionPolicy\": {\n     \"id\": \"ut ullamco exercitation magna\",\n     \"name\": \"mollit consequat Excepteur\",\n     \"protectionEngine\": \"reprehenderit Ut dolor in ad\",\n     \"type\": \"eu dolor\"\n    },\n    \"protectionlifeCycle\": {\n     \"id\": \"ea cillum enim\",\n     \"name\": \"Lorem fugiat commodo\",\n     \"protectionEngine\": \"esse ea proident nisi\",\n     \"type\": \"sed anim do officia\"\n    },\n    \"storageSystem\": {\n     \"id\": \"sed laboris culpa magna\",\n     \"name\": \"Excepteur ad sint\"\n    }\n   },\n   \"assignedAssetsCount\": -46409327,\n   \"description\": \"culpa velit anim\",\n   \"displayDescription\": \"ut\",\n   \"id\": \"ut fugiat labore\",\n   \"lastRunAt\": \"1973-02-23T00:22:44.964Z\",\n   \"managedBy\": \"null\",\n   \"tenant\": {\n    \"id\": \"qui esse consectetur\"\n   }\n  }\n ],\n \"page\": {\n  \"number\": -88061678,\n  \"queryState\": \"deserunt incididunt\",\n  \"size\": -55121168,\n  \"totalElements\": -67956679,\n  \"totalPages\": -37947037\n }\n}"
								}
							]
						},
						{
							"name": "Create a protection rule.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<string>\",\n    \"action\": \"<string>\",\n    \"actionResult\": \"<string>\",\n    \"conditions\": [\n        {\n            \"inclusionIndicator\": \"<string>\",\n            \"inventorySourceAttribute\": \"<string>\",\n            \"inventorySourceAttributeCompareValue\": \"<string>\"\n        },\n        {\n            \"inclusionIndicator\": \"<string>\",\n            \"inventorySourceAttribute\": \"<string>\",\n            \"inventorySourceAttributeCompareValue\": \"<string>\"\n        }\n    ],\n    \"conditionConnector\": \"<string>\",\n    \"inventorySourceType\": \"<string>\",\n    \"priority\": \"<integer>\",\n    \"assignedAssetsCount\": \"<integer>\",\n    \"description\": \"<string>\",\n    \"displayDescription\": \"<string>\",\n    \"id\": \"<string>\",\n    \"lastRunAt\": \"<dateTime>\",\n    \"managedBy\": \"null\",\n    \"tenant\": {\n        \"id\": \"<string>\"\n    }\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/protection-rules",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"protection-rules"
									]
								},
								"description": "Create a protection rule.\n> This endpoint supports execution by the following roles: admin\n"
							},
							"response": [
								{
									"name": "Successfully created the protection rule.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"<string>\",\n    \"action\": \"<string>\",\n    \"actionResult\": \"<string>\",\n    \"conditions\": [\n        {\n            \"inclusionIndicator\": \"<string>\",\n            \"inventorySourceAttribute\": \"<string>\",\n            \"inventorySourceAttributeCompareValue\": \"<string>\"\n        },\n        {\n            \"inclusionIndicator\": \"<string>\",\n            \"inventorySourceAttribute\": \"<string>\",\n            \"inventorySourceAttributeCompareValue\": \"<string>\"\n        }\n    ],\n    \"conditionConnector\": \"<string>\",\n    \"inventorySourceType\": \"<string>\",\n    \"priority\": \"<integer>\",\n    \"assignedAssetsCount\": \"<integer>\",\n    \"description\": \"<string>\",\n    \"displayDescription\": \"<string>\",\n    \"id\": \"<string>\",\n    \"lastRunAt\": \"<dateTime>\",\n    \"managedBy\": \"null\",\n    \"tenant\": {\n        \"id\": \"<string>\"\n    }\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/protection-rules",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"protection-rules"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"name\": \"nulla enim\",\n \"action\": \"MOVE_TO_GROUP\",\n \"actionResult\": \"ut laborum\",\n \"conditions\": [\n  {\n   \"inclusionIndicator\": \"BEGINS_WITH\",\n   \"inventorySourceAttribute\": \"culpa ipsum ad commodo\",\n   \"inventorySourceAttributeCompareValue\": \"magna\"\n  },\n  {\n   \"inclusionIndicator\": \"LESS_THAN\",\n   \"inventorySourceAttribute\": \"Lorem culpa elit deserunt nulla\",\n   \"inventorySourceAttributeCompareValue\": \"nulla elit dolore est\"\n  }\n ],\n \"conditionConnector\": \"AND\",\n \"inventorySourceType\": \"MICROSOFT_SQL_DATABASE\",\n \"priority\": -52478585,\n \"_embedded\": {\n  \"protectionPolicy\": {\n   \"id\": \"quis magna officia do\",\n   \"name\": \"consectetur\",\n   \"protectionEngine\": \"enim ut est fugiat\",\n   \"type\": \"n\"\n  },\n  \"protectionlifeCycle\": {\n   \"id\": \"sunt quis\",\n   \"name\": \"irure elit deserunt\",\n   \"protectionEngine\": \"ad Duis\",\n   \"type\": \"velit qui\"\n  },\n  \"storageSystem\": {\n   \"id\": \"dolor in Excepteur sit\",\n   \"name\": \"esse minim\"\n  }\n },\n \"assignedAssetsCount\": 9158082,\n \"description\": \"sunt et veniam culpa in\",\n \"displayDescription\": \"ut\",\n \"id\": \"ipsum nostrud reprehenderit\",\n \"lastRunAt\": \"1979-04-30T15:19:34.435Z\",\n \"managedBy\": \"null\",\n \"tenant\": {\n  \"id\": \"ullamco Ut\"\n }\n}"
								},
								{
									"name": "The requestor is not allowed to perform this operation.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"<string>\",\n    \"action\": \"<string>\",\n    \"actionResult\": \"<string>\",\n    \"conditions\": [\n        {\n            \"inclusionIndicator\": \"<string>\",\n            \"inventorySourceAttribute\": \"<string>\",\n            \"inventorySourceAttributeCompareValue\": \"<string>\"\n        },\n        {\n            \"inclusionIndicator\": \"<string>\",\n            \"inventorySourceAttribute\": \"<string>\",\n            \"inventorySourceAttributeCompareValue\": \"<string>\"\n        }\n    ],\n    \"conditionConnector\": \"<string>\",\n    \"inventorySourceType\": \"<string>\",\n    \"priority\": \"<integer>\",\n    \"assignedAssetsCount\": \"<integer>\",\n    \"description\": \"<string>\",\n    \"displayDescription\": \"<string>\",\n    \"id\": \"<string>\",\n    \"lastRunAt\": \"<dateTime>\",\n    \"managedBy\": \"null\",\n    \"tenant\": {\n        \"id\": \"<string>\"\n    }\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/protection-rules",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"protection-rules"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "An unexpected error prevented the server from fulfilling your request.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"<string>\",\n    \"action\": \"<string>\",\n    \"actionResult\": \"<string>\",\n    \"conditions\": [\n        {\n            \"inclusionIndicator\": \"<string>\",\n            \"inventorySourceAttribute\": \"<string>\",\n            \"inventorySourceAttributeCompareValue\": \"<string>\"\n        },\n        {\n            \"inclusionIndicator\": \"<string>\",\n            \"inventorySourceAttribute\": \"<string>\",\n            \"inventorySourceAttributeCompareValue\": \"<string>\"\n        }\n    ],\n    \"conditionConnector\": \"<string>\",\n    \"inventorySourceType\": \"<string>\",\n    \"priority\": \"<integer>\",\n    \"assignedAssetsCount\": \"<integer>\",\n    \"description\": \"<string>\",\n    \"displayDescription\": \"<string>\",\n    \"id\": \"<string>\",\n    \"lastRunAt\": \"<dateTime>\",\n    \"managedBy\": \"null\",\n    \"tenant\": {\n        \"id\": \"<string>\"\n    }\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/protection-rules",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"protection-rules"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "Successful operation. ",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"<string>\",\n    \"action\": \"<string>\",\n    \"actionResult\": \"<string>\",\n    \"conditions\": [\n        {\n            \"inclusionIndicator\": \"<string>\",\n            \"inventorySourceAttribute\": \"<string>\",\n            \"inventorySourceAttributeCompareValue\": \"<string>\"\n        },\n        {\n            \"inclusionIndicator\": \"<string>\",\n            \"inventorySourceAttribute\": \"<string>\",\n            \"inventorySourceAttributeCompareValue\": \"<string>\"\n        }\n    ],\n    \"conditionConnector\": \"<string>\",\n    \"inventorySourceType\": \"<string>\",\n    \"priority\": \"<integer>\",\n    \"assignedAssetsCount\": \"<integer>\",\n    \"description\": \"<string>\",\n    \"displayDescription\": \"<string>\",\n    \"id\": \"<string>\",\n    \"lastRunAt\": \"<dateTime>\",\n    \"managedBy\": \"null\",\n    \"tenant\": {\n        \"id\": \"<string>\"\n    }\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/protection-rules",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"protection-rules"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"name\": \"nulla enim\",\n \"action\": \"MOVE_TO_GROUP\",\n \"actionResult\": \"ut laborum\",\n \"conditions\": [\n  {\n   \"inclusionIndicator\": \"BEGINS_WITH\",\n   \"inventorySourceAttribute\": \"culpa ipsum ad commodo\",\n   \"inventorySourceAttributeCompareValue\": \"magna\"\n  },\n  {\n   \"inclusionIndicator\": \"LESS_THAN\",\n   \"inventorySourceAttribute\": \"Lorem culpa elit deserunt nulla\",\n   \"inventorySourceAttributeCompareValue\": \"nulla elit dolore est\"\n  }\n ],\n \"conditionConnector\": \"AND\",\n \"inventorySourceType\": \"MICROSOFT_SQL_DATABASE\",\n \"priority\": -52478585,\n \"_embedded\": {\n  \"protectionPolicy\": {\n   \"id\": \"quis magna officia do\",\n   \"name\": \"consectetur\",\n   \"protectionEngine\": \"enim ut est fugiat\",\n   \"type\": \"n\"\n  },\n  \"protectionlifeCycle\": {\n   \"id\": \"sunt quis\",\n   \"name\": \"irure elit deserunt\",\n   \"protectionEngine\": \"ad Duis\",\n   \"type\": \"velit qui\"\n  },\n  \"storageSystem\": {\n   \"id\": \"dolor in Excepteur sit\",\n   \"name\": \"esse minim\"\n  }\n },\n \"assignedAssetsCount\": 9158082,\n \"description\": \"sunt et veniam culpa in\",\n \"displayDescription\": \"ut\",\n \"id\": \"ipsum nostrud reprehenderit\",\n \"lastRunAt\": \"1979-04-30T15:19:34.435Z\",\n \"managedBy\": \"null\",\n \"tenant\": {\n  \"id\": \"ullamco Ut\"\n }\n}"
								},
								{
									"name": "The requestor is not authorized to perform this operation.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"<string>\",\n    \"action\": \"<string>\",\n    \"actionResult\": \"<string>\",\n    \"conditions\": [\n        {\n            \"inclusionIndicator\": \"<string>\",\n            \"inventorySourceAttribute\": \"<string>\",\n            \"inventorySourceAttributeCompareValue\": \"<string>\"\n        },\n        {\n            \"inclusionIndicator\": \"<string>\",\n            \"inventorySourceAttribute\": \"<string>\",\n            \"inventorySourceAttributeCompareValue\": \"<string>\"\n        }\n    ],\n    \"conditionConnector\": \"<string>\",\n    \"inventorySourceType\": \"<string>\",\n    \"priority\": \"<integer>\",\n    \"assignedAssetsCount\": \"<integer>\",\n    \"description\": \"<string>\",\n    \"displayDescription\": \"<string>\",\n    \"id\": \"<string>\",\n    \"lastRunAt\": \"<dateTime>\",\n    \"managedBy\": \"null\",\n    \"tenant\": {\n        \"id\": \"<string>\"\n    }\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/protection-rules",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"protection-rules"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "The request is not valid.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"<string>\",\n    \"action\": \"<string>\",\n    \"actionResult\": \"<string>\",\n    \"conditions\": [\n        {\n            \"inclusionIndicator\": \"<string>\",\n            \"inventorySourceAttribute\": \"<string>\",\n            \"inventorySourceAttributeCompareValue\": \"<string>\"\n        },\n        {\n            \"inclusionIndicator\": \"<string>\",\n            \"inventorySourceAttribute\": \"<string>\",\n            \"inventorySourceAttributeCompareValue\": \"<string>\"\n        }\n    ],\n    \"conditionConnector\": \"<string>\",\n    \"inventorySourceType\": \"<string>\",\n    \"priority\": \"<integer>\",\n    \"assignedAssetsCount\": \"<integer>\",\n    \"description\": \"<string>\",\n    \"displayDescription\": \"<string>\",\n    \"id\": \"<string>\",\n    \"lastRunAt\": \"<dateTime>\",\n    \"managedBy\": \"null\",\n    \"tenant\": {\n        \"id\": \"<string>\"\n    }\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/protection-rules",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"protection-rules"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "remote-services-gateway",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Unregister the device from the ESRS gateway.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/remote-services-gateway/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"remote-services-gateway",
												":id"
											],
											"variable": [
												{
													"id": "d3bc1df4-b1e5-45d1-8090-807b2ecac172",
													"key": "id",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The UUID of the Remote Services Gateway connection."
												}
											]
										},
										"description": "Removes appliance registration from the remote services gateway.\n> This endpoint supports execution by the following roles: admin\n"
									},
									"response": [
										{
											"name": "Unregistered and deleted the device from the remote services gateway.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/remote-services-gateway/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"remote-services-gateway",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The requestor is not allowed to perform this operation.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/remote-services-gateway/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"remote-services-gateway",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "Forbidden.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/remote-services-gateway/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"remote-services-gateway",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/remote-services-gateway/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"remote-services-gateway",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Cannot find a remote services connection with the given ID.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/remote-services-gateway/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"remote-services-gateway",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										}
									]
								},
								{
									"name": "Get the remote services gateway connections.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/remote-services-gateway/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"remote-services-gateway",
												":id"
											],
											"variable": [
												{
													"id": "a3f68029-3041-459b-8017-9c9d3692f522",
													"key": "id",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The UUID of the remote services gateway connection."
												}
											]
										},
										"description": "Retrieves list of connections to the remote services gateway.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
									},
									"response": [
										{
											"name": "The requestor is not allowed to perform this operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/remote-services-gateway/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"remote-services-gateway",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "Cannot find a remote services connection with the given ID.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/remote-services-gateway/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"remote-services-gateway",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "Occurs if component state is RESTORE.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/remote-services-gateway/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"remote-services-gateway",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Service Unavailable",
											"code": 503,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The request was successful and returned the requested resource.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/remote-services-gateway/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"remote-services-gateway",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"automaticDownloadUpgradePackage\": false,\n \"createdDate\": \"amet veniam mollit\",\n \"deploymentStatus\": \"laboris in quis\",\n \"deviceStatus\": \"velit est ex pariatur\",\n \"emcSupportUsername\": \"do enim\",\n \"gatewayHostAddress\": \"culpa officia irure commodo\",\n \"gatewaySerialNumber\": \"minim officia\",\n \"id\": \"Excepteur laboris eu\"\n}"
										},
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/remote-services-gateway/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"remote-services-gateway",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Patch an updated value of automatic download upgrade package.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"automaticDownloadUpgradePackage\": \"<boolean>\",\n    \"createdDate\": \"<string>\",\n    \"deploymentStatus\": \"<string>\",\n    \"deviceStatus\": \"<string>\",\n    \"emcSupportUsername\": \"<string>\",\n    \"gatewayHostAddress\": \"<string>\",\n    \"gatewaySerialNumber\": \"<string>\",\n    \"id\": \"<string>\"\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/remote-services-gateway/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"remote-services-gateway",
												":id"
											],
											"variable": [
												{
													"id": "dfd6ae5f-38d0-46f1-aa98-a231696882a4",
													"key": "id",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The UUID of the remote services gateway connection."
												}
											]
										},
										"description": "Enables or disables automatic download upgrade package.\n> This endpoint supports execution by the following roles: admin\n"
									},
									"response": [
										{
											"name": "Cannot find a remote services connection with the given ID.",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"automaticDownloadUpgradePackage\": \"<boolean>\",\n    \"createdDate\": \"<string>\",\n    \"deploymentStatus\": \"<string>\",\n    \"deviceStatus\": \"<string>\",\n    \"emcSupportUsername\": \"<string>\",\n    \"gatewayHostAddress\": \"<string>\",\n    \"gatewaySerialNumber\": \"<string>\",\n    \"id\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/remote-services-gateway/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"remote-services-gateway",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The requestor is not allowed to perform this operation.",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"automaticDownloadUpgradePackage\": \"<boolean>\",\n    \"createdDate\": \"<string>\",\n    \"deploymentStatus\": \"<string>\",\n    \"deviceStatus\": \"<string>\",\n    \"emcSupportUsername\": \"<string>\",\n    \"gatewayHostAddress\": \"<string>\",\n    \"gatewaySerialNumber\": \"<string>\",\n    \"id\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/remote-services-gateway/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"remote-services-gateway",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"automaticDownloadUpgradePackage\": \"<boolean>\",\n    \"createdDate\": \"<string>\",\n    \"deploymentStatus\": \"<string>\",\n    \"deviceStatus\": \"<string>\",\n    \"emcSupportUsername\": \"<string>\",\n    \"gatewayHostAddress\": \"<string>\",\n    \"gatewaySerialNumber\": \"<string>\",\n    \"id\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/remote-services-gateway/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"remote-services-gateway",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Successfully updated the remote services connection with the new gateway address.",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"automaticDownloadUpgradePackage\": \"<boolean>\",\n    \"createdDate\": \"<string>\",\n    \"deploymentStatus\": \"<string>\",\n    \"deviceStatus\": \"<string>\",\n    \"emcSupportUsername\": \"<string>\",\n    \"gatewayHostAddress\": \"<string>\",\n    \"gatewaySerialNumber\": \"<string>\",\n    \"id\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/remote-services-gateway/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"remote-services-gateway",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"automaticDownloadUpgradePackage\": false,\n \"createdDate\": \"amet veniam mollit\",\n \"deploymentStatus\": \"laboris in quis\",\n \"deviceStatus\": \"velit est ex pariatur\",\n \"emcSupportUsername\": \"do enim\",\n \"gatewayHostAddress\": \"culpa officia irure commodo\",\n \"gatewaySerialNumber\": \"minim officia\",\n \"id\": \"Excepteur laboris eu\"\n}"
										},
										{
											"name": "Forbidden.",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"automaticDownloadUpgradePackage\": \"<boolean>\",\n    \"createdDate\": \"<string>\",\n    \"deploymentStatus\": \"<string>\",\n    \"deviceStatus\": \"<string>\",\n    \"emcSupportUsername\": \"<string>\",\n    \"gatewayHostAddress\": \"<string>\",\n    \"gatewaySerialNumber\": \"<string>\",\n    \"id\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/remote-services-gateway/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"remote-services-gateway",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "Some fields in the request body are not valid or required fields are not supplied.",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"automaticDownloadUpgradePackage\": \"<boolean>\",\n    \"createdDate\": \"<string>\",\n    \"deploymentStatus\": \"<string>\",\n    \"deviceStatus\": \"<string>\",\n    \"emcSupportUsername\": \"<string>\",\n    \"gatewayHostAddress\": \"<string>\",\n    \"gatewaySerialNumber\": \"<string>\",\n    \"id\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/remote-services-gateway/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"remote-services-gateway",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Failed to contact the remote services backend or an error occurred in the remote services backend.",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"automaticDownloadUpgradePackage\": \"<boolean>\",\n    \"createdDate\": \"<string>\",\n    \"deploymentStatus\": \"<string>\",\n    \"deviceStatus\": \"<string>\",\n    \"emcSupportUsername\": \"<string>\",\n    \"gatewayHostAddress\": \"<string>\",\n    \"gatewaySerialNumber\": \"<string>\",\n    \"id\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/remote-services-gateway/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"remote-services-gateway",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Failed Dependency (WebDAV) (RFC 4918)",
											"code": 424,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Get the remote services gateway resource.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/remote-services-gateway",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"remote-services-gateway"
									]
								},
								"description": "Retrieves a list of connections to the remote services gateway.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
							},
							"response": [
								{
									"name": "The requestor is not allowed to perform this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/remote-services-gateway",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"remote-services-gateway"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "An unexpected error prevented the server from fulfilling your request.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/remote-services-gateway",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"remote-services-gateway"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Occurs if component state is RESTORE.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/remote-services-gateway",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"remote-services-gateway"
											]
										}
									},
									"status": "Service Unavailable",
									"code": 503,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Successful.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/remote-services-gateway",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"remote-services-gateway"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"content\": [\n  {\n   \"automaticDownloadUpgradePackage\": true,\n   \"createdDate\": \"adipisicing\",\n   \"deploymentStatus\": \"esse elit\",\n   \"deviceStatus\": \"aliquip cillum proident\",\n   \"emcSupportUsername\": \"ut deserunt et\",\n   \"gatewayHostAddress\": \"esse dolor\",\n   \"gatewaySerialNumber\": \"cillum pariatur ea\",\n   \"id\": \"sint ut id commodo\"\n  },\n  {\n   \"automaticDownloadUpgradePackage\": true,\n   \"createdDate\": \"dolor nulla velit dolor\",\n   \"deploymentStatus\": \"nostrud sunt\",\n   \"deviceStatus\": \"deserunt\",\n   \"emcSupportUsername\": \"adipisicing consequat officia anim\",\n   \"gatewayHostAddress\": \"ea amet\",\n   \"gatewaySerialNumber\": \"eu laborum cillum et\",\n   \"id\": \"cillum aliquip reprehenderit\"\n  }\n ],\n \"page\": {\n  \"number\": 16970582,\n  \"queryState\": \"ipsum amet in\",\n  \"size\": -97582810,\n  \"totalElements\": 81988573,\n  \"totalPages\": 3981634\n }\n}"
								}
							]
						},
						{
							"name": "Register a device for telemetry management.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"automaticDownloadUpgradePackage\": \"<boolean>\",\n    \"createdDate\": \"<string>\",\n    \"deploymentStatus\": \"<string>\",\n    \"deviceStatus\": \"<string>\",\n    \"emcSupportUsername\": \"<string>\",\n    \"gatewayHostAddress\": \"<string>\",\n    \"gatewaySerialNumber\": \"<string>\",\n    \"id\": \"<string>\"\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/remote-services-gateway",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"remote-services-gateway"
									]
								},
								"description": "Registers the PowerProtect Data Manager appliance with a remote services gateway.\n> This endpoint supports execution by the following roles: admin\n"
							},
							"response": [
								{
									"name": "The JSON syntax is not valid.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"automaticDownloadUpgradePackage\": \"<boolean>\",\n    \"createdDate\": \"<string>\",\n    \"deploymentStatus\": \"<string>\",\n    \"deviceStatus\": \"<string>\",\n    \"emcSupportUsername\": \"<string>\",\n    \"gatewayHostAddress\": \"<string>\",\n    \"gatewaySerialNumber\": \"<string>\",\n    \"id\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/remote-services-gateway",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"remote-services-gateway"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "A valid license does not exist for the system.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"automaticDownloadUpgradePackage\": \"<boolean>\",\n    \"createdDate\": \"<string>\",\n    \"deploymentStatus\": \"<string>\",\n    \"deviceStatus\": \"<string>\",\n    \"emcSupportUsername\": \"<string>\",\n    \"gatewayHostAddress\": \"<string>\",\n    \"gatewaySerialNumber\": \"<string>\",\n    \"id\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/remote-services-gateway",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"remote-services-gateway"
											]
										}
									},
									"status": "Conflict",
									"code": 409,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed to contact the remote services backend or an error occurred in the remote services backend.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"automaticDownloadUpgradePackage\": \"<boolean>\",\n    \"createdDate\": \"<string>\",\n    \"deploymentStatus\": \"<string>\",\n    \"deviceStatus\": \"<string>\",\n    \"emcSupportUsername\": \"<string>\",\n    \"gatewayHostAddress\": \"<string>\",\n    \"gatewaySerialNumber\": \"<string>\",\n    \"id\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/remote-services-gateway",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"remote-services-gateway"
											]
										}
									},
									"status": "Failed Dependency (WebDAV) (RFC 4918)",
									"code": 424,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Some fields in the request body are not valid or required fields are not supplied.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"automaticDownloadUpgradePackage\": \"<boolean>\",\n    \"createdDate\": \"<string>\",\n    \"deploymentStatus\": \"<string>\",\n    \"deviceStatus\": \"<string>\",\n    \"emcSupportUsername\": \"<string>\",\n    \"gatewayHostAddress\": \"<string>\",\n    \"gatewaySerialNumber\": \"<string>\",\n    \"id\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/remote-services-gateway",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"remote-services-gateway"
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "An unexpected error prevented the server from fulfilling your request.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"automaticDownloadUpgradePackage\": \"<boolean>\",\n    \"createdDate\": \"<string>\",\n    \"deploymentStatus\": \"<string>\",\n    \"deviceStatus\": \"<string>\",\n    \"emcSupportUsername\": \"<string>\",\n    \"gatewayHostAddress\": \"<string>\",\n    \"gatewaySerialNumber\": \"<string>\",\n    \"id\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/remote-services-gateway",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"remote-services-gateway"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "The requestor is not allowed to perform this operationr.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"automaticDownloadUpgradePackage\": \"<boolean>\",\n    \"createdDate\": \"<string>\",\n    \"deploymentStatus\": \"<string>\",\n    \"deviceStatus\": \"<string>\",\n    \"emcSupportUsername\": \"<string>\",\n    \"gatewayHostAddress\": \"<string>\",\n    \"gatewaySerialNumber\": \"<string>\",\n    \"id\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/remote-services-gateway",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"remote-services-gateway"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "Registered the device with the remote services gateway.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"automaticDownloadUpgradePackage\": \"<boolean>\",\n    \"createdDate\": \"<string>\",\n    \"deploymentStatus\": \"<string>\",\n    \"deviceStatus\": \"<string>\",\n    \"emcSupportUsername\": \"<string>\",\n    \"gatewayHostAddress\": \"<string>\",\n    \"gatewaySerialNumber\": \"<string>\",\n    \"id\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/remote-services-gateway",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"remote-services-gateway"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"automaticDownloadUpgradePackage\": false,\n \"emcSupportUsername\": \"deserunt anim Lorem Ut\",\n \"gatewayHostAddress\": \"incididunt qui sunt enim nisi\",\n \"gatewaySerialNumber\": \"sed ut magna commodo\",\n \"id\": \"elit nostrud ipsum consequat\"\n}"
								},
								{
									"name": "Forbidden.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"automaticDownloadUpgradePackage\": \"<boolean>\",\n    \"createdDate\": \"<string>\",\n    \"deploymentStatus\": \"<string>\",\n    \"deviceStatus\": \"<string>\",\n    \"emcSupportUsername\": \"<string>\",\n    \"gatewayHostAddress\": \"<string>\",\n    \"gatewaySerialNumber\": \"<string>\",\n    \"id\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/remote-services-gateway",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"remote-services-gateway"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "remote-upgrade-packages",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Download the remote upgrade package that is assigned to the product.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/remote-upgrade-packages/:id/download",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"remote-upgrade-packages",
												":id",
												"download"
											],
											"variable": [
												{
													"id": "0f34b9fe-8558-4117-81be-069c40e908dd",
													"key": "id",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The UUID of the remote services gateway connection."
												}
											]
										},
										"description": "Starts file download for the remote upgrade package of the specified ID.\n> This endpoint supports execution by the following roles: admin\n"
									},
									"response": [
										{
											"name": "Accepted and processing the download request.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/remote-upgrade-packages/:id/download",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"remote-upgrade-packages",
														":id",
														"download"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The requestor is not allowed to perform this operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/remote-upgrade-packages/:id/download",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"remote-upgrade-packages",
														":id",
														"download"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The Telemetry Manager component is in the RESTORE state.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/remote-upgrade-packages/:id/download",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"remote-upgrade-packages",
														":id",
														"download"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Service Unavailable",
											"code": 503,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/remote-upgrade-packages/:id/download",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"remote-upgrade-packages",
														":id",
														"download"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Successful operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/remote-upgrade-packages/:id/download",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"remote-upgrade-packages",
														":id",
														"download"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Cannot find a device connection to the remote services gateway or the upgrade package with the given ID.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/remote-upgrade-packages/:id/download",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"remote-upgrade-packages",
														":id",
														"download"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Occurs if the state of the upgrade package for the given ID is DOWNLOADING, DOWNLOADED, IGNORED; the metadata of the file has been changed in the remote services backend; or the downloaded package already exists on the appliance.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/remote-upgrade-packages/:id/download",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"remote-upgrade-packages",
														":id",
														"download"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "An error occurred in the ESRS backend, or the file was not found in the backend.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/remote-upgrade-packages/:id/download",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"remote-upgrade-packages",
														":id",
														"download"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Failed Dependency (WebDAV) (RFC 4918)",
											"code": 424,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Get remote upgrade package download progress.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/remote-upgrade-packages/:id/download-status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"remote-upgrade-packages",
												":id",
												"download-status"
											],
											"variable": [
												{
													"id": "b5c4f335-cb57-4259-86e9-31012fa36688",
													"key": "id",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The UUID of the remote services gateway connection."
												}
											]
										},
										"description": "Retieves the download progress percentage and package transfer rate in MBPS.\n> This endpoint supports execution by the following roles: admin\n"
									},
									"response": [
										{
											"name": "Cannot find an upgrade package with the specified ID.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/remote-upgrade-packages/:id/download-status",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"remote-upgrade-packages",
														":id",
														"download-status"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The download for the given file ID has not started or the state of the upgrade package for the given ID is DOWNLOADED.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/remote-upgrade-packages/:id/download-status",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"remote-upgrade-packages",
														":id",
														"download-status"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/remote-upgrade-packages/:id/download-status",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"remote-upgrade-packages",
														":id",
														"download-status"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The requestor is not allowed to perform this operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/remote-upgrade-packages/:id/download-status",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"remote-upgrade-packages",
														":id",
														"download-status"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The Telemetry Manager component is in the RESTORE state.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/remote-upgrade-packages/:id/download-status",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"remote-upgrade-packages",
														":id",
														"download-status"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Service Unavailable",
											"code": 503,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The request was successful and returned the requested resource.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/remote-upgrade-packages/:id/download-status",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"remote-upgrade-packages",
														":id",
														"download-status"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"errorMsg\": \"incididunt proident irure\",\n \"percentageCompleted\": -49439512.75620377,\n \"transferRate\": 9996003.007690042\n}"
										},
										{
											"name": "An error occurred in the remote services backend, or the upgrade package was deleted from the appliance while the download was in progress.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/remote-upgrade-packages/:id/download-status",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"remote-upgrade-packages",
														":id",
														"download-status"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Failed Dependency (WebDAV) (RFC 4918)",
											"code": 424,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Get the list of available upgrade packages.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/remote-upgrade-packages",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"remote-upgrade-packages"
									]
								},
								"description": "Retrieves list of remote upgrade packages from the database.\n> This endpoint supports execution by the following roles: admin\n"
							},
							"response": [
								{
									"name": "The request was successful and returned the requested resource.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/remote-upgrade-packages",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"remote-upgrade-packages"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"content\": [\n  {\n   \"checksum\": \"dolor laborum\",\n   \"description\": \"ex amet\",\n   \"id\": \"id dolor exercitation\",\n   \"lastUpdated\": \"1961-03-07T02:19:23.582Z\",\n   \"madeAvailable\": \"1991-10-07T19:22:04.622Z\",\n   \"packageName\": \"eiusmod sunt anim nulla\",\n   \"packageVersion\": \"incididunt\",\n   \"sizeInBytes\": 80721363.26364818,\n   \"state\": \"IGNORED\",\n   \"title\": \"aute quis in eiusmod\"\n  },\n  {\n   \"checksum\": \"laborum non id mollit\",\n   \"description\": \"in dolore\",\n   \"id\": \"Ut ea ullamco ex cupidatat\",\n   \"lastUpdated\": \"2009-02-21T00:25:16.632Z\",\n   \"madeAvailable\": \"2001-09-25T14:36:30.667Z\",\n   \"packageName\": \"qui consectetur\",\n   \"packageVersion\": \"sit\",\n   \"sizeInBytes\": -9462367.830431402,\n   \"state\": \"DOWNLOADING\",\n   \"title\": \"enim sed\"\n  }\n ],\n \"page\": {\n  \"number\": -78099154,\n  \"queryState\": \"id tempor\",\n  \"size\": 37852613,\n  \"totalElements\": 53459022,\n  \"totalPages\": -5467468\n }\n}"
								},
								{
									"name": "Failed to contact the remote services backend, or an error occurred in the remote services backend.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/remote-upgrade-packages",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"remote-upgrade-packages"
											]
										}
									},
									"status": "Failed Dependency (WebDAV) (RFC 4918)",
									"code": 424,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "The requestor is not allowed to perform this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/remote-upgrade-packages",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"remote-upgrade-packages"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "Cannot find a device connection to the ESRS gateway.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/remote-upgrade-packages",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"remote-upgrade-packages"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "The Telemetry Manager component is in the RESTORE state.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/remote-upgrade-packages",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"remote-upgrade-packages"
											]
										}
									},
									"status": "Service Unavailable",
									"code": 503,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "An unexpected error prevented the server from fulfilling your request.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/remote-upgrade-packages",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"remote-upgrade-packages"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "restored-copies",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Get a restored copy by ID.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/restored-copies/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"restored-copies",
												":id"
											],
											"variable": [
												{
													"id": "92da16e9-a8fd-491f-8e75-5c19e354bded",
													"key": "id",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The restored copy ID."
												}
											]
										},
										"description": "Retrieves a restored copy by the specified ID. The restored copies define which copies of an asset already are restored. Each restored asset corresponds to a restored copy.\n> This endpoint supports execution by the following roles: admin,export-and-recovery-admin\n"
									},
									"response": [
										{
											"name": "Successfully returned the requested restored copy.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/restored-copies/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"restored-copies",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"description\": \"Duis consequat\",\n \"restoreType\": \"DIRECT_TO_ESX\",\n \"activityId\": \"ad cupidatat laborum consectetur nostrud\",\n \"completionTime\": \"1949-11-12T20:29:09.795Z\",\n \"copyId\": \"pariatur sunt\",\n \"copyIds\": [\n  \"do dolore eiusmod Ut officia\",\n  \"nostrud officia Duis ea laborum\"\n ],\n \"expirationTime\": \"1972-04-20T04:54:10.485Z\",\n \"id\": \"Lorem ut\",\n \"options\": {\n  \"enableDebug\": false,\n  \"fileRelocationOptions\": {\n   \"targetDataFileLocation\": \"veniam ex\",\n   \"targetLogFileLocation\": \"in laborum commodo culpa labore\",\n   \"type\": \"CUSTOM_LOCATION\"\n  },\n  \"forceDatabaseOverwrite\": false,\n  \"performTailLogBackup\": false,\n  \"recoveryState\": \"RECOVERY\",\n  \"restoreOriginalMachineConfig\": true,\n  \"stopAtTime\": \"sed\",\n  \"vcenterId\": \"consectetur ut sint laborum cupidatat\"\n },\n \"restoreEntireBackupTransaction\": false,\n \"restoredCopiesDetails\": {\n  \"targetCloudInfo\": {\n   \"drType\": \"sit qui tempor\",\n   \"networkId\": \"mollit\",\n   \"securityGroupIds\": [\n    \"incididunt sunt culpa\",\n    \"quis exercitation pariatur culpa proident\"\n   ]\n  },\n  \"targetDatabaseInfo\": {\n   \"applicationSystemId\": \"ut\",\n   \"assetName\": \"mollit reprehenderit\",\n   \"hostId\": \"deserunt tempor\"\n  },\n  \"targetFileSystemInfo\": {\n   \"location\": \"ipsum quis ea\",\n   \"conflictStrategy\": \"OVERWRITE\",\n   \"hostId\": \"commodo sit\",\n   \"mountUrl\": \"aliquip officia commodo do sint\",\n   \"sources\": [\n    \"in consectetur in sint nostrud\",\n    \"cupidatat voluptate esse\"\n   ]\n  },\n  \"targetK8sInfo\": {\n   \"namespace\": \"dolor velit dolore\",\n   \"overwritePersistentVolumeClaim\": false,\n   \"persistentVolumeClaims\": [\n    {\n     \"alternateStorageClass\": \"in non mollit\",\n     \"name\": \"nostrud Ut in dolore\"\n    },\n    {\n     \"alternateStorageClass\": \"adipisicing do Duis dolore\",\n     \"name\": \"proident voluptate\"\n    }\n   ],\n   \"skipNamespaceResources\": false,\n   \"targetInventorySourceId\": \"ea non mollit\"\n  },\n  \"targetStorageInfo\": {\n   \"groupName\": \"laborum eiusmod non culpa ullamco\",\n   \"targetDetails\": [\n    {\n     \"restoredAssetId\": \"minim elit nisi sint\",\n     \"storageGroupName\": \"aliquip\",\n     \"storageSystemId\": \"aute consectetur\"\n    },\n    {\n     \"restoredAssetId\": \"in\",\n     \"storageGroupName\": \"laborum dolor\",\n     \"storageSystemId\": \"enim dolor aute Excepteur sit\"\n    }\n   ],\n   \"targetHostId\": \"ut aliqua\"\n  },\n  \"targetVmInfo\": {\n   \"inventorySourceId\": \"ut\",\n   \"vmName\": \"culpa\",\n   \"dataCenterMoref\": \"adipisicing ad velit laboris\",\n   \"clusterMoref\": \"dolor Lorem voluptate velit\",\n   \"hostMoref\": \"aliqua adipisicing \",\n   \"dataStoreMoref\": \"ex ipsum Excepteur tempor\",\n   \"credentials\": {\n    \"adminCredentialId\": \"qui\",\n    \"userCredentialId\": \"sit Lorem\"\n   },\n   \"deleteBackingFile\": true,\n   \"disks\": [\n    {\n     \"datastore\": \"Ut consequat\",\n     \"label\": \"U\",\n     \"provisioningType\": \"THICK_LAZY\"\n    },\n    {\n     \"datastore\": \"tempor eiusmod adipisicing\",\n     \"label\": \"ea laborum culpa eiusmod\",\n     \"provisioningType\": \"THICK_LAZY\"\n    }\n   ],\n   \"esxHost\": {\n    \"hostName\": \"sed elit Excepteur magna\",\n    \"userName\": \"ut officia con\",\n    \"userPassword\": \"exercitation enim a\"\n   },\n   \"folderMoref\": \"nisi\",\n   \"recoverConfig\": false,\n   \"resourcePoolMoref\": \"Excepteur cupidatat aliquip ut commodo\",\n   \"restoredVmAsset\": {\n    \"assetRef\": \"proident ex nulla dolore\",\n    \"vmRef\": \"id elit sit exercitation mollit\"\n   },\n   \"spbmRestoreDirective\": \"exercitation ipsum velit\",\n   \"tagRestoreDirective\": \"adipisicing consequat in\",\n   \"vmPowerOn\": false,\n   \"vmReconnectNic\": false\n  }\n },\n \"startTime\": \"1967-09-20T08:41:35.855Z\",\n \"state\": \"WAITING\",\n \"status\": \"FAILED\"\n}"
										},
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/restored-copies/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"restored-copies",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The request is not valid.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/restored-copies/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"restored-copies",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/restored-copies/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"restored-copies",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The requestor is not allowed to perform this operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/restored-copies/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"restored-copies",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										}
									]
								},
								{
									"name": "Extend the expiration time of the Live VM/Instant Access session.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"extendedDay\": \"<integer>\"\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/restored-copies/:id/expiration",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"restored-copies",
												":id",
												"expiration"
											],
											"variable": [
												{
													"id": "a7ab3008-7c10-40e6-8751-dfd4f85d43ad",
													"key": "id",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The exported copy resource ID."
												}
											]
										},
										"description": "Handles the request to extend, by specifying the number of days, the expiration time of the Live VM/Instant Access session.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
									},
									"response": [
										{
											"name": "The request is not valid.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"extendedDay\": \"<integer>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/restored-copies/:id/expiration",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"restored-copies",
														":id",
														"expiration"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "Successfully extend the expiration time.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"extendedDay\": \"<integer>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/restored-copies/:id/expiration",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"restored-copies",
														":id",
														"expiration"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"taskId\": \"ipsum \"\n}"
										},
										{
											"name": "The requestor is not allowed to perform this operation.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"extendedDay\": \"<integer>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/restored-copies/:id/expiration",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"restored-copies",
														":id",
														"expiration"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"extendedDay\": \"<integer>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/restored-copies/:id/expiration",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"restored-copies",
														":id",
														"expiration"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"extendedDay\": \"<integer>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/restored-copies/:id/expiration",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"restored-copies",
														":id",
														"expiration"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										}
									]
								},
								{
									"name": "Unmount the NAS datastore and clean up the VM proxy restore session resource.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/restored-copies/:id/remove",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"restored-copies",
												":id",
												"remove"
											],
											"variable": [
												{
													"id": "c7db494b-e96d-41fd-94f4-17ebfb89db24",
													"key": "id",
													"value": "<string>",
													"type": "string",
													"description": "(Required) "
												}
											]
										},
										"description": "Unmounts the NAS datastore and cleans up the VM proxy restore session resource.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
									},
									"response": [
										{
											"name": "The request is not valid.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/restored-copies/:id/remove",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"restored-copies",
														":id",
														"remove"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "Successfully removed NAS datastore and restored session resource.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/restored-copies/:id/remove",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"restored-copies",
														":id",
														"remove"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"taskId\": \"ipsum \"\n}"
										},
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/restored-copies/:id/remove",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"restored-copies",
														":id",
														"remove"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The requestor is not allowed to perform this operation.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/restored-copies/:id/remove",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"restored-copies",
														":id",
														"remove"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/restored-copies/:id/remove",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"restored-copies",
														":id",
														"remove"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										}
									]
								},
								{
									"name": "Vmotion a VM from an instant-access restore to permanent storage",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"description\": \"<string>\",\n    \"disks\": [\n        {\n            \"dataStoreMoref\": \"<string>\",\n            \"diskLabel\": \"<string>\",\n            \"key\": \"<integer>\",\n            \"provisioningType\": \"<string>\",\n            \"uuid\": \"<string>\"\n        },\n        {\n            \"dataStoreMoref\": \"<string>\",\n            \"diskLabel\": \"<string>\",\n            \"key\": \"<integer>\",\n            \"provisioningType\": \"<string>\",\n            \"uuid\": \"<string>\"\n        }\n    ],\n    \"targetDatastoreMoref\": \"<string>\",\n    \"targetFolderMoref\": \"<string>\",\n    \"targetHostMoref\": \"<string>\",\n    \"targetResourcePoolMoref\": \"<string>\",\n    \"vmMoref\": \"<string>\"\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/restored-copies/:id/vmotion",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"restored-copies",
												":id",
												"vmotion"
											],
											"variable": [
												{
													"id": "6a191be5-c0d3-4094-9aef-1e35565de4f9",
													"key": "id",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The restored copy resource ID."
												}
											]
										},
										"description": "vMotions a VM that is deployed as an instant access restore to permanent storage. In an instant access restore, the VM is deployed to an NFS share that is attached to a specified ESX host, cluster, or resource pool. This API call migrates the VM from the temporary NFS share to permanent storage.\n\nThe VM configuration files and VMDK files can be migrated to different datastores.\n\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
									},
									"response": [
										{
											"name": "The request is not valid.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"description\": \"<string>\",\n    \"disks\": [\n        {\n            \"dataStoreMoref\": \"<string>\",\n            \"diskLabel\": \"<string>\",\n            \"key\": \"<integer>\",\n            \"provisioningType\": \"<string>\",\n            \"uuid\": \"<string>\"\n        },\n        {\n            \"dataStoreMoref\": \"<string>\",\n            \"diskLabel\": \"<string>\",\n            \"key\": \"<integer>\",\n            \"provisioningType\": \"<string>\",\n            \"uuid\": \"<string>\"\n        }\n    ],\n    \"targetDatastoreMoref\": \"<string>\",\n    \"targetFolderMoref\": \"<string>\",\n    \"targetHostMoref\": \"<string>\",\n    \"targetResourcePoolMoref\": \"<string>\",\n    \"vmMoref\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/restored-copies/:id/vmotion",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"restored-copies",
														":id",
														"vmotion"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"description\": \"<string>\",\n    \"disks\": [\n        {\n            \"dataStoreMoref\": \"<string>\",\n            \"diskLabel\": \"<string>\",\n            \"key\": \"<integer>\",\n            \"provisioningType\": \"<string>\",\n            \"uuid\": \"<string>\"\n        },\n        {\n            \"dataStoreMoref\": \"<string>\",\n            \"diskLabel\": \"<string>\",\n            \"key\": \"<integer>\",\n            \"provisioningType\": \"<string>\",\n            \"uuid\": \"<string>\"\n        }\n    ],\n    \"targetDatastoreMoref\": \"<string>\",\n    \"targetFolderMoref\": \"<string>\",\n    \"targetHostMoref\": \"<string>\",\n    \"targetResourcePoolMoref\": \"<string>\",\n    \"vmMoref\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/restored-copies/:id/vmotion",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"restored-copies",
														":id",
														"vmotion"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The requestor is not allowed to perform this operation.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"description\": \"<string>\",\n    \"disks\": [\n        {\n            \"dataStoreMoref\": \"<string>\",\n            \"diskLabel\": \"<string>\",\n            \"key\": \"<integer>\",\n            \"provisioningType\": \"<string>\",\n            \"uuid\": \"<string>\"\n        },\n        {\n            \"dataStoreMoref\": \"<string>\",\n            \"diskLabel\": \"<string>\",\n            \"key\": \"<integer>\",\n            \"provisioningType\": \"<string>\",\n            \"uuid\": \"<string>\"\n        }\n    ],\n    \"targetDatastoreMoref\": \"<string>\",\n    \"targetFolderMoref\": \"<string>\",\n    \"targetHostMoref\": \"<string>\",\n    \"targetResourcePoolMoref\": \"<string>\",\n    \"vmMoref\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/restored-copies/:id/vmotion",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"restored-copies",
														":id",
														"vmotion"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "Successfully Vmotion the VM files.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"description\": \"<string>\",\n    \"disks\": [\n        {\n            \"dataStoreMoref\": \"<string>\",\n            \"diskLabel\": \"<string>\",\n            \"key\": \"<integer>\",\n            \"provisioningType\": \"<string>\",\n            \"uuid\": \"<string>\"\n        },\n        {\n            \"dataStoreMoref\": \"<string>\",\n            \"diskLabel\": \"<string>\",\n            \"key\": \"<integer>\",\n            \"provisioningType\": \"<string>\",\n            \"uuid\": \"<string>\"\n        }\n    ],\n    \"targetDatastoreMoref\": \"<string>\",\n    \"targetFolderMoref\": \"<string>\",\n    \"targetHostMoref\": \"<string>\",\n    \"targetResourcePoolMoref\": \"<string>\",\n    \"vmMoref\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/restored-copies/:id/vmotion",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"restored-copies",
														":id",
														"vmotion"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"taskId\": \"ipsum \"\n}"
										},
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"description\": \"<string>\",\n    \"disks\": [\n        {\n            \"dataStoreMoref\": \"<string>\",\n            \"diskLabel\": \"<string>\",\n            \"key\": \"<integer>\",\n            \"provisioningType\": \"<string>\",\n            \"uuid\": \"<string>\"\n        },\n        {\n            \"dataStoreMoref\": \"<string>\",\n            \"diskLabel\": \"<string>\",\n            \"key\": \"<integer>\",\n            \"provisioningType\": \"<string>\",\n            \"uuid\": \"<string>\"\n        }\n    ],\n    \"targetDatastoreMoref\": \"<string>\",\n    \"targetFolderMoref\": \"<string>\",\n    \"targetHostMoref\": \"<string>\",\n    \"targetResourcePoolMoref\": \"<string>\",\n    \"vmMoref\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/restored-copies/:id/vmotion",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"restored-copies",
														":id",
														"vmotion"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Get all restored copies.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/restored-copies?page=1&pageSize=100&filter=<string>&orderby=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"restored-copies"
									],
									"query": [
										{
											"key": "page",
											"value": "1",
											"description": "The page number to be returned. Must not be less than 1. See Tutorials - Page the List Result."
										},
										{
											"key": "pageSize",
											"value": "100",
											"description": "The number of resources to be returned. Must not be less than 1. See Tutorials - Page the List Result."
										},
										{
											"key": "filter",
											"value": "<string>",
											"description": "The filter string that is expressed using PowerProtect Data Manager filter syntax. See Tutorials - Filter the List Result."
										},
										{
											"key": "orderby",
											"value": "<string>",
											"description": "The attributes/fields to be sorted by. This parameter can combine with sort direction \"ASC\" or \"DESC\". Default direction is ASC. See Tutorials - Sort the List Result."
										}
									]
								},
								"description": "Retrieves all restored copies by parameters. The restored copies define which copies of an asset are already restored.\n> This endpoint supports execution by the following roles: admin,export-and-recovery-admin\n\n> This endpoint supports pagination with types: random\n"
							},
							"response": [
								{
									"name": "The request is not valid.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/restored-copies?page=1&pageSize=100&filter=<string>&orderby=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"restored-copies"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "<string>"
												},
												{
													"key": "orderby",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "Successfully returned available restored copies.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/restored-copies?page=1&pageSize=100&filter=<string>&orderby=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"restored-copies"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "<string>"
												},
												{
													"key": "orderby",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"content\": [\n  {\n   \"description\": \"adipisicing ex laborum mollit\",\n   \"restoreType\": \"TO_ALTERNATE\",\n   \"activityId\": \"consectetur et\",\n   \"completionTime\": \"1991-02-08T00:07:03.064Z\",\n   \"copyId\": \"et labore ut minim\",\n   \"copyIds\": [\n    \"qui ipsum Duis\",\n    \"sit elit esse adipisicing sunt\"\n   ],\n   \"expirationTime\": \"2002-02-25T06:23:23.020Z\",\n   \"id\": \"consectetur deserunt\",\n   \"options\": {\n    \"enableDebug\": false,\n    \"fileRelocationOptions\": {\n     \"targetDataFileLocation\": \"Lorem nostrud\",\n     \"targetLogFileLocation\": \"sint anim\",\n     \"type\": \"DEFAULT_LOCATION\"\n    },\n    \"forceDatabaseOverwrite\": false,\n    \"performTailLogBackup\": false,\n    \"recoveryState\": \"NO_RECOVERY\",\n    \"restoreOriginalMachineConfig\": false,\n    \"stopAtTime\": \"elit consequat nostrud\",\n    \"vcenterId\": \"cupidatat labore\"\n   },\n   \"restoreEntireBackupTransaction\": true,\n   \"restoredCopiesDetails\": {\n    \"targetCloudInfo\": {\n     \"drType\": \"veniam sed ipsum\",\n     \"networkId\": \"Ut enim\",\n     \"securityGroupIds\": [\n      \"enim ipsum velit\",\n      \"exercitation magna\"\n     ]\n    },\n    \"targetDatabaseInfo\": {\n     \"applicationSystemId\": \"ullamco deserunt eu et Lorem\",\n     \"assetName\": \"ut sed in\",\n     \"hostId\": \"ut laboris aute\"\n    },\n    \"targetFileSystemInfo\": {\n     \"location\": \"non\",\n     \"conflictStrategy\": \"OVERWRITE\",\n     \"hostId\": \"reprehenderit labore in minim\",\n     \"mountUrl\": \"non cillum elit proident\",\n     \"sources\": [\n      \"ut laborum e\",\n      \"Excepteur laboris ut\"\n     ]\n    },\n    \"targetK8sInfo\": {\n     \"namespace\": \"proident\",\n     \"overwritePersistentVolumeClaim\": false,\n     \"persistentVolumeClaims\": [\n      {\n       \"alternateStorageClass\": \"Duis proident\",\n       \"name\": \"aute irure ipsum laboris\"\n      },\n      {\n       \"alternateStorageClass\": \"Excepteur irure magna dolore deserunt\",\n       \"name\": \"aliqua veniam labore commodo\"\n      }\n     ],\n     \"skipNamespaceResources\": false,\n     \"targetInventorySourceId\": \"dolor ex ipsum in\"\n    },\n    \"targetStorageInfo\": {\n     \"groupName\": \"magna esse\",\n     \"targetDetails\": [\n      {\n       \"restoredAssetId\": \"nisi quis irure cupidatat\",\n       \"storageGroupName\": \"in in\",\n       \"storageSystemId\": \"adipisicing aliquip consequat eu tempor\"\n      },\n      {\n       \"restoredAssetId\": \"non elit laboris aliqua cillum\",\n       \"storageGroupName\": \"anim incididunt culp\",\n       \"storageSystemId\": \"sint elit est qui\"\n      }\n     ],\n     \"targetHostId\": \"\"\n    },\n    \"targetVmInfo\": {\n     \"inventorySourceId\": \"ut id\",\n     \"vmName\": \"aliqua sed esse deserunt\",\n     \"dataCenterMoref\": \"esse aliqua\",\n     \"clusterMoref\": \"in nisi\",\n     \"hostMoref\": \"dolore\",\n     \"dataStoreMoref\": \"consectetur aute nulla aliqua\",\n     \"credentials\": {\n      \"adminCredentialId\": \"officia aliqua culpa\",\n      \"userCredentialId\": \"elit culpa sed adipisicing in\"\n     },\n     \"deleteBackingFile\": true,\n     \"disks\": [\n      {\n       \"datastore\": \"aute in laborum commodo\",\n       \"label\": \"proident Excepteur in ea\",\n       \"provisioningType\": \"THIN\"\n      },\n      {\n       \"datastore\": \"nostrud sit\",\n       \"label\": \"officia in sit cupidatat\",\n       \"provisioningType\": \"THICK_EAGER\"\n      }\n     ],\n     \"esxHost\": {\n      \"hostName\": \"sunt nostrud deserunt\",\n      \"userName\": \"nulla tempor\",\n      \"userPassword\": \"Lorem fugiat\"\n     },\n     \"folderMoref\": \"laborum eu\",\n     \"recoverConfig\": false,\n     \"resourcePoolMoref\": \"cupidatat labore Duis\",\n     \"restoredVmAsset\": {\n      \"assetRef\": \"sint nostrud\",\n      \"vmRef\": \"aliquip dolor laboris et\"\n     },\n     \"spbmRestoreDirective\": \"aute anim amet\",\n     \"tagRestoreDirective\": \"reprehenderit tempor labore pariatur\",\n     \"vmPowerOn\": true,\n     \"vmReconnectNic\": true\n    }\n   },\n   \"startTime\": \"1993-02-15T20:32:23.714Z\",\n   \"state\": \"STOPPING\",\n   \"status\": \"PARTIALCANCELLED\"\n  },\n  {\n   \"description\": \"dolor eu sed\",\n   \"restoreType\": \"IR_TO_PRODUCTION\",\n   \"activityId\": \"enim nisi do Ut\",\n   \"completionTime\": \"2007-06-20T15:20:02.870Z\",\n   \"copyId\": \"occaecat veniam\",\n   \"copyIds\": [\n    \"non sint nulla in nisi\",\n    \"commodo eu ullamco in\"\n   ],\n   \"expirationTime\": \"2006-08-01T17:50:38.785Z\",\n   \"id\": \"Ut\",\n   \"options\": {\n    \"enableDebug\": true,\n    \"fileRelocationOptions\": {\n     \"targetDataFileLocation\": \"eu sint\",\n     \"targetLogFileLocation\": \"reprehenderit enim non\",\n     \"type\": \"ORIGINAL_LOCATION\"\n    },\n    \"forceDatabaseOverwrite\": false,\n    \"performTailLogBackup\": true,\n    \"recoveryState\": \"RECOVERY\",\n    \"restoreOriginalMachineConfig\": false,\n    \"stopAtTime\": \"ad reprehenderit\",\n    \"vcenterId\": \"Duis reprehenderit irure et\"\n   },\n   \"restoreEntireBackupTransaction\": false,\n   \"restoredCopiesDetails\": {\n    \"targetCloudInfo\": {\n     \"drType\": \"aliqua ex irure\",\n     \"networkId\": \"elit et adipisicing laborum\",\n     \"securityGroupIds\": [\n      \"aliqua dolore do\",\n      \"ipsum ullamco nisi dolor est\"\n     ]\n    },\n    \"targetDatabaseInfo\": {\n     \"applicationSystemId\": \"dolor fugiat\",\n     \"assetName\": \"velit nisi ad amet in\",\n     \"hostId\": \"ut nostrud sint\"\n    },\n    \"targetFileSystemInfo\": {\n     \"location\": \"fugiat incidid\",\n     \"conflictStrategy\": \"OVERWRITE\",\n     \"hostId\": \"dolor deserunt sed dolore\",\n     \"mountUrl\": \"laboris fugiat anim nisi\",\n     \"sources\": [\n      \"adipisicing magna\",\n      \"Duis sed ea velit\"\n     ]\n    },\n    \"targetK8sInfo\": {\n     \"namespace\": \"sint aute est consequat ut\",\n     \"overwritePersistentVolumeClaim\": false,\n     \"persistentVolumeClaims\": [\n      {\n       \"alternateStorageClass\": \"anim laborum est ex culpa\",\n       \"name\": \"nostrud est elit ut\"\n      },\n      {\n       \"alternateStorageClass\": \"ea dolor elit\",\n       \"name\": \"et est elit\"\n      }\n     ],\n     \"skipNamespaceResources\": true,\n     \"targetInventorySourceId\": \"velit culpa esse in molli\"\n    },\n    \"targetStorageInfo\": {\n     \"groupName\": \"incid\",\n     \"targetDetails\": [\n      {\n       \"restoredAssetId\": \"ut dolor Duis\",\n       \"storageGroupName\": \"occaecat est laboris do voluptate\",\n       \"storageSystemId\": \"la\"\n      },\n      {\n       \"restoredAssetId\": \"sit elit ut\",\n       \"storageGroupName\": \"nostrud mini\",\n       \"storageSystemId\": \"qui officia\"\n      }\n     ],\n     \"targetHostId\": \"id veniam Lorem\"\n    },\n    \"targetVmInfo\": {\n     \"inventorySourceId\": \"in eiusmod\",\n     \"vmName\": \"ut nostrud reprehenderit\",\n     \"dataCenterMoref\": \"consectetur\",\n     \"clusterMoref\": \"culpa sit exercitation qui\",\n     \"hostMoref\": \"eiusmod magna cillum\",\n     \"dataStoreMoref\": \"officia pariatur dolore\",\n     \"credentials\": {\n      \"adminCredentialId\": \"id\",\n      \"userCredentialId\": \"consectetur sint minim\"\n     },\n     \"deleteBackingFile\": true,\n     \"disks\": [\n      {\n       \"datastore\": \"velit non nisi laborum\",\n       \"label\": \"aliqua\",\n       \"provisioningType\": \"THICK\"\n      },\n      {\n       \"datastore\": \"labore pariatur veniam cillum ut\",\n       \"label\": \"elit \",\n       \"provisioningType\": \"THICK\"\n      }\n     ],\n     \"esxHost\": {\n      \"hostName\": \"reprehenderit do cupidatat ut quis\",\n      \"userName\": \"velit non\",\n      \"userPassword\": \"dolor ad\"\n     },\n     \"folderMoref\": \"non ess\",\n     \"recoverConfig\": true,\n     \"resourcePoolMoref\": \"dolor\",\n     \"restoredVmAsset\": {\n      \"assetRef\": \"commodo do tempor voluptate\",\n      \"vmRef\": \"cupidatat ex\"\n     },\n     \"spbmRestoreDirective\": \"in ex\",\n     \"tagRestoreDirective\": \"et aliquip irure proident\",\n     \"vmPowerOn\": true,\n     \"vmReconnectNic\": true\n    }\n   },\n   \"startTime\": \"2003-02-25T14:22:52.911Z\",\n   \"state\": \"MOUNTED\",\n   \"status\": \"UNKNOWN\"\n  }\n ],\n \"page\": {\n  \"number\": -5264339,\n  \"queryState\": \"nostrud sint reprehender\",\n  \"size\": 39270846,\n  \"totalElements\": 25870007,\n  \"totalPages\": -58914436\n }\n}"
								},
								{
									"name": "An unexpected error prevented the server from fulfilling your request.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/restored-copies?page=1&pageSize=100&filter=<string>&orderby=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"restored-copies"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "<string>"
												},
												{
													"key": "orderby",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "The requestor is not authorized to perform this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/restored-copies?page=1&pageSize=100&filter=<string>&orderby=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"restored-copies"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "<string>"
												},
												{
													"key": "orderby",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "The requestor is not allowed to perform this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/restored-copies?page=1&pageSize=100&filter=<string>&orderby=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"restored-copies"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "<string>"
												},
												{
													"key": "orderby",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								}
							]
						},
						{
							"name": "Create a restored copy.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"description\": \"<string>\",\n    \"restoreType\": \"<string>\",\n    \"activityId\": \"<string>\",\n    \"completionTime\": \"<dateTime>\",\n    \"copyId\": \"<string>\",\n    \"copyIds\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"expirationTime\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"options\": {\n        \"enableDebug\": \"<boolean>\",\n        \"fileRelocationOptions\": {\n            \"targetDataFileLocation\": \"<string>\",\n            \"targetLogFileLocation\": \"<string>\",\n            \"type\": \"<string>\"\n        },\n        \"forceDatabaseOverwrite\": \"<boolean>\",\n        \"performTailLogBackup\": \"<boolean>\",\n        \"recoveryState\": \"<string>\",\n        \"restoreOriginalMachineConfig\": \"<boolean>\",\n        \"stopAtTime\": \"<string>\",\n        \"vcenterId\": \"<string>\"\n    },\n    \"restoreEntireBackupTransaction\": \"<boolean>\",\n    \"restoredCopiesDetails\": {\n        \"targetCloudInfo\": {\n            \"drType\": \"<string>\",\n            \"networkId\": \"<string>\",\n            \"securityGroupIds\": [\n                \"<string>\",\n                \"<string>\"\n            ]\n        },\n        \"targetDatabaseInfo\": {\n            \"applicationSystemId\": \"<string>\",\n            \"assetName\": \"<string>\",\n            \"hostId\": \"<string>\"\n        },\n        \"targetFileSystemInfo\": {\n            \"location\": \"<string>\",\n            \"conflictStrategy\": \"<string>\",\n            \"hostId\": \"<string>\",\n            \"mountUrl\": \"<string>\",\n            \"sources\": [\n                \"<string>\",\n                \"<string>\"\n            ]\n        },\n        \"targetK8sInfo\": {\n            \"namespace\": \"<string>\",\n            \"overwritePersistentVolumeClaim\": \"<boolean>\",\n            \"persistentVolumeClaims\": [\n                {\n                    \"alternateStorageClass\": \"<string>\",\n                    \"name\": \"<string>\"\n                },\n                {\n                    \"alternateStorageClass\": \"<string>\",\n                    \"name\": \"<string>\"\n                }\n            ],\n            \"skipNamespaceResources\": \"<boolean>\",\n            \"targetInventorySourceId\": \"<string>\"\n        },\n        \"targetStorageInfo\": {\n            \"groupName\": \"<string>\",\n            \"targetDetails\": [\n                {\n                    \"restoredAssetId\": \"<string>\",\n                    \"storageGroupName\": \"<string>\",\n                    \"storageSystemId\": \"<string>\"\n                },\n                {\n                    \"restoredAssetId\": \"<string>\",\n                    \"storageGroupName\": \"<string>\",\n                    \"storageSystemId\": \"<string>\"\n                }\n            ],\n            \"targetHostId\": \"<string>\"\n        },\n        \"targetVmInfo\": {\n            \"inventorySourceId\": \"<string>\",\n            \"vmName\": \"<string>\",\n            \"dataCenterMoref\": \"<string>\",\n            \"clusterMoref\": \"<string>\",\n            \"hostMoref\": \"<string>\",\n            \"dataStoreMoref\": \"<string>\",\n            \"credentials\": {\n                \"adminCredentialId\": \"<string>\",\n                \"userCredentialId\": \"<string>\"\n            },\n            \"deleteBackingFile\": \"<boolean>\",\n            \"disks\": [\n                {\n                    \"datastore\": \"<string>\",\n                    \"label\": \"<string>\",\n                    \"provisioningType\": \"<string>\"\n                }\n            ],\n            \"esxHost\": {\n                \"hostName\": \"<string>\",\n                \"userName\": \"<string>\",\n                \"userPassword\": \"<string>\"\n            },\n            \"folderMoref\": \"<string>\",\n            \"recoverConfig\": \"<boolean>\",\n            \"resourcePoolMoref\": \"<string>\",\n            \"restoredVmAsset\": {\n                \"assetRef\": \"<string>\",\n                \"vmRef\": \"<string>\"\n            },\n            \"spbmRestoreDirective\": \"<string>\",\n            \"tagRestoreDirective\": \"<string>\",\n            \"vmPowerOn\": \"<boolean>\",\n            \"vmReconnectNic\": \"<boolean>\"\n        }\n    },\n    \"startTime\": \"<dateTime>\",\n    \"state\": \"<string>\",\n    \"status\": \"<string>\"\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/restored-copies",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"restored-copies"
									]
								},
								"description": "Creates a restored copy by request body. The restored copies define which copies of an asset already are restored.\n> This endpoint supports execution by the following roles: admin,export-and-recovery-admin\n"
							},
							"response": [
								{
									"name": "The requestor is not allowed to perform this operation.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"description\": \"<string>\",\n    \"restoreType\": \"<string>\",\n    \"activityId\": \"<string>\",\n    \"completionTime\": \"<dateTime>\",\n    \"copyId\": \"<string>\",\n    \"copyIds\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"expirationTime\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"options\": {\n        \"enableDebug\": \"<boolean>\",\n        \"fileRelocationOptions\": {\n            \"targetDataFileLocation\": \"<string>\",\n            \"targetLogFileLocation\": \"<string>\",\n            \"type\": \"<string>\"\n        },\n        \"forceDatabaseOverwrite\": \"<boolean>\",\n        \"performTailLogBackup\": \"<boolean>\",\n        \"recoveryState\": \"<string>\",\n        \"restoreOriginalMachineConfig\": \"<boolean>\",\n        \"stopAtTime\": \"<string>\",\n        \"vcenterId\": \"<string>\"\n    },\n    \"restoreEntireBackupTransaction\": \"<boolean>\",\n    \"restoredCopiesDetails\": {\n        \"targetCloudInfo\": {\n            \"drType\": \"<string>\",\n            \"networkId\": \"<string>\",\n            \"securityGroupIds\": [\n                \"<string>\",\n                \"<string>\"\n            ]\n        },\n        \"targetDatabaseInfo\": {\n            \"applicationSystemId\": \"<string>\",\n            \"assetName\": \"<string>\",\n            \"hostId\": \"<string>\"\n        },\n        \"targetFileSystemInfo\": {\n            \"location\": \"<string>\",\n            \"conflictStrategy\": \"<string>\",\n            \"hostId\": \"<string>\",\n            \"mountUrl\": \"<string>\",\n            \"sources\": [\n                \"<string>\",\n                \"<string>\"\n            ]\n        },\n        \"targetK8sInfo\": {\n            \"namespace\": \"<string>\",\n            \"overwritePersistentVolumeClaim\": \"<boolean>\",\n            \"persistentVolumeClaims\": [\n                {\n                    \"alternateStorageClass\": \"<string>\",\n                    \"name\": \"<string>\"\n                },\n                {\n                    \"alternateStorageClass\": \"<string>\",\n                    \"name\": \"<string>\"\n                }\n            ],\n            \"skipNamespaceResources\": \"<boolean>\",\n            \"targetInventorySourceId\": \"<string>\"\n        },\n        \"targetStorageInfo\": {\n            \"groupName\": \"<string>\",\n            \"targetDetails\": [\n                {\n                    \"restoredAssetId\": \"<string>\",\n                    \"storageGroupName\": \"<string>\",\n                    \"storageSystemId\": \"<string>\"\n                },\n                {\n                    \"restoredAssetId\": \"<string>\",\n                    \"storageGroupName\": \"<string>\",\n                    \"storageSystemId\": \"<string>\"\n                }\n            ],\n            \"targetHostId\": \"<string>\"\n        },\n        \"targetVmInfo\": {\n            \"inventorySourceId\": \"<string>\",\n            \"vmName\": \"<string>\",\n            \"dataCenterMoref\": \"<string>\",\n            \"clusterMoref\": \"<string>\",\n            \"hostMoref\": \"<string>\",\n            \"dataStoreMoref\": \"<string>\",\n            \"credentials\": {\n                \"adminCredentialId\": \"<string>\",\n                \"userCredentialId\": \"<string>\"\n            },\n            \"deleteBackingFile\": \"<boolean>\",\n            \"disks\": [\n                {\n                    \"datastore\": \"<string>\",\n                    \"label\": \"<string>\",\n                    \"provisioningType\": \"<string>\"\n                }\n            ],\n            \"esxHost\": {\n                \"hostName\": \"<string>\",\n                \"userName\": \"<string>\",\n                \"userPassword\": \"<string>\"\n            },\n            \"folderMoref\": \"<string>\",\n            \"recoverConfig\": \"<boolean>\",\n            \"resourcePoolMoref\": \"<string>\",\n            \"restoredVmAsset\": {\n                \"assetRef\": \"<string>\",\n                \"vmRef\": \"<string>\"\n            },\n            \"spbmRestoreDirective\": \"<string>\",\n            \"tagRestoreDirective\": \"<string>\",\n            \"vmPowerOn\": \"<boolean>\",\n            \"vmReconnectNic\": \"<boolean>\"\n        }\n    },\n    \"startTime\": \"<dateTime>\",\n    \"state\": \"<string>\",\n    \"status\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/restored-copies",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"restored-copies"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "The request is not valid.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"description\": \"<string>\",\n    \"restoreType\": \"<string>\",\n    \"activityId\": \"<string>\",\n    \"completionTime\": \"<dateTime>\",\n    \"copyId\": \"<string>\",\n    \"copyIds\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"expirationTime\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"options\": {\n        \"enableDebug\": \"<boolean>\",\n        \"fileRelocationOptions\": {\n            \"targetDataFileLocation\": \"<string>\",\n            \"targetLogFileLocation\": \"<string>\",\n            \"type\": \"<string>\"\n        },\n        \"forceDatabaseOverwrite\": \"<boolean>\",\n        \"performTailLogBackup\": \"<boolean>\",\n        \"recoveryState\": \"<string>\",\n        \"restoreOriginalMachineConfig\": \"<boolean>\",\n        \"stopAtTime\": \"<string>\",\n        \"vcenterId\": \"<string>\"\n    },\n    \"restoreEntireBackupTransaction\": \"<boolean>\",\n    \"restoredCopiesDetails\": {\n        \"targetCloudInfo\": {\n            \"drType\": \"<string>\",\n            \"networkId\": \"<string>\",\n            \"securityGroupIds\": [\n                \"<string>\",\n                \"<string>\"\n            ]\n        },\n        \"targetDatabaseInfo\": {\n            \"applicationSystemId\": \"<string>\",\n            \"assetName\": \"<string>\",\n            \"hostId\": \"<string>\"\n        },\n        \"targetFileSystemInfo\": {\n            \"location\": \"<string>\",\n            \"conflictStrategy\": \"<string>\",\n            \"hostId\": \"<string>\",\n            \"mountUrl\": \"<string>\",\n            \"sources\": [\n                \"<string>\",\n                \"<string>\"\n            ]\n        },\n        \"targetK8sInfo\": {\n            \"namespace\": \"<string>\",\n            \"overwritePersistentVolumeClaim\": \"<boolean>\",\n            \"persistentVolumeClaims\": [\n                {\n                    \"alternateStorageClass\": \"<string>\",\n                    \"name\": \"<string>\"\n                },\n                {\n                    \"alternateStorageClass\": \"<string>\",\n                    \"name\": \"<string>\"\n                }\n            ],\n            \"skipNamespaceResources\": \"<boolean>\",\n            \"targetInventorySourceId\": \"<string>\"\n        },\n        \"targetStorageInfo\": {\n            \"groupName\": \"<string>\",\n            \"targetDetails\": [\n                {\n                    \"restoredAssetId\": \"<string>\",\n                    \"storageGroupName\": \"<string>\",\n                    \"storageSystemId\": \"<string>\"\n                },\n                {\n                    \"restoredAssetId\": \"<string>\",\n                    \"storageGroupName\": \"<string>\",\n                    \"storageSystemId\": \"<string>\"\n                }\n            ],\n            \"targetHostId\": \"<string>\"\n        },\n        \"targetVmInfo\": {\n            \"inventorySourceId\": \"<string>\",\n            \"vmName\": \"<string>\",\n            \"dataCenterMoref\": \"<string>\",\n            \"clusterMoref\": \"<string>\",\n            \"hostMoref\": \"<string>\",\n            \"dataStoreMoref\": \"<string>\",\n            \"credentials\": {\n                \"adminCredentialId\": \"<string>\",\n                \"userCredentialId\": \"<string>\"\n            },\n            \"deleteBackingFile\": \"<boolean>\",\n            \"disks\": [\n                {\n                    \"datastore\": \"<string>\",\n                    \"label\": \"<string>\",\n                    \"provisioningType\": \"<string>\"\n                }\n            ],\n            \"esxHost\": {\n                \"hostName\": \"<string>\",\n                \"userName\": \"<string>\",\n                \"userPassword\": \"<string>\"\n            },\n            \"folderMoref\": \"<string>\",\n            \"recoverConfig\": \"<boolean>\",\n            \"resourcePoolMoref\": \"<string>\",\n            \"restoredVmAsset\": {\n                \"assetRef\": \"<string>\",\n                \"vmRef\": \"<string>\"\n            },\n            \"spbmRestoreDirective\": \"<string>\",\n            \"tagRestoreDirective\": \"<string>\",\n            \"vmPowerOn\": \"<boolean>\",\n            \"vmReconnectNic\": \"<boolean>\"\n        }\n    },\n    \"startTime\": \"<dateTime>\",\n    \"state\": \"<string>\",\n    \"status\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/restored-copies",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"restored-copies"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "An unexpected error prevented the server from fulfilling your request.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"description\": \"<string>\",\n    \"restoreType\": \"<string>\",\n    \"activityId\": \"<string>\",\n    \"completionTime\": \"<dateTime>\",\n    \"copyId\": \"<string>\",\n    \"copyIds\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"expirationTime\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"options\": {\n        \"enableDebug\": \"<boolean>\",\n        \"fileRelocationOptions\": {\n            \"targetDataFileLocation\": \"<string>\",\n            \"targetLogFileLocation\": \"<string>\",\n            \"type\": \"<string>\"\n        },\n        \"forceDatabaseOverwrite\": \"<boolean>\",\n        \"performTailLogBackup\": \"<boolean>\",\n        \"recoveryState\": \"<string>\",\n        \"restoreOriginalMachineConfig\": \"<boolean>\",\n        \"stopAtTime\": \"<string>\",\n        \"vcenterId\": \"<string>\"\n    },\n    \"restoreEntireBackupTransaction\": \"<boolean>\",\n    \"restoredCopiesDetails\": {\n        \"targetCloudInfo\": {\n            \"drType\": \"<string>\",\n            \"networkId\": \"<string>\",\n            \"securityGroupIds\": [\n                \"<string>\",\n                \"<string>\"\n            ]\n        },\n        \"targetDatabaseInfo\": {\n            \"applicationSystemId\": \"<string>\",\n            \"assetName\": \"<string>\",\n            \"hostId\": \"<string>\"\n        },\n        \"targetFileSystemInfo\": {\n            \"location\": \"<string>\",\n            \"conflictStrategy\": \"<string>\",\n            \"hostId\": \"<string>\",\n            \"mountUrl\": \"<string>\",\n            \"sources\": [\n                \"<string>\",\n                \"<string>\"\n            ]\n        },\n        \"targetK8sInfo\": {\n            \"namespace\": \"<string>\",\n            \"overwritePersistentVolumeClaim\": \"<boolean>\",\n            \"persistentVolumeClaims\": [\n                {\n                    \"alternateStorageClass\": \"<string>\",\n                    \"name\": \"<string>\"\n                },\n                {\n                    \"alternateStorageClass\": \"<string>\",\n                    \"name\": \"<string>\"\n                }\n            ],\n            \"skipNamespaceResources\": \"<boolean>\",\n            \"targetInventorySourceId\": \"<string>\"\n        },\n        \"targetStorageInfo\": {\n            \"groupName\": \"<string>\",\n            \"targetDetails\": [\n                {\n                    \"restoredAssetId\": \"<string>\",\n                    \"storageGroupName\": \"<string>\",\n                    \"storageSystemId\": \"<string>\"\n                },\n                {\n                    \"restoredAssetId\": \"<string>\",\n                    \"storageGroupName\": \"<string>\",\n                    \"storageSystemId\": \"<string>\"\n                }\n            ],\n            \"targetHostId\": \"<string>\"\n        },\n        \"targetVmInfo\": {\n            \"inventorySourceId\": \"<string>\",\n            \"vmName\": \"<string>\",\n            \"dataCenterMoref\": \"<string>\",\n            \"clusterMoref\": \"<string>\",\n            \"hostMoref\": \"<string>\",\n            \"dataStoreMoref\": \"<string>\",\n            \"credentials\": {\n                \"adminCredentialId\": \"<string>\",\n                \"userCredentialId\": \"<string>\"\n            },\n            \"deleteBackingFile\": \"<boolean>\",\n            \"disks\": [\n                {\n                    \"datastore\": \"<string>\",\n                    \"label\": \"<string>\",\n                    \"provisioningType\": \"<string>\"\n                }\n            ],\n            \"esxHost\": {\n                \"hostName\": \"<string>\",\n                \"userName\": \"<string>\",\n                \"userPassword\": \"<string>\"\n            },\n            \"folderMoref\": \"<string>\",\n            \"recoverConfig\": \"<boolean>\",\n            \"resourcePoolMoref\": \"<string>\",\n            \"restoredVmAsset\": {\n                \"assetRef\": \"<string>\",\n                \"vmRef\": \"<string>\"\n            },\n            \"spbmRestoreDirective\": \"<string>\",\n            \"tagRestoreDirective\": \"<string>\",\n            \"vmPowerOn\": \"<boolean>\",\n            \"vmReconnectNic\": \"<boolean>\"\n        }\n    },\n    \"startTime\": \"<dateTime>\",\n    \"state\": \"<string>\",\n    \"status\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/restored-copies",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"restored-copies"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "Successful operation.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"description\": \"<string>\",\n    \"restoreType\": \"<string>\",\n    \"activityId\": \"<string>\",\n    \"completionTime\": \"<dateTime>\",\n    \"copyId\": \"<string>\",\n    \"copyIds\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"expirationTime\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"options\": {\n        \"enableDebug\": \"<boolean>\",\n        \"fileRelocationOptions\": {\n            \"targetDataFileLocation\": \"<string>\",\n            \"targetLogFileLocation\": \"<string>\",\n            \"type\": \"<string>\"\n        },\n        \"forceDatabaseOverwrite\": \"<boolean>\",\n        \"performTailLogBackup\": \"<boolean>\",\n        \"recoveryState\": \"<string>\",\n        \"restoreOriginalMachineConfig\": \"<boolean>\",\n        \"stopAtTime\": \"<string>\",\n        \"vcenterId\": \"<string>\"\n    },\n    \"restoreEntireBackupTransaction\": \"<boolean>\",\n    \"restoredCopiesDetails\": {\n        \"targetCloudInfo\": {\n            \"drType\": \"<string>\",\n            \"networkId\": \"<string>\",\n            \"securityGroupIds\": [\n                \"<string>\",\n                \"<string>\"\n            ]\n        },\n        \"targetDatabaseInfo\": {\n            \"applicationSystemId\": \"<string>\",\n            \"assetName\": \"<string>\",\n            \"hostId\": \"<string>\"\n        },\n        \"targetFileSystemInfo\": {\n            \"location\": \"<string>\",\n            \"conflictStrategy\": \"<string>\",\n            \"hostId\": \"<string>\",\n            \"mountUrl\": \"<string>\",\n            \"sources\": [\n                \"<string>\",\n                \"<string>\"\n            ]\n        },\n        \"targetK8sInfo\": {\n            \"namespace\": \"<string>\",\n            \"overwritePersistentVolumeClaim\": \"<boolean>\",\n            \"persistentVolumeClaims\": [\n                {\n                    \"alternateStorageClass\": \"<string>\",\n                    \"name\": \"<string>\"\n                },\n                {\n                    \"alternateStorageClass\": \"<string>\",\n                    \"name\": \"<string>\"\n                }\n            ],\n            \"skipNamespaceResources\": \"<boolean>\",\n            \"targetInventorySourceId\": \"<string>\"\n        },\n        \"targetStorageInfo\": {\n            \"groupName\": \"<string>\",\n            \"targetDetails\": [\n                {\n                    \"restoredAssetId\": \"<string>\",\n                    \"storageGroupName\": \"<string>\",\n                    \"storageSystemId\": \"<string>\"\n                },\n                {\n                    \"restoredAssetId\": \"<string>\",\n                    \"storageGroupName\": \"<string>\",\n                    \"storageSystemId\": \"<string>\"\n                }\n            ],\n            \"targetHostId\": \"<string>\"\n        },\n        \"targetVmInfo\": {\n            \"inventorySourceId\": \"<string>\",\n            \"vmName\": \"<string>\",\n            \"dataCenterMoref\": \"<string>\",\n            \"clusterMoref\": \"<string>\",\n            \"hostMoref\": \"<string>\",\n            \"dataStoreMoref\": \"<string>\",\n            \"credentials\": {\n                \"adminCredentialId\": \"<string>\",\n                \"userCredentialId\": \"<string>\"\n            },\n            \"deleteBackingFile\": \"<boolean>\",\n            \"disks\": [\n                {\n                    \"datastore\": \"<string>\",\n                    \"label\": \"<string>\",\n                    \"provisioningType\": \"<string>\"\n                }\n            ],\n            \"esxHost\": {\n                \"hostName\": \"<string>\",\n                \"userName\": \"<string>\",\n                \"userPassword\": \"<string>\"\n            },\n            \"folderMoref\": \"<string>\",\n            \"recoverConfig\": \"<boolean>\",\n            \"resourcePoolMoref\": \"<string>\",\n            \"restoredVmAsset\": {\n                \"assetRef\": \"<string>\",\n                \"vmRef\": \"<string>\"\n            },\n            \"spbmRestoreDirective\": \"<string>\",\n            \"tagRestoreDirective\": \"<string>\",\n            \"vmPowerOn\": \"<boolean>\",\n            \"vmReconnectNic\": \"<boolean>\"\n        }\n    },\n    \"startTime\": \"<dateTime>\",\n    \"state\": \"<string>\",\n    \"status\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/restored-copies",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"restored-copies"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"description\": \"Duis consequat\",\n \"restoreType\": \"DIRECT_TO_ESX\",\n \"activityId\": \"ad cupidatat laborum consectetur nostrud\",\n \"completionTime\": \"1949-11-12T20:29:09.795Z\",\n \"copyId\": \"pariatur sunt\",\n \"copyIds\": [\n  \"do dolore eiusmod Ut officia\",\n  \"nostrud officia Duis ea laborum\"\n ],\n \"expirationTime\": \"1972-04-20T04:54:10.485Z\",\n \"id\": \"Lorem ut\",\n \"options\": {\n  \"enableDebug\": false,\n  \"fileRelocationOptions\": {\n   \"targetDataFileLocation\": \"veniam ex\",\n   \"targetLogFileLocation\": \"in laborum commodo culpa labore\",\n   \"type\": \"CUSTOM_LOCATION\"\n  },\n  \"forceDatabaseOverwrite\": false,\n  \"performTailLogBackup\": false,\n  \"recoveryState\": \"RECOVERY\",\n  \"restoreOriginalMachineConfig\": true,\n  \"stopAtTime\": \"sed\",\n  \"vcenterId\": \"consectetur ut sint laborum cupidatat\"\n },\n \"restoreEntireBackupTransaction\": false,\n \"restoredCopiesDetails\": {\n  \"targetCloudInfo\": {\n   \"drType\": \"sit qui tempor\",\n   \"networkId\": \"mollit\",\n   \"securityGroupIds\": [\n    \"incididunt sunt culpa\",\n    \"quis exercitation pariatur culpa proident\"\n   ]\n  },\n  \"targetDatabaseInfo\": {\n   \"applicationSystemId\": \"ut\",\n   \"assetName\": \"mollit reprehenderit\",\n   \"hostId\": \"deserunt tempor\"\n  },\n  \"targetFileSystemInfo\": {\n   \"location\": \"ipsum quis ea\",\n   \"conflictStrategy\": \"OVERWRITE\",\n   \"hostId\": \"commodo sit\",\n   \"mountUrl\": \"aliquip officia commodo do sint\",\n   \"sources\": [\n    \"in consectetur in sint nostrud\",\n    \"cupidatat voluptate esse\"\n   ]\n  },\n  \"targetK8sInfo\": {\n   \"namespace\": \"dolor velit dolore\",\n   \"overwritePersistentVolumeClaim\": false,\n   \"persistentVolumeClaims\": [\n    {\n     \"alternateStorageClass\": \"in non mollit\",\n     \"name\": \"nostrud Ut in dolore\"\n    },\n    {\n     \"alternateStorageClass\": \"adipisicing do Duis dolore\",\n     \"name\": \"proident voluptate\"\n    }\n   ],\n   \"skipNamespaceResources\": false,\n   \"targetInventorySourceId\": \"ea non mollit\"\n  },\n  \"targetStorageInfo\": {\n   \"groupName\": \"laborum eiusmod non culpa ullamco\",\n   \"targetDetails\": [\n    {\n     \"restoredAssetId\": \"minim elit nisi sint\",\n     \"storageGroupName\": \"aliquip\",\n     \"storageSystemId\": \"aute consectetur\"\n    },\n    {\n     \"restoredAssetId\": \"in\",\n     \"storageGroupName\": \"laborum dolor\",\n     \"storageSystemId\": \"enim dolor aute Excepteur sit\"\n    }\n   ],\n   \"targetHostId\": \"ut aliqua\"\n  },\n  \"targetVmInfo\": {\n   \"inventorySourceId\": \"ut\",\n   \"vmName\": \"culpa\",\n   \"dataCenterMoref\": \"adipisicing ad velit laboris\",\n   \"clusterMoref\": \"dolor Lorem voluptate velit\",\n   \"hostMoref\": \"aliqua adipisicing \",\n   \"dataStoreMoref\": \"ex ipsum Excepteur tempor\",\n   \"credentials\": {\n    \"adminCredentialId\": \"qui\",\n    \"userCredentialId\": \"sit Lorem\"\n   },\n   \"deleteBackingFile\": true,\n   \"disks\": [\n    {\n     \"datastore\": \"Ut consequat\",\n     \"label\": \"U\",\n     \"provisioningType\": \"THICK_LAZY\"\n    },\n    {\n     \"datastore\": \"tempor eiusmod adipisicing\",\n     \"label\": \"ea laborum culpa eiusmod\",\n     \"provisioningType\": \"THICK_LAZY\"\n    }\n   ],\n   \"esxHost\": {\n    \"hostName\": \"sed elit Excepteur magna\",\n    \"userName\": \"ut officia con\",\n    \"userPassword\": \"exercitation enim a\"\n   },\n   \"folderMoref\": \"nisi\",\n   \"recoverConfig\": false,\n   \"resourcePoolMoref\": \"Excepteur cupidatat aliquip ut commodo\",\n   \"restoredVmAsset\": {\n    \"assetRef\": \"proident ex nulla dolore\",\n    \"vmRef\": \"id elit sit exercitation mollit\"\n   },\n   \"spbmRestoreDirective\": \"exercitation ipsum velit\",\n   \"tagRestoreDirective\": \"adipisicing consequat in\",\n   \"vmPowerOn\": false,\n   \"vmReconnectNic\": false\n  }\n },\n \"startTime\": \"1967-09-20T08:41:35.855Z\",\n \"state\": \"WAITING\",\n \"status\": \"FAILED\"\n}"
								},
								{
									"name": "The requestor is not authorized to perform this operation.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"description\": \"<string>\",\n    \"restoreType\": \"<string>\",\n    \"activityId\": \"<string>\",\n    \"completionTime\": \"<dateTime>\",\n    \"copyId\": \"<string>\",\n    \"copyIds\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"expirationTime\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"options\": {\n        \"enableDebug\": \"<boolean>\",\n        \"fileRelocationOptions\": {\n            \"targetDataFileLocation\": \"<string>\",\n            \"targetLogFileLocation\": \"<string>\",\n            \"type\": \"<string>\"\n        },\n        \"forceDatabaseOverwrite\": \"<boolean>\",\n        \"performTailLogBackup\": \"<boolean>\",\n        \"recoveryState\": \"<string>\",\n        \"restoreOriginalMachineConfig\": \"<boolean>\",\n        \"stopAtTime\": \"<string>\",\n        \"vcenterId\": \"<string>\"\n    },\n    \"restoreEntireBackupTransaction\": \"<boolean>\",\n    \"restoredCopiesDetails\": {\n        \"targetCloudInfo\": {\n            \"drType\": \"<string>\",\n            \"networkId\": \"<string>\",\n            \"securityGroupIds\": [\n                \"<string>\",\n                \"<string>\"\n            ]\n        },\n        \"targetDatabaseInfo\": {\n            \"applicationSystemId\": \"<string>\",\n            \"assetName\": \"<string>\",\n            \"hostId\": \"<string>\"\n        },\n        \"targetFileSystemInfo\": {\n            \"location\": \"<string>\",\n            \"conflictStrategy\": \"<string>\",\n            \"hostId\": \"<string>\",\n            \"mountUrl\": \"<string>\",\n            \"sources\": [\n                \"<string>\",\n                \"<string>\"\n            ]\n        },\n        \"targetK8sInfo\": {\n            \"namespace\": \"<string>\",\n            \"overwritePersistentVolumeClaim\": \"<boolean>\",\n            \"persistentVolumeClaims\": [\n                {\n                    \"alternateStorageClass\": \"<string>\",\n                    \"name\": \"<string>\"\n                },\n                {\n                    \"alternateStorageClass\": \"<string>\",\n                    \"name\": \"<string>\"\n                }\n            ],\n            \"skipNamespaceResources\": \"<boolean>\",\n            \"targetInventorySourceId\": \"<string>\"\n        },\n        \"targetStorageInfo\": {\n            \"groupName\": \"<string>\",\n            \"targetDetails\": [\n                {\n                    \"restoredAssetId\": \"<string>\",\n                    \"storageGroupName\": \"<string>\",\n                    \"storageSystemId\": \"<string>\"\n                },\n                {\n                    \"restoredAssetId\": \"<string>\",\n                    \"storageGroupName\": \"<string>\",\n                    \"storageSystemId\": \"<string>\"\n                }\n            ],\n            \"targetHostId\": \"<string>\"\n        },\n        \"targetVmInfo\": {\n            \"inventorySourceId\": \"<string>\",\n            \"vmName\": \"<string>\",\n            \"dataCenterMoref\": \"<string>\",\n            \"clusterMoref\": \"<string>\",\n            \"hostMoref\": \"<string>\",\n            \"dataStoreMoref\": \"<string>\",\n            \"credentials\": {\n                \"adminCredentialId\": \"<string>\",\n                \"userCredentialId\": \"<string>\"\n            },\n            \"deleteBackingFile\": \"<boolean>\",\n            \"disks\": [\n                {\n                    \"datastore\": \"<string>\",\n                    \"label\": \"<string>\",\n                    \"provisioningType\": \"<string>\"\n                }\n            ],\n            \"esxHost\": {\n                \"hostName\": \"<string>\",\n                \"userName\": \"<string>\",\n                \"userPassword\": \"<string>\"\n            },\n            \"folderMoref\": \"<string>\",\n            \"recoverConfig\": \"<boolean>\",\n            \"resourcePoolMoref\": \"<string>\",\n            \"restoredVmAsset\": {\n                \"assetRef\": \"<string>\",\n                \"vmRef\": \"<string>\"\n            },\n            \"spbmRestoreDirective\": \"<string>\",\n            \"tagRestoreDirective\": \"<string>\",\n            \"vmPowerOn\": \"<boolean>\",\n            \"vmReconnectNic\": \"<boolean>\"\n        }\n    },\n    \"startTime\": \"<dateTime>\",\n    \"state\": \"<string>\",\n    \"status\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/restored-copies",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"restored-copies"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "roles",
					"item": [
						{
							"name": "Get all roles.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/roles?page=1&pageSize=100&filter=<string>&orderby=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"roles"
									],
									"query": [
										{
											"key": "page",
											"value": "1",
											"description": "The page number to be returned. Must not be less than 1. See Tutorials - Page the List Result."
										},
										{
											"key": "pageSize",
											"value": "100",
											"description": "The number of resources to be returned. Must not be less than 1. See Tutorials - Page the List Result."
										},
										{
											"key": "filter",
											"value": "<string>",
											"description": "The filter string that is expressed using PowerProtect Data Manager filter syntax. See Tutorials - Filter the List Result."
										},
										{
											"key": "orderby",
											"value": "<string>",
											"description": "The attributes/fields to be sorted by. This parameter can combine with sort direction \"ASC\" or \"DESC\". Default direction is ASC. See Tutorials - Sort the List Result."
										}
									]
								},
								"description": "Retrieves the list of all the assignable system roles and their descriptions. This list contains information about the role privileges.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n\n> This endpoint supports pagination with types: random\n"
							},
							"response": [
								{
									"name": "An internal server error occurred. Please contact the system administrator.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/roles?page=1&pageSize=100&filter=<string>&orderby=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"roles"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "<string>"
												},
												{
													"key": "orderby",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "The request body is either invalid or is missing the required fields.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/roles?page=1&pageSize=100&filter=<string>&orderby=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"roles"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "<string>"
												},
												{
													"key": "orderby",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "The operation is currently unavailable. The system may currently be in maintenance mode.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/roles?page=1&pageSize=100&filter=<string>&orderby=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"roles"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "<string>"
												},
												{
													"key": "orderby",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Service Unavailable",
									"code": 503,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Successfully retrieved the list of roles.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/roles?page=1&pageSize=100&filter=<string>&orderby=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"roles"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "<string>"
												},
												{
													"key": "orderby",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"content\": [\n  {\n   \"description\": \"elit occaecat eiusmod nisi\",\n   \"hiddenRole\": false,\n   \"id\": \"dolore eiusmod sit aliqui\",\n   \"name\": \"obq4\",\n   \"privilegeList\": [\n    {\n     \"category\": \"commodo cupidatat labore esse reprehenderit\",\n     \"description\": \"aliquip dolore dolor Lorem\",\n     \"name\": \"aliquip sit labore in\"\n    },\n    {\n     \"category\": \"Excepteur deserunt qui\",\n     \"description\": \"consequat ea mollit anim\",\n     \"name\": \"eiusmod et\"\n    }\n   ],\n   \"systemRole\": false,\n   \"transferable\": true\n  },\n  {\n   \"description\": \"ex veniam laborum\",\n   \"hiddenRole\": false,\n   \"id\": \"id deserunt mollit fugiat\",\n   \"name\": \"DqoR\",\n   \"privilegeList\": [\n    {\n     \"category\": \"culpa adipisicing anim velit cil\",\n     \"description\": \"consequat sunt amet\",\n     \"name\": \"veniam irure\"\n    },\n    {\n     \"category\": \"incididunt quis reprehenderit id\",\n     \"description\": \"Lorem veniam id\",\n     \"name\": \"sit\"\n    }\n   ],\n   \"systemRole\": true,\n   \"transferable\": false\n  }\n ],\n \"page\": {\n  \"number\": 22430189,\n  \"queryState\": \"qui labore\",\n  \"size\": -64290686,\n  \"totalElements\": 4385726,\n  \"totalPages\": -5919046\n }\n}"
								},
								{
									"name": "The authorization token is either invalid or expired.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/roles?page=1&pageSize=100&filter=<string>&orderby=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"roles"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "<string>"
												},
												{
													"key": "orderby",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get a role.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/roles/:roleId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"roles",
										":roleId"
									],
									"variable": [
										{
											"id": "182f003b-51d9-4738-8f96-54406d487554",
											"key": "roleId",
											"value": "<string>",
											"type": "string",
											"description": "(Required) Role ID."
										}
									]
								},
								"description": "Retrieves a role by ID. The role information contains the role description and role privileges. Each local user is assigned a role.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
							},
							"response": [
								{
									"name": "The user does not have the proper privileges to perform the action.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/roles/:roleId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"roles",
												":roleId"
											],
											"variable": [
												{
													"key": "roleId"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "The operation is currently unavailable. The system may currently be in maintenance mode.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/roles/:roleId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"roles",
												":roleId"
											],
											"variable": [
												{
													"key": "roleId"
												}
											]
										}
									},
									"status": "Service Unavailable",
									"code": 503,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "The specified role was not found.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/roles/:roleId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"roles",
												":roleId"
											],
											"variable": [
												{
													"key": "roleId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Successfully retrieved the specified role.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/roles/:roleId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"roles",
												":roleId"
											],
											"variable": [
												{
													"key": "roleId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"description\": \"in ex\",\n \"hiddenRole\": false,\n \"id\": \"consequat velit Duis dolore ipsum\",\n \"name\": \"    \",\n \"privilegeList\": [\n  {\n   \"category\": \"veniam sint reprehenderit est laboris\",\n   \"description\": \"laboris pariatur\",\n   \"name\": \"deserunt\"\n  },\n  {\n   \"category\": \"in est voluptate pariatur\",\n   \"description\": \"cupidatat ipsum ut\",\n   \"name\": \"proident cillum\"\n  }\n ],\n \"systemRole\": true,\n \"transferable\": false\n}"
								},
								{
									"name": "The authorization token is either invalid or expired.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/roles/:roleId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"roles",
												":roleId"
											],
											"variable": [
												{
													"key": "roleId"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "The request body is either invalid or is missing the required fields.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/roles/:roleId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"roles",
												":roleId"
											],
											"variable": [
												{
													"key": "roleId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "An internal server error occurred. Please contact the system administrator.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/roles/:roleId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"roles",
												":roleId"
											],
											"variable": [
												{
													"key": "roleId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "search-clusters",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "nodes",
									"item": [
										{
											"name": "{node Id}",
											"item": [
												{
													"name": "Remove search cluster node.",
													"request": {
														"auth": {
															"type": "apikey",
															"apikey": [
																{
																	"key": "key",
																	"value": "Authorization",
																	"type": "string"
																},
																{
																	"key": "value",
																	"value": true,
																	"type": "boolean"
																},
																{
																	"key": "in",
																	"value": "header",
																	"type": "string"
																}
															]
														},
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/v2/search-clusters/:id/nodes/:nodeId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"search-clusters",
																":id",
																"nodes",
																":nodeId"
															],
															"variable": [
																{
																	"id": "d49783e5-b50a-4731-b6b4-2fed57b3d2b9",
																	"key": "id",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) The ID of the search cluster."
																},
																{
																	"id": "199f52f6-98cb-46d5-b957-caeb4c241cc1",
																	"key": "nodeId",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) The ID of the search cluster node to be removed."
																}
															]
														},
														"description": "Removes a search cluster node.\n> This endpoint supports execution by the following roles: admin\n"
													},
													"response": [
														{
															"name": "The requestor is not allowed to perform this operation.",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": {
																			"content": "Added as a part of security scheme: apikey",
																			"type": "text/plain"
																		},
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/search-clusters/:id/nodes/:nodeId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"search-clusters",
																		":id",
																		"nodes",
																		":nodeId"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "nodeId"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
														},
														{
															"name": "The requestor is not authorized to perform this operation.",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": {
																			"content": "Added as a part of security scheme: apikey",
																			"type": "text/plain"
																		},
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/search-clusters/:id/nodes/:nodeId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"search-clusters",
																		":id",
																		"nodes",
																		":nodeId"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "nodeId"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
														},
														{
															"name": "The request is not valid.",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": {
																			"content": "Added as a part of security scheme: apikey",
																			"type": "text/plain"
																		},
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/search-clusters/:id/nodes/:nodeId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"search-clusters",
																		":id",
																		"nodes",
																		":nodeId"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "nodeId"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
														},
														{
															"name": "The request was accepted for processing.",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": {
																			"content": "Added as a part of security scheme: apikey",
																			"type": "text/plain"
																		},
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/search-clusters/:id/nodes/:nodeId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"search-clusters",
																		":id",
																		"nodes",
																		":nodeId"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "nodeId"
																		}
																	]
																}
															},
															"status": "Accepted",
															"code": 202,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"hostName\": \"sunt tempor laborum\",\n \"nodeType\": \"ea pariatur\",\n \"inventorySourceId\": \"velit nisi reprehenderit voluptate nulla\",\n \"deploymentConfig\": {\n  \"fqdn\": \"mollit quis consequat elit\",\n  \"vmName\": \"cupidatat nisi quis\",\n  \"ipAddress\": \"proident\",\n  \"dns\": \"ut voluptate\",\n  \"gateway\": \"esse in\",\n  \"netMask\": \"eu\",\n  \"networkMoref\": \"do Duis\",\n  \"ipProtocol\": \"reprehend\",\n  \"ovafile\": \"sunt in sit\",\n  \"location\": {\n   \"datastoreMoref\": \"dolore elit\",\n   \"clusterMoref\": \"nostrud elit n\",\n   \"folderMoref\": \"commodo \",\n   \"hostMoref\": \"fugiat consectetur adipisicing sint eu\",\n   \"resourcePoolMoref\": \"ut sint\"\n  },\n  \"timeZone\": \"amet eu\"\n },\n \"adminCredentials\": {\n  \"id\": \"nisi tempor ex aliquip\"\n },\n \"id\": \"deserunt dolore\",\n \"instanceUuid\": \"ullamco consectetur\",\n \"rootCredentials\": {\n  \"id\": \"Duis culpa tempor nostrud\"\n },\n \"status\": {\n  \"aliases\": [\n   \"e\",\n   \"culpa pariatur\"\n  ],\n  \"deployed\": true,\n  \"deployedTime\": \"nostrud commodo eiusmod ut\",\n  \"hostedComputeResource\": \"anim velit enim\",\n  \"lastCheckedTime\": \"dolor velit voluptate enim\",\n  \"nodeStats\": {\n   \"diskCapacity\": 51913744,\n   \"diskUsage\": -35799894\n  },\n  \"nodeStatus\": \"Ready\",\n  \"nodeStatusDetail\": \"dolore ex incididunt\",\n  \"powerState\": \"laborum fugiat nisi reprehenderit amet\",\n  \"vcenterName\": \"sint est\",\n  \"version\": \"id non Excepteur\"\n },\n \"vmMoref\": \"Excepteur qui esse enim\"\n}"
														},
														{
															"name": "The requested resource was not found.",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": {
																			"content": "Added as a part of security scheme: apikey",
																			"type": "text/plain"
																		},
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/search-clusters/:id/nodes/:nodeId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"search-clusters",
																		":id",
																		"nodes",
																		":nodeId"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "nodeId"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
														},
														{
															"name": "An unexpected error prevented the server from fulfilling your request.",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": {
																			"content": "Added as a part of security scheme: apikey",
																			"type": "text/plain"
																		},
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/search-clusters/:id/nodes/:nodeId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"search-clusters",
																		":id",
																		"nodes",
																		":nodeId"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "nodeId"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
														}
													]
												},
												{
													"name": "Get search cluster node by ID.",
													"request": {
														"auth": {
															"type": "apikey",
															"apikey": [
																{
																	"key": "key",
																	"value": "Authorization",
																	"type": "string"
																},
																{
																	"key": "value",
																	"value": true,
																	"type": "boolean"
																},
																{
																	"key": "in",
																	"value": "header",
																	"type": "string"
																}
															]
														},
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/v2/search-clusters/:id/nodes/:nodeId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"search-clusters",
																":id",
																"nodes",
																":nodeId"
															],
															"variable": [
																{
																	"id": "9dceb104-98e3-42d9-9c86-0f98f01264e7",
																	"key": "id",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) The ID of the search cluster node."
																},
																{
																	"id": "30f82415-2d18-4e67-a6e0-8e52622299d6",
																	"key": "nodeId",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) The ID of the search cluster node."
																}
															]
														},
														"description": "Retrieves a search cluster node by its ID.\n> This endpoint supports execution by the following roles: admin\n"
													},
													"response": [
														{
															"name": "Successfully returned the search cluster node.",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": {
																			"content": "Added as a part of security scheme: apikey",
																			"type": "text/plain"
																		},
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/search-clusters/:id/nodes/:nodeId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"search-clusters",
																		":id",
																		"nodes",
																		":nodeId"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "nodeId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"hostName\": \"sunt tempor laborum\",\n \"nodeType\": \"ea pariatur\",\n \"inventorySourceId\": \"velit nisi reprehenderit voluptate nulla\",\n \"deploymentConfig\": {\n  \"fqdn\": \"mollit quis consequat elit\",\n  \"vmName\": \"cupidatat nisi quis\",\n  \"ipAddress\": \"proident\",\n  \"dns\": \"ut voluptate\",\n  \"gateway\": \"esse in\",\n  \"netMask\": \"eu\",\n  \"networkMoref\": \"do Duis\",\n  \"ipProtocol\": \"reprehend\",\n  \"ovafile\": \"sunt in sit\",\n  \"location\": {\n   \"datastoreMoref\": \"dolore elit\",\n   \"clusterMoref\": \"nostrud elit n\",\n   \"folderMoref\": \"commodo \",\n   \"hostMoref\": \"fugiat consectetur adipisicing sint eu\",\n   \"resourcePoolMoref\": \"ut sint\"\n  },\n  \"timeZone\": \"amet eu\"\n },\n \"adminCredentials\": {\n  \"id\": \"nisi tempor ex aliquip\"\n },\n \"id\": \"deserunt dolore\",\n \"instanceUuid\": \"ullamco consectetur\",\n \"rootCredentials\": {\n  \"id\": \"Duis culpa tempor nostrud\"\n },\n \"status\": {\n  \"aliases\": [\n   \"e\",\n   \"culpa pariatur\"\n  ],\n  \"deployed\": true,\n  \"deployedTime\": \"nostrud commodo eiusmod ut\",\n  \"hostedComputeResource\": \"anim velit enim\",\n  \"lastCheckedTime\": \"dolor velit voluptate enim\",\n  \"nodeStats\": {\n   \"diskCapacity\": 51913744,\n   \"diskUsage\": -35799894\n  },\n  \"nodeStatus\": \"Ready\",\n  \"nodeStatusDetail\": \"dolore ex incididunt\",\n  \"powerState\": \"laborum fugiat nisi reprehenderit amet\",\n  \"vcenterName\": \"sint est\",\n  \"version\": \"id non Excepteur\"\n },\n \"vmMoref\": \"Excepteur qui esse enim\"\n}"
														},
														{
															"name": "An unexpected error prevented the server from fulfilling your request.",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": {
																			"content": "Added as a part of security scheme: apikey",
																			"type": "text/plain"
																		},
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/search-clusters/:id/nodes/:nodeId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"search-clusters",
																		":id",
																		"nodes",
																		":nodeId"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "nodeId"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
														},
														{
															"name": "The requestor is not authorized to perform this operation.",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": {
																			"content": "Added as a part of security scheme: apikey",
																			"type": "text/plain"
																		},
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/search-clusters/:id/nodes/:nodeId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"search-clusters",
																		":id",
																		"nodes",
																		":nodeId"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "nodeId"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
														},
														{
															"name": "The request is not valid.",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": {
																			"content": "Added as a part of security scheme: apikey",
																			"type": "text/plain"
																		},
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/search-clusters/:id/nodes/:nodeId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"search-clusters",
																		":id",
																		"nodes",
																		":nodeId"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "nodeId"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
														},
														{
															"name": "The requestor is not allowed to perform this operation.",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": {
																			"content": "Added as a part of security scheme: apikey",
																			"type": "text/plain"
																		},
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/search-clusters/:id/nodes/:nodeId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"search-clusters",
																		":id",
																		"nodes",
																		":nodeId"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "nodeId"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
														}
													]
												},
												{
													"name": "Manage search cluster node.",
													"request": {
														"auth": {
															"type": "apikey",
															"apikey": [
																{
																	"key": "key",
																	"value": "Authorization",
																	"type": "string"
																},
																{
																	"key": "value",
																	"value": true,
																	"type": "boolean"
																},
																{
																	"key": "in",
																	"value": "header",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"nodeId\": \"<string>\",\n    \"operation\": \"<string>\"\n}",
															"options": {
																"raw": {}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/search-clusters/:id/nodes/:nodeId/management",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"search-clusters",
																":id",
																"nodes",
																":nodeId",
																"management"
															],
															"variable": [
																{
																	"id": "1793cf20-d028-482f-a0f4-5f4c7dfa389e",
																	"key": "id",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) The ID of the search cluster."
																},
																{
																	"id": "92238189-b28c-45de-87aa-eba66d2cd864",
																	"key": "nodeId",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) The ID of the search cluster node to be managed."
																}
															]
														},
														"description": "Manages the search cluster node.\n> This endpoint supports execution by the following roles: admin\n"
													},
													"response": [
														{
															"name": "The request was accepted for processing.",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": {
																			"content": "Added as a part of security scheme: apikey",
																			"type": "text/plain"
																		},
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"nodeId\": \"<string>\",\n    \"operation\": \"<string>\"\n}"
																},
																"url": {
																	"raw": "{{baseUrl}}/api/v2/search-clusters/:id/nodes/:nodeId/management",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"search-clusters",
																		":id",
																		"nodes",
																		":nodeId",
																		"management"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "nodeId"
																		}
																	]
																}
															},
															"status": "Accepted",
															"code": 202,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"nodeId\": \"irure sit\",\n \"operation\": \"REDEPLOY\"\n}"
														},
														{
															"name": "An unexpected error prevented the server from fulfilling your request.",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": {
																			"content": "Added as a part of security scheme: apikey",
																			"type": "text/plain"
																		},
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"nodeId\": \"<string>\",\n    \"operation\": \"<string>\"\n}"
																},
																"url": {
																	"raw": "{{baseUrl}}/api/v2/search-clusters/:id/nodes/:nodeId/management",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"search-clusters",
																		":id",
																		"nodes",
																		":nodeId",
																		"management"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "nodeId"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
														},
														{
															"name": "The requested resource was not found.",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": {
																			"content": "Added as a part of security scheme: apikey",
																			"type": "text/plain"
																		},
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"nodeId\": \"<string>\",\n    \"operation\": \"<string>\"\n}"
																},
																"url": {
																	"raw": "{{baseUrl}}/api/v2/search-clusters/:id/nodes/:nodeId/management",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"search-clusters",
																		":id",
																		"nodes",
																		":nodeId",
																		"management"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "nodeId"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
														},
														{
															"name": "The requestor is not authorized to perform this operation.",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": {
																			"content": "Added as a part of security scheme: apikey",
																			"type": "text/plain"
																		},
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"nodeId\": \"<string>\",\n    \"operation\": \"<string>\"\n}"
																},
																"url": {
																	"raw": "{{baseUrl}}/api/v2/search-clusters/:id/nodes/:nodeId/management",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"search-clusters",
																		":id",
																		"nodes",
																		":nodeId",
																		"management"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "nodeId"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
														},
														{
															"name": "The request is not valid.",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": {
																			"content": "Added as a part of security scheme: apikey",
																			"type": "text/plain"
																		},
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"nodeId\": \"<string>\",\n    \"operation\": \"<string>\"\n}"
																},
																"url": {
																	"raw": "{{baseUrl}}/api/v2/search-clusters/:id/nodes/:nodeId/management",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"search-clusters",
																		":id",
																		"nodes",
																		":nodeId",
																		"management"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "nodeId"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
														},
														{
															"name": "Successful operation.",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": {
																			"content": "Added as a part of security scheme: apikey",
																			"type": "text/plain"
																		},
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"nodeId\": \"<string>\",\n    \"operation\": \"<string>\"\n}"
																},
																"url": {
																	"raw": "{{baseUrl}}/api/v2/search-clusters/:id/nodes/:nodeId/management",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"search-clusters",
																		":id",
																		"nodes",
																		":nodeId",
																		"management"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "nodeId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"nodeId\": \"irure sit\",\n \"operation\": \"REDEPLOY\"\n}"
														},
														{
															"name": "The requestor is not allowed to perform this operation.",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": {
																			"content": "Added as a part of security scheme: apikey",
																			"type": "text/plain"
																		},
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"nodeId\": \"<string>\",\n    \"operation\": \"<string>\"\n}"
																},
																"url": {
																	"raw": "{{baseUrl}}/api/v2/search-clusters/:id/nodes/:nodeId/management",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"search-clusters",
																		":id",
																		"nodes",
																		":nodeId",
																		"management"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "nodeId"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
														}
													]
												}
											],
											"protocolProfileBehavior": {},
											"_postman_isSubFolder": true
										},
										{
											"name": "Get all search cluster nodes.",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": true,
															"type": "boolean"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/v2/search-clusters/:id/nodes?page=1&pageSize=100&filter=<string>&orderby=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"search-clusters",
														":id",
														"nodes"
													],
													"query": [
														{
															"key": "page",
															"value": "1",
															"description": "The page number to be returned. Must not be less than 1. See Tutorials - Page the List Result."
														},
														{
															"key": "pageSize",
															"value": "100",
															"description": "The number of resources to be returned. Must not be less than 1. See Tutorials - Page the List Result."
														},
														{
															"key": "filter",
															"value": "<string>",
															"description": "The filter string that is expressed using PowerProtect Data Manager filter syntax. See Tutorials - Filter the List Result."
														},
														{
															"key": "orderby",
															"value": "<string>",
															"description": "The attributes/fields to be sorted by. This parameter can combine with sort direction \"ASC\" or \"DESC\". Default direction is ASC. See Tutorials - Sort the List Result."
														}
													],
													"variable": [
														{
															"id": "3788edc4-f569-44ca-b41b-001cedec62a0",
															"key": "id",
															"value": "<string>",
															"type": "string",
															"description": "(Required) The ID of the search cluster."
														}
													]
												},
												"description": "Retrieves all search cluster nodes.\n> This endpoint supports execution by the following roles: admin\n"
											},
											"response": [
												{
													"name": "The requestor is not allowed to perform this operation.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: apikey",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/search-clusters/:id/nodes?page=1&pageSize=100&filter=<string>&orderby=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"search-clusters",
																":id",
																"nodes"
															],
															"query": [
																{
																	"key": "page",
																	"value": "1"
																},
																{
																	"key": "pageSize",
																	"value": "100"
																},
																{
																	"key": "filter",
																	"value": "<string>"
																},
																{
																	"key": "orderby",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
												},
												{
													"name": "Successfully returned available nodes.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: apikey",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/search-clusters/:id/nodes?page=1&pageSize=100&filter=<string>&orderby=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"search-clusters",
																":id",
																"nodes"
															],
															"query": [
																{
																	"key": "page",
																	"value": "1"
																},
																{
																	"key": "pageSize",
																	"value": "100"
																},
																{
																	"key": "filter",
																	"value": "<string>"
																},
																{
																	"key": "orderby",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n {\n  \"hostName\": \"dolor sit\",\n  \"nodeType\": \"cupidatat ea ad\",\n  \"inventorySourceId\": \"dolore ullamco cupidatat\",\n  \"deploymentConfig\": {\n   \"fqdn\": \"adipisicing reprehenderit eiusmod occaecat aliquip\",\n   \"vmName\": \"aliquip ut eiusmod\",\n   \"ipAddress\": \"ea in sed\",\n   \"dns\": \"ipsum id\",\n   \"gateway\": \"aute\",\n   \"netMask\": \"occa\",\n   \"networkMoref\": \"nostrud dolore\",\n   \"ipProtocol\": \"culpa\",\n   \"ovafile\": \"amet et\",\n   \"location\": {\n    \"datastoreMoref\": \"exercitation in culpa\",\n    \"clusterMoref\": \"nulla veniam\",\n    \"folderMoref\": \"est tempor sunt voluptate fugiat\",\n    \"hostMoref\": \"qui minim aute deserunt\",\n    \"resourcePoolMoref\": \"cupidatat v\"\n   },\n   \"timeZone\": \"commodo ullamco irure qui\"\n  },\n  \"adminCredentials\": {\n   \"id\": \"laboris Lorem elit\"\n  },\n  \"id\": \"irure ipsum culpa dolore\",\n  \"instanceUuid\": \"irure deserunt\",\n  \"rootCredentials\": {\n   \"id\": \"dolore et Lorem eiusmod\"\n  },\n  \"status\": {\n   \"aliases\": [\n    \"eiusmod minim adipisicing\",\n    \"adipisicing ullamco dolore reprehenderit\"\n   ],\n   \"deployed\": true,\n   \"deployedTime\": \"cillum sed\",\n   \"hostedComputeResource\": \"Lorem magna velit nisi\",\n   \"lastCheckedTime\": \"magna ad aute incididunt\",\n   \"nodeStats\": {\n    \"diskCapacity\": 68282525,\n    \"diskUsage\": 89348429\n   },\n   \"nodeStatus\": \"DisablePending\",\n   \"nodeStatusDetail\": \"voluptate quis id culpa\",\n   \"powerState\": \"aliqua ex\",\n   \"vcenterName\": \"nostrud adipisicing id\",\n   \"version\": \"amet\"\n  },\n  \"vmMoref\": \"occaecat in minim\"\n },\n {\n  \"hostName\": \"minim Duis sint\",\n  \"nodeType\": \"incididunt laboris\",\n  \"inventorySourceId\": \"nulla non velit\",\n  \"deploymentConfig\": {\n   \"fqdn\": \"Duis consectetur\",\n   \"vmName\": \"sed velit aliquip et\",\n   \"ipAddress\": \"Ut sint eiusmod cupidatat\",\n   \"dns\": \"cupidatat elit\",\n   \"gateway\": \"veniam laborum\",\n   \"netMask\": \"consequat cillum ut\",\n   \"networkMoref\": \"do ea mollit irure\",\n   \"ipProtocol\": \"non mollit id\",\n   \"ovafile\": \"tempor commodo cupidatat\",\n   \"location\": {\n    \"datastoreMoref\": \"Lorem reprehenderit culpa nostr\",\n    \"clusterMoref\": \"adipisicing laborum exercitation officia cupidatat\",\n    \"folderMoref\": \"quis Excepteur occaecat\",\n    \"hostMoref\": \"proident nulla\",\n    \"resourcePoolMoref\": \"fugiat minim anim Duis\"\n   },\n   \"timeZone\": \"incididunt minim anim id\"\n  },\n  \"adminCredentials\": {\n   \"id\": \"labore mollit occaecat eu\"\n  },\n  \"id\": \"sunt laborum ullamco Lorem\",\n  \"instanceUuid\": \"pariatur eu\",\n  \"rootCredentials\": {\n   \"id\": \"consectetur Lorem reprehenderit\"\n  },\n  \"status\": {\n   \"aliases\": [\n    \"velit sint minim\",\n    \"in dolor proident ea commodo\"\n   ],\n   \"deployed\": false,\n   \"deployedTime\": \"consectetur ullamco\",\n   \"hostedComputeResource\": \"commodo cillum labore sit\",\n   \"lastCheckedTime\": \"Excepteur fugiat sed elit ut\",\n   \"nodeStats\": {\n    \"diskCapacity\": -37364976,\n    \"diskUsage\": -71576363\n   },\n   \"nodeStatus\": \"Ready\",\n   \"nodeStatusDetail\": \"ut reprehenderit culpa amet\",\n   \"powerState\": \"officia id reprehenderit laboris nisi\",\n   \"vcenterName\": \"occaecat cillum minim\",\n   \"version\": \"eu Lorem\"\n  },\n  \"vmMoref\": \"\"\n }\n]"
												},
												{
													"name": "The requestor is not authorized to perform this operation.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: apikey",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/search-clusters/:id/nodes?page=1&pageSize=100&filter=<string>&orderby=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"search-clusters",
																":id",
																"nodes"
															],
															"query": [
																{
																	"key": "page",
																	"value": "1"
																},
																{
																	"key": "pageSize",
																	"value": "100"
																},
																{
																	"key": "filter",
																	"value": "<string>"
																},
																{
																	"key": "orderby",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
												},
												{
													"name": "An unexpected error prevented the server from fulfilling your request.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: apikey",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/search-clusters/:id/nodes?page=1&pageSize=100&filter=<string>&orderby=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"search-clusters",
																":id",
																"nodes"
															],
															"query": [
																{
																	"key": "page",
																	"value": "1"
																},
																{
																	"key": "pageSize",
																	"value": "100"
																},
																{
																	"key": "filter",
																	"value": "<string>"
																},
																{
																	"key": "orderby",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
												},
												{
													"name": "The request is not valid.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: apikey",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/search-clusters/:id/nodes?page=1&pageSize=100&filter=<string>&orderby=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"search-clusters",
																":id",
																"nodes"
															],
															"query": [
																{
																	"key": "page",
																	"value": "1"
																},
																{
																	"key": "pageSize",
																	"value": "100"
																},
																{
																	"key": "filter",
																	"value": "<string>"
																},
																{
																	"key": "orderby",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
												}
											]
										},
										{
											"name": "Deploy a search cluster node.",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": true,
															"type": "boolean"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"hostName\": \"<string>\",\n    \"nodeType\": \"<string>\",\n    \"inventorySourceId\": \"<string>\",\n    \"deploymentConfig\": {\n        \"fqdn\": \"<string>\",\n        \"vmName\": \"<string>\",\n        \"ipAddress\": \"<string>\",\n        \"dns\": \"<string>\",\n        \"gateway\": \"<string>\",\n        \"netMask\": \"<string>\",\n        \"networkMoref\": \"<string>\",\n        \"ipProtocol\": \"<string>\",\n        \"ovafile\": \"<string>\",\n        \"location\": {\n            \"datastoreMoref\": \"<string>\",\n            \"clusterMoref\": \"<string>\",\n            \"folderMoref\": \"<string>\",\n            \"hostMoref\": \"<string>\",\n            \"resourcePoolMoref\": \"<string>\"\n        },\n        \"timeZone\": \"<string>\"\n    },\n    \"adminCredentials\": {\n        \"id\": \"<string>\"\n    },\n    \"id\": \"<string>\",\n    \"instanceUuid\": \"<string>\",\n    \"rootCredentials\": {\n        \"id\": \"<string>\"\n    },\n    \"status\": {\n        \"aliases\": [\n            \"<string>\",\n            \"<string>\"\n        ],\n        \"deployed\": \"<boolean>\",\n        \"deployedTime\": \"<string>\",\n        \"hostedComputeResource\": \"<string>\",\n        \"lastCheckedTime\": \"<string>\",\n        \"nodeStats\": {\n            \"diskCapacity\": \"<long>\",\n            \"diskUsage\": \"<long>\"\n        },\n        \"nodeStatus\": \"<string>\",\n        \"nodeStatusDetail\": \"<string>\",\n        \"powerState\": \"<string>\",\n        \"vcenterName\": \"<string>\",\n        \"version\": \"<string>\"\n    },\n    \"vmMoref\": \"<string>\"\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/search-clusters/:id/nodes",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"search-clusters",
														":id",
														"nodes"
													],
													"variable": [
														{
															"id": "63b2e1b8-1220-474e-9f6b-ced282af71fc",
															"key": "id",
															"value": "<string>",
															"type": "string",
															"description": "(Required) The id of the search cluster"
														}
													]
												},
												"description": "Deploys a search cluster node.\n> This endpoint supports execution by the following roles: admin\n"
											},
											"response": [
												{
													"name": "The request is not valid.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: apikey",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"hostName\": \"<string>\",\n    \"nodeType\": \"<string>\",\n    \"inventorySourceId\": \"<string>\",\n    \"deploymentConfig\": {\n        \"fqdn\": \"<string>\",\n        \"vmName\": \"<string>\",\n        \"ipAddress\": \"<string>\",\n        \"dns\": \"<string>\",\n        \"gateway\": \"<string>\",\n        \"netMask\": \"<string>\",\n        \"networkMoref\": \"<string>\",\n        \"ipProtocol\": \"<string>\",\n        \"ovafile\": \"<string>\",\n        \"location\": {\n            \"datastoreMoref\": \"<string>\",\n            \"clusterMoref\": \"<string>\",\n            \"folderMoref\": \"<string>\",\n            \"hostMoref\": \"<string>\",\n            \"resourcePoolMoref\": \"<string>\"\n        },\n        \"timeZone\": \"<string>\"\n    },\n    \"adminCredentials\": {\n        \"id\": \"<string>\"\n    },\n    \"id\": \"<string>\",\n    \"instanceUuid\": \"<string>\",\n    \"rootCredentials\": {\n        \"id\": \"<string>\"\n    },\n    \"status\": {\n        \"aliases\": [\n            \"<string>\",\n            \"<string>\"\n        ],\n        \"deployed\": \"<boolean>\",\n        \"deployedTime\": \"<string>\",\n        \"hostedComputeResource\": \"<string>\",\n        \"lastCheckedTime\": \"<string>\",\n        \"nodeStats\": {\n            \"diskCapacity\": \"<long>\",\n            \"diskUsage\": \"<long>\"\n        },\n        \"nodeStatus\": \"<string>\",\n        \"nodeStatusDetail\": \"<string>\",\n        \"powerState\": \"<string>\",\n        \"vcenterName\": \"<string>\",\n        \"version\": \"<string>\"\n    },\n    \"vmMoref\": \"<string>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/search-clusters/:id/nodes",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"search-clusters",
																":id",
																"nodes"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
												},
												{
													"name": "The request was accepted for processing.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: apikey",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"hostName\": \"<string>\",\n    \"nodeType\": \"<string>\",\n    \"inventorySourceId\": \"<string>\",\n    \"deploymentConfig\": {\n        \"fqdn\": \"<string>\",\n        \"vmName\": \"<string>\",\n        \"ipAddress\": \"<string>\",\n        \"dns\": \"<string>\",\n        \"gateway\": \"<string>\",\n        \"netMask\": \"<string>\",\n        \"networkMoref\": \"<string>\",\n        \"ipProtocol\": \"<string>\",\n        \"ovafile\": \"<string>\",\n        \"location\": {\n            \"datastoreMoref\": \"<string>\",\n            \"clusterMoref\": \"<string>\",\n            \"folderMoref\": \"<string>\",\n            \"hostMoref\": \"<string>\",\n            \"resourcePoolMoref\": \"<string>\"\n        },\n        \"timeZone\": \"<string>\"\n    },\n    \"adminCredentials\": {\n        \"id\": \"<string>\"\n    },\n    \"id\": \"<string>\",\n    \"instanceUuid\": \"<string>\",\n    \"rootCredentials\": {\n        \"id\": \"<string>\"\n    },\n    \"status\": {\n        \"aliases\": [\n            \"<string>\",\n            \"<string>\"\n        ],\n        \"deployed\": \"<boolean>\",\n        \"deployedTime\": \"<string>\",\n        \"hostedComputeResource\": \"<string>\",\n        \"lastCheckedTime\": \"<string>\",\n        \"nodeStats\": {\n            \"diskCapacity\": \"<long>\",\n            \"diskUsage\": \"<long>\"\n        },\n        \"nodeStatus\": \"<string>\",\n        \"nodeStatusDetail\": \"<string>\",\n        \"powerState\": \"<string>\",\n        \"vcenterName\": \"<string>\",\n        \"version\": \"<string>\"\n    },\n    \"vmMoref\": \"<string>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/search-clusters/:id/nodes",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"search-clusters",
																":id",
																"nodes"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Accepted",
													"code": 202,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"hostName\": \"sunt tempor laborum\",\n \"nodeType\": \"ea pariatur\",\n \"inventorySourceId\": \"velit nisi reprehenderit voluptate nulla\",\n \"deploymentConfig\": {\n  \"fqdn\": \"mollit quis consequat elit\",\n  \"vmName\": \"cupidatat nisi quis\",\n  \"ipAddress\": \"proident\",\n  \"dns\": \"ut voluptate\",\n  \"gateway\": \"esse in\",\n  \"netMask\": \"eu\",\n  \"networkMoref\": \"do Duis\",\n  \"ipProtocol\": \"reprehend\",\n  \"ovafile\": \"sunt in sit\",\n  \"location\": {\n   \"datastoreMoref\": \"dolore elit\",\n   \"clusterMoref\": \"nostrud elit n\",\n   \"folderMoref\": \"commodo \",\n   \"hostMoref\": \"fugiat consectetur adipisicing sint eu\",\n   \"resourcePoolMoref\": \"ut sint\"\n  },\n  \"timeZone\": \"amet eu\"\n },\n \"adminCredentials\": {\n  \"id\": \"nisi tempor ex aliquip\"\n },\n \"id\": \"deserunt dolore\",\n \"instanceUuid\": \"ullamco consectetur\",\n \"rootCredentials\": {\n  \"id\": \"Duis culpa tempor nostrud\"\n },\n \"status\": {\n  \"aliases\": [\n   \"e\",\n   \"culpa pariatur\"\n  ],\n  \"deployed\": true,\n  \"deployedTime\": \"nostrud commodo eiusmod ut\",\n  \"hostedComputeResource\": \"anim velit enim\",\n  \"lastCheckedTime\": \"dolor velit voluptate enim\",\n  \"nodeStats\": {\n   \"diskCapacity\": 51913744,\n   \"diskUsage\": -35799894\n  },\n  \"nodeStatus\": \"Ready\",\n  \"nodeStatusDetail\": \"dolore ex incididunt\",\n  \"powerState\": \"laborum fugiat nisi reprehenderit amet\",\n  \"vcenterName\": \"sint est\",\n  \"version\": \"id non Excepteur\"\n },\n \"vmMoref\": \"Excepteur qui esse enim\"\n}"
												},
												{
													"name": "The requestor is not allowed to perform this operation.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: apikey",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"hostName\": \"<string>\",\n    \"nodeType\": \"<string>\",\n    \"inventorySourceId\": \"<string>\",\n    \"deploymentConfig\": {\n        \"fqdn\": \"<string>\",\n        \"vmName\": \"<string>\",\n        \"ipAddress\": \"<string>\",\n        \"dns\": \"<string>\",\n        \"gateway\": \"<string>\",\n        \"netMask\": \"<string>\",\n        \"networkMoref\": \"<string>\",\n        \"ipProtocol\": \"<string>\",\n        \"ovafile\": \"<string>\",\n        \"location\": {\n            \"datastoreMoref\": \"<string>\",\n            \"clusterMoref\": \"<string>\",\n            \"folderMoref\": \"<string>\",\n            \"hostMoref\": \"<string>\",\n            \"resourcePoolMoref\": \"<string>\"\n        },\n        \"timeZone\": \"<string>\"\n    },\n    \"adminCredentials\": {\n        \"id\": \"<string>\"\n    },\n    \"id\": \"<string>\",\n    \"instanceUuid\": \"<string>\",\n    \"rootCredentials\": {\n        \"id\": \"<string>\"\n    },\n    \"status\": {\n        \"aliases\": [\n            \"<string>\",\n            \"<string>\"\n        ],\n        \"deployed\": \"<boolean>\",\n        \"deployedTime\": \"<string>\",\n        \"hostedComputeResource\": \"<string>\",\n        \"lastCheckedTime\": \"<string>\",\n        \"nodeStats\": {\n            \"diskCapacity\": \"<long>\",\n            \"diskUsage\": \"<long>\"\n        },\n        \"nodeStatus\": \"<string>\",\n        \"nodeStatusDetail\": \"<string>\",\n        \"powerState\": \"<string>\",\n        \"vcenterName\": \"<string>\",\n        \"version\": \"<string>\"\n    },\n    \"vmMoref\": \"<string>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/search-clusters/:id/nodes",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"search-clusters",
																":id",
																"nodes"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
												},
												{
													"name": "Successful operation.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: apikey",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"hostName\": \"<string>\",\n    \"nodeType\": \"<string>\",\n    \"inventorySourceId\": \"<string>\",\n    \"deploymentConfig\": {\n        \"fqdn\": \"<string>\",\n        \"vmName\": \"<string>\",\n        \"ipAddress\": \"<string>\",\n        \"dns\": \"<string>\",\n        \"gateway\": \"<string>\",\n        \"netMask\": \"<string>\",\n        \"networkMoref\": \"<string>\",\n        \"ipProtocol\": \"<string>\",\n        \"ovafile\": \"<string>\",\n        \"location\": {\n            \"datastoreMoref\": \"<string>\",\n            \"clusterMoref\": \"<string>\",\n            \"folderMoref\": \"<string>\",\n            \"hostMoref\": \"<string>\",\n            \"resourcePoolMoref\": \"<string>\"\n        },\n        \"timeZone\": \"<string>\"\n    },\n    \"adminCredentials\": {\n        \"id\": \"<string>\"\n    },\n    \"id\": \"<string>\",\n    \"instanceUuid\": \"<string>\",\n    \"rootCredentials\": {\n        \"id\": \"<string>\"\n    },\n    \"status\": {\n        \"aliases\": [\n            \"<string>\",\n            \"<string>\"\n        ],\n        \"deployed\": \"<boolean>\",\n        \"deployedTime\": \"<string>\",\n        \"hostedComputeResource\": \"<string>\",\n        \"lastCheckedTime\": \"<string>\",\n        \"nodeStats\": {\n            \"diskCapacity\": \"<long>\",\n            \"diskUsage\": \"<long>\"\n        },\n        \"nodeStatus\": \"<string>\",\n        \"nodeStatusDetail\": \"<string>\",\n        \"powerState\": \"<string>\",\n        \"vcenterName\": \"<string>\",\n        \"version\": \"<string>\"\n    },\n    \"vmMoref\": \"<string>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/search-clusters/:id/nodes",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"search-clusters",
																":id",
																"nodes"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"hostName\": \"sunt tempor laborum\",\n \"nodeType\": \"ea pariatur\",\n \"inventorySourceId\": \"velit nisi reprehenderit voluptate nulla\",\n \"deploymentConfig\": {\n  \"fqdn\": \"mollit quis consequat elit\",\n  \"vmName\": \"cupidatat nisi quis\",\n  \"ipAddress\": \"proident\",\n  \"dns\": \"ut voluptate\",\n  \"gateway\": \"esse in\",\n  \"netMask\": \"eu\",\n  \"networkMoref\": \"do Duis\",\n  \"ipProtocol\": \"reprehend\",\n  \"ovafile\": \"sunt in sit\",\n  \"location\": {\n   \"datastoreMoref\": \"dolore elit\",\n   \"clusterMoref\": \"nostrud elit n\",\n   \"folderMoref\": \"commodo \",\n   \"hostMoref\": \"fugiat consectetur adipisicing sint eu\",\n   \"resourcePoolMoref\": \"ut sint\"\n  },\n  \"timeZone\": \"amet eu\"\n },\n \"adminCredentials\": {\n  \"id\": \"nisi tempor ex aliquip\"\n },\n \"id\": \"deserunt dolore\",\n \"instanceUuid\": \"ullamco consectetur\",\n \"rootCredentials\": {\n  \"id\": \"Duis culpa tempor nostrud\"\n },\n \"status\": {\n  \"aliases\": [\n   \"e\",\n   \"culpa pariatur\"\n  ],\n  \"deployed\": true,\n  \"deployedTime\": \"nostrud commodo eiusmod ut\",\n  \"hostedComputeResource\": \"anim velit enim\",\n  \"lastCheckedTime\": \"dolor velit voluptate enim\",\n  \"nodeStats\": {\n   \"diskCapacity\": 51913744,\n   \"diskUsage\": -35799894\n  },\n  \"nodeStatus\": \"Ready\",\n  \"nodeStatusDetail\": \"dolore ex incididunt\",\n  \"powerState\": \"laborum fugiat nisi reprehenderit amet\",\n  \"vcenterName\": \"sint est\",\n  \"version\": \"id non Excepteur\"\n },\n \"vmMoref\": \"Excepteur qui esse enim\"\n}"
												},
												{
													"name": "The requestor is not authorized to perform this operation.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: apikey",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"hostName\": \"<string>\",\n    \"nodeType\": \"<string>\",\n    \"inventorySourceId\": \"<string>\",\n    \"deploymentConfig\": {\n        \"fqdn\": \"<string>\",\n        \"vmName\": \"<string>\",\n        \"ipAddress\": \"<string>\",\n        \"dns\": \"<string>\",\n        \"gateway\": \"<string>\",\n        \"netMask\": \"<string>\",\n        \"networkMoref\": \"<string>\",\n        \"ipProtocol\": \"<string>\",\n        \"ovafile\": \"<string>\",\n        \"location\": {\n            \"datastoreMoref\": \"<string>\",\n            \"clusterMoref\": \"<string>\",\n            \"folderMoref\": \"<string>\",\n            \"hostMoref\": \"<string>\",\n            \"resourcePoolMoref\": \"<string>\"\n        },\n        \"timeZone\": \"<string>\"\n    },\n    \"adminCredentials\": {\n        \"id\": \"<string>\"\n    },\n    \"id\": \"<string>\",\n    \"instanceUuid\": \"<string>\",\n    \"rootCredentials\": {\n        \"id\": \"<string>\"\n    },\n    \"status\": {\n        \"aliases\": [\n            \"<string>\",\n            \"<string>\"\n        ],\n        \"deployed\": \"<boolean>\",\n        \"deployedTime\": \"<string>\",\n        \"hostedComputeResource\": \"<string>\",\n        \"lastCheckedTime\": \"<string>\",\n        \"nodeStats\": {\n            \"diskCapacity\": \"<long>\",\n            \"diskUsage\": \"<long>\"\n        },\n        \"nodeStatus\": \"<string>\",\n        \"nodeStatusDetail\": \"<string>\",\n        \"powerState\": \"<string>\",\n        \"vcenterName\": \"<string>\",\n        \"version\": \"<string>\"\n    },\n    \"vmMoref\": \"<string>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/search-clusters/:id/nodes",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"search-clusters",
																":id",
																"nodes"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
												},
												{
													"name": "An unexpected error prevented the server from fulfilling your request.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: apikey",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"hostName\": \"<string>\",\n    \"nodeType\": \"<string>\",\n    \"inventorySourceId\": \"<string>\",\n    \"deploymentConfig\": {\n        \"fqdn\": \"<string>\",\n        \"vmName\": \"<string>\",\n        \"ipAddress\": \"<string>\",\n        \"dns\": \"<string>\",\n        \"gateway\": \"<string>\",\n        \"netMask\": \"<string>\",\n        \"networkMoref\": \"<string>\",\n        \"ipProtocol\": \"<string>\",\n        \"ovafile\": \"<string>\",\n        \"location\": {\n            \"datastoreMoref\": \"<string>\",\n            \"clusterMoref\": \"<string>\",\n            \"folderMoref\": \"<string>\",\n            \"hostMoref\": \"<string>\",\n            \"resourcePoolMoref\": \"<string>\"\n        },\n        \"timeZone\": \"<string>\"\n    },\n    \"adminCredentials\": {\n        \"id\": \"<string>\"\n    },\n    \"id\": \"<string>\",\n    \"instanceUuid\": \"<string>\",\n    \"rootCredentials\": {\n        \"id\": \"<string>\"\n    },\n    \"status\": {\n        \"aliases\": [\n            \"<string>\",\n            \"<string>\"\n        ],\n        \"deployed\": \"<boolean>\",\n        \"deployedTime\": \"<string>\",\n        \"hostedComputeResource\": \"<string>\",\n        \"lastCheckedTime\": \"<string>\",\n        \"nodeStats\": {\n            \"diskCapacity\": \"<long>\",\n            \"diskUsage\": \"<long>\"\n        },\n        \"nodeStatus\": \"<string>\",\n        \"nodeStatusDetail\": \"<string>\",\n        \"powerState\": \"<string>\",\n        \"vcenterName\": \"<string>\",\n        \"version\": \"<string>\"\n    },\n    \"vmMoref\": \"<string>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/search-clusters/:id/nodes",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"search-clusters",
																":id",
																"nodes"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
												}
											]
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Get search cluster by ID.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/search-clusters/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"search-clusters",
												":id"
											],
											"variable": [
												{
													"id": "bb997e9a-72f6-4350-95ad-8f61eba17083",
													"key": "id",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The ID of the search cluster to be retrieved."
												}
											]
										},
										"description": "Retrieves a search cluster by its ID.\n> This endpoint supports execution by the following roles: admin\n"
									},
									"response": [
										{
											"name": "The request is not valid.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/search-clusters/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"search-clusters",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/search-clusters/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"search-clusters",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The requestor is not allowed to perform this operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/search-clusters/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"search-clusters",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The search cluster ID does not exist.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/search-clusters/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"search-clusters",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "Successfully returned the search cluster.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/search-clusters/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"search-clusters",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"name\": \"in anim\",\n \"state\": \"DISABLE_PENDING\",\n \"config\": {\n  \"indexRetentionDays\": -84722626\n },\n \"id\": \"velit labore\",\n \"maintenanceMode\": true,\n \"stateDetail\": \"Suspended by system due to low disk, Suspended by user\",\n \"summary\": {\n  \"diskCacheNfsServer\": \"amet aute eiusmod irure\",\n  \"lastMetadataSyncTime\": \"1965-01-20T08:19:01.793Z\",\n  \"nodes\": [\n   {\n    \"hostname\": \"incididunt enim volu\",\n    \"id\": \"tempor Ut\",\n    \"status\": \"enim amet\"\n   },\n   {\n    \"hostname\": \"in consectetur elit in\",\n    \"id\": \"Ut proident in\",\n    \"status\": \"pariatur lab\"\n   }\n  ],\n  \"totalAssets\": 741753,\n  \"totalAssetsIndexed\": 76299535,\n  \"totalDiskCapacity\": -70762810,\n  \"totalDiskUsage\": -35267424,\n  \"totalFailed\": 55595348,\n  \"totalNodes\": 35223776\n },\n \"suspendedBy\": \"USER\",\n \"updatedBy\": \"dolor consectetur exercitation\"\n}"
										},
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/search-clusters/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"search-clusters",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										}
									]
								},
								{
									"name": "Update search cluster configuration.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"indexRetentionDays\": \"<integer>\"\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/search-clusters/:id/config",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"search-clusters",
												":id",
												"config"
											],
											"variable": [
												{
													"id": "fff5b810-2361-4b1a-8623-8f237f2d8160",
													"key": "id",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The ID of the search cluster to be updated."
												}
											]
										},
										"description": "Updates the search cluster configuration.\n> This endpoint supports execution by the following roles: admin\n"
									},
									"response": [
										{
											"name": "The request is not valid.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"indexRetentionDays\": \"<integer>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/search-clusters/:id/config",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"search-clusters",
														":id",
														"config"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The requestor is not allowed to perform this operation as it is not implemented.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"indexRetentionDays\": \"<integer>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/search-clusters/:id/config",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"search-clusters",
														":id",
														"config"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Method Not Allowed",
											"code": 405,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The request was accepted for processing.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"indexRetentionDays\": \"<integer>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/search-clusters/:id/config",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"search-clusters",
														":id",
														"config"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"indexRetentionDays\": -1108163\n}"
										},
										{
											"name": "Successful operation.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"indexRetentionDays\": \"<integer>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/search-clusters/:id/config",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"search-clusters",
														":id",
														"config"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"indexRetentionDays\": -1108163\n}"
										},
										{
											"name": "The requestor is not allowed to perform this operation.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"indexRetentionDays\": \"<integer>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/search-clusters/:id/config",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"search-clusters",
														":id",
														"config"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"indexRetentionDays\": \"<integer>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/search-clusters/:id/config",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"search-clusters",
														":id",
														"config"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The requested resource was not found.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"indexRetentionDays\": \"<integer>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/search-clusters/:id/config",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"search-clusters",
														":id",
														"config"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"indexRetentionDays\": \"<integer>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/search-clusters/:id/config",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"search-clusters",
														":id",
														"config"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										}
									]
								},
								{
									"name": "Collect search cluster log bundles.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"config\": {\n        \"logDirectory\": \"<string>\",\n        \"logBundleRange\": {\n            \"startDate\": \"<string>\",\n            \"endDate\": \"<string>\"\n        }\n    },\n    \"status\": {},\n    \"id\": \"<string>\"\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/search-clusters/:id/log-bundles",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"search-clusters",
												":id",
												"log-bundles"
											],
											"variable": [
												{
													"id": "b79088db-957d-4ae4-afc7-3b6e152de0d0",
													"key": "id",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The ID of the search cluster."
												}
											]
										},
										"description": "Collects search cluster log bundles.\n> This endpoint supports execution by the following roles: admin\n"
									},
									"response": [
										{
											"name": "The requestor is not allowed to perform this operation.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"config\": {\n        \"logDirectory\": \"<string>\",\n        \"logBundleRange\": {\n            \"startDate\": \"<string>\",\n            \"endDate\": \"<string>\"\n        }\n    },\n    \"status\": {},\n    \"id\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/search-clusters/:id/log-bundles",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"search-clusters",
														":id",
														"log-bundles"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"config\": {\n        \"logDirectory\": \"<string>\",\n        \"logBundleRange\": {\n            \"startDate\": \"<string>\",\n            \"endDate\": \"<string>\"\n        }\n    },\n    \"status\": {},\n    \"id\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/search-clusters/:id/log-bundles",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"search-clusters",
														":id",
														"log-bundles"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"config\": {\n        \"logDirectory\": \"<string>\",\n        \"logBundleRange\": {\n            \"startDate\": \"<string>\",\n            \"endDate\": \"<string>\"\n        }\n    },\n    \"status\": {},\n    \"id\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/search-clusters/:id/log-bundles",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"search-clusters",
														":id",
														"log-bundles"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The request is not valid.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"config\": {\n        \"logDirectory\": \"<string>\",\n        \"logBundleRange\": {\n            \"startDate\": \"<string>\",\n            \"endDate\": \"<string>\"\n        }\n    },\n    \"status\": {},\n    \"id\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/search-clusters/:id/log-bundles",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"search-clusters",
														":id",
														"log-bundles"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "Successful operation.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"config\": {\n        \"logDirectory\": \"<string>\",\n        \"logBundleRange\": {\n            \"startDate\": \"<string>\",\n            \"endDate\": \"<string>\"\n        }\n    },\n    \"status\": {},\n    \"id\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/search-clusters/:id/log-bundles",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"search-clusters",
														":id",
														"log-bundles"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n {\n  \"config\": {\n   \"logDirectory\": \"qui ipsum incididunt laborum\",\n   \"logBundleRange\": {\n    \"startDate\": \"amet\",\n    \"endDate\": \"labore est reprehenderit\"\n   }\n  },\n  \"status\": {\n   \"logBundlePath\": \"enim veniam qui\",\n   \"progress\": -11894570,\n   \"state\": \"Running\",\n   \"taskId\": \"incididunt pariatur\"\n  },\n  \"id\": \"pariatur incidid\"\n },\n {\n  \"config\": {\n   \"logDirectory\": \"exercitation occaecat\",\n   \"logBundleRange\": {\n    \"startDate\": \"adipis\",\n    \"endDate\": \"fugiat\"\n   }\n  },\n  \"status\": {\n   \"logBundlePath\": \"Duis Lorem\",\n   \"progress\": 79220393,\n   \"state\": \"Pending\",\n   \"taskId\": \"Excepteur sunt sint dolor deserunt\"\n  },\n  \"id\": \"in culpa\"\n }\n]"
										},
										{
											"name": "The request was accepted for processing.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"config\": {\n        \"logDirectory\": \"<string>\",\n        \"logBundleRange\": {\n            \"startDate\": \"<string>\",\n            \"endDate\": \"<string>\"\n        }\n    },\n    \"status\": {},\n    \"id\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/search-clusters/:id/log-bundles",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"search-clusters",
														":id",
														"log-bundles"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"config\": {\n  \"logDirectory\": \"aliquip Ut\",\n  \"logBundleRange\": {\n   \"startDate\": \"nulla\",\n   \"endDate\": \"exercitation\"\n  }\n },\n \"status\": {\n  \"logBundlePath\": \"dolor nisi mollit in\",\n  \"progress\": 84802097,\n  \"state\": \"Queued\",\n  \"taskId\": \"mollit deserun\"\n },\n \"id\": \"nulla aute in mollit exercitation\"\n}"
										}
									]
								},
								{
									"name": "Execute management request.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"clusterId\": \"<string>\",\n    \"operation\": \"<string>\"\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/search-clusters/:id/management",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"search-clusters",
												":id",
												"management"
											],
											"variable": [
												{
													"id": "81245a0d-f1a2-46eb-8e9a-26f4033417e3",
													"key": "id",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The ID of the search cluster to be managed."
												}
											]
										},
										"description": "Runs search cluster management request.\n> This endpoint supports execution by the following roles: admin\n"
									},
									"response": [
										{
											"name": "Successful operation.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"clusterId\": \"<string>\",\n    \"operation\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/search-clusters/:id/management",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"search-clusters",
														":id",
														"management"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"clusterId\": \"quis ut sint\",\n \"operation\": \"DISABLE\"\n}"
										},
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"clusterId\": \"<string>\",\n    \"operation\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/search-clusters/:id/management",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"search-clusters",
														":id",
														"management"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The requestor is not allowed to perform this operation.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"clusterId\": \"<string>\",\n    \"operation\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/search-clusters/:id/management",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"search-clusters",
														":id",
														"management"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"clusterId\": \"<string>\",\n    \"operation\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/search-clusters/:id/management",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"search-clusters",
														":id",
														"management"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The request is not valid.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"clusterId\": \"<string>\",\n    \"operation\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/search-clusters/:id/management",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"search-clusters",
														":id",
														"management"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The request was accepted for processing.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"clusterId\": \"<string>\",\n    \"operation\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/search-clusters/:id/management",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"search-clusters",
														":id",
														"management"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"clusterId\": \"quis ut sint\",\n \"operation\": \"DISABLE\"\n}"
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Get all search clusters.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/search-clusters?page=1&pageSize=100&filter=<string>&orderby=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"search-clusters"
									],
									"query": [
										{
											"key": "page",
											"value": "1",
											"description": "The page number to be returned. Must not be less than 1. See Tutorials - Page the List Result."
										},
										{
											"key": "pageSize",
											"value": "100",
											"description": "The number of resources to be returned. Must not be less than 1. See Tutorials - Page the List Result."
										},
										{
											"key": "filter",
											"value": "<string>",
											"description": "The filter string that is expressed using PowerProtect Data Manager filter syntax. See Tutorials - Filter the List Result."
										},
										{
											"key": "orderby",
											"value": "<string>",
											"description": "The attributes/fields to be sorted by. This parameter can combine with sort direction \"ASC\" or \"DESC\". Default direction is ASC. See Tutorials - Sort the List Result."
										}
									]
								},
								"description": "Retrieves all search clusters.\n> This endpoint supports execution by the following roles: admin\n"
							},
							"response": [
								{
									"name": "The request is not valid.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/search-clusters?page=1&pageSize=100&filter=<string>&orderby=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"search-clusters"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "<string>"
												},
												{
													"key": "orderby",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "The requestor is not allowed to perform this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/search-clusters?page=1&pageSize=100&filter=<string>&orderby=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"search-clusters"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "<string>"
												},
												{
													"key": "orderby",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "An unexpected error prevented the server from fulfilling your request.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/search-clusters?page=1&pageSize=100&filter=<string>&orderby=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"search-clusters"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "<string>"
												},
												{
													"key": "orderby",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "The requestor is not authorized to perform this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/search-clusters?page=1&pageSize=100&filter=<string>&orderby=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"search-clusters"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "<string>"
												},
												{
													"key": "orderby",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "Successfully returned all search clusters.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/search-clusters?page=1&pageSize=100&filter=<string>&orderby=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"search-clusters"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "<string>"
												},
												{
													"key": "orderby",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"content\": [\n  {\n   \"name\": \"Ut\",\n   \"state\": \"FAILED\",\n   \"config\": {\n    \"indexRetentionDays\": 30811384\n   },\n   \"id\": \"magna do deserunt voluptate laborum\",\n   \"maintenanceMode\": false,\n   \"stateDetail\": \"Suspended by system due to low disk, Suspended by user\",\n   \"summary\": {\n    \"diskCacheNfsServer\": \"enim amet\",\n    \"lastMetadataSyncTime\": \"1967-09-04T19:18:27.426Z\",\n    \"nodes\": [\n     {\n      \"hostname\": \"adipisicing ad in\",\n      \"id\": \"ut do cupidatat enim veniam\",\n      \"status\": \"qui tempor aliquip sit laboris\"\n     },\n     {\n      \"hostname\": \"dolore mollit in\",\n      \"id\": \"dolore consequat in minim eiusmod\",\n      \"status\": \"ut aliqua fugiat\"\n     }\n    ],\n    \"totalAssets\": -37018663,\n    \"totalAssetsIndexed\": 17194687,\n    \"totalDiskCapacity\": 7917026,\n    \"totalDiskUsage\": -14371655,\n    \"totalFailed\": -45536446,\n    \"totalNodes\": 82103852\n   },\n   \"suspendedBy\": \"SYSTEM\",\n   \"updatedBy\": \"ea ut nostrud ut in\"\n  },\n  {\n   \"name\": \"non dolo\",\n   \"state\": \"INACTIVE\",\n   \"config\": {\n    \"indexRetentionDays\": -10024736\n   },\n   \"id\": \"qui ipsum\",\n   \"maintenanceMode\": false,\n   \"stateDetail\": \"Suspended by system due to low disk, Suspended by user\",\n   \"summary\": {\n    \"diskCacheNfsServer\": \"sint veniam enim eu aliquip\",\n    \"lastMetadataSyncTime\": \"1974-04-03T09:49:13.499Z\",\n    \"nodes\": [\n     {\n      \"hostname\": \"pariatur veniam cillum\",\n      \"id\": \"commodo velit in\",\n      \"status\": \"incididunt esse sit proident pariatur\"\n     },\n     {\n      \"hostname\": \"laborum Duis consectetur Lorem minim\",\n      \"id\": \"elit Ut et cupidatat\",\n      \"status\": \"qui\"\n     }\n    ],\n    \"totalAssets\": -23222584,\n    \"totalAssetsIndexed\": 17060430,\n    \"totalDiskCapacity\": 9901166,\n    \"totalDiskUsage\": 78601823,\n    \"totalFailed\": -48568590,\n    \"totalNodes\": 16609744\n   },\n   \"suspendedBy\": \"SYSTEM\",\n   \"updatedBy\": \"sit\"\n  }\n ],\n \"page\": {\n  \"number\": 64039912,\n  \"queryState\": \"anim Ut\",\n  \"size\": 51496784,\n  \"totalElements\": 89582031,\n  \"totalPages\": 18490561\n }\n}"
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "server-disaster-recovery-backups",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Delete server disaster recovery backup by ID.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/server-disaster-recovery-backups/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"server-disaster-recovery-backups",
												":id"
											],
											"variable": [
												{
													"id": "808cab3b-03c4-498f-ad3c-8f11c5e7105a",
													"key": "id",
													"value": "<string>",
													"type": "string",
													"description": "(Required) Server backup ID sent in request."
												}
											]
										},
										"description": "Deletes the server DR backup based on the specified ID.\n> This endpoint supports execution by the following roles: admin,user\n"
									},
									"response": [
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/server-disaster-recovery-backups/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"server-disaster-recovery-backups",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Bad request.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/server-disaster-recovery-backups/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"server-disaster-recovery-backups",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "No content.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/server-disaster-recovery-backups/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"server-disaster-recovery-backups",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/server-disaster-recovery-backups/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"server-disaster-recovery-backups",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The requestor is not allowed to perform this operation.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/server-disaster-recovery-backups/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"server-disaster-recovery-backups",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Get server disaster recovery backup by ID.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/server-disaster-recovery-backups/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"server-disaster-recovery-backups",
												":id"
											],
											"variable": [
												{
													"id": "e579655b-36dc-4ffb-8344-c75d586687f5",
													"key": "id",
													"value": "<string>",
													"type": "string",
													"description": "(Required) Server DR backup ID sent in request."
												}
											]
										},
										"description": "Retrieves the server disaster recovery backup by ID.\n> This endpoint supports execution by the following roles: admin,user\n"
									},
									"response": [
										{
											"name": "OK. Retrieves the server disaster recovery backup by ID.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/server-disaster-recovery-backups/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"server-disaster-recovery-backups",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"backupConsistencyType\": \"deserunt Duis enim\",\n \"checksum\": \"et elit irure quis ipsum\",\n \"components\": [\n  {\n   \"backupPath\": \"nulla\",\n   \"backupStatus\": \"sint qui\",\n   \"backupsEnabled\": true,\n   \"id\": \"cdraUniqueIdentifier\",\n   \"isComponentInternal\": false,\n   \"name\": \"CDRA\",\n   \"version\": \"1.0\"\n  },\n  {\n   \"backupPath\": \"eu deserunt\",\n   \"backupStatus\": \"sunt irure\",\n   \"backupsEnabled\": true,\n   \"id\": \"cdraUniqueIdentifier\",\n   \"isComponentInternal\": false,\n   \"name\": \"CDRA\",\n   \"version\": \"1.0\"\n  }\n ],\n \"consistency\": \"ut Lorem laboris\",\n \"creationTime\": \"2002-03-12T22:18:30.774Z\",\n \"elapsedSeconds\": -24847228,\n \"error\": \"id elit ut\",\n \"hostname\": \"aliquip est\",\n \"id\": \"aliqua\",\n \"lockboxPassphrase\": \"ipsum cillum occaecat amet\",\n \"mfrManifestId\": \"laborum officia reprehenderit\",\n \"mfrReplicationId\": \"ut quis \",\n \"name\": \"dolor\",\n \"noScheduledStorageAccess\": false,\n \"nodeId\": \"Ut\",\n \"recover\": false,\n \"sequenceNumber\": -18694589,\n \"sizeInBytes\": 35395986,\n \"state\": \"anim ullamco ipsum labo\",\n \"version\": \"voluptate fugiat sunt dolore\"\n}"
										},
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/server-disaster-recovery-backups/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"server-disaster-recovery-backups",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Bad request.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/server-disaster-recovery-backups/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"server-disaster-recovery-backups",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/server-disaster-recovery-backups/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"server-disaster-recovery-backups",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The requestor is not allowed to perform this operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/server-disaster-recovery-backups/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"server-disaster-recovery-backups",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Update server disaster recovery backup by ID.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"backupConsistencyType\": \"<string>\",\n    \"checksum\": \"<string>\",\n    \"components\": [\n        {\n            \"backupPath\": \"<string>\",\n            \"backupStatus\": \"<string>\",\n            \"backupsEnabled\": true,\n            \"id\": \"<string>\",\n            \"isComponentInternal\": \"<boolean>\",\n            \"name\": \"<string>\",\n            \"version\": \"<string>\"\n        }\n    ],\n    \"consistency\": \"<string>\",\n    \"creationTime\": \"<dateTime>\",\n    \"elapsedSeconds\": \"<integer>\",\n    \"error\": \"<string>\",\n    \"hostname\": \"<string>\",\n    \"id\": \"<string>\",\n    \"lockboxPassphrase\": \"<string>\",\n    \"mfrManifestId\": \"<string>\",\n    \"mfrReplicationId\": \"<string>\",\n    \"name\": \"<string>\",\n    \"noScheduledStorageAccess\": \"<boolean>\",\n    \"nodeId\": \"<string>\",\n    \"recover\": \"<boolean>\",\n    \"sequenceNumber\": \"<integer>\",\n    \"sizeInBytes\": \"<long>\",\n    \"state\": \"<string>\",\n    \"version\": \"<string>\"\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/server-disaster-recovery-backups/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"server-disaster-recovery-backups",
												":id"
											],
											"variable": [
												{
													"id": "c99df512-0e6f-4745-b935-3ea8244ab5a0",
													"key": "id",
													"value": "<string>",
													"type": "string",
													"description": "(Required) Server DR backup ID sent in request."
												}
											]
										},
										"description": "Updates the server disaster recovery backup by ID.\n> This endpoint supports execution by the following roles: admin,user\n"
									},
									"response": [
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"backupConsistencyType\": \"<string>\",\n    \"checksum\": \"<string>\",\n    \"components\": [\n        {\n            \"backupPath\": \"<string>\",\n            \"backupStatus\": \"<string>\",\n            \"backupsEnabled\": true,\n            \"id\": \"cdraUniqueIdentifier\",\n            \"isComponentInternal\": false,\n            \"name\": \"CDRA\",\n            \"version\": \"1.0\"\n        }\n    ],\n    \"consistency\": \"<string>\",\n    \"creationTime\": \"<dateTime>\",\n    \"elapsedSeconds\": \"<integer>\",\n    \"error\": \"<string>\",\n    \"hostname\": \"<string>\",\n    \"id\": \"<string>\",\n    \"lockboxPassphrase\": \"<string>\",\n    \"mfrManifestId\": \"<string>\",\n    \"mfrReplicationId\": \"<string>\",\n    \"name\": \"<string>\",\n    \"noScheduledStorageAccess\": \"<boolean>\",\n    \"nodeId\": \"<string>\",\n    \"recover\": \"<boolean>\",\n    \"sequenceNumber\": \"<integer>\",\n    \"sizeInBytes\": \"<long>\",\n    \"state\": \"<string>\",\n    \"version\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/server-disaster-recovery-backups/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"server-disaster-recovery-backups",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Bad request.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"backupConsistencyType\": \"<string>\",\n    \"checksum\": \"<string>\",\n    \"components\": [\n        {\n            \"backupPath\": \"<string>\",\n            \"backupStatus\": \"<string>\",\n            \"backupsEnabled\": true,\n            \"id\": \"cdraUniqueIdentifier\",\n            \"isComponentInternal\": false,\n            \"name\": \"CDRA\",\n            \"version\": \"1.0\"\n        }\n    ],\n    \"consistency\": \"<string>\",\n    \"creationTime\": \"<dateTime>\",\n    \"elapsedSeconds\": \"<integer>\",\n    \"error\": \"<string>\",\n    \"hostname\": \"<string>\",\n    \"id\": \"<string>\",\n    \"lockboxPassphrase\": \"<string>\",\n    \"mfrManifestId\": \"<string>\",\n    \"mfrReplicationId\": \"<string>\",\n    \"name\": \"<string>\",\n    \"noScheduledStorageAccess\": \"<boolean>\",\n    \"nodeId\": \"<string>\",\n    \"recover\": \"<boolean>\",\n    \"sequenceNumber\": \"<integer>\",\n    \"sizeInBytes\": \"<long>\",\n    \"state\": \"<string>\",\n    \"version\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/server-disaster-recovery-backups/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"server-disaster-recovery-backups",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "OK. Updates the server disaster recovery backup by ID.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"backupConsistencyType\": \"<string>\",\n    \"checksum\": \"<string>\",\n    \"components\": [\n        {\n            \"backupPath\": \"<string>\",\n            \"backupStatus\": \"<string>\",\n            \"backupsEnabled\": true,\n            \"id\": \"cdraUniqueIdentifier\",\n            \"isComponentInternal\": false,\n            \"name\": \"CDRA\",\n            \"version\": \"1.0\"\n        }\n    ],\n    \"consistency\": \"<string>\",\n    \"creationTime\": \"<dateTime>\",\n    \"elapsedSeconds\": \"<integer>\",\n    \"error\": \"<string>\",\n    \"hostname\": \"<string>\",\n    \"id\": \"<string>\",\n    \"lockboxPassphrase\": \"<string>\",\n    \"mfrManifestId\": \"<string>\",\n    \"mfrReplicationId\": \"<string>\",\n    \"name\": \"<string>\",\n    \"noScheduledStorageAccess\": \"<boolean>\",\n    \"nodeId\": \"<string>\",\n    \"recover\": \"<boolean>\",\n    \"sequenceNumber\": \"<integer>\",\n    \"sizeInBytes\": \"<long>\",\n    \"state\": \"<string>\",\n    \"version\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/server-disaster-recovery-backups/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"server-disaster-recovery-backups",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Not found.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"backupConsistencyType\": \"<string>\",\n    \"checksum\": \"<string>\",\n    \"components\": [\n        {\n            \"backupPath\": \"<string>\",\n            \"backupStatus\": \"<string>\",\n            \"backupsEnabled\": true,\n            \"id\": \"cdraUniqueIdentifier\",\n            \"isComponentInternal\": false,\n            \"name\": \"CDRA\",\n            \"version\": \"1.0\"\n        }\n    ],\n    \"consistency\": \"<string>\",\n    \"creationTime\": \"<dateTime>\",\n    \"elapsedSeconds\": \"<integer>\",\n    \"error\": \"<string>\",\n    \"hostname\": \"<string>\",\n    \"id\": \"<string>\",\n    \"lockboxPassphrase\": \"<string>\",\n    \"mfrManifestId\": \"<string>\",\n    \"mfrReplicationId\": \"<string>\",\n    \"name\": \"<string>\",\n    \"noScheduledStorageAccess\": \"<boolean>\",\n    \"nodeId\": \"<string>\",\n    \"recover\": \"<boolean>\",\n    \"sequenceNumber\": \"<integer>\",\n    \"sizeInBytes\": \"<long>\",\n    \"state\": \"<string>\",\n    \"version\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/server-disaster-recovery-backups/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"server-disaster-recovery-backups",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The requestor is not allowed to perform this operation.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"backupConsistencyType\": \"<string>\",\n    \"checksum\": \"<string>\",\n    \"components\": [\n        {\n            \"backupPath\": \"<string>\",\n            \"backupStatus\": \"<string>\",\n            \"backupsEnabled\": true,\n            \"id\": \"cdraUniqueIdentifier\",\n            \"isComponentInternal\": false,\n            \"name\": \"CDRA\",\n            \"version\": \"1.0\"\n        }\n    ],\n    \"consistency\": \"<string>\",\n    \"creationTime\": \"<dateTime>\",\n    \"elapsedSeconds\": \"<integer>\",\n    \"error\": \"<string>\",\n    \"hostname\": \"<string>\",\n    \"id\": \"<string>\",\n    \"lockboxPassphrase\": \"<string>\",\n    \"mfrManifestId\": \"<string>\",\n    \"mfrReplicationId\": \"<string>\",\n    \"name\": \"<string>\",\n    \"noScheduledStorageAccess\": \"<boolean>\",\n    \"nodeId\": \"<string>\",\n    \"recover\": \"<boolean>\",\n    \"sequenceNumber\": \"<integer>\",\n    \"sizeInBytes\": \"<long>\",\n    \"state\": \"<string>\",\n    \"version\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/server-disaster-recovery-backups/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"server-disaster-recovery-backups",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"backupConsistencyType\": \"<string>\",\n    \"checksum\": \"<string>\",\n    \"components\": [\n        {\n            \"backupPath\": \"<string>\",\n            \"backupStatus\": \"<string>\",\n            \"backupsEnabled\": true,\n            \"id\": \"cdraUniqueIdentifier\",\n            \"isComponentInternal\": false,\n            \"name\": \"CDRA\",\n            \"version\": \"1.0\"\n        }\n    ],\n    \"consistency\": \"<string>\",\n    \"creationTime\": \"<dateTime>\",\n    \"elapsedSeconds\": \"<integer>\",\n    \"error\": \"<string>\",\n    \"hostname\": \"<string>\",\n    \"id\": \"<string>\",\n    \"lockboxPassphrase\": \"<string>\",\n    \"mfrManifestId\": \"<string>\",\n    \"mfrReplicationId\": \"<string>\",\n    \"name\": \"<string>\",\n    \"noScheduledStorageAccess\": \"<boolean>\",\n    \"nodeId\": \"<string>\",\n    \"recover\": \"<boolean>\",\n    \"sequenceNumber\": \"<integer>\",\n    \"sizeInBytes\": \"<long>\",\n    \"state\": \"<string>\",\n    \"version\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/server-disaster-recovery-backups/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"server-disaster-recovery-backups",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Get all server disaster recovery backups.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/server-disaster-recovery-backups?full=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"server-disaster-recovery-backups"
									],
									"query": [
										{
											"key": "full",
											"value": "<boolean>",
											"description": "The default is false. If it is true, it  returns all backups, including failures."
										}
									]
								},
								"description": "Retrieves a list of server disaster recovery backups.\n> This endpoint supports execution by the following roles: admin,user\n\n> This endpoint supports pagination with types: random\n"
							},
							"response": [
								{
									"name": "The requestor is not authorized to perform this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/server-disaster-recovery-backups?full=<boolean>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"server-disaster-recovery-backups"
											],
											"query": [
												{
													"key": "full",
													"value": "<boolean>"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "An unexpected error prevented the server from fulfilling your request.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/server-disaster-recovery-backups?full=<boolean>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"server-disaster-recovery-backups"
											],
											"query": [
												{
													"key": "full",
													"value": "<boolean>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/server-disaster-recovery-backups?full=<boolean>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"server-disaster-recovery-backups"
											],
											"query": [
												{
													"key": "full",
													"value": "<boolean>"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "OK. Retrieves a list of server disaster recovery backups.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/server-disaster-recovery-backups?full=<boolean>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"server-disaster-recovery-backups"
											],
											"query": [
												{
													"key": "full",
													"value": "<boolean>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"content\": [\n  {\n   \"backupConsistencyType\": \"cillum deserunt irure\",\n   \"checksum\": \"pariatur minim commodo fugiat exercitation\",\n   \"components\": [\n    {\n     \"backupPath\": \"non id Duis veniam fugiat\",\n     \"backupStatus\": \"laborum mollit\",\n     \"backupsEnabled\": true,\n     \"id\": \"cdraUniqueIdentifier\",\n     \"isComponentInternal\": false,\n     \"name\": \"CDRA\",\n     \"version\": \"1.0\"\n    },\n    {\n     \"backupPath\": \"culpa quis\",\n     \"backupStatus\": \"pariatur sed\",\n     \"backupsEnabled\": true,\n     \"id\": \"cdraUniqueIdentifier\",\n     \"isComponentInternal\": false,\n     \"name\": \"CDRA\",\n     \"version\": \"1.0\"\n    }\n   ],\n   \"consistency\": \"incididunt amet labore\",\n   \"creationTime\": \"1960-10-29T06:53:15.625Z\",\n   \"elapsedSeconds\": 62635996,\n   \"error\": \"veniam eu ut voluptate laborum\",\n   \"hostname\": \"occaecat\",\n   \"id\": \"cillum Ut occaecat Duis laboris\",\n   \"lockboxPassphrase\": \"velit aliqua amet eu\",\n   \"mfrManifestId\": \"adipisicing mollit\",\n   \"mfrReplicationId\": \"cillum in consectetur elit\",\n   \"name\": \"est nostrud irure\",\n   \"noScheduledStorageAccess\": true,\n   \"nodeId\": \"quis pariatur ex Ut\",\n   \"recover\": true,\n   \"sequenceNumber\": -25371777,\n   \"sizeInBytes\": -99045057,\n   \"state\": \"irure fugiat\",\n   \"version\": \"velit\"\n  },\n  {\n   \"backupConsistencyType\": \"tempor pariatur exercitation aliquip\",\n   \"checksum\": \"sit\",\n   \"components\": [\n    {\n     \"backupPath\": \"ut dolor qui incididunt\",\n     \"backupStatus\": \"in veniam\",\n     \"backupsEnabled\": true,\n     \"id\": \"cdraUniqueIdentifier\",\n     \"isComponentInternal\": false,\n     \"name\": \"CDRA\",\n     \"version\": \"1.0\"\n    },\n    {\n     \"backupPath\": \"magna aliqua\",\n     \"backupStatus\": \"et ipsum Excepteur Lorem\",\n     \"backupsEnabled\": true,\n     \"id\": \"cdraUniqueIdentifier\",\n     \"isComponentInternal\": false,\n     \"name\": \"CDRA\",\n     \"version\": \"1.0\"\n    }\n   ],\n   \"consistency\": \"id esse ex velit ipsum\",\n   \"creationTime\": \"1941-01-13T21:04:37.194Z\",\n   \"elapsedSeconds\": -979844,\n   \"error\": \"in\",\n   \"hostname\": \"proident mollit do aliquip Excepteur\",\n   \"id\": \"eu\",\n   \"lockboxPassphrase\": \"Excepteur\",\n   \"mfrManifestId\": \"in\",\n   \"mfrReplicationId\": \"aliquip aute commodo eiusmod\",\n   \"name\": \"cillum do sint qui\",\n   \"noScheduledStorageAccess\": true,\n   \"nodeId\": \"ut veniam labore dolore esse\",\n   \"recover\": true,\n   \"sequenceNumber\": -97867308,\n   \"sizeInBytes\": 87463456,\n   \"state\": \"sit ad amet id ullamco\",\n   \"version\": \"adipisicing ut enim\"\n  }\n ],\n \"page\": {\n  \"number\": 5429395,\n  \"queryState\": \"veniam consectetur elit\",\n  \"size\": 47040053,\n  \"totalElements\": -68201588,\n  \"totalPages\": -75412865\n }\n}"
								},
								{
									"name": "The requestor is not allowed to perform this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/server-disaster-recovery-backups?full=<boolean>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"server-disaster-recovery-backups"
											],
											"query": [
												{
													"key": "full",
													"value": "<boolean>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Create server disaster recovery backup.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"backupConsistencyType\": \"<string>\",\n    \"checksum\": \"<string>\",\n    \"components\": [\n        {\n            \"backupPath\": \"<string>\",\n            \"backupStatus\": \"<string>\",\n            \"backupsEnabled\": true,\n            \"id\": \"<string>\",\n            \"isComponentInternal\": \"<boolean>\",\n            \"name\": \"<string>\",\n            \"version\": \"<string>\"\n        }\n    ],\n    \"consistency\": \"<string>\",\n    \"creationTime\": \"<dateTime>\",\n    \"elapsedSeconds\": \"<integer>\",\n    \"error\": \"<string>\",\n    \"hostname\": \"<string>\",\n    \"id\": \"<string>\",\n    \"lockboxPassphrase\": \"<string>\",\n    \"mfrManifestId\": \"<string>\",\n    \"mfrReplicationId\": \"<string>\",\n    \"name\": \"<string>\",\n    \"noScheduledStorageAccess\": \"<boolean>\",\n    \"nodeId\": \"<string>\",\n    \"recover\": \"<boolean>\",\n    \"sequenceNumber\": \"<integer>\",\n    \"sizeInBytes\": \"<long>\",\n    \"state\": \"<string>\",\n    \"version\": \"<string>\"\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/server-disaster-recovery-backups?name=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"server-disaster-recovery-backups"
									],
									"query": [
										{
											"key": "name",
											"value": "<string>",
											"description": "Name of the component requesting a backup."
										}
									]
								},
								"description": "Creates the server disaster recovery backup.\n> This endpoint supports execution by the following roles: admin,user\n"
							},
							"response": [
								{
									"name": "An unexpected error prevented the server from fulfilling your request.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"backupConsistencyType\": \"<string>\",\n    \"checksum\": \"<string>\",\n    \"components\": [\n        {\n            \"backupPath\": \"<string>\",\n            \"backupStatus\": \"<string>\",\n            \"backupsEnabled\": true,\n            \"id\": \"cdraUniqueIdentifier\",\n            \"isComponentInternal\": false,\n            \"name\": \"CDRA\",\n            \"version\": \"1.0\"\n        }\n    ],\n    \"consistency\": \"<string>\",\n    \"creationTime\": \"<dateTime>\",\n    \"elapsedSeconds\": \"<integer>\",\n    \"error\": \"<string>\",\n    \"hostname\": \"<string>\",\n    \"id\": \"<string>\",\n    \"lockboxPassphrase\": \"<string>\",\n    \"mfrManifestId\": \"<string>\",\n    \"mfrReplicationId\": \"<string>\",\n    \"name\": \"<string>\",\n    \"noScheduledStorageAccess\": \"<boolean>\",\n    \"nodeId\": \"<string>\",\n    \"recover\": \"<boolean>\",\n    \"sequenceNumber\": \"<integer>\",\n    \"sizeInBytes\": \"<long>\",\n    \"state\": \"<string>\",\n    \"version\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/server-disaster-recovery-backups?name=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"server-disaster-recovery-backups"
											],
											"query": [
												{
													"key": "name",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "OK. Creates the server disaster recovery backup.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"backupConsistencyType\": \"<string>\",\n    \"checksum\": \"<string>\",\n    \"components\": [\n        {\n            \"backupPath\": \"<string>\",\n            \"backupStatus\": \"<string>\",\n            \"backupsEnabled\": true,\n            \"id\": \"cdraUniqueIdentifier\",\n            \"isComponentInternal\": false,\n            \"name\": \"CDRA\",\n            \"version\": \"1.0\"\n        }\n    ],\n    \"consistency\": \"<string>\",\n    \"creationTime\": \"<dateTime>\",\n    \"elapsedSeconds\": \"<integer>\",\n    \"error\": \"<string>\",\n    \"hostname\": \"<string>\",\n    \"id\": \"<string>\",\n    \"lockboxPassphrase\": \"<string>\",\n    \"mfrManifestId\": \"<string>\",\n    \"mfrReplicationId\": \"<string>\",\n    \"name\": \"<string>\",\n    \"noScheduledStorageAccess\": \"<boolean>\",\n    \"nodeId\": \"<string>\",\n    \"recover\": \"<boolean>\",\n    \"sequenceNumber\": \"<integer>\",\n    \"sizeInBytes\": \"<long>\",\n    \"state\": \"<string>\",\n    \"version\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/server-disaster-recovery-backups?name=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"server-disaster-recovery-backups"
											],
											"query": [
												{
													"key": "name",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								},
								{
									"name": "The requestor is not authorized to perform this operation.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"backupConsistencyType\": \"<string>\",\n    \"checksum\": \"<string>\",\n    \"components\": [\n        {\n            \"backupPath\": \"<string>\",\n            \"backupStatus\": \"<string>\",\n            \"backupsEnabled\": true,\n            \"id\": \"cdraUniqueIdentifier\",\n            \"isComponentInternal\": false,\n            \"name\": \"CDRA\",\n            \"version\": \"1.0\"\n        }\n    ],\n    \"consistency\": \"<string>\",\n    \"creationTime\": \"<dateTime>\",\n    \"elapsedSeconds\": \"<integer>\",\n    \"error\": \"<string>\",\n    \"hostname\": \"<string>\",\n    \"id\": \"<string>\",\n    \"lockboxPassphrase\": \"<string>\",\n    \"mfrManifestId\": \"<string>\",\n    \"mfrReplicationId\": \"<string>\",\n    \"name\": \"<string>\",\n    \"noScheduledStorageAccess\": \"<boolean>\",\n    \"nodeId\": \"<string>\",\n    \"recover\": \"<boolean>\",\n    \"sequenceNumber\": \"<integer>\",\n    \"sizeInBytes\": \"<long>\",\n    \"state\": \"<string>\",\n    \"version\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/server-disaster-recovery-backups?name=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"server-disaster-recovery-backups"
											],
											"query": [
												{
													"key": "name",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Bad request.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"backupConsistencyType\": \"<string>\",\n    \"checksum\": \"<string>\",\n    \"components\": [\n        {\n            \"backupPath\": \"<string>\",\n            \"backupStatus\": \"<string>\",\n            \"backupsEnabled\": true,\n            \"id\": \"cdraUniqueIdentifier\",\n            \"isComponentInternal\": false,\n            \"name\": \"CDRA\",\n            \"version\": \"1.0\"\n        }\n    ],\n    \"consistency\": \"<string>\",\n    \"creationTime\": \"<dateTime>\",\n    \"elapsedSeconds\": \"<integer>\",\n    \"error\": \"<string>\",\n    \"hostname\": \"<string>\",\n    \"id\": \"<string>\",\n    \"lockboxPassphrase\": \"<string>\",\n    \"mfrManifestId\": \"<string>\",\n    \"mfrReplicationId\": \"<string>\",\n    \"name\": \"<string>\",\n    \"noScheduledStorageAccess\": \"<boolean>\",\n    \"nodeId\": \"<string>\",\n    \"recover\": \"<boolean>\",\n    \"sequenceNumber\": \"<integer>\",\n    \"sizeInBytes\": \"<long>\",\n    \"state\": \"<string>\",\n    \"version\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/server-disaster-recovery-backups?name=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"server-disaster-recovery-backups"
											],
											"query": [
												{
													"key": "name",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "The requestor is not allowed to perform this operation.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"backupConsistencyType\": \"<string>\",\n    \"checksum\": \"<string>\",\n    \"components\": [\n        {\n            \"backupPath\": \"<string>\",\n            \"backupStatus\": \"<string>\",\n            \"backupsEnabled\": true,\n            \"id\": \"cdraUniqueIdentifier\",\n            \"isComponentInternal\": false,\n            \"name\": \"CDRA\",\n            \"version\": \"1.0\"\n        }\n    ],\n    \"consistency\": \"<string>\",\n    \"creationTime\": \"<dateTime>\",\n    \"elapsedSeconds\": \"<integer>\",\n    \"error\": \"<string>\",\n    \"hostname\": \"<string>\",\n    \"id\": \"<string>\",\n    \"lockboxPassphrase\": \"<string>\",\n    \"mfrManifestId\": \"<string>\",\n    \"mfrReplicationId\": \"<string>\",\n    \"name\": \"<string>\",\n    \"noScheduledStorageAccess\": \"<boolean>\",\n    \"nodeId\": \"<string>\",\n    \"recover\": \"<boolean>\",\n    \"sequenceNumber\": \"<integer>\",\n    \"sizeInBytes\": \"<long>\",\n    \"state\": \"<string>\",\n    \"version\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/server-disaster-recovery-backups?name=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"server-disaster-recovery-backups"
											],
											"query": [
												{
													"key": "name",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "server-disaster-recovery-configurations",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Get server disaster recovery configuration by ID.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/server-disaster-recovery-configurations/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"server-disaster-recovery-configurations",
												":id"
											],
											"variable": [
												{
													"id": "ab375b6b-1998-43dc-bd6a-42402a290877",
													"key": "id",
													"value": "default",
													"type": "string",
													"description": "(Required) If you specify ID as default, you get the integrated Integrated Storage configuration."
												}
											]
										},
										"description": "Retrieves the server disaster recovery configuration by its ID.\n> This endpoint supports execution by the following roles: admin,user\n"
									},
									"response": [
										{
											"name": "No content.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/server-disaster-recovery-configurations/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"server-disaster-recovery-configurations",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/server-disaster-recovery-configurations/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"server-disaster-recovery-configurations",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/server-disaster-recovery-configurations/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"server-disaster-recovery-configurations",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The requestor is not allowed to perform this operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/server-disaster-recovery-configurations/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"server-disaster-recovery-configurations",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "OK. Retrieves the server disaster recovery configuration by its ID.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/server-disaster-recovery-configurations/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"server-disaster-recovery-configurations",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"repositoryHost\": \"amet aliqua dolore\",\n \"repositoryPath\": \"enim dolor esse aliqua\",\n \"type\": \"sint ex\",\n \"backupsEnabled\": false,\n \"id\": \"in labore quis dolor\"\n}"
										}
									]
								},
								{
									"name": "Update server disaster recovery configuration by ID.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"repositoryHost\": \"<string>\",\n    \"repositoryPath\": \"<string>\",\n    \"type\": \"<string>\",\n    \"backupsEnabled\": \"<boolean>\",\n    \"id\": \"<string>\"\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/server-disaster-recovery-configurations/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"server-disaster-recovery-configurations",
												":id"
											],
											"variable": [
												{
													"id": "6e7f4c3b-6fa8-4172-93a8-c0d338a38432",
													"key": "id",
													"value": "<string>",
													"type": "string",
													"description": "(Required) Server DR backup ID sent in request."
												}
											]
										},
										"description": "Updates the server disaster recovery configuration by its ID.\n> This endpoint supports execution by the following roles: admin,user\n"
									},
									"response": [
										{
											"name": "OK. Updates the server disaster recovery configuration by its ID.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"repositoryHost\": \"<string>\",\n    \"repositoryPath\": \"<string>\",\n    \"type\": \"<string>\",\n    \"backupsEnabled\": \"<boolean>\",\n    \"id\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/server-disaster-recovery-configurations/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"server-disaster-recovery-configurations",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The requestor is not allowed to perform this operation.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"repositoryHost\": \"<string>\",\n    \"repositoryPath\": \"<string>\",\n    \"type\": \"<string>\",\n    \"backupsEnabled\": \"<boolean>\",\n    \"id\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/server-disaster-recovery-configurations/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"server-disaster-recovery-configurations",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Not found.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"repositoryHost\": \"<string>\",\n    \"repositoryPath\": \"<string>\",\n    \"type\": \"<string>\",\n    \"backupsEnabled\": \"<boolean>\",\n    \"id\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/server-disaster-recovery-configurations/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"server-disaster-recovery-configurations",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"repositoryHost\": \"<string>\",\n    \"repositoryPath\": \"<string>\",\n    \"type\": \"<string>\",\n    \"backupsEnabled\": \"<boolean>\",\n    \"id\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/server-disaster-recovery-configurations/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"server-disaster-recovery-configurations",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"repositoryHost\": \"<string>\",\n    \"repositoryPath\": \"<string>\",\n    \"type\": \"<string>\",\n    \"backupsEnabled\": \"<boolean>\",\n    \"id\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/server-disaster-recovery-configurations/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"server-disaster-recovery-configurations",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Get all server disaster recovery configurations.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/server-disaster-recovery-configurations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"server-disaster-recovery-configurations"
									]
								},
								"description": "Retrieves a list of all server disaster recovery configurations. The configurations detail includes host name, host path, type, backupsEnabled flag. The configuration contains server disaster recovery type which specifying data domain system or integrated storage system supports currently in server disaster recovery backup.\n\nGET /api/v2/server-disaster-recovery-configurations produces new output collected from the data model, including some of the defined fields that toggle the ability for a component to generate backups. The ability to disable a components backup will be exposed by the UI and the user can optionally change the value. A change of the element bound to the enable/disable backup for the specific component should trigger a PUT /api/v2/server-disaster-recovery-configurations to update the field in the data model, the change should be reflected to the ES index_data_component.\n> This endpoint supports execution by the following roles: admin,user\n\n> This endpoint supports pagination with types: random\n"
							},
							"response": [
								{
									"name": "The internal server error with this response status code whenever they execute some request handler code that raises an exception.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/server-disaster-recovery-configurations",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"server-disaster-recovery-configurations"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"content\": [\n  {\n   \"id\": \"cd7fcff2-fd68-475f-97ea-0d58aa6417cd\",\n   \"repositoryHost\": \"\",\n   \"repositoryPath\": \"\",\n   \"type\": \"\"\n  }\n ]\n}"
								},
								{
									"name": "OK. Retrieves a list of all server disaster recovery configurations. The configurations contain unique id, repository host name, repository path, type, and backupsEnabled switch.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/server-disaster-recovery-configurations",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"server-disaster-recovery-configurations"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"backupsEnabled\": true,\n \"id\": \"qui consectetu\",\n \"repositoryHost\": \"laboris\",\n \"repositoryPath\": \"tempor\",\n \"type\": \"proident ullamco et fugiat dolore\"\n}"
								},
								{
									"name": "The request is Forbidden. An error response indicates that the client's request is formed correctly, but the REST API refuses to honor it, i.e. the user does not have the necessary permissions for the resource.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/server-disaster-recovery-configurations",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"server-disaster-recovery-configurations"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "The requestor is not allowed to perform this operation. Errors can be like malformed request syntax, invalid request message parameters, or deceptive request routing etc.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/server-disaster-recovery-configurations",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"server-disaster-recovery-configurations"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "service-level-agreements",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Delete service level agreement by ID.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/service-level-agreements/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"service-level-agreements",
												":id"
											],
											"variable": [
												{
													"id": "d64f3696-ebfd-4f4e-98d5-e25167b122a3",
													"key": "id",
													"value": "<string>",
													"type": "string",
													"description": "(Required) ID of the service level agreement."
												}
											]
										},
										"description": "Deletes a service level agreement by ID. The service level agreement contains mutliple service level objectives. The service level objective defines a compliance check item for data protection.\n> This endpoint supports execution by the following roles: admin\n"
									},
									"response": [
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/service-level-agreements/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"service-level-agreements",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "Successfully deleted the service level agreement.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/service-level-agreements/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"service-level-agreements",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The requestor is not allowed to perform this operation.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/service-level-agreements/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"service-level-agreements",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The request is not valid.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/service-level-agreements/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"service-level-agreements",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/service-level-agreements/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"service-level-agreements",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										}
									]
								},
								{
									"name": "Get a service level agreement by ID.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/service-level-agreements/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"service-level-agreements",
												":id"
											],
											"variable": [
												{
													"id": "395ee927-6df4-4c20-b410-7c74aceb1c49",
													"key": "id",
													"value": "<string>",
													"type": "string",
													"description": "(Required) ID of the service level agreement."
												}
											]
										},
										"description": "Retrieves a service level agreement by ID. The service level agreement contains mutliple service level objectives. The service level objective defines a compliance check item for data protection.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
									},
									"response": [
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/service-level-agreements/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"service-level-agreements",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The requestor is not allowed to perform this operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/service-level-agreements/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"service-level-agreements",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "Successfully returned the service level agreement.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/service-level-agreements/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"service-level-agreements",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"createdAt\": \"1960-03-24T05:18:35.894Z\",\n \"description\": \"commodo adipisicing cupidatat\",\n \"enabled\": true,\n \"id\": \"consequat\",\n \"name\": \"cupidatat commodo irure\",\n \"serviceLevelObjectives\": [\n  {\n   \"activeEnforcement\": true,\n   \"assetType\": \"MICROSOFT_SQL_DATABASE\",\n   \"definitionId\": \"veniam ut fugiat ex\",\n   \"inUse\": true,\n   \"name\": \"incididunt\",\n   \"stageType\": \"REPLICATION\",\n   \"valuesList\": [\n    {\n     \"name\": \"RETENTION_LOCK\",\n     \"operationType\": \"CUMULATIVE\",\n     \"typedValues\": [\n      {\n       \"dataType\": \"e\",\n       \"value\": \"ipsum sit exercitation\"\n      },\n      {\n       \"dataType\": \"sit veniam nulla\",\n       \"value\": \"reprehenderit nostrud\"\n      }\n     ],\n     \"valueCardinality\": \"TYPED_LIST\"\n    },\n    {\n     \"name\": \"BACKUP\",\n     \"operationType\": \"CUMULATIVE\",\n     \"typedValues\": [\n      {\n       \"dataType\": \"et cillum ut\",\n       \"value\": \"culpa cillum irure Lorem\"\n      },\n      {\n       \"dataType\": \"id\",\n       \"value\": \"amet anim id nisi\"\n      }\n     ],\n     \"valueCardinality\": \"TYPED_LIST\"\n    }\n   ]\n  },\n  {\n   \"activeEnforcement\": false,\n   \"assetType\": \"MICROSOFT_SQL_DATABASE\",\n   \"definitionId\": \"sed\",\n   \"inUse\": true,\n   \"name\": \"ad deserunt quis nulla veniam\",\n   \"stageType\": \"PROMOTION\",\n   \"valuesList\": [\n    {\n     \"name\": \"VERIFY_DELETED\",\n     \"operationType\": \"LOG\",\n     \"typedValues\": [\n      {\n       \"dataType\": \"aute sunt\",\n       \"value\": \"cupid\"\n      },\n      {\n       \"dataType\": \"non nisi in\",\n       \"value\": \"voluptate mollit\"\n      }\n     ],\n     \"valueCardinality\": \"SINGLE\"\n    },\n    {\n     \"name\": \"LOCATION_OPTION\",\n     \"operationType\": \"DIFFERENTIAL\",\n     \"typedValues\": [\n      {\n       \"dataType\": \"incididunt\",\n       \"value\": \"eu Excepteur sit consectetur\"\n      },\n      {\n       \"dataType\": \"enim consequat adipisicing est ut\",\n       \"value\": \"dolore labore\"\n      }\n     ],\n     \"valueCardinality\": \"SINGLE\"\n    }\n   ]\n  }\n ],\n \"stageType\": \"CDR\",\n \"updatedAt\": \"2004-04-15T02:00:56.053Z\"\n}"
										},
										{
											"name": "The request is not valid.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/service-level-agreements/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"service-level-agreements",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The requested service level agreement does not exist.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/service-level-agreements/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"service-level-agreements",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/service-level-agreements/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"service-level-agreements",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										}
									]
								},
								{
									"name": "Update service level agreement by ID.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"createdAt\": \"<dateTime>\",\n    \"description\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"serviceLevelObjectives\": [\n        {\n            \"activeEnforcement\": \"<boolean>\",\n            \"definitionId\": \"<string>\",\n            \"inUse\": \"<boolean>\",\n            \"valuesList\": [\n                {\n                    \"name\": \"<string>\",\n                    \"operationType\": \"<string>\",\n                    \"typedValues\": [\n                        {\n                            \"dataType\": \"<string>\",\n                            \"value\": \"<string>\"\n                        }\n                    ],\n                    \"valueCardinality\": \"<string>\"\n                }\n            ]\n        },\n        {\n            \"activeEnforcement\": \"<boolean>\",\n            \"definitionId\": \"<string>\",\n            \"inUse\": \"<boolean>\",\n            \"valuesList\": [\n                {\n                    \"name\": \"<string>\",\n                    \"operationType\": \"<string>\",\n                    \"typedValues\": [\n                        {\n                            \"dataType\": \"<string>\",\n                            \"value\": \"<string>\"\n                        }\n                    ],\n                    \"valueCardinality\": \"<string>\"\n                }\n            ]\n        }\n    ],\n    \"stageType\": \"<string>\",\n    \"updatedAt\": \"<dateTime>\"\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/service-level-agreements/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"service-level-agreements",
												":id"
											],
											"variable": [
												{
													"id": "c11a7486-b1bf-47b4-abc4-9809d39dbb98",
													"key": "id",
													"value": "<string>",
													"type": "string",
													"description": "(Required) ID of the service level agreement."
												}
											]
										},
										"description": "Updates a service level agreement by ID. The service level agreement contains mutliple service level objectives. The service level objective defines a compliance check item for data protection.\n> This endpoint supports execution by the following roles: admin\n"
									},
									"response": [
										{
											"name": "Successfully updated the service level agreement.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"createdAt\": \"<dateTime>\",\n    \"description\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"serviceLevelObjectives\": [\n        {\n            \"activeEnforcement\": \"<boolean>\",\n            \"definitionId\": \"<string>\",\n            \"inUse\": \"<boolean>\",\n            \"valuesList\": [\n                {\n                    \"name\": \"<string>\",\n                    \"operationType\": \"<string>\",\n                    \"typedValues\": [\n                        {\n                            \"dataType\": \"<string>\",\n                            \"value\": \"<string>\"\n                        }\n                    ],\n                    \"valueCardinality\": \"<string>\"\n                }\n            ]\n        },\n        {\n            \"activeEnforcement\": \"<boolean>\",\n            \"definitionId\": \"<string>\",\n            \"inUse\": \"<boolean>\",\n            \"valuesList\": [\n                {\n                    \"name\": \"<string>\",\n                    \"operationType\": \"<string>\",\n                    \"typedValues\": [\n                        {\n                            \"dataType\": \"<string>\",\n                            \"value\": \"<string>\"\n                        }\n                    ],\n                    \"valueCardinality\": \"<string>\"\n                }\n            ]\n        }\n    ],\n    \"stageType\": \"<string>\",\n    \"updatedAt\": \"<dateTime>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/service-level-agreements/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"service-level-agreements",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"createdAt\": \"1960-03-24T05:18:35.894Z\",\n \"description\": \"commodo adipisicing cupidatat\",\n \"enabled\": true,\n \"id\": \"consequat\",\n \"name\": \"cupidatat commodo irure\",\n \"serviceLevelObjectives\": [\n  {\n   \"activeEnforcement\": true,\n   \"assetType\": \"MICROSOFT_SQL_DATABASE\",\n   \"definitionId\": \"veniam ut fugiat ex\",\n   \"inUse\": true,\n   \"name\": \"incididunt\",\n   \"stageType\": \"REPLICATION\",\n   \"valuesList\": [\n    {\n     \"name\": \"RETENTION_LOCK\",\n     \"operationType\": \"CUMULATIVE\",\n     \"typedValues\": [\n      {\n       \"dataType\": \"e\",\n       \"value\": \"ipsum sit exercitation\"\n      },\n      {\n       \"dataType\": \"sit veniam nulla\",\n       \"value\": \"reprehenderit nostrud\"\n      }\n     ],\n     \"valueCardinality\": \"TYPED_LIST\"\n    },\n    {\n     \"name\": \"BACKUP\",\n     \"operationType\": \"CUMULATIVE\",\n     \"typedValues\": [\n      {\n       \"dataType\": \"et cillum ut\",\n       \"value\": \"culpa cillum irure Lorem\"\n      },\n      {\n       \"dataType\": \"id\",\n       \"value\": \"amet anim id nisi\"\n      }\n     ],\n     \"valueCardinality\": \"TYPED_LIST\"\n    }\n   ]\n  },\n  {\n   \"activeEnforcement\": false,\n   \"assetType\": \"MICROSOFT_SQL_DATABASE\",\n   \"definitionId\": \"sed\",\n   \"inUse\": true,\n   \"name\": \"ad deserunt quis nulla veniam\",\n   \"stageType\": \"PROMOTION\",\n   \"valuesList\": [\n    {\n     \"name\": \"VERIFY_DELETED\",\n     \"operationType\": \"LOG\",\n     \"typedValues\": [\n      {\n       \"dataType\": \"aute sunt\",\n       \"value\": \"cupid\"\n      },\n      {\n       \"dataType\": \"non nisi in\",\n       \"value\": \"voluptate mollit\"\n      }\n     ],\n     \"valueCardinality\": \"SINGLE\"\n    },\n    {\n     \"name\": \"LOCATION_OPTION\",\n     \"operationType\": \"DIFFERENTIAL\",\n     \"typedValues\": [\n      {\n       \"dataType\": \"incididunt\",\n       \"value\": \"eu Excepteur sit consectetur\"\n      },\n      {\n       \"dataType\": \"enim consequat adipisicing est ut\",\n       \"value\": \"dolore labore\"\n      }\n     ],\n     \"valueCardinality\": \"SINGLE\"\n    }\n   ]\n  }\n ],\n \"stageType\": \"CDR\",\n \"updatedAt\": \"2004-04-15T02:00:56.053Z\"\n}"
										},
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"createdAt\": \"<dateTime>\",\n    \"description\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"serviceLevelObjectives\": [\n        {\n            \"activeEnforcement\": \"<boolean>\",\n            \"definitionId\": \"<string>\",\n            \"inUse\": \"<boolean>\",\n            \"valuesList\": [\n                {\n                    \"name\": \"<string>\",\n                    \"operationType\": \"<string>\",\n                    \"typedValues\": [\n                        {\n                            \"dataType\": \"<string>\",\n                            \"value\": \"<string>\"\n                        }\n                    ],\n                    \"valueCardinality\": \"<string>\"\n                }\n            ]\n        },\n        {\n            \"activeEnforcement\": \"<boolean>\",\n            \"definitionId\": \"<string>\",\n            \"inUse\": \"<boolean>\",\n            \"valuesList\": [\n                {\n                    \"name\": \"<string>\",\n                    \"operationType\": \"<string>\",\n                    \"typedValues\": [\n                        {\n                            \"dataType\": \"<string>\",\n                            \"value\": \"<string>\"\n                        }\n                    ],\n                    \"valueCardinality\": \"<string>\"\n                }\n            ]\n        }\n    ],\n    \"stageType\": \"<string>\",\n    \"updatedAt\": \"<dateTime>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/service-level-agreements/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"service-level-agreements",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The request is not valid.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"createdAt\": \"<dateTime>\",\n    \"description\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"serviceLevelObjectives\": [\n        {\n            \"activeEnforcement\": \"<boolean>\",\n            \"definitionId\": \"<string>\",\n            \"inUse\": \"<boolean>\",\n            \"valuesList\": [\n                {\n                    \"name\": \"<string>\",\n                    \"operationType\": \"<string>\",\n                    \"typedValues\": [\n                        {\n                            \"dataType\": \"<string>\",\n                            \"value\": \"<string>\"\n                        }\n                    ],\n                    \"valueCardinality\": \"<string>\"\n                }\n            ]\n        },\n        {\n            \"activeEnforcement\": \"<boolean>\",\n            \"definitionId\": \"<string>\",\n            \"inUse\": \"<boolean>\",\n            \"valuesList\": [\n                {\n                    \"name\": \"<string>\",\n                    \"operationType\": \"<string>\",\n                    \"typedValues\": [\n                        {\n                            \"dataType\": \"<string>\",\n                            \"value\": \"<string>\"\n                        }\n                    ],\n                    \"valueCardinality\": \"<string>\"\n                }\n            ]\n        }\n    ],\n    \"stageType\": \"<string>\",\n    \"updatedAt\": \"<dateTime>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/service-level-agreements/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"service-level-agreements",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"createdAt\": \"<dateTime>\",\n    \"description\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"serviceLevelObjectives\": [\n        {\n            \"activeEnforcement\": \"<boolean>\",\n            \"definitionId\": \"<string>\",\n            \"inUse\": \"<boolean>\",\n            \"valuesList\": [\n                {\n                    \"name\": \"<string>\",\n                    \"operationType\": \"<string>\",\n                    \"typedValues\": [\n                        {\n                            \"dataType\": \"<string>\",\n                            \"value\": \"<string>\"\n                        }\n                    ],\n                    \"valueCardinality\": \"<string>\"\n                }\n            ]\n        },\n        {\n            \"activeEnforcement\": \"<boolean>\",\n            \"definitionId\": \"<string>\",\n            \"inUse\": \"<boolean>\",\n            \"valuesList\": [\n                {\n                    \"name\": \"<string>\",\n                    \"operationType\": \"<string>\",\n                    \"typedValues\": [\n                        {\n                            \"dataType\": \"<string>\",\n                            \"value\": \"<string>\"\n                        }\n                    ],\n                    \"valueCardinality\": \"<string>\"\n                }\n            ]\n        }\n    ],\n    \"stageType\": \"<string>\",\n    \"updatedAt\": \"<dateTime>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/service-level-agreements/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"service-level-agreements",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The requestor is not allowed to perform this operation.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"createdAt\": \"<dateTime>\",\n    \"description\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"serviceLevelObjectives\": [\n        {\n            \"activeEnforcement\": \"<boolean>\",\n            \"definitionId\": \"<string>\",\n            \"inUse\": \"<boolean>\",\n            \"valuesList\": [\n                {\n                    \"name\": \"<string>\",\n                    \"operationType\": \"<string>\",\n                    \"typedValues\": [\n                        {\n                            \"dataType\": \"<string>\",\n                            \"value\": \"<string>\"\n                        }\n                    ],\n                    \"valueCardinality\": \"<string>\"\n                }\n            ]\n        },\n        {\n            \"activeEnforcement\": \"<boolean>\",\n            \"definitionId\": \"<string>\",\n            \"inUse\": \"<boolean>\",\n            \"valuesList\": [\n                {\n                    \"name\": \"<string>\",\n                    \"operationType\": \"<string>\",\n                    \"typedValues\": [\n                        {\n                            \"dataType\": \"<string>\",\n                            \"value\": \"<string>\"\n                        }\n                    ],\n                    \"valueCardinality\": \"<string>\"\n                }\n            ]\n        }\n    ],\n    \"stageType\": \"<string>\",\n    \"updatedAt\": \"<dateTime>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/service-level-agreements/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"service-level-agreements",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Get all service level agreements.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/service-level-agreements?page=1&pageSize=100&filter=<string>&orderby=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"service-level-agreements"
									],
									"query": [
										{
											"key": "page",
											"value": "1",
											"description": "The page number to be returned. Must not be less than 1. See Tutorials - Page the List Result."
										},
										{
											"key": "pageSize",
											"value": "100",
											"description": "The number of resources to be returned. Must not be less than 1. See Tutorials - Page the List Result."
										},
										{
											"key": "filter",
											"value": "<string>",
											"description": "The filter string that is expressed using PowerProtect Data Manager filter syntax. See Tutorials - Filter the List Result."
										},
										{
											"key": "orderby",
											"value": "<string>",
											"description": "The attributes/fields to be sorted by. This parameter can combine with sort direction \"ASC\" or \"DESC\". Default direction is ASC. See Tutorials - Sort the List Result."
										}
									]
								},
								"description": "Retrieves all service level agreements. Each service level agreement contains mutliple service level objectives. The service level objective defines a compliance check item for data protection.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
							},
							"response": [
								{
									"name": "The requestor is not authorized to perform this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/service-level-agreements?page=1&pageSize=100&filter=<string>&orderby=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"service-level-agreements"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "<string>"
												},
												{
													"key": "orderby",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "The request is not valid.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/service-level-agreements?page=1&pageSize=100&filter=<string>&orderby=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"service-level-agreements"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "<string>"
												},
												{
													"key": "orderby",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "An unexpected error prevented the server from fulfilling your request.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/service-level-agreements?page=1&pageSize=100&filter=<string>&orderby=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"service-level-agreements"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "<string>"
												},
												{
													"key": "orderby",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "The requestor is not allowed to perform this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/service-level-agreements?page=1&pageSize=100&filter=<string>&orderby=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"service-level-agreements"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "<string>"
												},
												{
													"key": "orderby",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "Successfully returned available service level agreements.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/service-level-agreements?page=1&pageSize=100&filter=<string>&orderby=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"service-level-agreements"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "<string>"
												},
												{
													"key": "orderby",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"content\": [\n  {\n   \"createdAt\": \"1954-05-28T16:20:43.275Z\",\n   \"description\": \"incididunt \",\n   \"enabled\": false,\n   \"id\": \"magna voluptate\",\n   \"name\": \"Excepteur sed nisi reprehenderit mollit\",\n   \"serviceLevelObjectives\": [\n    {\n     \"activeEnforcement\": false,\n     \"assetType\": \"ORACLE_DATABASE\",\n     \"definitionId\": \"officia Duis cillum ullamco\",\n     \"inUse\": true,\n     \"name\": \"pariatur\",\n     \"stageType\": \"ALL\",\n     \"valuesList\": [\n      {\n       \"name\": \"BACKUP\",\n       \"operationType\": \"FULL\",\n       \"typedValues\": [\n        {\n         \"dataType\": \"nostrud Duis\",\n         \"value\": \"anim irure et Ut esse\"\n        },\n        {\n         \"dataType\": \"officia non\",\n         \"value\": \"tempor ea non laboris\"\n        }\n       ],\n       \"valueCardinality\": \"FLAT_LIST\"\n      },\n      {\n       \"name\": \"LOCATION_OPTION\",\n       \"operationType\": \"INCREMENTAL\",\n       \"typedValues\": [\n        {\n         \"dataType\": \"in fugiat dolor est\",\n         \"value\": \"Ut dolor \"\n        },\n        {\n         \"dataType\": \"exercitation sunt aliquip laboris\",\n         \"value\": \"reprehenderit est veniam adipisicing incididunt\"\n        }\n       ],\n       \"valueCardinality\": \"FLAT_LIST\"\n      }\n     ]\n    },\n    {\n     \"activeEnforcement\": true,\n     \"assetType\": \"ORACLE_DATABASE\",\n     \"definitionId\": \"dolore adipisicing nulla lab\",\n     \"inUse\": false,\n     \"name\": \"non id\",\n     \"stageType\": \"PROMOTION\",\n     \"valuesList\": [\n      {\n       \"name\": \"REPLICA\",\n       \"operationType\": \"FULL\",\n       \"typedValues\": [\n        {\n         \"dataType\": \"commodo exercitation ipsum velit\",\n         \"value\": \"nisi dolor\"\n        },\n        {\n         \"dataType\": \"sunt ve\",\n         \"value\": \"in pariatur\"\n        }\n       ],\n       \"valueCardinality\": \"FLAT_LIST\"\n      },\n      {\n       \"name\": \"REPLICA\",\n       \"operationType\": \"DIFFERENTIAL\",\n       \"typedValues\": [\n        {\n         \"dataType\": \"dolore commodo amet ea velit\",\n         \"value\": \"labore enim\"\n        },\n        {\n         \"dataType\": \"aliquip minim\",\n         \"value\": \"sed\"\n        }\n       ],\n       \"valueCardinality\": \"FLAT_LIST\"\n      }\n     ]\n    }\n   ],\n   \"stageType\": \"PRIMARY\",\n   \"updatedAt\": \"1955-03-07T22:53:39.120Z\"\n  },\n  {\n   \"createdAt\": \"1966-07-23T11:10:18.923Z\",\n   \"description\": \"dolore officia ipsum\",\n   \"enabled\": true,\n   \"id\": \"id\",\n   \"name\": \"sunt dolore Ut consectetur eu\",\n   \"serviceLevelObjectives\": [\n    {\n     \"activeEnforcement\": true,\n     \"assetType\": \"MICROSOFT_SQL_DATABASE\",\n     \"definitionId\": \"in veniam\",\n     \"inUse\": false,\n     \"name\": \"enim consecte\",\n     \"stageType\": \"PROMOTION\",\n     \"valuesList\": [\n      {\n       \"name\": \"RETENTION_TIME\",\n       \"operationType\": \"LOG\",\n       \"typedValues\": [\n        {\n         \"dataType\": \"sunt amet ea sint\",\n         \"value\": \"nulla nostrud qui\"\n        },\n        {\n         \"dataType\": \"aliqua exercitation dolor\",\n         \"value\": \"irure ex sit sed ad\"\n        }\n       ],\n       \"valueCardinality\": \"FLAT_LIST\"\n      },\n      {\n       \"name\": \"RETENTION_LOCK\",\n       \"operationType\": \"DIFFERENTIAL\",\n       \"typedValues\": [\n        {\n         \"dataType\": \"ea\",\n         \"value\": \"aliquip velit cill\"\n        },\n        {\n         \"dataType\": \"cillum consequat Lorem\",\n         \"value\": \"qui ea\"\n        }\n       ],\n       \"valueCardinality\": \"TYPED_LIST\"\n      }\n     ]\n    },\n    {\n     \"activeEnforcement\": true,\n     \"assetType\": \"VMWARE_VIRTUAL_MACHINE\",\n     \"definitionId\": \"ea\",\n     \"inUse\": false,\n     \"name\": \"lab\",\n     \"stageType\": \"CLOUD\",\n     \"valuesList\": [\n      {\n       \"name\": \"BACKUP\",\n       \"operationType\": \"CUMULATIVE\",\n       \"typedValues\": [\n        {\n         \"dataType\": \"dolore nostru\",\n         \"value\": \"proident in\"\n        },\n        {\n         \"dataType\": \"quis eiusmod\",\n         \"value\": \"est ut Except\"\n        }\n       ],\n       \"valueCardinality\": \"TYPED_LIST\"\n      },\n      {\n       \"name\": \"ALLOW_IN_CLOUD\",\n       \"operationType\": \"LOG\",\n       \"typedValues\": [\n        {\n         \"dataType\": \"nisi consectetur enim veniam\",\n         \"value\": \"est exercitation esse\"\n        },\n        {\n         \"dataType\": \"aute ex pariatur sed\",\n         \"value\": \"sunt dol\"\n        }\n       ],\n       \"valueCardinality\": \"FLAT_LIST\"\n      }\n     ]\n    }\n   ],\n   \"stageType\": \"PROTECTION\",\n   \"updatedAt\": \"1943-12-04T04:47:58.006Z\"\n  }\n ],\n \"page\": {\n  \"number\": -10945752,\n  \"queryState\": \"velit qui voluptate\",\n  \"size\": -19106844,\n  \"totalElements\": 76774820,\n  \"totalPages\": 85274509\n }\n}"
								}
							]
						},
						{
							"name": "Create a service level agreement.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"createdAt\": \"<dateTime>\",\n    \"description\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"serviceLevelObjectives\": [\n        {\n            \"activeEnforcement\": \"<boolean>\",\n            \"definitionId\": \"<string>\",\n            \"inUse\": \"<boolean>\",\n            \"valuesList\": [\n                {\n                    \"name\": \"<string>\",\n                    \"operationType\": \"<string>\",\n                    \"typedValues\": [\n                        {\n                            \"dataType\": \"<string>\",\n                            \"value\": \"<string>\"\n                        }\n                    ],\n                    \"valueCardinality\": \"<string>\"\n                }\n            ]\n        },\n        {\n            \"activeEnforcement\": \"<boolean>\",\n            \"definitionId\": \"<string>\",\n            \"inUse\": \"<boolean>\",\n            \"valuesList\": [\n                {\n                    \"name\": \"<string>\",\n                    \"operationType\": \"<string>\",\n                    \"typedValues\": [\n                        {\n                            \"dataType\": \"<string>\",\n                            \"value\": \"<string>\"\n                        }\n                    ],\n                    \"valueCardinality\": \"<string>\"\n                }\n            ]\n        }\n    ],\n    \"stageType\": \"<string>\",\n    \"updatedAt\": \"<dateTime>\"\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/service-level-agreements",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"service-level-agreements"
									]
								},
								"description": "Creates a service level agreement. The service level agreement contains mutliple service level objectives. The service level objective defines a compliance check item for data protection.\n> This endpoint supports execution by the following roles: admin,export-and-recovery-admin\n"
							},
							"response": [
								{
									"name": "Successfully created the service sevel agreement.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"createdAt\": \"<dateTime>\",\n    \"description\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"serviceLevelObjectives\": [\n        {\n            \"activeEnforcement\": \"<boolean>\",\n            \"definitionId\": \"<string>\",\n            \"inUse\": \"<boolean>\",\n            \"valuesList\": [\n                {\n                    \"name\": \"<string>\",\n                    \"operationType\": \"<string>\",\n                    \"typedValues\": [\n                        {\n                            \"dataType\": \"<string>\",\n                            \"value\": \"<string>\"\n                        }\n                    ],\n                    \"valueCardinality\": \"<string>\"\n                }\n            ]\n        },\n        {\n            \"activeEnforcement\": \"<boolean>\",\n            \"definitionId\": \"<string>\",\n            \"inUse\": \"<boolean>\",\n            \"valuesList\": [\n                {\n                    \"name\": \"<string>\",\n                    \"operationType\": \"<string>\",\n                    \"typedValues\": [\n                        {\n                            \"dataType\": \"<string>\",\n                            \"value\": \"<string>\"\n                        }\n                    ],\n                    \"valueCardinality\": \"<string>\"\n                }\n            ]\n        }\n    ],\n    \"stageType\": \"<string>\",\n    \"updatedAt\": \"<dateTime>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/service-level-agreements",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"service-level-agreements"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"createdAt\": \"1960-03-24T05:18:35.894Z\",\n \"description\": \"commodo adipisicing cupidatat\",\n \"enabled\": true,\n \"id\": \"consequat\",\n \"name\": \"cupidatat commodo irure\",\n \"serviceLevelObjectives\": [\n  {\n   \"activeEnforcement\": true,\n   \"assetType\": \"MICROSOFT_SQL_DATABASE\",\n   \"definitionId\": \"veniam ut fugiat ex\",\n   \"inUse\": true,\n   \"name\": \"incididunt\",\n   \"stageType\": \"REPLICATION\",\n   \"valuesList\": [\n    {\n     \"name\": \"RETENTION_LOCK\",\n     \"operationType\": \"CUMULATIVE\",\n     \"typedValues\": [\n      {\n       \"dataType\": \"e\",\n       \"value\": \"ipsum sit exercitation\"\n      },\n      {\n       \"dataType\": \"sit veniam nulla\",\n       \"value\": \"reprehenderit nostrud\"\n      }\n     ],\n     \"valueCardinality\": \"TYPED_LIST\"\n    },\n    {\n     \"name\": \"BACKUP\",\n     \"operationType\": \"CUMULATIVE\",\n     \"typedValues\": [\n      {\n       \"dataType\": \"et cillum ut\",\n       \"value\": \"culpa cillum irure Lorem\"\n      },\n      {\n       \"dataType\": \"id\",\n       \"value\": \"amet anim id nisi\"\n      }\n     ],\n     \"valueCardinality\": \"TYPED_LIST\"\n    }\n   ]\n  },\n  {\n   \"activeEnforcement\": false,\n   \"assetType\": \"MICROSOFT_SQL_DATABASE\",\n   \"definitionId\": \"sed\",\n   \"inUse\": true,\n   \"name\": \"ad deserunt quis nulla veniam\",\n   \"stageType\": \"PROMOTION\",\n   \"valuesList\": [\n    {\n     \"name\": \"VERIFY_DELETED\",\n     \"operationType\": \"LOG\",\n     \"typedValues\": [\n      {\n       \"dataType\": \"aute sunt\",\n       \"value\": \"cupid\"\n      },\n      {\n       \"dataType\": \"non nisi in\",\n       \"value\": \"voluptate mollit\"\n      }\n     ],\n     \"valueCardinality\": \"SINGLE\"\n    },\n    {\n     \"name\": \"LOCATION_OPTION\",\n     \"operationType\": \"DIFFERENTIAL\",\n     \"typedValues\": [\n      {\n       \"dataType\": \"incididunt\",\n       \"value\": \"eu Excepteur sit consectetur\"\n      },\n      {\n       \"dataType\": \"enim consequat adipisicing est ut\",\n       \"value\": \"dolore labore\"\n      }\n     ],\n     \"valueCardinality\": \"SINGLE\"\n    }\n   ]\n  }\n ],\n \"stageType\": \"CDR\",\n \"updatedAt\": \"2004-04-15T02:00:56.053Z\"\n}"
								},
								{
									"name": "The requestor is not allowed to perform this operation.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"createdAt\": \"<dateTime>\",\n    \"description\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"serviceLevelObjectives\": [\n        {\n            \"activeEnforcement\": \"<boolean>\",\n            \"definitionId\": \"<string>\",\n            \"inUse\": \"<boolean>\",\n            \"valuesList\": [\n                {\n                    \"name\": \"<string>\",\n                    \"operationType\": \"<string>\",\n                    \"typedValues\": [\n                        {\n                            \"dataType\": \"<string>\",\n                            \"value\": \"<string>\"\n                        }\n                    ],\n                    \"valueCardinality\": \"<string>\"\n                }\n            ]\n        },\n        {\n            \"activeEnforcement\": \"<boolean>\",\n            \"definitionId\": \"<string>\",\n            \"inUse\": \"<boolean>\",\n            \"valuesList\": [\n                {\n                    \"name\": \"<string>\",\n                    \"operationType\": \"<string>\",\n                    \"typedValues\": [\n                        {\n                            \"dataType\": \"<string>\",\n                            \"value\": \"<string>\"\n                        }\n                    ],\n                    \"valueCardinality\": \"<string>\"\n                }\n            ]\n        }\n    ],\n    \"stageType\": \"<string>\",\n    \"updatedAt\": \"<dateTime>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/service-level-agreements",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"service-level-agreements"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "Successful operation.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"createdAt\": \"<dateTime>\",\n    \"description\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"serviceLevelObjectives\": [\n        {\n            \"activeEnforcement\": \"<boolean>\",\n            \"definitionId\": \"<string>\",\n            \"inUse\": \"<boolean>\",\n            \"valuesList\": [\n                {\n                    \"name\": \"<string>\",\n                    \"operationType\": \"<string>\",\n                    \"typedValues\": [\n                        {\n                            \"dataType\": \"<string>\",\n                            \"value\": \"<string>\"\n                        }\n                    ],\n                    \"valueCardinality\": \"<string>\"\n                }\n            ]\n        },\n        {\n            \"activeEnforcement\": \"<boolean>\",\n            \"definitionId\": \"<string>\",\n            \"inUse\": \"<boolean>\",\n            \"valuesList\": [\n                {\n                    \"name\": \"<string>\",\n                    \"operationType\": \"<string>\",\n                    \"typedValues\": [\n                        {\n                            \"dataType\": \"<string>\",\n                            \"value\": \"<string>\"\n                        }\n                    ],\n                    \"valueCardinality\": \"<string>\"\n                }\n            ]\n        }\n    ],\n    \"stageType\": \"<string>\",\n    \"updatedAt\": \"<dateTime>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/service-level-agreements",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"service-level-agreements"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"createdAt\": \"1960-03-24T05:18:35.894Z\",\n \"description\": \"commodo adipisicing cupidatat\",\n \"enabled\": true,\n \"id\": \"consequat\",\n \"name\": \"cupidatat commodo irure\",\n \"serviceLevelObjectives\": [\n  {\n   \"activeEnforcement\": true,\n   \"assetType\": \"MICROSOFT_SQL_DATABASE\",\n   \"definitionId\": \"veniam ut fugiat ex\",\n   \"inUse\": true,\n   \"name\": \"incididunt\",\n   \"stageType\": \"REPLICATION\",\n   \"valuesList\": [\n    {\n     \"name\": \"RETENTION_LOCK\",\n     \"operationType\": \"CUMULATIVE\",\n     \"typedValues\": [\n      {\n       \"dataType\": \"e\",\n       \"value\": \"ipsum sit exercitation\"\n      },\n      {\n       \"dataType\": \"sit veniam nulla\",\n       \"value\": \"reprehenderit nostrud\"\n      }\n     ],\n     \"valueCardinality\": \"TYPED_LIST\"\n    },\n    {\n     \"name\": \"BACKUP\",\n     \"operationType\": \"CUMULATIVE\",\n     \"typedValues\": [\n      {\n       \"dataType\": \"et cillum ut\",\n       \"value\": \"culpa cillum irure Lorem\"\n      },\n      {\n       \"dataType\": \"id\",\n       \"value\": \"amet anim id nisi\"\n      }\n     ],\n     \"valueCardinality\": \"TYPED_LIST\"\n    }\n   ]\n  },\n  {\n   \"activeEnforcement\": false,\n   \"assetType\": \"MICROSOFT_SQL_DATABASE\",\n   \"definitionId\": \"sed\",\n   \"inUse\": true,\n   \"name\": \"ad deserunt quis nulla veniam\",\n   \"stageType\": \"PROMOTION\",\n   \"valuesList\": [\n    {\n     \"name\": \"VERIFY_DELETED\",\n     \"operationType\": \"LOG\",\n     \"typedValues\": [\n      {\n       \"dataType\": \"aute sunt\",\n       \"value\": \"cupid\"\n      },\n      {\n       \"dataType\": \"non nisi in\",\n       \"value\": \"voluptate mollit\"\n      }\n     ],\n     \"valueCardinality\": \"SINGLE\"\n    },\n    {\n     \"name\": \"LOCATION_OPTION\",\n     \"operationType\": \"DIFFERENTIAL\",\n     \"typedValues\": [\n      {\n       \"dataType\": \"incididunt\",\n       \"value\": \"eu Excepteur sit consectetur\"\n      },\n      {\n       \"dataType\": \"enim consequat adipisicing est ut\",\n       \"value\": \"dolore labore\"\n      }\n     ],\n     \"valueCardinality\": \"SINGLE\"\n    }\n   ]\n  }\n ],\n \"stageType\": \"CDR\",\n \"updatedAt\": \"2004-04-15T02:00:56.053Z\"\n}"
								},
								{
									"name": "An unexpected error prevented the server from fulfilling your request.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"createdAt\": \"<dateTime>\",\n    \"description\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"serviceLevelObjectives\": [\n        {\n            \"activeEnforcement\": \"<boolean>\",\n            \"definitionId\": \"<string>\",\n            \"inUse\": \"<boolean>\",\n            \"valuesList\": [\n                {\n                    \"name\": \"<string>\",\n                    \"operationType\": \"<string>\",\n                    \"typedValues\": [\n                        {\n                            \"dataType\": \"<string>\",\n                            \"value\": \"<string>\"\n                        }\n                    ],\n                    \"valueCardinality\": \"<string>\"\n                }\n            ]\n        },\n        {\n            \"activeEnforcement\": \"<boolean>\",\n            \"definitionId\": \"<string>\",\n            \"inUse\": \"<boolean>\",\n            \"valuesList\": [\n                {\n                    \"name\": \"<string>\",\n                    \"operationType\": \"<string>\",\n                    \"typedValues\": [\n                        {\n                            \"dataType\": \"<string>\",\n                            \"value\": \"<string>\"\n                        }\n                    ],\n                    \"valueCardinality\": \"<string>\"\n                }\n            ]\n        }\n    ],\n    \"stageType\": \"<string>\",\n    \"updatedAt\": \"<dateTime>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/service-level-agreements",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"service-level-agreements"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "The requestor is not authorized to perform this operation.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"createdAt\": \"<dateTime>\",\n    \"description\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"serviceLevelObjectives\": [\n        {\n            \"activeEnforcement\": \"<boolean>\",\n            \"definitionId\": \"<string>\",\n            \"inUse\": \"<boolean>\",\n            \"valuesList\": [\n                {\n                    \"name\": \"<string>\",\n                    \"operationType\": \"<string>\",\n                    \"typedValues\": [\n                        {\n                            \"dataType\": \"<string>\",\n                            \"value\": \"<string>\"\n                        }\n                    ],\n                    \"valueCardinality\": \"<string>\"\n                }\n            ]\n        },\n        {\n            \"activeEnforcement\": \"<boolean>\",\n            \"definitionId\": \"<string>\",\n            \"inUse\": \"<boolean>\",\n            \"valuesList\": [\n                {\n                    \"name\": \"<string>\",\n                    \"operationType\": \"<string>\",\n                    \"typedValues\": [\n                        {\n                            \"dataType\": \"<string>\",\n                            \"value\": \"<string>\"\n                        }\n                    ],\n                    \"valueCardinality\": \"<string>\"\n                }\n            ]\n        }\n    ],\n    \"stageType\": \"<string>\",\n    \"updatedAt\": \"<dateTime>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/service-level-agreements",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"service-level-agreements"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "The request is not valid.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"createdAt\": \"<dateTime>\",\n    \"description\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"serviceLevelObjectives\": [\n        {\n            \"activeEnforcement\": \"<boolean>\",\n            \"definitionId\": \"<string>\",\n            \"inUse\": \"<boolean>\",\n            \"valuesList\": [\n                {\n                    \"name\": \"<string>\",\n                    \"operationType\": \"<string>\",\n                    \"typedValues\": [\n                        {\n                            \"dataType\": \"<string>\",\n                            \"value\": \"<string>\"\n                        }\n                    ],\n                    \"valueCardinality\": \"<string>\"\n                }\n            ]\n        },\n        {\n            \"activeEnforcement\": \"<boolean>\",\n            \"definitionId\": \"<string>\",\n            \"inUse\": \"<boolean>\",\n            \"valuesList\": [\n                {\n                    \"name\": \"<string>\",\n                    \"operationType\": \"<string>\",\n                    \"typedValues\": [\n                        {\n                            \"dataType\": \"<string>\",\n                            \"value\": \"<string>\"\n                        }\n                    ],\n                    \"valueCardinality\": \"<string>\"\n                }\n            ]\n        }\n    ],\n    \"stageType\": \"<string>\",\n    \"updatedAt\": \"<dateTime>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/service-level-agreements",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"service-level-agreements"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "service-level-objectives",
					"item": [
						{
							"name": "Get all service level objectives.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/service-level-objectives?page=1&pageSize=100&filter=<string>&orderby=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"service-level-objectives"
									],
									"query": [
										{
											"key": "page",
											"value": "1",
											"description": "The page number to be returned. Must not be less than 1. See Tutorials - Page the List Result."
										},
										{
											"key": "pageSize",
											"value": "100",
											"description": "The number of resources to be returned. Must not be less than 1. See Tutorials - Page the List Result."
										},
										{
											"key": "filter",
											"value": "<string>",
											"description": "The filter string that is expressed using PowerProtect Data Manager filter syntax. See Tutorials - Filter the List Result."
										},
										{
											"key": "orderby",
											"value": "<string>",
											"description": "The attributes/fields to be sorted by. This parameter can combine with sort direction \"ASC\" or \"DESC\". Default direction is ASC. See Tutorials - Sort the List Result."
										}
									]
								},
								"description": "Retrieves all service level objectives. The each service level objective defines one compliance type. The compliance type must follow each service service level objective that is required.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
							},
							"response": [
								{
									"name": "The requestor is not authorized to perform this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/service-level-objectives?page=1&pageSize=100&filter=<string>&orderby=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"service-level-objectives"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "<string>"
												},
												{
													"key": "orderby",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "The requestor is not allowed to perform this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/service-level-objectives?page=1&pageSize=100&filter=<string>&orderby=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"service-level-objectives"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "<string>"
												},
												{
													"key": "orderby",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "The request is not valid.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/service-level-objectives?page=1&pageSize=100&filter=<string>&orderby=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"service-level-objectives"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "<string>"
												},
												{
													"key": "orderby",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Successfully returned available service level objectives.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/service-level-objectives?page=1&pageSize=100&filter=<string>&orderby=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"service-level-objectives"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "<string>"
												},
												{
													"key": "orderby",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"content\": [\n  {\n   \"description\": \"occ\",\n   \"id\": \"do pariatur enim ut dolore\",\n   \"mandatory\": false,\n   \"name\": \"est nostrud laborum in\",\n   \"order\": -82467606,\n   \"ruleExecutionClass\": \"voluptate labore incididunt in commodo\",\n   \"stageType\": \"PRIMARY\",\n   \"valueCardinality\": \"TYPED_LIST\"\n  },\n  {\n   \"description\": \"dolor id ut\",\n   \"id\": \"sunt et al\",\n   \"mandatory\": true,\n   \"name\": \"aute sit nisi sint\",\n   \"order\": 80463118,\n   \"ruleExecutionClass\": \"aliquip sunt ullamco Excepteur\",\n   \"stageType\": \"PRIMARY\",\n   \"valueCardinality\": \"TYPED_LIST\"\n  }\n ],\n \"page\": {\n  \"number\": 3403077,\n  \"queryState\": \"Excepteur\",\n  \"size\": -26627138,\n  \"totalElements\": 24598643,\n  \"totalPages\": -78407258\n }\n}"
								},
								{
									"name": "An unexpected error prevented the server from fulfilling your request.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/service-level-objectives?page=1&pageSize=100&filter=<string>&orderby=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"service-level-objectives"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "<string>"
												},
												{
													"key": "orderby",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								}
							]
						},
						{
							"name": "Get service level objective by ID.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/service-level-objectives/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"service-level-objectives",
										":id"
									],
									"variable": [
										{
											"id": "58bbe3bb-36f7-4e0b-a96f-aea9a91dbe70",
											"key": "id",
											"value": "<string>",
											"type": "string",
											"description": "(Required) Service level objective ID."
										}
									]
								},
								"description": "Retrieves service level objective by ID. The each service level objective defines one compliance type. The compliance type must follow each service service level objective that is required.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
							},
							"response": [
								{
									"name": "The request is not valid.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/service-level-objectives/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"service-level-objectives",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "An unexpected error prevented the server from fulfilling your request.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/service-level-objectives/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"service-level-objectives",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "Successfully returned the service level objective.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/service-level-objectives/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"service-level-objectives",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"description\": \"in\",\n \"id\": \"sit Lorem Excepteur\",\n \"mandatory\": true,\n \"name\": \"non in \",\n \"order\": -76688815,\n \"ruleExecutionClass\": \"aliqua nisi cupidat\",\n \"stageType\": \"PRIMARY\",\n \"valueCardinality\": \"SINGLE\"\n}"
								},
								{
									"name": "The requestor is not allowed to perform this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/service-level-objectives/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"service-level-objectives",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "The requestor is not authorized to perform this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/service-level-objectives/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"service-level-objectives",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "The requested service level objective does not exist.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/service-level-objectives/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"service-level-objectives",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "smtp",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Delete SMTP configuration by ID.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/smtp/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"smtp",
												":id"
											],
											"variable": [
												{
													"id": "289b5b47-f913-49b5-bec5-dc5af7c30ddc",
													"key": "id",
													"value": "<string>",
													"type": "string",
													"description": "(Required) SMTP configuration ID."
												}
											]
										},
										"description": "Deletes SMTP configuration by ID.\nNo email is sent once SMTP configuration is deleted.\n> This endpoint supports execution by the following roles: admin\n"
									},
									"response": [
										{
											"name": "The requestor is not allowed to perform this operation.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/smtp/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"smtp",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Deleted the SMTP with the specified ID.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/smtp/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"smtp",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Cannot find a SMTP configuration with the specified ID.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/smtp/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"smtp",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Successful operation.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/smtp/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"smtp",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"id\": \"nisi occaecat mollit esse\",\n \"mailServer\": \"in Ut\",\n \"mailFrom\": \"et aliqua esse eu\",\n \"password\": \"ut Excepteur\",\n \"port\": 37325158,\n \"username\": \"ut non pariatur est sit\"\n}"
										},
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/smtp/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"smtp",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Get SMTP configuration by ID.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/smtp/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"smtp",
												":id"
											],
											"variable": [
												{
													"id": "19e47873-96fd-467c-b87c-eb8bc14de3c1",
													"key": "id",
													"value": "Unique identifier for smtp",
													"type": "string",
													"description": "(Required) SMTP configuration ID."
												}
											]
										},
										"description": "Retrieves SMTP configuration by the specified ID.\n> This endpoint supports execution by the following roles: admin, user, export and recovery admin\n"
									},
									"response": [
										{
											"name": "Found and returned the SMTP configuration with the specified ID.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/smtp/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"smtp",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"id\": \"nisi occaecat mollit esse\",\n \"mailServer\": \"in Ut\",\n \"mailFrom\": \"et aliqua esse eu\",\n \"password\": \"ut Excepteur\",\n \"port\": 37325158,\n \"username\": \"ut non pariatur est sit\"\n}"
										},
										{
											"name": "The requestor is not allowed to perform this operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/smtp/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"smtp",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/smtp/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"smtp",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Cannot find an SMTP configuration with the specified ID.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/smtp/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"smtp",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Update SMTP configuration by ID.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"<string>\",\n    \"mailServer\": \"<string>\",\n    \"mailFrom\": \"<string>\",\n    \"password\": \"<string>\",\n    \"port\": \"<integer>\",\n    \"username\": \"<string>\"\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/smtp/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"smtp",
												":id"
											],
											"variable": [
												{
													"id": "4707263c-73f4-4608-9269-4c32613c755c",
													"key": "id",
													"value": "<string>",
													"type": "string",
													"description": "(Required) SMTP configuration ID sent in request."
												}
											]
										},
										"description": "Updates SMTP configuration by ID.\nYou can update the mailserver, mailFrom, and mailRecipient.\n> This endpoint supports execution by the following roles: admin\n"
									},
									"response": [
										{
											"name": "Cannot find an SMTP configuration with the specified ID.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\": \"<string>\",\n    \"mailServer\": \"<string>\",\n    \"mailFrom\": \"<string>\",\n    \"password\": \"<string>\",\n    \"port\": \"<integer>\",\n    \"username\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/smtp/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"smtp",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Successfully updated the SMTP configuration.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\": \"<string>\",\n    \"mailServer\": \"<string>\",\n    \"mailFrom\": \"<string>\",\n    \"password\": \"<string>\",\n    \"port\": \"<integer>\",\n    \"username\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/smtp/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"smtp",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"id\": \"nisi occaecat mollit esse\",\n \"mailServer\": \"in Ut\",\n \"mailFrom\": \"et aliqua esse eu\",\n \"password\": \"ut Excepteur\",\n \"port\": 37325158,\n \"username\": \"ut non pariatur est sit\"\n}"
										},
										{
											"name": "The submitted SMTP configuration has a syntax error.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\": \"<string>\",\n    \"mailServer\": \"<string>\",\n    \"mailFrom\": \"<string>\",\n    \"password\": \"<string>\",\n    \"port\": \"<integer>\",\n    \"username\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/smtp/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"smtp",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Cannot change the SMTP configuration in the current node state.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\": \"<string>\",\n    \"mailServer\": \"<string>\",\n    \"mailFrom\": \"<string>\",\n    \"password\": \"<string>\",\n    \"port\": \"<integer>\",\n    \"username\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/smtp/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"smtp",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The requestor is not allowed to perform this operation.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\": \"<string>\",\n    \"mailServer\": \"<string>\",\n    \"mailFrom\": \"<string>\",\n    \"password\": \"<string>\",\n    \"port\": \"<integer>\",\n    \"username\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/smtp/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"smtp",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\": \"<string>\",\n    \"mailServer\": \"<string>\",\n    \"mailFrom\": \"<string>\",\n    \"password\": \"<string>\",\n    \"port\": \"<integer>\",\n    \"username\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/smtp/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"smtp",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Get all SMTP configuration information.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/smtp",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"smtp"
									]
								},
								"description": "Retrieves Simple Mail Transfer Protocol (SMTP) configuration. Returns the list of SMTP setup in the appliance.\nReturns only one SMTP configuration.\nReturns ID, mailserver, mailFrom, mailRecipient, and port.\n\n> This endpoint supports execution by the following roles: admin, user, export and recovery admin\n"
							},
							"response": [
								{
									"name": "Located and returned the available SMTP configuration successfully.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/smtp",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"smtp"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"content\": [\n  {\n   \"id\": \"voluptate sunt laborum\",\n   \"mailServer\": \"ad enim pariatur Lorem\",\n   \"mailFrom\": \"in et Excepteur id\",\n   \"password\": \"consectetur quis irure consequat\",\n   \"port\": 62259313,\n   \"username\": \"consectetur voluptate \"\n  },\n  {\n   \"id\": \"s\",\n   \"mailServer\": \"in sed irure eu non\",\n   \"mailFrom\": \"cillum incididunt\",\n   \"password\": \"velit incididunt mollit\",\n   \"port\": -68804612,\n   \"username\": \"ad in ut\"\n  }\n ],\n \"page\": {\n  \"number\": -66236935,\n  \"queryState\": \"fugiat\",\n  \"size\": -37872271,\n  \"totalElements\": -27437465,\n  \"totalPages\": -94300916\n }\n}"
								},
								{
									"name": "Filter syntax is not valid.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/smtp",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"smtp"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "An unexpected error prevented the server from fulfilling your request.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/smtp",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"smtp"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "The requestor is not allowed to perform this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/smtp",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"smtp"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Create SMTP configuration.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"<string>\",\n    \"mailServer\": \"<string>\",\n    \"mailFrom\": \"<string>\",\n    \"password\": \"<string>\",\n    \"port\": \"<integer>\",\n    \"username\": \"<string>\"\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/smtp",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"smtp"
									]
								},
								"description": "Creates the SMTP configuration, which requires mailserver, mailFrom:admin(email), and mailRecipient:email.\nThe email setup on the PowerProtect Data Manager System Settings area enables you to configure SMTP email server information to send emails for resetting local user passwords and customized alert notifications.\nOnly one SMTP configuration is allowed.\n\n> This endpoint supports execution by the following roles: admin\n"
							},
							"response": [
								{
									"name": "An unexpected error prevented the server from fulfilling your request.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"<string>\",\n    \"mailServer\": \"<string>\",\n    \"mailFrom\": \"<string>\",\n    \"password\": \"<string>\",\n    \"port\": \"<integer>\",\n    \"username\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/smtp",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"smtp"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Created new SMTP.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"<string>\",\n    \"mailServer\": \"<string>\",\n    \"mailFrom\": \"<string>\",\n    \"password\": \"<string>\",\n    \"port\": \"<integer>\",\n    \"username\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/smtp",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"smtp"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "The submitted SMTP has a syntax error.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"<string>\",\n    \"mailServer\": \"<string>\",\n    \"mailFrom\": \"<string>\",\n    \"password\": \"<string>\",\n    \"port\": \"<integer>\",\n    \"username\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/smtp",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"smtp"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "The requestor is not allowed to perform this operation.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"<string>\",\n    \"mailServer\": \"<string>\",\n    \"mailFrom\": \"<string>\",\n    \"password\": \"<string>\",\n    \"port\": \"<integer>\",\n    \"username\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/smtp",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"smtp"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Cannot find a SMTP with the specified ID.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"<string>\",\n    \"mailServer\": \"<string>\",\n    \"mailFrom\": \"<string>\",\n    \"password\": \"<string>\",\n    \"port\": \"<integer>\",\n    \"username\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/smtp",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"smtp"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Only one SMTP is allowed.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"<string>\",\n    \"mailServer\": \"<string>\",\n    \"mailFrom\": \"<string>\",\n    \"password\": \"<string>\",\n    \"port\": \"<integer>\",\n    \"username\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/smtp",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"smtp"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Successful operation.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"<string>\",\n    \"mailServer\": \"<string>\",\n    \"mailFrom\": \"<string>\",\n    \"password\": \"<string>\",\n    \"port\": \"<integer>\",\n    \"username\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/smtp",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"smtp"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"id\": \"nisi occaecat mollit esse\",\n \"mailServer\": \"in Ut\",\n \"mailFrom\": \"et aliqua esse eu\",\n \"password\": \"ut Excepteur\",\n \"port\": 37325158,\n \"username\": \"ut non pariatur est sit\"\n}"
								}
							]
						},
						{
							"name": "Send a test email.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"mailServer\": \"<string>\",\n    \"recipient\": \"<string>\",\n    \"mailFrom\": \"<string>\",\n    \"password\": \"<string>\",\n    \"port\": \"<integer>\",\n    \"username\": \"<string>\"\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/smtp/test",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"smtp",
										"test"
									]
								},
								"description": "Sends a test email.\nRequires mailRecipient and mailserver. Includes mailFrom: email.\n> This endpoint supports execution by the following roles: admin\n"
							},
							"response": [
								{
									"name": "An unexpected error prevented the server from fulfilling your request.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"mailServer\": \"<string>\",\n    \"recipient\": \"<string>\",\n    \"mailFrom\": \"<string>\",\n    \"password\": \"<string>\",\n    \"port\": \"<integer>\",\n    \"username\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/smtp/test",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"smtp",
												"test"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "The requestor is not allowed to perform this operation.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"mailServer\": \"<string>\",\n    \"recipient\": \"<string>\",\n    \"mailFrom\": \"<string>\",\n    \"password\": \"<string>\",\n    \"port\": \"<integer>\",\n    \"username\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/smtp/test",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"smtp",
												"test"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Test email sent successfully.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"mailServer\": \"<string>\",\n    \"recipient\": \"<string>\",\n    \"mailFrom\": \"<string>\",\n    \"password\": \"<string>\",\n    \"port\": \"<integer>\",\n    \"username\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/smtp/test",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"smtp",
												"test"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "storage-systems",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Get a storage system by ID.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/storage-systems/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"storage-systems",
												":id"
											],
											"variable": [
												{
													"id": "c76b94b2-bb96-4e8f-b86d-7c3308a8c867",
													"key": "id",
													"value": "<string>",
													"type": "string",
													"description": "(Required) ID of the storage system."
												}
											]
										},
										"description": "Retrieves a storage system by ID.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
									},
									"response": [
										{
											"name": "Successfully returned the storage system.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/storage-systems/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"storage-systems",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"_embedded\": {\n  \"inventorySource\": {\n   \"id\": \"ut pr\",\n   \"name\": \"in aliqua laborum velit ut\"\n  },\n  \"location\": {\n   \"id\": \"minim velit occaec\",\n   \"name\": \"eu enim incididunt\"\n  }\n },\n \"capacityUtilization\": -10461531.186664835,\n \"createdAt\": \"1947-06-29T04:30:05.258Z\",\n \"ddLocationId\": \"qui eu magna nulla exercitation\",\n \"details\": {\n  \"dataDomain\": {\n   \"capacityQuotasSupported\": false,\n   \"cloudEnabled\": true,\n   \"cloudTierLicensed\": true,\n   \"compressionFactor\": -80016863.0041794,\n   \"ddboostLicensed\": false,\n   \"encryptionLicensed\": false,\n   \"model\": \"velit\",\n   \"percentUsed\": -26061162.54359816,\n   \"preferredInterfaces\": [\n    {\n     \"networkAddress\": \"commodo ex\",\n     \"networkLabel\": \"est Ut\",\n     \"networkName\": \"mollit consectetur\",\n     \"speed\": -96360334.24576315\n    },\n    {\n     \"networkAddress\": \"enim eu qui irure\",\n     \"networkLabel\": \"nostrud id\",\n     \"networkName\": \"deserunt proiden\",\n     \"speed\": -67616312.84497796\n    }\n   ],\n   \"preferredNetworkSupported\": false,\n   \"replicationEncryptionEnabled\": true,\n   \"replicationLicensed\": false,\n   \"retentionLockComplianceLicensed\": true,\n   \"retentionLockGovernanceLicensed\": true,\n   \"retentionLockSupported\": true,\n   \"serialNumber\": \"ea nulla cillum\",\n   \"streamQuotasSupported\": false,\n   \"totalSize\": 82853756.64297944,\n   \"totalUsed\": -94007944.63676578,\n   \"vdiskEnabled\": false,\n   \"version\": \"dolore labore consequat in\"\n  },\n  \"recoverPoint\": {\n   \"protectedSpace\": -31529236.89296134,\n   \"serialNumber\": \"culpa cillum\",\n   \"totalCapacityManaged\": -73517781.32602616,\n   \"version\": \"mollit dolor dolor\"\n  },\n  \"vmax\": {\n   \"cacheSize\": 56940815,\n   \"model\": \"eu occaecat do ad in\",\n   \"serialNumber\": \"sint minim\",\n   \"totalSize\": -45955760.6183774,\n   \"totalUsed\": -74854195.70268928\n  },\n  \"xio\": {\n   \"serialNumber\": \"ea aliqua\",\n   \"totalSize\": -79904799.89000642,\n   \"totalUsed\": 11255428.16673772,\n   \"version\": \"irure in\"\n  }\n },\n \"id\": \"est laborum esse qui\",\n \"lastDiscovered\": \"1967-05-15T21:23:49.633Z\",\n \"lastDiscoveryAt\": \"2001-10-09T08:31:03.052Z\",\n \"lastDiscoveryResult\": {\n  \"error\": \"irure nostrud aute consectetur consequat\",\n  \"messageID\": \"cillum officia incididunt\",\n  \"remediation\": \"amet voluptate in\",\n  \"status\": \"UNKNOWN\",\n  \"summaries\": [\n   \"laborum cillum\",\n   \"dolore deserunt minim\"\n  ]\n },\n \"lastDiscoveryStatus\": \"DETECTED\",\n \"lastDiscoveryTaskId\": \"occaecat proident et\",\n \"local\": true,\n \"locationId\": \"deserunt consectetur esse nisi\",\n \"name\": \"labore sit incididunt\",\n \"operatingSystem\": {\n  \"name\": \"est\",\n  \"version\": \"cupidatat et sed laborum\"\n },\n \"type\": \"CDR_REGION_SYSTEM\",\n \"updatedAt\": \"2004-03-28T10:12:22.259Z\"\n}"
										},
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/storage-systems/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"storage-systems",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The requestor is not allowed to perform this operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/storage-systems/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"storage-systems",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/storage-systems/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"storage-systems",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The requested storage system does not exist.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/storage-systems/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"storage-systems",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The request is not valid.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/storage-systems/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"storage-systems",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										}
									]
								},
								{
									"name": "Update storage system location by ID.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"capacityUtilization\": \"<double>\",\n    \"createdAt\": \"<dateTime>\",\n    \"ddLocationId\": \"<string>\",\n    \"details\": {\n        \"dataDomain\": {\n            \"capacityQuotasSupported\": \"<boolean>\",\n            \"cloudEnabled\": \"<boolean>\",\n            \"cloudTierLicensed\": \"<boolean>\",\n            \"compressionFactor\": \"<double>\",\n            \"ddboostLicensed\": \"<boolean>\",\n            \"encryptionLicensed\": \"<boolean>\",\n            \"model\": \"<string>\",\n            \"percentUsed\": \"<double>\",\n            \"preferredInterfaces\": [\n                {\n                    \"networkAddress\": \"<string>\",\n                    \"networkLabel\": \"<string>\",\n                    \"networkName\": \"<string>\",\n                    \"speed\": \"<double>\"\n                }\n            ],\n            \"preferredNetworkSupported\": \"<boolean>\",\n            \"replicationEncryptionEnabled\": \"<boolean>\",\n            \"replicationLicensed\": \"<boolean>\",\n            \"retentionLockComplianceLicensed\": \"<boolean>\",\n            \"retentionLockGovernanceLicensed\": \"<boolean>\",\n            \"retentionLockSupported\": \"<boolean>\",\n            \"serialNumber\": \"<string>\",\n            \"streamQuotasSupported\": \"<boolean>\",\n            \"totalSize\": \"<double>\",\n            \"totalUsed\": \"<double>\",\n            \"vdiskEnabled\": \"<boolean>\",\n            \"version\": \"<string>\"\n        },\n        \"recoverPoint\": {\n            \"protectedSpace\": \"<double>\",\n            \"serialNumber\": \"<string>\",\n            \"totalCapacityManaged\": \"<double>\",\n            \"version\": \"<string>\"\n        },\n        \"vmax\": {\n            \"cacheSize\": \"<integer>\",\n            \"model\": \"<string>\",\n            \"serialNumber\": \"<string>\",\n            \"totalSize\": \"<double>\",\n            \"totalUsed\": \"<double>\"\n        },\n        \"xio\": {\n            \"serialNumber\": \"<string>\",\n            \"totalSize\": \"<double>\",\n            \"totalUsed\": \"<double>\",\n            \"version\": \"<string>\"\n        }\n    },\n    \"id\": \"<string>\",\n    \"lastDiscovered\": \"<dateTime>\",\n    \"lastDiscoveryResult\": {\n        \"error\": \"<string>\",\n        \"messageID\": \"<string>\",\n        \"remediation\": \"<string>\",\n        \"status\": \"<string>\",\n        \"summaries\": [\n            \"<string>\",\n            \"<string>\"\n        ]\n    },\n    \"lastDiscoveryStatus\": \"<string>\",\n    \"local\": \"<boolean>\",\n    \"locationId\": \"<string>\",\n    \"name\": \"<string>\",\n    \"operatingSystem\": {\n        \"name\": \"<string>\",\n        \"version\": \"<string>\"\n    },\n    \"type\": \"<string>\",\n    \"updatedAt\": \"<dateTime>\"\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/storage-systems/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"storage-systems",
												":id"
											],
											"variable": [
												{
													"id": "bd93b098-53b3-41e5-9ffc-975591f5d7b5",
													"key": "id",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The storage system ID."
												}
											]
										},
										"description": "Updates storage system location by ID.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
									},
									"response": [
										{
											"name": "Successfully updated the storage system.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"capacityUtilization\": \"<double>\",\n    \"createdAt\": \"<dateTime>\",\n    \"ddLocationId\": \"<string>\",\n    \"details\": {\n        \"dataDomain\": {\n            \"capacityQuotasSupported\": \"<boolean>\",\n            \"cloudEnabled\": \"<boolean>\",\n            \"cloudTierLicensed\": \"<boolean>\",\n            \"compressionFactor\": \"<double>\",\n            \"ddboostLicensed\": \"<boolean>\",\n            \"encryptionLicensed\": \"<boolean>\",\n            \"model\": \"<string>\",\n            \"percentUsed\": \"<double>\",\n            \"preferredInterfaces\": [\n                {\n                    \"networkAddress\": \"<string>\",\n                    \"networkLabel\": \"<string>\",\n                    \"networkName\": \"<string>\",\n                    \"speed\": \"<double>\"\n                }\n            ],\n            \"preferredNetworkSupported\": \"<boolean>\",\n            \"replicationEncryptionEnabled\": \"<boolean>\",\n            \"replicationLicensed\": \"<boolean>\",\n            \"retentionLockComplianceLicensed\": \"<boolean>\",\n            \"retentionLockGovernanceLicensed\": \"<boolean>\",\n            \"retentionLockSupported\": \"<boolean>\",\n            \"serialNumber\": \"<string>\",\n            \"streamQuotasSupported\": \"<boolean>\",\n            \"totalSize\": \"<double>\",\n            \"totalUsed\": \"<double>\",\n            \"vdiskEnabled\": \"<boolean>\",\n            \"version\": \"<string>\"\n        },\n        \"recoverPoint\": {\n            \"protectedSpace\": \"<double>\",\n            \"serialNumber\": \"<string>\",\n            \"totalCapacityManaged\": \"<double>\",\n            \"version\": \"<string>\"\n        },\n        \"vmax\": {\n            \"cacheSize\": \"<integer>\",\n            \"model\": \"<string>\",\n            \"serialNumber\": \"<string>\",\n            \"totalSize\": \"<double>\",\n            \"totalUsed\": \"<double>\"\n        },\n        \"xio\": {\n            \"serialNumber\": \"<string>\",\n            \"totalSize\": \"<double>\",\n            \"totalUsed\": \"<double>\",\n            \"version\": \"<string>\"\n        }\n    },\n    \"id\": \"<string>\",\n    \"lastDiscovered\": \"<dateTime>\",\n    \"lastDiscoveryResult\": {\n        \"error\": \"<string>\",\n        \"messageID\": \"<string>\",\n        \"remediation\": \"<string>\",\n        \"status\": \"<string>\",\n        \"summaries\": [\n            \"<string>\",\n            \"<string>\"\n        ]\n    },\n    \"lastDiscoveryStatus\": \"<string>\",\n    \"local\": \"<boolean>\",\n    \"locationId\": \"<string>\",\n    \"name\": \"<string>\",\n    \"operatingSystem\": {\n        \"name\": \"<string>\",\n        \"version\": \"<string>\"\n    },\n    \"type\": \"<string>\",\n    \"updatedAt\": \"<dateTime>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/storage-systems/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"storage-systems",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"_embedded\": {\n  \"inventorySource\": {\n   \"id\": \"ut pr\",\n   \"name\": \"in aliqua laborum velit ut\"\n  },\n  \"location\": {\n   \"id\": \"minim velit occaec\",\n   \"name\": \"eu enim incididunt\"\n  }\n },\n \"capacityUtilization\": -10461531.186664835,\n \"createdAt\": \"1947-06-29T04:30:05.258Z\",\n \"ddLocationId\": \"qui eu magna nulla exercitation\",\n \"details\": {\n  \"dataDomain\": {\n   \"capacityQuotasSupported\": false,\n   \"cloudEnabled\": true,\n   \"cloudTierLicensed\": true,\n   \"compressionFactor\": -80016863.0041794,\n   \"ddboostLicensed\": false,\n   \"encryptionLicensed\": false,\n   \"model\": \"velit\",\n   \"percentUsed\": -26061162.54359816,\n   \"preferredInterfaces\": [\n    {\n     \"networkAddress\": \"commodo ex\",\n     \"networkLabel\": \"est Ut\",\n     \"networkName\": \"mollit consectetur\",\n     \"speed\": -96360334.24576315\n    },\n    {\n     \"networkAddress\": \"enim eu qui irure\",\n     \"networkLabel\": \"nostrud id\",\n     \"networkName\": \"deserunt proiden\",\n     \"speed\": -67616312.84497796\n    }\n   ],\n   \"preferredNetworkSupported\": false,\n   \"replicationEncryptionEnabled\": true,\n   \"replicationLicensed\": false,\n   \"retentionLockComplianceLicensed\": true,\n   \"retentionLockGovernanceLicensed\": true,\n   \"retentionLockSupported\": true,\n   \"serialNumber\": \"ea nulla cillum\",\n   \"streamQuotasSupported\": false,\n   \"totalSize\": 82853756.64297944,\n   \"totalUsed\": -94007944.63676578,\n   \"vdiskEnabled\": false,\n   \"version\": \"dolore labore consequat in\"\n  },\n  \"recoverPoint\": {\n   \"protectedSpace\": -31529236.89296134,\n   \"serialNumber\": \"culpa cillum\",\n   \"totalCapacityManaged\": -73517781.32602616,\n   \"version\": \"mollit dolor dolor\"\n  },\n  \"vmax\": {\n   \"cacheSize\": 56940815,\n   \"model\": \"eu occaecat do ad in\",\n   \"serialNumber\": \"sint minim\",\n   \"totalSize\": -45955760.6183774,\n   \"totalUsed\": -74854195.70268928\n  },\n  \"xio\": {\n   \"serialNumber\": \"ea aliqua\",\n   \"totalSize\": -79904799.89000642,\n   \"totalUsed\": 11255428.16673772,\n   \"version\": \"irure in\"\n  }\n },\n \"id\": \"est laborum esse qui\",\n \"lastDiscovered\": \"1967-05-15T21:23:49.633Z\",\n \"lastDiscoveryAt\": \"2001-10-09T08:31:03.052Z\",\n \"lastDiscoveryResult\": {\n  \"error\": \"irure nostrud aute consectetur consequat\",\n  \"messageID\": \"cillum officia incididunt\",\n  \"remediation\": \"amet voluptate in\",\n  \"status\": \"UNKNOWN\",\n  \"summaries\": [\n   \"laborum cillum\",\n   \"dolore deserunt minim\"\n  ]\n },\n \"lastDiscoveryStatus\": \"DETECTED\",\n \"lastDiscoveryTaskId\": \"occaecat proident et\",\n \"local\": true,\n \"locationId\": \"deserunt consectetur esse nisi\",\n \"name\": \"labore sit incididunt\",\n \"operatingSystem\": {\n  \"name\": \"est\",\n  \"version\": \"cupidatat et sed laborum\"\n },\n \"type\": \"CDR_REGION_SYSTEM\",\n \"updatedAt\": \"2004-03-28T10:12:22.259Z\"\n}"
										},
										{
											"name": "The requestor is not allowed to perform this operation.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"capacityUtilization\": \"<double>\",\n    \"createdAt\": \"<dateTime>\",\n    \"ddLocationId\": \"<string>\",\n    \"details\": {\n        \"dataDomain\": {\n            \"capacityQuotasSupported\": \"<boolean>\",\n            \"cloudEnabled\": \"<boolean>\",\n            \"cloudTierLicensed\": \"<boolean>\",\n            \"compressionFactor\": \"<double>\",\n            \"ddboostLicensed\": \"<boolean>\",\n            \"encryptionLicensed\": \"<boolean>\",\n            \"model\": \"<string>\",\n            \"percentUsed\": \"<double>\",\n            \"preferredInterfaces\": [\n                {\n                    \"networkAddress\": \"<string>\",\n                    \"networkLabel\": \"<string>\",\n                    \"networkName\": \"<string>\",\n                    \"speed\": \"<double>\"\n                }\n            ],\n            \"preferredNetworkSupported\": \"<boolean>\",\n            \"replicationEncryptionEnabled\": \"<boolean>\",\n            \"replicationLicensed\": \"<boolean>\",\n            \"retentionLockComplianceLicensed\": \"<boolean>\",\n            \"retentionLockGovernanceLicensed\": \"<boolean>\",\n            \"retentionLockSupported\": \"<boolean>\",\n            \"serialNumber\": \"<string>\",\n            \"streamQuotasSupported\": \"<boolean>\",\n            \"totalSize\": \"<double>\",\n            \"totalUsed\": \"<double>\",\n            \"vdiskEnabled\": \"<boolean>\",\n            \"version\": \"<string>\"\n        },\n        \"recoverPoint\": {\n            \"protectedSpace\": \"<double>\",\n            \"serialNumber\": \"<string>\",\n            \"totalCapacityManaged\": \"<double>\",\n            \"version\": \"<string>\"\n        },\n        \"vmax\": {\n            \"cacheSize\": \"<integer>\",\n            \"model\": \"<string>\",\n            \"serialNumber\": \"<string>\",\n            \"totalSize\": \"<double>\",\n            \"totalUsed\": \"<double>\"\n        },\n        \"xio\": {\n            \"serialNumber\": \"<string>\",\n            \"totalSize\": \"<double>\",\n            \"totalUsed\": \"<double>\",\n            \"version\": \"<string>\"\n        }\n    },\n    \"id\": \"<string>\",\n    \"lastDiscovered\": \"<dateTime>\",\n    \"lastDiscoveryResult\": {\n        \"error\": \"<string>\",\n        \"messageID\": \"<string>\",\n        \"remediation\": \"<string>\",\n        \"status\": \"<string>\",\n        \"summaries\": [\n            \"<string>\",\n            \"<string>\"\n        ]\n    },\n    \"lastDiscoveryStatus\": \"<string>\",\n    \"local\": \"<boolean>\",\n    \"locationId\": \"<string>\",\n    \"name\": \"<string>\",\n    \"operatingSystem\": {\n        \"name\": \"<string>\",\n        \"version\": \"<string>\"\n    },\n    \"type\": \"<string>\",\n    \"updatedAt\": \"<dateTime>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/storage-systems/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"storage-systems",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"capacityUtilization\": \"<double>\",\n    \"createdAt\": \"<dateTime>\",\n    \"ddLocationId\": \"<string>\",\n    \"details\": {\n        \"dataDomain\": {\n            \"capacityQuotasSupported\": \"<boolean>\",\n            \"cloudEnabled\": \"<boolean>\",\n            \"cloudTierLicensed\": \"<boolean>\",\n            \"compressionFactor\": \"<double>\",\n            \"ddboostLicensed\": \"<boolean>\",\n            \"encryptionLicensed\": \"<boolean>\",\n            \"model\": \"<string>\",\n            \"percentUsed\": \"<double>\",\n            \"preferredInterfaces\": [\n                {\n                    \"networkAddress\": \"<string>\",\n                    \"networkLabel\": \"<string>\",\n                    \"networkName\": \"<string>\",\n                    \"speed\": \"<double>\"\n                }\n            ],\n            \"preferredNetworkSupported\": \"<boolean>\",\n            \"replicationEncryptionEnabled\": \"<boolean>\",\n            \"replicationLicensed\": \"<boolean>\",\n            \"retentionLockComplianceLicensed\": \"<boolean>\",\n            \"retentionLockGovernanceLicensed\": \"<boolean>\",\n            \"retentionLockSupported\": \"<boolean>\",\n            \"serialNumber\": \"<string>\",\n            \"streamQuotasSupported\": \"<boolean>\",\n            \"totalSize\": \"<double>\",\n            \"totalUsed\": \"<double>\",\n            \"vdiskEnabled\": \"<boolean>\",\n            \"version\": \"<string>\"\n        },\n        \"recoverPoint\": {\n            \"protectedSpace\": \"<double>\",\n            \"serialNumber\": \"<string>\",\n            \"totalCapacityManaged\": \"<double>\",\n            \"version\": \"<string>\"\n        },\n        \"vmax\": {\n            \"cacheSize\": \"<integer>\",\n            \"model\": \"<string>\",\n            \"serialNumber\": \"<string>\",\n            \"totalSize\": \"<double>\",\n            \"totalUsed\": \"<double>\"\n        },\n        \"xio\": {\n            \"serialNumber\": \"<string>\",\n            \"totalSize\": \"<double>\",\n            \"totalUsed\": \"<double>\",\n            \"version\": \"<string>\"\n        }\n    },\n    \"id\": \"<string>\",\n    \"lastDiscovered\": \"<dateTime>\",\n    \"lastDiscoveryResult\": {\n        \"error\": \"<string>\",\n        \"messageID\": \"<string>\",\n        \"remediation\": \"<string>\",\n        \"status\": \"<string>\",\n        \"summaries\": [\n            \"<string>\",\n            \"<string>\"\n        ]\n    },\n    \"lastDiscoveryStatus\": \"<string>\",\n    \"local\": \"<boolean>\",\n    \"locationId\": \"<string>\",\n    \"name\": \"<string>\",\n    \"operatingSystem\": {\n        \"name\": \"<string>\",\n        \"version\": \"<string>\"\n    },\n    \"type\": \"<string>\",\n    \"updatedAt\": \"<dateTime>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/storage-systems/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"storage-systems",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The request is not valid.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"capacityUtilization\": \"<double>\",\n    \"createdAt\": \"<dateTime>\",\n    \"ddLocationId\": \"<string>\",\n    \"details\": {\n        \"dataDomain\": {\n            \"capacityQuotasSupported\": \"<boolean>\",\n            \"cloudEnabled\": \"<boolean>\",\n            \"cloudTierLicensed\": \"<boolean>\",\n            \"compressionFactor\": \"<double>\",\n            \"ddboostLicensed\": \"<boolean>\",\n            \"encryptionLicensed\": \"<boolean>\",\n            \"model\": \"<string>\",\n            \"percentUsed\": \"<double>\",\n            \"preferredInterfaces\": [\n                {\n                    \"networkAddress\": \"<string>\",\n                    \"networkLabel\": \"<string>\",\n                    \"networkName\": \"<string>\",\n                    \"speed\": \"<double>\"\n                }\n            ],\n            \"preferredNetworkSupported\": \"<boolean>\",\n            \"replicationEncryptionEnabled\": \"<boolean>\",\n            \"replicationLicensed\": \"<boolean>\",\n            \"retentionLockComplianceLicensed\": \"<boolean>\",\n            \"retentionLockGovernanceLicensed\": \"<boolean>\",\n            \"retentionLockSupported\": \"<boolean>\",\n            \"serialNumber\": \"<string>\",\n            \"streamQuotasSupported\": \"<boolean>\",\n            \"totalSize\": \"<double>\",\n            \"totalUsed\": \"<double>\",\n            \"vdiskEnabled\": \"<boolean>\",\n            \"version\": \"<string>\"\n        },\n        \"recoverPoint\": {\n            \"protectedSpace\": \"<double>\",\n            \"serialNumber\": \"<string>\",\n            \"totalCapacityManaged\": \"<double>\",\n            \"version\": \"<string>\"\n        },\n        \"vmax\": {\n            \"cacheSize\": \"<integer>\",\n            \"model\": \"<string>\",\n            \"serialNumber\": \"<string>\",\n            \"totalSize\": \"<double>\",\n            \"totalUsed\": \"<double>\"\n        },\n        \"xio\": {\n            \"serialNumber\": \"<string>\",\n            \"totalSize\": \"<double>\",\n            \"totalUsed\": \"<double>\",\n            \"version\": \"<string>\"\n        }\n    },\n    \"id\": \"<string>\",\n    \"lastDiscovered\": \"<dateTime>\",\n    \"lastDiscoveryResult\": {\n        \"error\": \"<string>\",\n        \"messageID\": \"<string>\",\n        \"remediation\": \"<string>\",\n        \"status\": \"<string>\",\n        \"summaries\": [\n            \"<string>\",\n            \"<string>\"\n        ]\n    },\n    \"lastDiscoveryStatus\": \"<string>\",\n    \"local\": \"<boolean>\",\n    \"locationId\": \"<string>\",\n    \"name\": \"<string>\",\n    \"operatingSystem\": {\n        \"name\": \"<string>\",\n        \"version\": \"<string>\"\n    },\n    \"type\": \"<string>\",\n    \"updatedAt\": \"<dateTime>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/storage-systems/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"storage-systems",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"capacityUtilization\": \"<double>\",\n    \"createdAt\": \"<dateTime>\",\n    \"ddLocationId\": \"<string>\",\n    \"details\": {\n        \"dataDomain\": {\n            \"capacityQuotasSupported\": \"<boolean>\",\n            \"cloudEnabled\": \"<boolean>\",\n            \"cloudTierLicensed\": \"<boolean>\",\n            \"compressionFactor\": \"<double>\",\n            \"ddboostLicensed\": \"<boolean>\",\n            \"encryptionLicensed\": \"<boolean>\",\n            \"model\": \"<string>\",\n            \"percentUsed\": \"<double>\",\n            \"preferredInterfaces\": [\n                {\n                    \"networkAddress\": \"<string>\",\n                    \"networkLabel\": \"<string>\",\n                    \"networkName\": \"<string>\",\n                    \"speed\": \"<double>\"\n                }\n            ],\n            \"preferredNetworkSupported\": \"<boolean>\",\n            \"replicationEncryptionEnabled\": \"<boolean>\",\n            \"replicationLicensed\": \"<boolean>\",\n            \"retentionLockComplianceLicensed\": \"<boolean>\",\n            \"retentionLockGovernanceLicensed\": \"<boolean>\",\n            \"retentionLockSupported\": \"<boolean>\",\n            \"serialNumber\": \"<string>\",\n            \"streamQuotasSupported\": \"<boolean>\",\n            \"totalSize\": \"<double>\",\n            \"totalUsed\": \"<double>\",\n            \"vdiskEnabled\": \"<boolean>\",\n            \"version\": \"<string>\"\n        },\n        \"recoverPoint\": {\n            \"protectedSpace\": \"<double>\",\n            \"serialNumber\": \"<string>\",\n            \"totalCapacityManaged\": \"<double>\",\n            \"version\": \"<string>\"\n        },\n        \"vmax\": {\n            \"cacheSize\": \"<integer>\",\n            \"model\": \"<string>\",\n            \"serialNumber\": \"<string>\",\n            \"totalSize\": \"<double>\",\n            \"totalUsed\": \"<double>\"\n        },\n        \"xio\": {\n            \"serialNumber\": \"<string>\",\n            \"totalSize\": \"<double>\",\n            \"totalUsed\": \"<double>\",\n            \"version\": \"<string>\"\n        }\n    },\n    \"id\": \"<string>\",\n    \"lastDiscovered\": \"<dateTime>\",\n    \"lastDiscoveryResult\": {\n        \"error\": \"<string>\",\n        \"messageID\": \"<string>\",\n        \"remediation\": \"<string>\",\n        \"status\": \"<string>\",\n        \"summaries\": [\n            \"<string>\",\n            \"<string>\"\n        ]\n    },\n    \"lastDiscoveryStatus\": \"<string>\",\n    \"local\": \"<boolean>\",\n    \"locationId\": \"<string>\",\n    \"name\": \"<string>\",\n    \"operatingSystem\": {\n        \"name\": \"<string>\",\n        \"version\": \"<string>\"\n    },\n    \"type\": \"<string>\",\n    \"updatedAt\": \"<dateTime>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/storage-systems/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"storage-systems",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Get all storage systems.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/storage-systems?page=1&pageSize=100&filter=<string>&orderby=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"storage-systems"
									],
									"query": [
										{
											"key": "page",
											"value": "1",
											"description": "The page number to be returned. Must not be less than 1. See Tutorials - Page the List Result."
										},
										{
											"key": "pageSize",
											"value": "100",
											"description": "The number of resources to be returned. Must not be less than 1. See Tutorials - Page the List Result."
										},
										{
											"key": "filter",
											"value": "<string>",
											"description": "The filter string that is expressed using PowerProtect Data Manager filter syntax. See Tutorials - Filter the List Result."
										},
										{
											"key": "orderby",
											"value": "<string>",
											"description": "The attributes/fields to be sorted by. This parameter can combine with sort direction \"ASC\" or \"DESC\". Default direction is ASC. See Tutorials - Sort the List Result."
										}
									]
								},
								"description": "Retrieves all **Storage Systems** in the PowerProtect Data Manager including Data Domain systems, PowerProtect systems, and other local or external storage systems.\n**Storage Systems** are used to store the asset data regarding backing up or replicating assets.\nThis API request belongs to the storage management API.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
							},
							"response": [
								{
									"name": "Successfully returned available storage systems.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/storage-systems?page=1&pageSize=100&filter=<string>&orderby=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"storage-systems"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "<string>"
												},
												{
													"key": "orderby",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"content\": [\n  {\n   \"_embedded\": {\n    \"inventorySource\": {\n     \"id\": \"deserunt ea\",\n     \"name\": \"proident\"\n    },\n    \"location\": {\n     \"id\": \"incididunt occaecat proident cillum\",\n     \"name\": \"qui cupidatat\"\n    }\n   },\n   \"capacityUtilization\": -28620956.574370608,\n   \"createdAt\": \"1943-03-25T04:29:39.996Z\",\n   \"ddLocationId\": \"dolor in sed Ut\",\n   \"details\": {\n    \"dataDomain\": {\n     \"capacityQuotasSupported\": false,\n     \"cloudEnabled\": true,\n     \"cloudTierLicensed\": false,\n     \"compressionFactor\": 27823869.231781602,\n     \"ddboostLicensed\": true,\n     \"encryptionLicensed\": true,\n     \"model\": \"dolor\",\n     \"percentUsed\": -2856434.1432178766,\n     \"preferredInterfaces\": [\n      {\n       \"networkAddress\": \"velit minim tempor\",\n       \"networkLabel\": \"qui laboris in consequat\",\n       \"networkName\": \"officia ipsum\",\n       \"speed\": 24417318.5180344\n      },\n      {\n       \"networkAddress\": \"quis nostrud\",\n       \"networkLabel\": \"dolor fugiat sit enim sunt\",\n       \"networkName\": \"occaecat dolore nulla id ut\",\n       \"speed\": 43154514.608956784\n      }\n     ],\n     \"preferredNetworkSupported\": true,\n     \"replicationEncryptionEnabled\": false,\n     \"replicationLicensed\": true,\n     \"retentionLockComplianceLicensed\": false,\n     \"retentionLockGovernanceLicensed\": false,\n     \"retentionLockSupported\": false,\n     \"serialNumber\": \"dolore aliqua sunt ipsum officia\",\n     \"streamQuotasSupported\": false,\n     \"totalSize\": 97829116.85912263,\n     \"totalUsed\": 86971318.43660238,\n     \"vdiskEnabled\": true,\n     \"version\": \"proident amet reprehenderit sunt\"\n    },\n    \"recoverPoint\": {\n     \"protectedSpace\": 83750458.95241624,\n     \"serialNumber\": \"ip\",\n     \"totalCapacityManaged\": 28466826.5248968,\n     \"version\": \"in eu laboris cillum do\"\n    },\n    \"vmax\": {\n     \"cacheSize\": 39540356,\n     \"model\": \"adip\",\n     \"serialNumber\": \"elit exercitation\",\n     \"totalSize\": -96377695.28664868,\n     \"totalUsed\": 31769404.956833243\n    },\n    \"xio\": {\n     \"serialNumber\": \"officia sit\",\n     \"totalSize\": -30271634.93051845,\n     \"totalUsed\": -81896979.98401594,\n     \"version\": \"veniam Lorem ad laboris\"\n    }\n   },\n   \"id\": \"minim Lorem\",\n   \"lastDiscovered\": \"1987-09-24T05:24:46.088Z\",\n   \"lastDiscoveryAt\": \"1960-10-29T21:54:35.410Z\",\n   \"lastDiscoveryResult\": {\n    \"error\": \"laboru\",\n    \"messageID\": \"non nostrud\",\n    \"remediation\": \"Ut\",\n    \"status\": \"OK\",\n    \"summaries\": [\n     \"dolore deserunt esse aliquip\",\n     \"velit Duis esse non\"\n    ]\n   },\n   \"lastDiscoveryStatus\": \"NEW\",\n   \"lastDiscoveryTaskId\": \"dolor in culpa\",\n   \"local\": false,\n   \"locationId\": \"ex cupidatat Ut\",\n   \"name\": \"aute in ad fugiat\",\n   \"operatingSystem\": {\n    \"name\": \"enim velit ex\",\n    \"version\": \"laborum tempor aliquip\"\n   },\n   \"type\": \"POWER_PROTECT_SYSTEM\",\n   \"updatedAt\": \"1940-11-23T09:48:46.531Z\"\n  },\n  {\n   \"_embedded\": {\n    \"inventorySource\": {\n     \"id\": \"tempor ad Lorem nulla\",\n     \"name\": \"sed reprehenderit\"\n    },\n    \"location\": {\n     \"id\": \"in tempor veniam adipisicing\",\n     \"name\": \"occaecat sit\"\n    }\n   },\n   \"capacityUtilization\": 22988183.697331175,\n   \"createdAt\": \"1999-02-10T18:21:25.505Z\",\n   \"ddLocationId\": \"officia dolore eu magna tempor\",\n   \"details\": {\n    \"dataDomain\": {\n     \"capacityQuotasSupported\": true,\n     \"cloudEnabled\": true,\n     \"cloudTierLicensed\": true,\n     \"compressionFactor\": 45683115.2365852,\n     \"ddboostLicensed\": false,\n     \"encryptionLicensed\": false,\n     \"model\": \"sit\",\n     \"percentUsed\": -33598356.37003892,\n     \"preferredInterfaces\": [\n      {\n       \"networkAddress\": \"pariatur id minim elit\",\n       \"networkLabel\": \"amet proident sed cupidatat\",\n       \"networkName\": \"exercitation cupidatat non incididunt Lorem\",\n       \"speed\": 42698354.38782242\n      },\n      {\n       \"networkAddress\": \"sit id voluptate esse\",\n       \"networkLabel\": \"qui sunt ipsum adipisicing\",\n       \"networkName\": \"ipsum quis in\",\n       \"speed\": 88739941.47453704\n      }\n     ],\n     \"preferredNetworkSupported\": true,\n     \"replicationEncryptionEnabled\": false,\n     \"replicationLicensed\": false,\n     \"retentionLockComplianceLicensed\": false,\n     \"retentionLockGovernanceLicensed\": true,\n     \"retentionLockSupported\": false,\n     \"serialNumber\": \"Duis voluptate laboris cupidatat\",\n     \"streamQuotasSupported\": false,\n     \"totalSize\": -62904075.62839571,\n     \"totalUsed\": -70923507.85738745,\n     \"vdiskEnabled\": true,\n     \"version\": \"nostrud esse minim\"\n    },\n    \"recoverPoint\": {\n     \"protectedSpace\": -50126423.903125964,\n     \"serialNumber\": \"velit ad fugiat\",\n     \"totalCapacityManaged\": 69223303.25016719,\n     \"version\": \"non nostrud cillum anim am\"\n    },\n    \"vmax\": {\n     \"cacheSize\": 45455288,\n     \"model\": \"in eu deserunt aliqua\",\n     \"serialNumber\": \"aliquip enim\",\n     \"totalSize\": -7661923.495077133,\n     \"totalUsed\": -49405732.264765635\n    },\n    \"xio\": {\n     \"serialNumber\": \"aliqua incididunt consequat\",\n     \"totalSize\": 80804946.49618214,\n     \"totalUsed\": -27848023.70390658,\n     \"version\": \"nostrud id oc\"\n    }\n   },\n   \"id\": \"est aliqua Excepteur\",\n   \"lastDiscovered\": \"1979-08-07T02:35:30.052Z\",\n   \"lastDiscoveryAt\": \"1987-07-13T16:49:48.471Z\",\n   \"lastDiscoveryResult\": {\n    \"error\": \"commodo \",\n    \"messageID\": \"dolore conse\",\n    \"remediation\": \"Lorem consequat\",\n    \"status\": \"OK_WITH_ERRORS\",\n    \"summaries\": [\n     \"sint irure minim et\",\n     \"quis aute sint\"\n    ]\n   },\n   \"lastDiscoveryStatus\": \"DELETED\",\n   \"lastDiscoveryTaskId\": \"occaecat Duis nisi aliquip\",\n   \"local\": false,\n   \"locationId\": \"u\",\n   \"name\": \"commodo ad\",\n   \"operatingSystem\": {\n    \"name\": \"occaecat dolor ad qui\",\n    \"version\": \"cupidatat laboris\"\n   },\n   \"type\": \"POWER_PROTECT_SYSTEM\",\n   \"updatedAt\": \"1979-10-22T04:14:50.142Z\"\n  }\n ],\n \"page\": {\n  \"number\": 38329112,\n  \"queryState\": \"deserunt pariatur consectetur magna\",\n  \"size\": -59030520,\n  \"totalElements\": 99859754,\n  \"totalPages\": -70855345\n }\n}"
								},
								{
									"name": "The request is not valid.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/storage-systems?page=1&pageSize=100&filter=<string>&orderby=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"storage-systems"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "<string>"
												},
												{
													"key": "orderby",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "The requestor is not allowed to perform this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/storage-systems?page=1&pageSize=100&filter=<string>&orderby=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"storage-systems"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "<string>"
												},
												{
													"key": "orderby",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "An unexpected error prevented the server from fulfilling your request.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/storage-systems?page=1&pageSize=100&filter=<string>&orderby=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"storage-systems"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "<string>"
												},
												{
													"key": "orderby",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "The requestor is not authorized to perform this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/storage-systems?page=1&pageSize=100&filter=<string>&orderby=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"storage-systems"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "<string>"
												},
												{
													"key": "orderby",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "upgrade-packages",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Delete an uploaded upgrade package by its ID.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/upgrade-packages/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"upgrade-packages",
												":id"
											],
											"variable": [
												{
													"id": "7c823bd8-0789-42ca-b2c7-1747ed2a29ff",
													"key": "id",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The given package ID for upgrade."
												}
											]
										},
										"description": "Deletes an upgrade package that is not installing nor has been installed. Packages in the processing state cannot be deleted.\n> This endpoint supports execution by the following roles: admin\n"
									},
									"response": [
										{
											"name": "The default response when an error occurs.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/upgrade-packages/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"upgrade-packages",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/upgrade-packages/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"upgrade-packages",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The upgrade package is succesfully deleted.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/upgrade-packages/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"upgrade-packages",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Cannot find an upgrade package with the specified ID.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/upgrade-packages/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"upgrade-packages",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/upgrade-packages/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"upgrade-packages",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The upgrade package cannot be deleted.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/upgrade-packages/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"upgrade-packages",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Conflict",
											"code": 409,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/upgrade-packages/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"upgrade-packages",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										}
									]
								},
								{
									"name": "Get upgrade package by its ID.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/upgrade-packages/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"upgrade-packages",
												":id"
											],
											"variable": [
												{
													"id": "dee09801-befd-4327-866a-6fbb4a2e349f",
													"key": "id",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The given package ID for upgrade."
												}
											]
										},
										"description": "Retrieves the details of an upgrade package by the specified ID, including its state, name, installed date, and so on.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
									},
									"response": [
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/upgrade-packages/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"upgrade-packages",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/upgrade-packages/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"upgrade-packages",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "Found and returned the upgrade package with the specified ID.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/upgrade-packages/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"upgrade-packages",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"id\": \"4c449963-ee0c-48b9-9d5f-925ad9b97237\",\n \"state\": \"INSTALLED\",\n \"certificateTrustedByUser\": true,\n \"lockboxPassphrase\": \"ut\",\n \"upgradeToken\": \"dolor sunt exercitation occaecat dolor\",\n \"certificateDetailsMap\": {\n  \"issuerDN\": \"CN=Entrust Code Signing CA - OVCS1,OU=(c) 2015 Entrust\\\\\\\\, Inc. - for authorized use only,OU=See www.entrust.net/legal-terms,O=Entrust\\\\\\\\, Inc.,C=US\",\n  \"md5\": \"A8:CA:D7:A2:87:CE:46:7D:54:22:7E:F6:48:00:D7:F7\",\n  \"notAfter\": \"2020-11-13T18:40:58.000+0000\",\n  \"notBefore\": \"2018-11-27T18:11:01.000+0000\",\n  \"publicKey\": \"RSA public key\",\n  \"publicKeyExponent\": \"65537\",\n  \"publicKeyModulus\": \"28960436902272994990842327932793501079190030541382043284118832665312776269446498640419791240454180242586486085708937734083403079002675942200659672006922211955640645340519418577217605521853665489538005758686672003656588145476218479453412730875755080172327057354731921316729121658964135024802322078500693787277083123358314858038960555352152289672471625254193779104016053331569238519722568716038933287609754732628187721307712701984454977189333349182725470926457368220839164994041565288508095067640843719732336878602089454538914456233996689333685080643187924928683921102207259893124969451536291317395148153287269036808351\",\n  \"publicKeySize\": \"2048\",\n  \"serialNumber\": \"cfaba488b3b34a5c0000000055667d65\",\n  \"sha1\": \"EE:EC:4A:1C:E5:59:0D:39:46:0D:B4:4D:CB:2B:A1:EB:1C:4D:A7:36\",\n  \"sha256\": \"78:14:65:93:0C:1B:05:F9:4A:DF:7F:90:61:2F:FE:29:AE:A3:2A:CE:C8:62:16:81:83:6C:51:6E:91:F4:F5:39\",\n  \"signatureAlgorithmName\": \"SHA256withRSA\",\n  \"signatureAlgorithmOID\": \"1.2.840.113549.1.1.11\",\n  \"subjectDN\": \"cillum aliqua ipsum\",\n  \"version\": \"3\"\n },\n \"dateInstalled\": \"2008-07-19T15:18:07.883Z\",\n \"description\": \"Full details of the upgrade can be found on the support site: https://support.emc.com/products/40720_PowerProtect-Data-Manager/Documentation/\",\n \"errorMessage\": \"consequat non id\",\n \"fileName\": \"dellemc-ppdm-upgrade-sw-19.3.0-1.pkg\",\n \"fromVersion\": \"19.2.0-1\",\n \"lockboxResetRequired\": true,\n \"madeAvailable\": \"1989-05-14T18:15:44.507Z\",\n \"maintenanceUpgrade\": false,\n \"minimumVersion\": \"enim eu qui\",\n \"name\": \"Dell EMC PowerProtect Data Manager - Major Release\",\n \"packageVersion\": \"19.3.0-1\",\n \"rebootRequired\": true,\n \"sizeInBytes\": 3915497644,\n \"subComponentDetails\": [\n  {\n   \"attributes\": {},\n   \"componentName\": \"PPDM\",\n   \"dateInstalled\": \"1950-07-09T21:16:20.467Z\",\n   \"errorMessage\": \"nulla proident\",\n   \"fileName\": \"sunt veniam dolore sint in\",\n   \"fromVersion\": \"non labore ex ut ut\",\n   \"minimumVersion\": \"adipisicing dolor\",\n   \"subComponentUpgradeState\": \"UPGRADED\",\n   \"upgradeError\": {\n    \"reason\": \"incididunt\",\n    \"message\": \"in eu consectetur minim\",\n    \"messageArgs\": [\n     \"Ut\",\n     \"mollit laboris eu sunt\"\n    ],\n    \"messageID\": \"ex amet pro\",\n    \"remediation\": \"anim Excepteur reprehenderit\"\n   },\n   \"upgradeMode\": \"MDU\",\n   \"upgradeStarted\": \"2019-09-27T16:04:16.192+0000\",\n   \"upgradeVersion\": \"19.3.0-1\"\n  },\n  {\n   \"attributes\": {},\n   \"componentName\": \"PPDM\",\n   \"dateInstalled\": \"1953-01-24T03:58:15.373Z\",\n   \"errorMessage\": \"pariatur\",\n   \"fileName\": \"in tempor culpa mollit amet\",\n   \"fromVersion\": \"ad ea\",\n   \"minimumVersion\": \"nulla ex\",\n   \"subComponentUpgradeState\": \"UPGRADED\",\n   \"upgradeError\": {\n    \"reason\": \"tempor exercitat\",\n    \"message\": \"dolor ea Ut\",\n    \"messageArgs\": [\n     \"Lorem Excepteur\",\n     \"pariatur\"\n    ],\n    \"messageID\": \"ex\",\n    \"remediation\": \"exercitation ea nisi\"\n   },\n   \"upgradeMode\": \"MDU\",\n   \"upgradeStarted\": \"2019-09-27T16:04:16.192+0000\",\n   \"upgradeVersion\": \"19.3.0-1\"\n  }\n ],\n \"type\": \"RELEASE\",\n \"upgradeError\": {\n  \"reason\": \"consectetur consequat\",\n  \"message\": \"sed qui occaecat\",\n  \"messageArgs\": [\n   \"cillum sed ea\",\n   \"anim voluptate con\"\n  ],\n  \"messageID\": \"officia irure ea aliqua\",\n  \"remediation\": \"magna\"\n },\n \"upgradeMode\": \"DU\",\n \"upgradeStarted\": \"2019-09-27T16:04:16.192+0000\",\n \"validationDetails\": [\n  {\n   \"message\": \"quis exercitation mag\",\n   \"messageDetails\": {\n    \"reason\": \"do magna laborum veniam culpa\",\n    \"message\": \"fugiat consequat ex cillum\",\n    \"messageArgs\": [\n     \"officia est\",\n     \"\"\n    ],\n    \"messageID\": \"voluptate\",\n    \"remediation\": \"Duis exercitation aute in\"\n   },\n   \"resultType\": \"INFO\",\n   \"subComponent\": \"adipisicing labore\",\n   \"validateTime\": \"1992-04-26T10:27:15.727Z\",\n   \"validationName\": \"eiusmod\"\n  },\n  {\n   \"message\": \"dolor\",\n   \"messageDetails\": {\n    \"reason\": \"Excepteur adipisicing qui ullamco\",\n    \"message\": \"exercitation voluptate dolore Excepteur\",\n    \"messageArgs\": [\n     \"eiusmod culpa\",\n     \"eu elit ad\"\n    ],\n    \"messageID\": \"velit adipisicing in id\",\n    \"remediation\": \"ullamco\"\n   },\n   \"resultType\": \"WARNING\",\n   \"subComponent\": \"ad\",\n   \"validateTime\": \"1946-02-20T16:27:34.802Z\",\n   \"validationName\": \"exercitation proident sit ut\"\n  }\n ]\n}"
										},
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/upgrade-packages/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"upgrade-packages",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "Cannot find an upgrade package with the specified ID.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/upgrade-packages/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"upgrade-packages",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The default response when an error occurs.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/upgrade-packages/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"upgrade-packages",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										}
									]
								},
								{
									"name": "Install the upgrade package uploaded to the appliance.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"<string>\",\n    \"state\": \"<string>\",\n    \"certificateTrustedByUser\": \"<boolean>\",\n    \"lockboxPassphrase\": \"<string>\",\n    \"upgradeToken\": \"<string>\",\n    \"certificateDetailsMap\": {\n        \"issuerDN\": \"<string>\",\n        \"md5\": \"<string>\",\n        \"notAfter\": \"<string>\",\n        \"notBefore\": \"<string>\",\n        \"publicKey\": \"<string>\",\n        \"publicKeyExponent\": \"<string>\",\n        \"publicKeyModulus\": \"<string>\",\n        \"publicKeySize\": \"<string>\",\n        \"serialNumber\": \"<string>\",\n        \"sha1\": \"<string>\",\n        \"sha256\": \"<string>\",\n        \"signatureAlgorithmName\": \"<string>\",\n        \"signatureAlgorithmOID\": \"<string>\",\n        \"subjectDN\": \"<string>\",\n        \"version\": \"<string>\"\n    },\n    \"dateInstalled\": \"<dateTime>\",\n    \"description\": \"<string>\",\n    \"errorMessage\": \"<string>\",\n    \"fileName\": \"<string>\",\n    \"fromVersion\": \"<string>\",\n    \"lockboxResetRequired\": \"<boolean>\",\n    \"madeAvailable\": \"<dateTime>\",\n    \"maintenanceUpgrade\": \"<boolean>\",\n    \"minimumVersion\": \"<string>\",\n    \"name\": \"<string>\",\n    \"packageVersion\": \"<string>\",\n    \"rebootRequired\": \"<boolean>\",\n    \"sizeInBytes\": \"<long>\",\n    \"subComponentDetails\": [\n        {\n            \"attributes\": \"<object>\",\n            \"componentName\": \"<string>\",\n            \"dateInstalled\": \"<dateTime>\",\n            \"errorMessage\": \"<string>\",\n            \"fileName\": \"<string>\",\n            \"fromVersion\": \"<string>\",\n            \"minimumVersion\": \"<string>\",\n            \"subComponentUpgradeState\": \"<string>\",\n            \"upgradeError\": {\n                \"reason\": \"<string>\",\n                \"message\": \"<string>\",\n                \"messageArgs\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"messageID\": \"<string>\",\n                \"remediation\": \"<string>\"\n            },\n            \"upgradeMode\": \"<string>\",\n            \"upgradeStarted\": \"<string>\",\n            \"upgradeVersion\": \"<string>\"\n        },\n        {\n            \"attributes\": \"<object>\",\n            \"componentName\": \"<string>\",\n            \"dateInstalled\": \"<dateTime>\",\n            \"errorMessage\": \"<string>\",\n            \"fileName\": \"<string>\",\n            \"fromVersion\": \"<string>\",\n            \"minimumVersion\": \"<string>\",\n            \"subComponentUpgradeState\": \"<string>\",\n            \"upgradeError\": {\n                \"reason\": \"<string>\",\n                \"message\": \"<string>\",\n                \"messageArgs\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"messageID\": \"<string>\",\n                \"remediation\": \"<string>\"\n            },\n            \"upgradeMode\": \"<string>\",\n            \"upgradeStarted\": \"<string>\",\n            \"upgradeVersion\": \"<string>\"\n        }\n    ],\n    \"type\": \"<string>\",\n    \"upgradeError\": {\n        \"reason\": \"<string>\",\n        \"message\": \"<string>\",\n        \"messageArgs\": [\n            \"<string>\",\n            \"<string>\"\n        ],\n        \"messageID\": \"<string>\",\n        \"remediation\": \"<string>\"\n    },\n    \"upgradeMode\": \"<string>\",\n    \"upgradeStarted\": \"<string>\",\n    \"validationDetails\": [\n        {\n            \"message\": \"<string>\",\n            \"messageDetails\": {\n                \"reason\": \"<string>\",\n                \"message\": \"<string>\",\n                \"messageArgs\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"messageID\": \"<string>\",\n                \"remediation\": \"<string>\"\n            },\n            \"resultType\": \"<string>\",\n            \"subComponent\": \"<string>\",\n            \"validateTime\": \"<dateTime>\",\n            \"validationName\": \"<string>\"\n        },\n        {\n            \"message\": \"<string>\",\n            \"messageDetails\": {\n                \"reason\": \"<string>\",\n                \"message\": \"<string>\",\n                \"messageArgs\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"messageID\": \"<string>\",\n                \"remediation\": \"<string>\"\n            },\n            \"resultType\": \"<string>\",\n            \"subComponent\": \"<string>\",\n            \"validateTime\": \"<dateTime>\",\n            \"validationName\": \"<string>\"\n        }\n    ]\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/upgrade-packages/:id?forceUpgrade=true",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"upgrade-packages",
												":id"
											],
											"query": [
												{
													"key": "forceUpgrade",
													"value": "true",
													"description": "Use this query parameter to force upgrade the PowerProtect Data Manager."
												}
											],
											"variable": [
												{
													"id": "9ca62d40-9fe6-4179-acea-676fdfcf4bd9",
													"key": "id",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The given package ID for upgrade."
												}
											]
										},
										"description": "Installs upgrade package only if the state of the upgrade package is AVAILABLE or FAILED. To install the upgrade package, set state=INSTALLED in the PUT request body.\n> This endpoint supports execution by the following roles: admin\n"
									},
									"response": [
										{
											"name": "The upgrade package with specified ID is not allowed for upgrade in the current state.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\": \"4c449963-ee0c-48b9-9d5f-925ad9b97237\",\n    \"state\": \"INSTALLED\",\n    \"certificateTrustedByUser\": true,\n    \"lockboxPassphrase\": \"<string>\",\n    \"upgradeToken\": \"<string>\",\n    \"certificateDetailsMap\": {\n        \"issuerDN\": \"CN=Entrust Code Signing CA - OVCS1,OU=(c) 2015 Entrust\\\\\\\\, Inc. - for authorized use only,OU=See www.entrust.net/legal-terms,O=Entrust\\\\\\\\, Inc.,C=US\",\n        \"md5\": \"A8:CA:D7:A2:87:CE:46:7D:54:22:7E:F6:48:00:D7:F7\",\n        \"notAfter\": \"2020-11-13T18:40:58.000+0000\",\n        \"notBefore\": \"2018-11-27T18:11:01.000+0000\",\n        \"publicKey\": \"RSA public key\",\n        \"publicKeyExponent\": \"65537\",\n        \"publicKeyModulus\": \"28960436902272994990842327932793501079190030541382043284118832665312776269446498640419791240454180242586486085708937734083403079002675942200659672006922211955640645340519418577217605521853665489538005758686672003656588145476218479453412730875755080172327057354731921316729121658964135024802322078500693787277083123358314858038960555352152289672471625254193779104016053331569238519722568716038933287609754732628187721307712701984454977189333349182725470926457368220839164994041565288508095067640843719732336878602089454538914456233996689333685080643187924928683921102207259893124969451536291317395148153287269036808351\",\n        \"publicKeySize\": \"2048\",\n        \"serialNumber\": \"cfaba488b3b34a5c0000000055667d65\",\n        \"sha1\": \"EE:EC:4A:1C:E5:59:0D:39:46:0D:B4:4D:CB:2B:A1:EB:1C:4D:A7:36\",\n        \"sha256\": \"78:14:65:93:0C:1B:05:F9:4A:DF:7F:90:61:2F:FE:29:AE:A3:2A:CE:C8:62:16:81:83:6C:51:6E:91:F4:F5:39\",\n        \"signatureAlgorithmName\": \"SHA256withRSA\",\n        \"signatureAlgorithmOID\": \"1.2.840.113549.1.1.11\",\n        \"subjectDN\": \"<string>\",\n        \"version\": \"3\"\n    },\n    \"dateInstalled\": \"<dateTime>\",\n    \"description\": \"Full details of the upgrade can be found on the support site: https://support.emc.com/products/40720_PowerProtect-Data-Manager/Documentation/\",\n    \"errorMessage\": \"<string>\",\n    \"fileName\": \"dellemc-ppdm-upgrade-sw-19.3.0-1.pkg\",\n    \"fromVersion\": \"19.2.0-1\",\n    \"lockboxResetRequired\": \"<boolean>\",\n    \"madeAvailable\": \"<dateTime>\",\n    \"maintenanceUpgrade\": \"<boolean>\",\n    \"minimumVersion\": \"<string>\",\n    \"name\": \"Dell EMC PowerProtect Data Manager - Major Release\",\n    \"packageVersion\": \"19.3.0-1\",\n    \"rebootRequired\": true,\n    \"sizeInBytes\": 3915497644,\n    \"subComponentDetails\": [\n        {\n            \"attributes\": \"<object>\",\n            \"componentName\": \"PPDM\",\n            \"dateInstalled\": \"<dateTime>\",\n            \"errorMessage\": \"<string>\",\n            \"fileName\": \"<string>\",\n            \"fromVersion\": \"<string>\",\n            \"minimumVersion\": \"<string>\",\n            \"subComponentUpgradeState\": \"UPGRADED\",\n            \"upgradeError\": {\n                \"reason\": \"<string>\",\n                \"message\": \"<string>\",\n                \"messageArgs\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"messageID\": \"<string>\",\n                \"remediation\": \"<string>\"\n            },\n            \"upgradeMode\": \"<string>\",\n            \"upgradeStarted\": \"2019-09-27T16:04:16.192+0000\",\n            \"upgradeVersion\": \"19.3.0-1\"\n        },\n        {\n            \"attributes\": \"<object>\",\n            \"componentName\": \"PPDM\",\n            \"dateInstalled\": \"<dateTime>\",\n            \"errorMessage\": \"<string>\",\n            \"fileName\": \"<string>\",\n            \"fromVersion\": \"<string>\",\n            \"minimumVersion\": \"<string>\",\n            \"subComponentUpgradeState\": \"UPGRADED\",\n            \"upgradeError\": {\n                \"reason\": \"<string>\",\n                \"message\": \"<string>\",\n                \"messageArgs\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"messageID\": \"<string>\",\n                \"remediation\": \"<string>\"\n            },\n            \"upgradeMode\": \"<string>\",\n            \"upgradeStarted\": \"2019-09-27T16:04:16.192+0000\",\n            \"upgradeVersion\": \"19.3.0-1\"\n        }\n    ],\n    \"type\": \"RELEASE\",\n    \"upgradeError\": {\n        \"reason\": \"<string>\",\n        \"message\": \"<string>\",\n        \"messageArgs\": [\n            \"<string>\",\n            \"<string>\"\n        ],\n        \"messageID\": \"<string>\",\n        \"remediation\": \"<string>\"\n    },\n    \"upgradeMode\": \"DU\",\n    \"upgradeStarted\": \"2019-09-27T16:04:16.192+0000\",\n    \"validationDetails\": [\n        {\n            \"message\": \"<string>\",\n            \"messageDetails\": {\n                \"reason\": \"<string>\",\n                \"message\": \"<string>\",\n                \"messageArgs\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"messageID\": \"<string>\",\n                \"remediation\": \"<string>\"\n            },\n            \"resultType\": \"<string>\",\n            \"subComponent\": \"<string>\",\n            \"validateTime\": \"<dateTime>\",\n            \"validationName\": \"<string>\"\n        },\n        {\n            \"message\": \"<string>\",\n            \"messageDetails\": {\n                \"reason\": \"<string>\",\n                \"message\": \"<string>\",\n                \"messageArgs\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"messageID\": \"<string>\",\n                \"remediation\": \"<string>\"\n            },\n            \"resultType\": \"<string>\",\n            \"subComponent\": \"<string>\",\n            \"validateTime\": \"<dateTime>\",\n            \"validationName\": \"<string>\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/upgrade-packages/:id?forceUpgrade=true",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"upgrade-packages",
														":id"
													],
													"query": [
														{
															"key": "forceUpgrade",
															"value": "true"
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Conflict",
											"code": 409,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The default response when error occurs.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\": \"4c449963-ee0c-48b9-9d5f-925ad9b97237\",\n    \"state\": \"INSTALLED\",\n    \"certificateTrustedByUser\": true,\n    \"lockboxPassphrase\": \"<string>\",\n    \"upgradeToken\": \"<string>\",\n    \"certificateDetailsMap\": {\n        \"issuerDN\": \"CN=Entrust Code Signing CA - OVCS1,OU=(c) 2015 Entrust\\\\\\\\, Inc. - for authorized use only,OU=See www.entrust.net/legal-terms,O=Entrust\\\\\\\\, Inc.,C=US\",\n        \"md5\": \"A8:CA:D7:A2:87:CE:46:7D:54:22:7E:F6:48:00:D7:F7\",\n        \"notAfter\": \"2020-11-13T18:40:58.000+0000\",\n        \"notBefore\": \"2018-11-27T18:11:01.000+0000\",\n        \"publicKey\": \"RSA public key\",\n        \"publicKeyExponent\": \"65537\",\n        \"publicKeyModulus\": \"28960436902272994990842327932793501079190030541382043284118832665312776269446498640419791240454180242586486085708937734083403079002675942200659672006922211955640645340519418577217605521853665489538005758686672003656588145476218479453412730875755080172327057354731921316729121658964135024802322078500693787277083123358314858038960555352152289672471625254193779104016053331569238519722568716038933287609754732628187721307712701984454977189333349182725470926457368220839164994041565288508095067640843719732336878602089454538914456233996689333685080643187924928683921102207259893124969451536291317395148153287269036808351\",\n        \"publicKeySize\": \"2048\",\n        \"serialNumber\": \"cfaba488b3b34a5c0000000055667d65\",\n        \"sha1\": \"EE:EC:4A:1C:E5:59:0D:39:46:0D:B4:4D:CB:2B:A1:EB:1C:4D:A7:36\",\n        \"sha256\": \"78:14:65:93:0C:1B:05:F9:4A:DF:7F:90:61:2F:FE:29:AE:A3:2A:CE:C8:62:16:81:83:6C:51:6E:91:F4:F5:39\",\n        \"signatureAlgorithmName\": \"SHA256withRSA\",\n        \"signatureAlgorithmOID\": \"1.2.840.113549.1.1.11\",\n        \"subjectDN\": \"<string>\",\n        \"version\": \"3\"\n    },\n    \"dateInstalled\": \"<dateTime>\",\n    \"description\": \"Full details of the upgrade can be found on the support site: https://support.emc.com/products/40720_PowerProtect-Data-Manager/Documentation/\",\n    \"errorMessage\": \"<string>\",\n    \"fileName\": \"dellemc-ppdm-upgrade-sw-19.3.0-1.pkg\",\n    \"fromVersion\": \"19.2.0-1\",\n    \"lockboxResetRequired\": \"<boolean>\",\n    \"madeAvailable\": \"<dateTime>\",\n    \"maintenanceUpgrade\": \"<boolean>\",\n    \"minimumVersion\": \"<string>\",\n    \"name\": \"Dell EMC PowerProtect Data Manager - Major Release\",\n    \"packageVersion\": \"19.3.0-1\",\n    \"rebootRequired\": true,\n    \"sizeInBytes\": 3915497644,\n    \"subComponentDetails\": [\n        {\n            \"attributes\": \"<object>\",\n            \"componentName\": \"PPDM\",\n            \"dateInstalled\": \"<dateTime>\",\n            \"errorMessage\": \"<string>\",\n            \"fileName\": \"<string>\",\n            \"fromVersion\": \"<string>\",\n            \"minimumVersion\": \"<string>\",\n            \"subComponentUpgradeState\": \"UPGRADED\",\n            \"upgradeError\": {\n                \"reason\": \"<string>\",\n                \"message\": \"<string>\",\n                \"messageArgs\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"messageID\": \"<string>\",\n                \"remediation\": \"<string>\"\n            },\n            \"upgradeMode\": \"<string>\",\n            \"upgradeStarted\": \"2019-09-27T16:04:16.192+0000\",\n            \"upgradeVersion\": \"19.3.0-1\"\n        },\n        {\n            \"attributes\": \"<object>\",\n            \"componentName\": \"PPDM\",\n            \"dateInstalled\": \"<dateTime>\",\n            \"errorMessage\": \"<string>\",\n            \"fileName\": \"<string>\",\n            \"fromVersion\": \"<string>\",\n            \"minimumVersion\": \"<string>\",\n            \"subComponentUpgradeState\": \"UPGRADED\",\n            \"upgradeError\": {\n                \"reason\": \"<string>\",\n                \"message\": \"<string>\",\n                \"messageArgs\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"messageID\": \"<string>\",\n                \"remediation\": \"<string>\"\n            },\n            \"upgradeMode\": \"<string>\",\n            \"upgradeStarted\": \"2019-09-27T16:04:16.192+0000\",\n            \"upgradeVersion\": \"19.3.0-1\"\n        }\n    ],\n    \"type\": \"RELEASE\",\n    \"upgradeError\": {\n        \"reason\": \"<string>\",\n        \"message\": \"<string>\",\n        \"messageArgs\": [\n            \"<string>\",\n            \"<string>\"\n        ],\n        \"messageID\": \"<string>\",\n        \"remediation\": \"<string>\"\n    },\n    \"upgradeMode\": \"DU\",\n    \"upgradeStarted\": \"2019-09-27T16:04:16.192+0000\",\n    \"validationDetails\": [\n        {\n            \"message\": \"<string>\",\n            \"messageDetails\": {\n                \"reason\": \"<string>\",\n                \"message\": \"<string>\",\n                \"messageArgs\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"messageID\": \"<string>\",\n                \"remediation\": \"<string>\"\n            },\n            \"resultType\": \"<string>\",\n            \"subComponent\": \"<string>\",\n            \"validateTime\": \"<dateTime>\",\n            \"validationName\": \"<string>\"\n        },\n        {\n            \"message\": \"<string>\",\n            \"messageDetails\": {\n                \"reason\": \"<string>\",\n                \"message\": \"<string>\",\n                \"messageArgs\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"messageID\": \"<string>\",\n                \"remediation\": \"<string>\"\n            },\n            \"resultType\": \"<string>\",\n            \"subComponent\": \"<string>\",\n            \"validateTime\": \"<dateTime>\",\n            \"validationName\": \"<string>\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/upgrade-packages/:id?forceUpgrade=true",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"upgrade-packages",
														":id"
													],
													"query": [
														{
															"key": "forceUpgrade",
															"value": "true"
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "Request accepted and is upgrading with the upgrade package of the specified ID.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\": \"4c449963-ee0c-48b9-9d5f-925ad9b97237\",\n    \"state\": \"INSTALLED\",\n    \"certificateTrustedByUser\": true,\n    \"lockboxPassphrase\": \"<string>\",\n    \"upgradeToken\": \"<string>\",\n    \"certificateDetailsMap\": {\n        \"issuerDN\": \"CN=Entrust Code Signing CA - OVCS1,OU=(c) 2015 Entrust\\\\\\\\, Inc. - for authorized use only,OU=See www.entrust.net/legal-terms,O=Entrust\\\\\\\\, Inc.,C=US\",\n        \"md5\": \"A8:CA:D7:A2:87:CE:46:7D:54:22:7E:F6:48:00:D7:F7\",\n        \"notAfter\": \"2020-11-13T18:40:58.000+0000\",\n        \"notBefore\": \"2018-11-27T18:11:01.000+0000\",\n        \"publicKey\": \"RSA public key\",\n        \"publicKeyExponent\": \"65537\",\n        \"publicKeyModulus\": \"28960436902272994990842327932793501079190030541382043284118832665312776269446498640419791240454180242586486085708937734083403079002675942200659672006922211955640645340519418577217605521853665489538005758686672003656588145476218479453412730875755080172327057354731921316729121658964135024802322078500693787277083123358314858038960555352152289672471625254193779104016053331569238519722568716038933287609754732628187721307712701984454977189333349182725470926457368220839164994041565288508095067640843719732336878602089454538914456233996689333685080643187924928683921102207259893124969451536291317395148153287269036808351\",\n        \"publicKeySize\": \"2048\",\n        \"serialNumber\": \"cfaba488b3b34a5c0000000055667d65\",\n        \"sha1\": \"EE:EC:4A:1C:E5:59:0D:39:46:0D:B4:4D:CB:2B:A1:EB:1C:4D:A7:36\",\n        \"sha256\": \"78:14:65:93:0C:1B:05:F9:4A:DF:7F:90:61:2F:FE:29:AE:A3:2A:CE:C8:62:16:81:83:6C:51:6E:91:F4:F5:39\",\n        \"signatureAlgorithmName\": \"SHA256withRSA\",\n        \"signatureAlgorithmOID\": \"1.2.840.113549.1.1.11\",\n        \"subjectDN\": \"<string>\",\n        \"version\": \"3\"\n    },\n    \"dateInstalled\": \"<dateTime>\",\n    \"description\": \"Full details of the upgrade can be found on the support site: https://support.emc.com/products/40720_PowerProtect-Data-Manager/Documentation/\",\n    \"errorMessage\": \"<string>\",\n    \"fileName\": \"dellemc-ppdm-upgrade-sw-19.3.0-1.pkg\",\n    \"fromVersion\": \"19.2.0-1\",\n    \"lockboxResetRequired\": \"<boolean>\",\n    \"madeAvailable\": \"<dateTime>\",\n    \"maintenanceUpgrade\": \"<boolean>\",\n    \"minimumVersion\": \"<string>\",\n    \"name\": \"Dell EMC PowerProtect Data Manager - Major Release\",\n    \"packageVersion\": \"19.3.0-1\",\n    \"rebootRequired\": true,\n    \"sizeInBytes\": 3915497644,\n    \"subComponentDetails\": [\n        {\n            \"attributes\": \"<object>\",\n            \"componentName\": \"PPDM\",\n            \"dateInstalled\": \"<dateTime>\",\n            \"errorMessage\": \"<string>\",\n            \"fileName\": \"<string>\",\n            \"fromVersion\": \"<string>\",\n            \"minimumVersion\": \"<string>\",\n            \"subComponentUpgradeState\": \"UPGRADED\",\n            \"upgradeError\": {\n                \"reason\": \"<string>\",\n                \"message\": \"<string>\",\n                \"messageArgs\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"messageID\": \"<string>\",\n                \"remediation\": \"<string>\"\n            },\n            \"upgradeMode\": \"<string>\",\n            \"upgradeStarted\": \"2019-09-27T16:04:16.192+0000\",\n            \"upgradeVersion\": \"19.3.0-1\"\n        },\n        {\n            \"attributes\": \"<object>\",\n            \"componentName\": \"PPDM\",\n            \"dateInstalled\": \"<dateTime>\",\n            \"errorMessage\": \"<string>\",\n            \"fileName\": \"<string>\",\n            \"fromVersion\": \"<string>\",\n            \"minimumVersion\": \"<string>\",\n            \"subComponentUpgradeState\": \"UPGRADED\",\n            \"upgradeError\": {\n                \"reason\": \"<string>\",\n                \"message\": \"<string>\",\n                \"messageArgs\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"messageID\": \"<string>\",\n                \"remediation\": \"<string>\"\n            },\n            \"upgradeMode\": \"<string>\",\n            \"upgradeStarted\": \"2019-09-27T16:04:16.192+0000\",\n            \"upgradeVersion\": \"19.3.0-1\"\n        }\n    ],\n    \"type\": \"RELEASE\",\n    \"upgradeError\": {\n        \"reason\": \"<string>\",\n        \"message\": \"<string>\",\n        \"messageArgs\": [\n            \"<string>\",\n            \"<string>\"\n        ],\n        \"messageID\": \"<string>\",\n        \"remediation\": \"<string>\"\n    },\n    \"upgradeMode\": \"DU\",\n    \"upgradeStarted\": \"2019-09-27T16:04:16.192+0000\",\n    \"validationDetails\": [\n        {\n            \"message\": \"<string>\",\n            \"messageDetails\": {\n                \"reason\": \"<string>\",\n                \"message\": \"<string>\",\n                \"messageArgs\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"messageID\": \"<string>\",\n                \"remediation\": \"<string>\"\n            },\n            \"resultType\": \"<string>\",\n            \"subComponent\": \"<string>\",\n            \"validateTime\": \"<dateTime>\",\n            \"validationName\": \"<string>\"\n        },\n        {\n            \"message\": \"<string>\",\n            \"messageDetails\": {\n                \"reason\": \"<string>\",\n                \"message\": \"<string>\",\n                \"messageArgs\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"messageID\": \"<string>\",\n                \"remediation\": \"<string>\"\n            },\n            \"resultType\": \"<string>\",\n            \"subComponent\": \"<string>\",\n            \"validateTime\": \"<dateTime>\",\n            \"validationName\": \"<string>\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/upgrade-packages/:id?forceUpgrade=true",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"upgrade-packages",
														":id"
													],
													"query": [
														{
															"key": "forceUpgrade",
															"value": "true"
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"id\": \"4c449963-ee0c-48b9-9d5f-925ad9b97237\",\n \"state\": \"INSTALLED\",\n \"certificateTrustedByUser\": true,\n \"lockboxPassphrase\": \"ut\",\n \"upgradeToken\": \"dolor sunt exercitation occaecat dolor\",\n \"certificateDetailsMap\": {\n  \"issuerDN\": \"CN=Entrust Code Signing CA - OVCS1,OU=(c) 2015 Entrust\\\\\\\\, Inc. - for authorized use only,OU=See www.entrust.net/legal-terms,O=Entrust\\\\\\\\, Inc.,C=US\",\n  \"md5\": \"A8:CA:D7:A2:87:CE:46:7D:54:22:7E:F6:48:00:D7:F7\",\n  \"notAfter\": \"2020-11-13T18:40:58.000+0000\",\n  \"notBefore\": \"2018-11-27T18:11:01.000+0000\",\n  \"publicKey\": \"RSA public key\",\n  \"publicKeyExponent\": \"65537\",\n  \"publicKeyModulus\": \"28960436902272994990842327932793501079190030541382043284118832665312776269446498640419791240454180242586486085708937734083403079002675942200659672006922211955640645340519418577217605521853665489538005758686672003656588145476218479453412730875755080172327057354731921316729121658964135024802322078500693787277083123358314858038960555352152289672471625254193779104016053331569238519722568716038933287609754732628187721307712701984454977189333349182725470926457368220839164994041565288508095067640843719732336878602089454538914456233996689333685080643187924928683921102207259893124969451536291317395148153287269036808351\",\n  \"publicKeySize\": \"2048\",\n  \"serialNumber\": \"cfaba488b3b34a5c0000000055667d65\",\n  \"sha1\": \"EE:EC:4A:1C:E5:59:0D:39:46:0D:B4:4D:CB:2B:A1:EB:1C:4D:A7:36\",\n  \"sha256\": \"78:14:65:93:0C:1B:05:F9:4A:DF:7F:90:61:2F:FE:29:AE:A3:2A:CE:C8:62:16:81:83:6C:51:6E:91:F4:F5:39\",\n  \"signatureAlgorithmName\": \"SHA256withRSA\",\n  \"signatureAlgorithmOID\": \"1.2.840.113549.1.1.11\",\n  \"subjectDN\": \"cillum aliqua ipsum\",\n  \"version\": \"3\"\n },\n \"dateInstalled\": \"2008-07-19T15:18:07.883Z\",\n \"description\": \"Full details of the upgrade can be found on the support site: https://support.emc.com/products/40720_PowerProtect-Data-Manager/Documentation/\",\n \"errorMessage\": \"consequat non id\",\n \"fileName\": \"dellemc-ppdm-upgrade-sw-19.3.0-1.pkg\",\n \"fromVersion\": \"19.2.0-1\",\n \"lockboxResetRequired\": true,\n \"madeAvailable\": \"1989-05-14T18:15:44.507Z\",\n \"maintenanceUpgrade\": false,\n \"minimumVersion\": \"enim eu qui\",\n \"name\": \"Dell EMC PowerProtect Data Manager - Major Release\",\n \"packageVersion\": \"19.3.0-1\",\n \"rebootRequired\": true,\n \"sizeInBytes\": 3915497644,\n \"subComponentDetails\": [\n  {\n   \"attributes\": {},\n   \"componentName\": \"PPDM\",\n   \"dateInstalled\": \"1950-07-09T21:16:20.467Z\",\n   \"errorMessage\": \"nulla proident\",\n   \"fileName\": \"sunt veniam dolore sint in\",\n   \"fromVersion\": \"non labore ex ut ut\",\n   \"minimumVersion\": \"adipisicing dolor\",\n   \"subComponentUpgradeState\": \"UPGRADED\",\n   \"upgradeError\": {\n    \"reason\": \"incididunt\",\n    \"message\": \"in eu consectetur minim\",\n    \"messageArgs\": [\n     \"Ut\",\n     \"mollit laboris eu sunt\"\n    ],\n    \"messageID\": \"ex amet pro\",\n    \"remediation\": \"anim Excepteur reprehenderit\"\n   },\n   \"upgradeMode\": \"MDU\",\n   \"upgradeStarted\": \"2019-09-27T16:04:16.192+0000\",\n   \"upgradeVersion\": \"19.3.0-1\"\n  },\n  {\n   \"attributes\": {},\n   \"componentName\": \"PPDM\",\n   \"dateInstalled\": \"1953-01-24T03:58:15.373Z\",\n   \"errorMessage\": \"pariatur\",\n   \"fileName\": \"in tempor culpa mollit amet\",\n   \"fromVersion\": \"ad ea\",\n   \"minimumVersion\": \"nulla ex\",\n   \"subComponentUpgradeState\": \"UPGRADED\",\n   \"upgradeError\": {\n    \"reason\": \"tempor exercitat\",\n    \"message\": \"dolor ea Ut\",\n    \"messageArgs\": [\n     \"Lorem Excepteur\",\n     \"pariatur\"\n    ],\n    \"messageID\": \"ex\",\n    \"remediation\": \"exercitation ea nisi\"\n   },\n   \"upgradeMode\": \"MDU\",\n   \"upgradeStarted\": \"2019-09-27T16:04:16.192+0000\",\n   \"upgradeVersion\": \"19.3.0-1\"\n  }\n ],\n \"type\": \"RELEASE\",\n \"upgradeError\": {\n  \"reason\": \"consectetur consequat\",\n  \"message\": \"sed qui occaecat\",\n  \"messageArgs\": [\n   \"cillum sed ea\",\n   \"anim voluptate con\"\n  ],\n  \"messageID\": \"officia irure ea aliqua\",\n  \"remediation\": \"magna\"\n },\n \"upgradeMode\": \"DU\",\n \"upgradeStarted\": \"2019-09-27T16:04:16.192+0000\",\n \"validationDetails\": [\n  {\n   \"message\": \"quis exercitation mag\",\n   \"messageDetails\": {\n    \"reason\": \"do magna laborum veniam culpa\",\n    \"message\": \"fugiat consequat ex cillum\",\n    \"messageArgs\": [\n     \"officia est\",\n     \"\"\n    ],\n    \"messageID\": \"voluptate\",\n    \"remediation\": \"Duis exercitation aute in\"\n   },\n   \"resultType\": \"INFO\",\n   \"subComponent\": \"adipisicing labore\",\n   \"validateTime\": \"1992-04-26T10:27:15.727Z\",\n   \"validationName\": \"eiusmod\"\n  },\n  {\n   \"message\": \"dolor\",\n   \"messageDetails\": {\n    \"reason\": \"Excepteur adipisicing qui ullamco\",\n    \"message\": \"exercitation voluptate dolore Excepteur\",\n    \"messageArgs\": [\n     \"eiusmod culpa\",\n     \"eu elit ad\"\n    ],\n    \"messageID\": \"velit adipisicing in id\",\n    \"remediation\": \"ullamco\"\n   },\n   \"resultType\": \"WARNING\",\n   \"subComponent\": \"ad\",\n   \"validateTime\": \"1946-02-20T16:27:34.802Z\",\n   \"validationName\": \"exercitation proident sit ut\"\n  }\n ]\n}"
										},
										{
											"name": "Received when sending PUT request without query parameter \"forceUpgrade=true\". The request was failed in validation process.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\": \"4c449963-ee0c-48b9-9d5f-925ad9b97237\",\n    \"state\": \"INSTALLED\",\n    \"certificateTrustedByUser\": true,\n    \"lockboxPassphrase\": \"<string>\",\n    \"upgradeToken\": \"<string>\",\n    \"certificateDetailsMap\": {\n        \"issuerDN\": \"CN=Entrust Code Signing CA - OVCS1,OU=(c) 2015 Entrust\\\\\\\\, Inc. - for authorized use only,OU=See www.entrust.net/legal-terms,O=Entrust\\\\\\\\, Inc.,C=US\",\n        \"md5\": \"A8:CA:D7:A2:87:CE:46:7D:54:22:7E:F6:48:00:D7:F7\",\n        \"notAfter\": \"2020-11-13T18:40:58.000+0000\",\n        \"notBefore\": \"2018-11-27T18:11:01.000+0000\",\n        \"publicKey\": \"RSA public key\",\n        \"publicKeyExponent\": \"65537\",\n        \"publicKeyModulus\": \"28960436902272994990842327932793501079190030541382043284118832665312776269446498640419791240454180242586486085708937734083403079002675942200659672006922211955640645340519418577217605521853665489538005758686672003656588145476218479453412730875755080172327057354731921316729121658964135024802322078500693787277083123358314858038960555352152289672471625254193779104016053331569238519722568716038933287609754732628187721307712701984454977189333349182725470926457368220839164994041565288508095067640843719732336878602089454538914456233996689333685080643187924928683921102207259893124969451536291317395148153287269036808351\",\n        \"publicKeySize\": \"2048\",\n        \"serialNumber\": \"cfaba488b3b34a5c0000000055667d65\",\n        \"sha1\": \"EE:EC:4A:1C:E5:59:0D:39:46:0D:B4:4D:CB:2B:A1:EB:1C:4D:A7:36\",\n        \"sha256\": \"78:14:65:93:0C:1B:05:F9:4A:DF:7F:90:61:2F:FE:29:AE:A3:2A:CE:C8:62:16:81:83:6C:51:6E:91:F4:F5:39\",\n        \"signatureAlgorithmName\": \"SHA256withRSA\",\n        \"signatureAlgorithmOID\": \"1.2.840.113549.1.1.11\",\n        \"subjectDN\": \"<string>\",\n        \"version\": \"3\"\n    },\n    \"dateInstalled\": \"<dateTime>\",\n    \"description\": \"Full details of the upgrade can be found on the support site: https://support.emc.com/products/40720_PowerProtect-Data-Manager/Documentation/\",\n    \"errorMessage\": \"<string>\",\n    \"fileName\": \"dellemc-ppdm-upgrade-sw-19.3.0-1.pkg\",\n    \"fromVersion\": \"19.2.0-1\",\n    \"lockboxResetRequired\": \"<boolean>\",\n    \"madeAvailable\": \"<dateTime>\",\n    \"maintenanceUpgrade\": \"<boolean>\",\n    \"minimumVersion\": \"<string>\",\n    \"name\": \"Dell EMC PowerProtect Data Manager - Major Release\",\n    \"packageVersion\": \"19.3.0-1\",\n    \"rebootRequired\": true,\n    \"sizeInBytes\": 3915497644,\n    \"subComponentDetails\": [\n        {\n            \"attributes\": \"<object>\",\n            \"componentName\": \"PPDM\",\n            \"dateInstalled\": \"<dateTime>\",\n            \"errorMessage\": \"<string>\",\n            \"fileName\": \"<string>\",\n            \"fromVersion\": \"<string>\",\n            \"minimumVersion\": \"<string>\",\n            \"subComponentUpgradeState\": \"UPGRADED\",\n            \"upgradeError\": {\n                \"reason\": \"<string>\",\n                \"message\": \"<string>\",\n                \"messageArgs\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"messageID\": \"<string>\",\n                \"remediation\": \"<string>\"\n            },\n            \"upgradeMode\": \"<string>\",\n            \"upgradeStarted\": \"2019-09-27T16:04:16.192+0000\",\n            \"upgradeVersion\": \"19.3.0-1\"\n        },\n        {\n            \"attributes\": \"<object>\",\n            \"componentName\": \"PPDM\",\n            \"dateInstalled\": \"<dateTime>\",\n            \"errorMessage\": \"<string>\",\n            \"fileName\": \"<string>\",\n            \"fromVersion\": \"<string>\",\n            \"minimumVersion\": \"<string>\",\n            \"subComponentUpgradeState\": \"UPGRADED\",\n            \"upgradeError\": {\n                \"reason\": \"<string>\",\n                \"message\": \"<string>\",\n                \"messageArgs\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"messageID\": \"<string>\",\n                \"remediation\": \"<string>\"\n            },\n            \"upgradeMode\": \"<string>\",\n            \"upgradeStarted\": \"2019-09-27T16:04:16.192+0000\",\n            \"upgradeVersion\": \"19.3.0-1\"\n        }\n    ],\n    \"type\": \"RELEASE\",\n    \"upgradeError\": {\n        \"reason\": \"<string>\",\n        \"message\": \"<string>\",\n        \"messageArgs\": [\n            \"<string>\",\n            \"<string>\"\n        ],\n        \"messageID\": \"<string>\",\n        \"remediation\": \"<string>\"\n    },\n    \"upgradeMode\": \"DU\",\n    \"upgradeStarted\": \"2019-09-27T16:04:16.192+0000\",\n    \"validationDetails\": [\n        {\n            \"message\": \"<string>\",\n            \"messageDetails\": {\n                \"reason\": \"<string>\",\n                \"message\": \"<string>\",\n                \"messageArgs\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"messageID\": \"<string>\",\n                \"remediation\": \"<string>\"\n            },\n            \"resultType\": \"<string>\",\n            \"subComponent\": \"<string>\",\n            \"validateTime\": \"<dateTime>\",\n            \"validationName\": \"<string>\"\n        },\n        {\n            \"message\": \"<string>\",\n            \"messageDetails\": {\n                \"reason\": \"<string>\",\n                \"message\": \"<string>\",\n                \"messageArgs\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"messageID\": \"<string>\",\n                \"remediation\": \"<string>\"\n            },\n            \"resultType\": \"<string>\",\n            \"subComponent\": \"<string>\",\n            \"validateTime\": \"<dateTime>\",\n            \"validationName\": \"<string>\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/upgrade-packages/:id?forceUpgrade=true",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"upgrade-packages",
														":id"
													],
													"query": [
														{
															"key": "forceUpgrade",
															"value": "true"
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Precondition Failed",
											"code": 412,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"id\": \"4c449963-ee0c-48b9-9d5f-925ad9b97237\",\n \"state\": \"INSTALLED\",\n \"certificateTrustedByUser\": true,\n \"lockboxPassphrase\": \"ut\",\n \"upgradeToken\": \"dolor sunt exercitation occaecat dolor\",\n \"certificateDetailsMap\": {\n  \"issuerDN\": \"CN=Entrust Code Signing CA - OVCS1,OU=(c) 2015 Entrust\\\\\\\\, Inc. - for authorized use only,OU=See www.entrust.net/legal-terms,O=Entrust\\\\\\\\, Inc.,C=US\",\n  \"md5\": \"A8:CA:D7:A2:87:CE:46:7D:54:22:7E:F6:48:00:D7:F7\",\n  \"notAfter\": \"2020-11-13T18:40:58.000+0000\",\n  \"notBefore\": \"2018-11-27T18:11:01.000+0000\",\n  \"publicKey\": \"RSA public key\",\n  \"publicKeyExponent\": \"65537\",\n  \"publicKeyModulus\": \"28960436902272994990842327932793501079190030541382043284118832665312776269446498640419791240454180242586486085708937734083403079002675942200659672006922211955640645340519418577217605521853665489538005758686672003656588145476218479453412730875755080172327057354731921316729121658964135024802322078500693787277083123358314858038960555352152289672471625254193779104016053331569238519722568716038933287609754732628187721307712701984454977189333349182725470926457368220839164994041565288508095067640843719732336878602089454538914456233996689333685080643187924928683921102207259893124969451536291317395148153287269036808351\",\n  \"publicKeySize\": \"2048\",\n  \"serialNumber\": \"cfaba488b3b34a5c0000000055667d65\",\n  \"sha1\": \"EE:EC:4A:1C:E5:59:0D:39:46:0D:B4:4D:CB:2B:A1:EB:1C:4D:A7:36\",\n  \"sha256\": \"78:14:65:93:0C:1B:05:F9:4A:DF:7F:90:61:2F:FE:29:AE:A3:2A:CE:C8:62:16:81:83:6C:51:6E:91:F4:F5:39\",\n  \"signatureAlgorithmName\": \"SHA256withRSA\",\n  \"signatureAlgorithmOID\": \"1.2.840.113549.1.1.11\",\n  \"subjectDN\": \"cillum aliqua ipsum\",\n  \"version\": \"3\"\n },\n \"dateInstalled\": \"2008-07-19T15:18:07.883Z\",\n \"description\": \"Full details of the upgrade can be found on the support site: https://support.emc.com/products/40720_PowerProtect-Data-Manager/Documentation/\",\n \"errorMessage\": \"consequat non id\",\n \"fileName\": \"dellemc-ppdm-upgrade-sw-19.3.0-1.pkg\",\n \"fromVersion\": \"19.2.0-1\",\n \"lockboxResetRequired\": true,\n \"madeAvailable\": \"1989-05-14T18:15:44.507Z\",\n \"maintenanceUpgrade\": false,\n \"minimumVersion\": \"enim eu qui\",\n \"name\": \"Dell EMC PowerProtect Data Manager - Major Release\",\n \"packageVersion\": \"19.3.0-1\",\n \"rebootRequired\": true,\n \"sizeInBytes\": 3915497644,\n \"subComponentDetails\": [\n  {\n   \"attributes\": {},\n   \"componentName\": \"PPDM\",\n   \"dateInstalled\": \"1950-07-09T21:16:20.467Z\",\n   \"errorMessage\": \"nulla proident\",\n   \"fileName\": \"sunt veniam dolore sint in\",\n   \"fromVersion\": \"non labore ex ut ut\",\n   \"minimumVersion\": \"adipisicing dolor\",\n   \"subComponentUpgradeState\": \"UPGRADED\",\n   \"upgradeError\": {\n    \"reason\": \"incididunt\",\n    \"message\": \"in eu consectetur minim\",\n    \"messageArgs\": [\n     \"Ut\",\n     \"mollit laboris eu sunt\"\n    ],\n    \"messageID\": \"ex amet pro\",\n    \"remediation\": \"anim Excepteur reprehenderit\"\n   },\n   \"upgradeMode\": \"MDU\",\n   \"upgradeStarted\": \"2019-09-27T16:04:16.192+0000\",\n   \"upgradeVersion\": \"19.3.0-1\"\n  },\n  {\n   \"attributes\": {},\n   \"componentName\": \"PPDM\",\n   \"dateInstalled\": \"1953-01-24T03:58:15.373Z\",\n   \"errorMessage\": \"pariatur\",\n   \"fileName\": \"in tempor culpa mollit amet\",\n   \"fromVersion\": \"ad ea\",\n   \"minimumVersion\": \"nulla ex\",\n   \"subComponentUpgradeState\": \"UPGRADED\",\n   \"upgradeError\": {\n    \"reason\": \"tempor exercitat\",\n    \"message\": \"dolor ea Ut\",\n    \"messageArgs\": [\n     \"Lorem Excepteur\",\n     \"pariatur\"\n    ],\n    \"messageID\": \"ex\",\n    \"remediation\": \"exercitation ea nisi\"\n   },\n   \"upgradeMode\": \"MDU\",\n   \"upgradeStarted\": \"2019-09-27T16:04:16.192+0000\",\n   \"upgradeVersion\": \"19.3.0-1\"\n  }\n ],\n \"type\": \"RELEASE\",\n \"upgradeError\": {\n  \"reason\": \"consectetur consequat\",\n  \"message\": \"sed qui occaecat\",\n  \"messageArgs\": [\n   \"cillum sed ea\",\n   \"anim voluptate con\"\n  ],\n  \"messageID\": \"officia irure ea aliqua\",\n  \"remediation\": \"magna\"\n },\n \"upgradeMode\": \"DU\",\n \"upgradeStarted\": \"2019-09-27T16:04:16.192+0000\",\n \"validationDetails\": [\n  {\n   \"message\": \"quis exercitation mag\",\n   \"messageDetails\": {\n    \"reason\": \"do magna laborum veniam culpa\",\n    \"message\": \"fugiat consequat ex cillum\",\n    \"messageArgs\": [\n     \"officia est\",\n     \"\"\n    ],\n    \"messageID\": \"voluptate\",\n    \"remediation\": \"Duis exercitation aute in\"\n   },\n   \"resultType\": \"INFO\",\n   \"subComponent\": \"adipisicing labore\",\n   \"validateTime\": \"1992-04-26T10:27:15.727Z\",\n   \"validationName\": \"eiusmod\"\n  },\n  {\n   \"message\": \"dolor\",\n   \"messageDetails\": {\n    \"reason\": \"Excepteur adipisicing qui ullamco\",\n    \"message\": \"exercitation voluptate dolore Excepteur\",\n    \"messageArgs\": [\n     \"eiusmod culpa\",\n     \"eu elit ad\"\n    ],\n    \"messageID\": \"velit adipisicing in id\",\n    \"remediation\": \"ullamco\"\n   },\n   \"resultType\": \"WARNING\",\n   \"subComponent\": \"ad\",\n   \"validateTime\": \"1946-02-20T16:27:34.802Z\",\n   \"validationName\": \"exercitation proident sit ut\"\n  }\n ]\n}"
										},
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\": \"4c449963-ee0c-48b9-9d5f-925ad9b97237\",\n    \"state\": \"INSTALLED\",\n    \"certificateTrustedByUser\": true,\n    \"lockboxPassphrase\": \"<string>\",\n    \"upgradeToken\": \"<string>\",\n    \"certificateDetailsMap\": {\n        \"issuerDN\": \"CN=Entrust Code Signing CA - OVCS1,OU=(c) 2015 Entrust\\\\\\\\, Inc. - for authorized use only,OU=See www.entrust.net/legal-terms,O=Entrust\\\\\\\\, Inc.,C=US\",\n        \"md5\": \"A8:CA:D7:A2:87:CE:46:7D:54:22:7E:F6:48:00:D7:F7\",\n        \"notAfter\": \"2020-11-13T18:40:58.000+0000\",\n        \"notBefore\": \"2018-11-27T18:11:01.000+0000\",\n        \"publicKey\": \"RSA public key\",\n        \"publicKeyExponent\": \"65537\",\n        \"publicKeyModulus\": \"28960436902272994990842327932793501079190030541382043284118832665312776269446498640419791240454180242586486085708937734083403079002675942200659672006922211955640645340519418577217605521853665489538005758686672003656588145476218479453412730875755080172327057354731921316729121658964135024802322078500693787277083123358314858038960555352152289672471625254193779104016053331569238519722568716038933287609754732628187721307712701984454977189333349182725470926457368220839164994041565288508095067640843719732336878602089454538914456233996689333685080643187924928683921102207259893124969451536291317395148153287269036808351\",\n        \"publicKeySize\": \"2048\",\n        \"serialNumber\": \"cfaba488b3b34a5c0000000055667d65\",\n        \"sha1\": \"EE:EC:4A:1C:E5:59:0D:39:46:0D:B4:4D:CB:2B:A1:EB:1C:4D:A7:36\",\n        \"sha256\": \"78:14:65:93:0C:1B:05:F9:4A:DF:7F:90:61:2F:FE:29:AE:A3:2A:CE:C8:62:16:81:83:6C:51:6E:91:F4:F5:39\",\n        \"signatureAlgorithmName\": \"SHA256withRSA\",\n        \"signatureAlgorithmOID\": \"1.2.840.113549.1.1.11\",\n        \"subjectDN\": \"<string>\",\n        \"version\": \"3\"\n    },\n    \"dateInstalled\": \"<dateTime>\",\n    \"description\": \"Full details of the upgrade can be found on the support site: https://support.emc.com/products/40720_PowerProtect-Data-Manager/Documentation/\",\n    \"errorMessage\": \"<string>\",\n    \"fileName\": \"dellemc-ppdm-upgrade-sw-19.3.0-1.pkg\",\n    \"fromVersion\": \"19.2.0-1\",\n    \"lockboxResetRequired\": \"<boolean>\",\n    \"madeAvailable\": \"<dateTime>\",\n    \"maintenanceUpgrade\": \"<boolean>\",\n    \"minimumVersion\": \"<string>\",\n    \"name\": \"Dell EMC PowerProtect Data Manager - Major Release\",\n    \"packageVersion\": \"19.3.0-1\",\n    \"rebootRequired\": true,\n    \"sizeInBytes\": 3915497644,\n    \"subComponentDetails\": [\n        {\n            \"attributes\": \"<object>\",\n            \"componentName\": \"PPDM\",\n            \"dateInstalled\": \"<dateTime>\",\n            \"errorMessage\": \"<string>\",\n            \"fileName\": \"<string>\",\n            \"fromVersion\": \"<string>\",\n            \"minimumVersion\": \"<string>\",\n            \"subComponentUpgradeState\": \"UPGRADED\",\n            \"upgradeError\": {\n                \"reason\": \"<string>\",\n                \"message\": \"<string>\",\n                \"messageArgs\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"messageID\": \"<string>\",\n                \"remediation\": \"<string>\"\n            },\n            \"upgradeMode\": \"<string>\",\n            \"upgradeStarted\": \"2019-09-27T16:04:16.192+0000\",\n            \"upgradeVersion\": \"19.3.0-1\"\n        },\n        {\n            \"attributes\": \"<object>\",\n            \"componentName\": \"PPDM\",\n            \"dateInstalled\": \"<dateTime>\",\n            \"errorMessage\": \"<string>\",\n            \"fileName\": \"<string>\",\n            \"fromVersion\": \"<string>\",\n            \"minimumVersion\": \"<string>\",\n            \"subComponentUpgradeState\": \"UPGRADED\",\n            \"upgradeError\": {\n                \"reason\": \"<string>\",\n                \"message\": \"<string>\",\n                \"messageArgs\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"messageID\": \"<string>\",\n                \"remediation\": \"<string>\"\n            },\n            \"upgradeMode\": \"<string>\",\n            \"upgradeStarted\": \"2019-09-27T16:04:16.192+0000\",\n            \"upgradeVersion\": \"19.3.0-1\"\n        }\n    ],\n    \"type\": \"RELEASE\",\n    \"upgradeError\": {\n        \"reason\": \"<string>\",\n        \"message\": \"<string>\",\n        \"messageArgs\": [\n            \"<string>\",\n            \"<string>\"\n        ],\n        \"messageID\": \"<string>\",\n        \"remediation\": \"<string>\"\n    },\n    \"upgradeMode\": \"DU\",\n    \"upgradeStarted\": \"2019-09-27T16:04:16.192+0000\",\n    \"validationDetails\": [\n        {\n            \"message\": \"<string>\",\n            \"messageDetails\": {\n                \"reason\": \"<string>\",\n                \"message\": \"<string>\",\n                \"messageArgs\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"messageID\": \"<string>\",\n                \"remediation\": \"<string>\"\n            },\n            \"resultType\": \"<string>\",\n            \"subComponent\": \"<string>\",\n            \"validateTime\": \"<dateTime>\",\n            \"validationName\": \"<string>\"\n        },\n        {\n            \"message\": \"<string>\",\n            \"messageDetails\": {\n                \"reason\": \"<string>\",\n                \"message\": \"<string>\",\n                \"messageArgs\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"messageID\": \"<string>\",\n                \"remediation\": \"<string>\"\n            },\n            \"resultType\": \"<string>\",\n            \"subComponent\": \"<string>\",\n            \"validateTime\": \"<dateTime>\",\n            \"validationName\": \"<string>\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/upgrade-packages/:id?forceUpgrade=true",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"upgrade-packages",
														":id"
													],
													"query": [
														{
															"key": "forceUpgrade",
															"value": "true"
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The submitted upgrade package has a syntax error.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\": \"4c449963-ee0c-48b9-9d5f-925ad9b97237\",\n    \"state\": \"INSTALLED\",\n    \"certificateTrustedByUser\": true,\n    \"lockboxPassphrase\": \"<string>\",\n    \"upgradeToken\": \"<string>\",\n    \"certificateDetailsMap\": {\n        \"issuerDN\": \"CN=Entrust Code Signing CA - OVCS1,OU=(c) 2015 Entrust\\\\\\\\, Inc. - for authorized use only,OU=See www.entrust.net/legal-terms,O=Entrust\\\\\\\\, Inc.,C=US\",\n        \"md5\": \"A8:CA:D7:A2:87:CE:46:7D:54:22:7E:F6:48:00:D7:F7\",\n        \"notAfter\": \"2020-11-13T18:40:58.000+0000\",\n        \"notBefore\": \"2018-11-27T18:11:01.000+0000\",\n        \"publicKey\": \"RSA public key\",\n        \"publicKeyExponent\": \"65537\",\n        \"publicKeyModulus\": \"28960436902272994990842327932793501079190030541382043284118832665312776269446498640419791240454180242586486085708937734083403079002675942200659672006922211955640645340519418577217605521853665489538005758686672003656588145476218479453412730875755080172327057354731921316729121658964135024802322078500693787277083123358314858038960555352152289672471625254193779104016053331569238519722568716038933287609754732628187721307712701984454977189333349182725470926457368220839164994041565288508095067640843719732336878602089454538914456233996689333685080643187924928683921102207259893124969451536291317395148153287269036808351\",\n        \"publicKeySize\": \"2048\",\n        \"serialNumber\": \"cfaba488b3b34a5c0000000055667d65\",\n        \"sha1\": \"EE:EC:4A:1C:E5:59:0D:39:46:0D:B4:4D:CB:2B:A1:EB:1C:4D:A7:36\",\n        \"sha256\": \"78:14:65:93:0C:1B:05:F9:4A:DF:7F:90:61:2F:FE:29:AE:A3:2A:CE:C8:62:16:81:83:6C:51:6E:91:F4:F5:39\",\n        \"signatureAlgorithmName\": \"SHA256withRSA\",\n        \"signatureAlgorithmOID\": \"1.2.840.113549.1.1.11\",\n        \"subjectDN\": \"<string>\",\n        \"version\": \"3\"\n    },\n    \"dateInstalled\": \"<dateTime>\",\n    \"description\": \"Full details of the upgrade can be found on the support site: https://support.emc.com/products/40720_PowerProtect-Data-Manager/Documentation/\",\n    \"errorMessage\": \"<string>\",\n    \"fileName\": \"dellemc-ppdm-upgrade-sw-19.3.0-1.pkg\",\n    \"fromVersion\": \"19.2.0-1\",\n    \"lockboxResetRequired\": \"<boolean>\",\n    \"madeAvailable\": \"<dateTime>\",\n    \"maintenanceUpgrade\": \"<boolean>\",\n    \"minimumVersion\": \"<string>\",\n    \"name\": \"Dell EMC PowerProtect Data Manager - Major Release\",\n    \"packageVersion\": \"19.3.0-1\",\n    \"rebootRequired\": true,\n    \"sizeInBytes\": 3915497644,\n    \"subComponentDetails\": [\n        {\n            \"attributes\": \"<object>\",\n            \"componentName\": \"PPDM\",\n            \"dateInstalled\": \"<dateTime>\",\n            \"errorMessage\": \"<string>\",\n            \"fileName\": \"<string>\",\n            \"fromVersion\": \"<string>\",\n            \"minimumVersion\": \"<string>\",\n            \"subComponentUpgradeState\": \"UPGRADED\",\n            \"upgradeError\": {\n                \"reason\": \"<string>\",\n                \"message\": \"<string>\",\n                \"messageArgs\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"messageID\": \"<string>\",\n                \"remediation\": \"<string>\"\n            },\n            \"upgradeMode\": \"<string>\",\n            \"upgradeStarted\": \"2019-09-27T16:04:16.192+0000\",\n            \"upgradeVersion\": \"19.3.0-1\"\n        },\n        {\n            \"attributes\": \"<object>\",\n            \"componentName\": \"PPDM\",\n            \"dateInstalled\": \"<dateTime>\",\n            \"errorMessage\": \"<string>\",\n            \"fileName\": \"<string>\",\n            \"fromVersion\": \"<string>\",\n            \"minimumVersion\": \"<string>\",\n            \"subComponentUpgradeState\": \"UPGRADED\",\n            \"upgradeError\": {\n                \"reason\": \"<string>\",\n                \"message\": \"<string>\",\n                \"messageArgs\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"messageID\": \"<string>\",\n                \"remediation\": \"<string>\"\n            },\n            \"upgradeMode\": \"<string>\",\n            \"upgradeStarted\": \"2019-09-27T16:04:16.192+0000\",\n            \"upgradeVersion\": \"19.3.0-1\"\n        }\n    ],\n    \"type\": \"RELEASE\",\n    \"upgradeError\": {\n        \"reason\": \"<string>\",\n        \"message\": \"<string>\",\n        \"messageArgs\": [\n            \"<string>\",\n            \"<string>\"\n        ],\n        \"messageID\": \"<string>\",\n        \"remediation\": \"<string>\"\n    },\n    \"upgradeMode\": \"DU\",\n    \"upgradeStarted\": \"2019-09-27T16:04:16.192+0000\",\n    \"validationDetails\": [\n        {\n            \"message\": \"<string>\",\n            \"messageDetails\": {\n                \"reason\": \"<string>\",\n                \"message\": \"<string>\",\n                \"messageArgs\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"messageID\": \"<string>\",\n                \"remediation\": \"<string>\"\n            },\n            \"resultType\": \"<string>\",\n            \"subComponent\": \"<string>\",\n            \"validateTime\": \"<dateTime>\",\n            \"validationName\": \"<string>\"\n        },\n        {\n            \"message\": \"<string>\",\n            \"messageDetails\": {\n                \"reason\": \"<string>\",\n                \"message\": \"<string>\",\n                \"messageArgs\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"messageID\": \"<string>\",\n                \"remediation\": \"<string>\"\n            },\n            \"resultType\": \"<string>\",\n            \"subComponent\": \"<string>\",\n            \"validateTime\": \"<dateTime>\",\n            \"validationName\": \"<string>\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/upgrade-packages/:id?forceUpgrade=true",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"upgrade-packages",
														":id"
													],
													"query": [
														{
															"key": "forceUpgrade",
															"value": "true"
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "Cannot find an upgrade package with the specified ID.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\": \"4c449963-ee0c-48b9-9d5f-925ad9b97237\",\n    \"state\": \"INSTALLED\",\n    \"certificateTrustedByUser\": true,\n    \"lockboxPassphrase\": \"<string>\",\n    \"upgradeToken\": \"<string>\",\n    \"certificateDetailsMap\": {\n        \"issuerDN\": \"CN=Entrust Code Signing CA - OVCS1,OU=(c) 2015 Entrust\\\\\\\\, Inc. - for authorized use only,OU=See www.entrust.net/legal-terms,O=Entrust\\\\\\\\, Inc.,C=US\",\n        \"md5\": \"A8:CA:D7:A2:87:CE:46:7D:54:22:7E:F6:48:00:D7:F7\",\n        \"notAfter\": \"2020-11-13T18:40:58.000+0000\",\n        \"notBefore\": \"2018-11-27T18:11:01.000+0000\",\n        \"publicKey\": \"RSA public key\",\n        \"publicKeyExponent\": \"65537\",\n        \"publicKeyModulus\": \"28960436902272994990842327932793501079190030541382043284118832665312776269446498640419791240454180242586486085708937734083403079002675942200659672006922211955640645340519418577217605521853665489538005758686672003656588145476218479453412730875755080172327057354731921316729121658964135024802322078500693787277083123358314858038960555352152289672471625254193779104016053331569238519722568716038933287609754732628187721307712701984454977189333349182725470926457368220839164994041565288508095067640843719732336878602089454538914456233996689333685080643187924928683921102207259893124969451536291317395148153287269036808351\",\n        \"publicKeySize\": \"2048\",\n        \"serialNumber\": \"cfaba488b3b34a5c0000000055667d65\",\n        \"sha1\": \"EE:EC:4A:1C:E5:59:0D:39:46:0D:B4:4D:CB:2B:A1:EB:1C:4D:A7:36\",\n        \"sha256\": \"78:14:65:93:0C:1B:05:F9:4A:DF:7F:90:61:2F:FE:29:AE:A3:2A:CE:C8:62:16:81:83:6C:51:6E:91:F4:F5:39\",\n        \"signatureAlgorithmName\": \"SHA256withRSA\",\n        \"signatureAlgorithmOID\": \"1.2.840.113549.1.1.11\",\n        \"subjectDN\": \"<string>\",\n        \"version\": \"3\"\n    },\n    \"dateInstalled\": \"<dateTime>\",\n    \"description\": \"Full details of the upgrade can be found on the support site: https://support.emc.com/products/40720_PowerProtect-Data-Manager/Documentation/\",\n    \"errorMessage\": \"<string>\",\n    \"fileName\": \"dellemc-ppdm-upgrade-sw-19.3.0-1.pkg\",\n    \"fromVersion\": \"19.2.0-1\",\n    \"lockboxResetRequired\": \"<boolean>\",\n    \"madeAvailable\": \"<dateTime>\",\n    \"maintenanceUpgrade\": \"<boolean>\",\n    \"minimumVersion\": \"<string>\",\n    \"name\": \"Dell EMC PowerProtect Data Manager - Major Release\",\n    \"packageVersion\": \"19.3.0-1\",\n    \"rebootRequired\": true,\n    \"sizeInBytes\": 3915497644,\n    \"subComponentDetails\": [\n        {\n            \"attributes\": \"<object>\",\n            \"componentName\": \"PPDM\",\n            \"dateInstalled\": \"<dateTime>\",\n            \"errorMessage\": \"<string>\",\n            \"fileName\": \"<string>\",\n            \"fromVersion\": \"<string>\",\n            \"minimumVersion\": \"<string>\",\n            \"subComponentUpgradeState\": \"UPGRADED\",\n            \"upgradeError\": {\n                \"reason\": \"<string>\",\n                \"message\": \"<string>\",\n                \"messageArgs\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"messageID\": \"<string>\",\n                \"remediation\": \"<string>\"\n            },\n            \"upgradeMode\": \"<string>\",\n            \"upgradeStarted\": \"2019-09-27T16:04:16.192+0000\",\n            \"upgradeVersion\": \"19.3.0-1\"\n        },\n        {\n            \"attributes\": \"<object>\",\n            \"componentName\": \"PPDM\",\n            \"dateInstalled\": \"<dateTime>\",\n            \"errorMessage\": \"<string>\",\n            \"fileName\": \"<string>\",\n            \"fromVersion\": \"<string>\",\n            \"minimumVersion\": \"<string>\",\n            \"subComponentUpgradeState\": \"UPGRADED\",\n            \"upgradeError\": {\n                \"reason\": \"<string>\",\n                \"message\": \"<string>\",\n                \"messageArgs\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"messageID\": \"<string>\",\n                \"remediation\": \"<string>\"\n            },\n            \"upgradeMode\": \"<string>\",\n            \"upgradeStarted\": \"2019-09-27T16:04:16.192+0000\",\n            \"upgradeVersion\": \"19.3.0-1\"\n        }\n    ],\n    \"type\": \"RELEASE\",\n    \"upgradeError\": {\n        \"reason\": \"<string>\",\n        \"message\": \"<string>\",\n        \"messageArgs\": [\n            \"<string>\",\n            \"<string>\"\n        ],\n        \"messageID\": \"<string>\",\n        \"remediation\": \"<string>\"\n    },\n    \"upgradeMode\": \"DU\",\n    \"upgradeStarted\": \"2019-09-27T16:04:16.192+0000\",\n    \"validationDetails\": [\n        {\n            \"message\": \"<string>\",\n            \"messageDetails\": {\n                \"reason\": \"<string>\",\n                \"message\": \"<string>\",\n                \"messageArgs\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"messageID\": \"<string>\",\n                \"remediation\": \"<string>\"\n            },\n            \"resultType\": \"<string>\",\n            \"subComponent\": \"<string>\",\n            \"validateTime\": \"<dateTime>\",\n            \"validationName\": \"<string>\"\n        },\n        {\n            \"message\": \"<string>\",\n            \"messageDetails\": {\n                \"reason\": \"<string>\",\n                \"message\": \"<string>\",\n                \"messageArgs\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"messageID\": \"<string>\",\n                \"remediation\": \"<string>\"\n            },\n            \"resultType\": \"<string>\",\n            \"subComponent\": \"<string>\",\n            \"validateTime\": \"<dateTime>\",\n            \"validationName\": \"<string>\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/upgrade-packages/:id?forceUpgrade=true",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"upgrade-packages",
														":id"
													],
													"query": [
														{
															"key": "forceUpgrade",
															"value": "true"
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\": \"4c449963-ee0c-48b9-9d5f-925ad9b97237\",\n    \"state\": \"INSTALLED\",\n    \"certificateTrustedByUser\": true,\n    \"lockboxPassphrase\": \"<string>\",\n    \"upgradeToken\": \"<string>\",\n    \"certificateDetailsMap\": {\n        \"issuerDN\": \"CN=Entrust Code Signing CA - OVCS1,OU=(c) 2015 Entrust\\\\\\\\, Inc. - for authorized use only,OU=See www.entrust.net/legal-terms,O=Entrust\\\\\\\\, Inc.,C=US\",\n        \"md5\": \"A8:CA:D7:A2:87:CE:46:7D:54:22:7E:F6:48:00:D7:F7\",\n        \"notAfter\": \"2020-11-13T18:40:58.000+0000\",\n        \"notBefore\": \"2018-11-27T18:11:01.000+0000\",\n        \"publicKey\": \"RSA public key\",\n        \"publicKeyExponent\": \"65537\",\n        \"publicKeyModulus\": \"28960436902272994990842327932793501079190030541382043284118832665312776269446498640419791240454180242586486085708937734083403079002675942200659672006922211955640645340519418577217605521853665489538005758686672003656588145476218479453412730875755080172327057354731921316729121658964135024802322078500693787277083123358314858038960555352152289672471625254193779104016053331569238519722568716038933287609754732628187721307712701984454977189333349182725470926457368220839164994041565288508095067640843719732336878602089454538914456233996689333685080643187924928683921102207259893124969451536291317395148153287269036808351\",\n        \"publicKeySize\": \"2048\",\n        \"serialNumber\": \"cfaba488b3b34a5c0000000055667d65\",\n        \"sha1\": \"EE:EC:4A:1C:E5:59:0D:39:46:0D:B4:4D:CB:2B:A1:EB:1C:4D:A7:36\",\n        \"sha256\": \"78:14:65:93:0C:1B:05:F9:4A:DF:7F:90:61:2F:FE:29:AE:A3:2A:CE:C8:62:16:81:83:6C:51:6E:91:F4:F5:39\",\n        \"signatureAlgorithmName\": \"SHA256withRSA\",\n        \"signatureAlgorithmOID\": \"1.2.840.113549.1.1.11\",\n        \"subjectDN\": \"<string>\",\n        \"version\": \"3\"\n    },\n    \"dateInstalled\": \"<dateTime>\",\n    \"description\": \"Full details of the upgrade can be found on the support site: https://support.emc.com/products/40720_PowerProtect-Data-Manager/Documentation/\",\n    \"errorMessage\": \"<string>\",\n    \"fileName\": \"dellemc-ppdm-upgrade-sw-19.3.0-1.pkg\",\n    \"fromVersion\": \"19.2.0-1\",\n    \"lockboxResetRequired\": \"<boolean>\",\n    \"madeAvailable\": \"<dateTime>\",\n    \"maintenanceUpgrade\": \"<boolean>\",\n    \"minimumVersion\": \"<string>\",\n    \"name\": \"Dell EMC PowerProtect Data Manager - Major Release\",\n    \"packageVersion\": \"19.3.0-1\",\n    \"rebootRequired\": true,\n    \"sizeInBytes\": 3915497644,\n    \"subComponentDetails\": [\n        {\n            \"attributes\": \"<object>\",\n            \"componentName\": \"PPDM\",\n            \"dateInstalled\": \"<dateTime>\",\n            \"errorMessage\": \"<string>\",\n            \"fileName\": \"<string>\",\n            \"fromVersion\": \"<string>\",\n            \"minimumVersion\": \"<string>\",\n            \"subComponentUpgradeState\": \"UPGRADED\",\n            \"upgradeError\": {\n                \"reason\": \"<string>\",\n                \"message\": \"<string>\",\n                \"messageArgs\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"messageID\": \"<string>\",\n                \"remediation\": \"<string>\"\n            },\n            \"upgradeMode\": \"<string>\",\n            \"upgradeStarted\": \"2019-09-27T16:04:16.192+0000\",\n            \"upgradeVersion\": \"19.3.0-1\"\n        },\n        {\n            \"attributes\": \"<object>\",\n            \"componentName\": \"PPDM\",\n            \"dateInstalled\": \"<dateTime>\",\n            \"errorMessage\": \"<string>\",\n            \"fileName\": \"<string>\",\n            \"fromVersion\": \"<string>\",\n            \"minimumVersion\": \"<string>\",\n            \"subComponentUpgradeState\": \"UPGRADED\",\n            \"upgradeError\": {\n                \"reason\": \"<string>\",\n                \"message\": \"<string>\",\n                \"messageArgs\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"messageID\": \"<string>\",\n                \"remediation\": \"<string>\"\n            },\n            \"upgradeMode\": \"<string>\",\n            \"upgradeStarted\": \"2019-09-27T16:04:16.192+0000\",\n            \"upgradeVersion\": \"19.3.0-1\"\n        }\n    ],\n    \"type\": \"RELEASE\",\n    \"upgradeError\": {\n        \"reason\": \"<string>\",\n        \"message\": \"<string>\",\n        \"messageArgs\": [\n            \"<string>\",\n            \"<string>\"\n        ],\n        \"messageID\": \"<string>\",\n        \"remediation\": \"<string>\"\n    },\n    \"upgradeMode\": \"DU\",\n    \"upgradeStarted\": \"2019-09-27T16:04:16.192+0000\",\n    \"validationDetails\": [\n        {\n            \"message\": \"<string>\",\n            \"messageDetails\": {\n                \"reason\": \"<string>\",\n                \"message\": \"<string>\",\n                \"messageArgs\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"messageID\": \"<string>\",\n                \"remediation\": \"<string>\"\n            },\n            \"resultType\": \"<string>\",\n            \"subComponent\": \"<string>\",\n            \"validateTime\": \"<dateTime>\",\n            \"validationName\": \"<string>\"\n        },\n        {\n            \"message\": \"<string>\",\n            \"messageDetails\": {\n                \"reason\": \"<string>\",\n                \"message\": \"<string>\",\n                \"messageArgs\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"messageID\": \"<string>\",\n                \"remediation\": \"<string>\"\n            },\n            \"resultType\": \"<string>\",\n            \"subComponent\": \"<string>\",\n            \"validateTime\": \"<dateTime>\",\n            \"validationName\": \"<string>\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/upgrade-packages/:id?forceUpgrade=true",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"upgrade-packages",
														":id"
													],
													"query": [
														{
															"key": "forceUpgrade",
															"value": "true"
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\": \"4c449963-ee0c-48b9-9d5f-925ad9b97237\",\n    \"state\": \"INSTALLED\",\n    \"certificateTrustedByUser\": true,\n    \"lockboxPassphrase\": \"<string>\",\n    \"upgradeToken\": \"<string>\",\n    \"certificateDetailsMap\": {\n        \"issuerDN\": \"CN=Entrust Code Signing CA - OVCS1,OU=(c) 2015 Entrust\\\\\\\\, Inc. - for authorized use only,OU=See www.entrust.net/legal-terms,O=Entrust\\\\\\\\, Inc.,C=US\",\n        \"md5\": \"A8:CA:D7:A2:87:CE:46:7D:54:22:7E:F6:48:00:D7:F7\",\n        \"notAfter\": \"2020-11-13T18:40:58.000+0000\",\n        \"notBefore\": \"2018-11-27T18:11:01.000+0000\",\n        \"publicKey\": \"RSA public key\",\n        \"publicKeyExponent\": \"65537\",\n        \"publicKeyModulus\": \"28960436902272994990842327932793501079190030541382043284118832665312776269446498640419791240454180242586486085708937734083403079002675942200659672006922211955640645340519418577217605521853665489538005758686672003656588145476218479453412730875755080172327057354731921316729121658964135024802322078500693787277083123358314858038960555352152289672471625254193779104016053331569238519722568716038933287609754732628187721307712701984454977189333349182725470926457368220839164994041565288508095067640843719732336878602089454538914456233996689333685080643187924928683921102207259893124969451536291317395148153287269036808351\",\n        \"publicKeySize\": \"2048\",\n        \"serialNumber\": \"cfaba488b3b34a5c0000000055667d65\",\n        \"sha1\": \"EE:EC:4A:1C:E5:59:0D:39:46:0D:B4:4D:CB:2B:A1:EB:1C:4D:A7:36\",\n        \"sha256\": \"78:14:65:93:0C:1B:05:F9:4A:DF:7F:90:61:2F:FE:29:AE:A3:2A:CE:C8:62:16:81:83:6C:51:6E:91:F4:F5:39\",\n        \"signatureAlgorithmName\": \"SHA256withRSA\",\n        \"signatureAlgorithmOID\": \"1.2.840.113549.1.1.11\",\n        \"subjectDN\": \"<string>\",\n        \"version\": \"3\"\n    },\n    \"dateInstalled\": \"<dateTime>\",\n    \"description\": \"Full details of the upgrade can be found on the support site: https://support.emc.com/products/40720_PowerProtect-Data-Manager/Documentation/\",\n    \"errorMessage\": \"<string>\",\n    \"fileName\": \"dellemc-ppdm-upgrade-sw-19.3.0-1.pkg\",\n    \"fromVersion\": \"19.2.0-1\",\n    \"lockboxResetRequired\": \"<boolean>\",\n    \"madeAvailable\": \"<dateTime>\",\n    \"maintenanceUpgrade\": \"<boolean>\",\n    \"minimumVersion\": \"<string>\",\n    \"name\": \"Dell EMC PowerProtect Data Manager - Major Release\",\n    \"packageVersion\": \"19.3.0-1\",\n    \"rebootRequired\": true,\n    \"sizeInBytes\": 3915497644,\n    \"subComponentDetails\": [\n        {\n            \"attributes\": \"<object>\",\n            \"componentName\": \"PPDM\",\n            \"dateInstalled\": \"<dateTime>\",\n            \"errorMessage\": \"<string>\",\n            \"fileName\": \"<string>\",\n            \"fromVersion\": \"<string>\",\n            \"minimumVersion\": \"<string>\",\n            \"subComponentUpgradeState\": \"UPGRADED\",\n            \"upgradeError\": {\n                \"reason\": \"<string>\",\n                \"message\": \"<string>\",\n                \"messageArgs\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"messageID\": \"<string>\",\n                \"remediation\": \"<string>\"\n            },\n            \"upgradeMode\": \"<string>\",\n            \"upgradeStarted\": \"2019-09-27T16:04:16.192+0000\",\n            \"upgradeVersion\": \"19.3.0-1\"\n        },\n        {\n            \"attributes\": \"<object>\",\n            \"componentName\": \"PPDM\",\n            \"dateInstalled\": \"<dateTime>\",\n            \"errorMessage\": \"<string>\",\n            \"fileName\": \"<string>\",\n            \"fromVersion\": \"<string>\",\n            \"minimumVersion\": \"<string>\",\n            \"subComponentUpgradeState\": \"UPGRADED\",\n            \"upgradeError\": {\n                \"reason\": \"<string>\",\n                \"message\": \"<string>\",\n                \"messageArgs\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"messageID\": \"<string>\",\n                \"remediation\": \"<string>\"\n            },\n            \"upgradeMode\": \"<string>\",\n            \"upgradeStarted\": \"2019-09-27T16:04:16.192+0000\",\n            \"upgradeVersion\": \"19.3.0-1\"\n        }\n    ],\n    \"type\": \"RELEASE\",\n    \"upgradeError\": {\n        \"reason\": \"<string>\",\n        \"message\": \"<string>\",\n        \"messageArgs\": [\n            \"<string>\",\n            \"<string>\"\n        ],\n        \"messageID\": \"<string>\",\n        \"remediation\": \"<string>\"\n    },\n    \"upgradeMode\": \"DU\",\n    \"upgradeStarted\": \"2019-09-27T16:04:16.192+0000\",\n    \"validationDetails\": [\n        {\n            \"message\": \"<string>\",\n            \"messageDetails\": {\n                \"reason\": \"<string>\",\n                \"message\": \"<string>\",\n                \"messageArgs\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"messageID\": \"<string>\",\n                \"remediation\": \"<string>\"\n            },\n            \"resultType\": \"<string>\",\n            \"subComponent\": \"<string>\",\n            \"validateTime\": \"<dateTime>\",\n            \"validationName\": \"<string>\"\n        },\n        {\n            \"message\": \"<string>\",\n            \"messageDetails\": {\n                \"reason\": \"<string>\",\n                \"message\": \"<string>\",\n                \"messageArgs\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"messageID\": \"<string>\",\n                \"remediation\": \"<string>\"\n            },\n            \"resultType\": \"<string>\",\n            \"subComponent\": \"<string>\",\n            \"validateTime\": \"<dateTime>\",\n            \"validationName\": \"<string>\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/upgrade-packages/:id?forceUpgrade=true",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"upgrade-packages",
														":id"
													],
													"query": [
														{
															"key": "forceUpgrade",
															"value": "true"
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										}
									]
								},
								{
									"name": "Precheck upgrade package by ID.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/upgrade-packages/:id/precheck",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"upgrade-packages",
												":id",
												"precheck"
											],
											"variable": [
												{
													"id": "41c7af18-ce51-4731-95fe-8e37bffd9352",
													"key": "id",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The given package ID for upgrade."
												}
											]
										},
										"description": "Enables you to precheck an upgrade package by the specified ID. The precheck verifies that all components are ready for upgrade.\n> This endpoint supports execution by the following roles: admin\n"
									},
									"response": [
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/upgrade-packages/:id/precheck",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"upgrade-packages",
														":id",
														"precheck"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "An unexpected error prevented the server from fulfilling your request.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/upgrade-packages/:id/precheck",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"upgrade-packages",
														":id",
														"precheck"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The precheck upgrade package is not allowed in the current state.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/upgrade-packages/:id/precheck",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"upgrade-packages",
														":id",
														"precheck"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Conflict",
											"code": 409,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "Cannot find an upgrade package with the specified ID.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/upgrade-packages/:id/precheck",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"upgrade-packages",
														":id",
														"precheck"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "Found and return the information of specific package.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/upgrade-packages/:id/precheck",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"upgrade-packages",
														":id",
														"precheck"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"id\": \"4c449963-ee0c-48b9-9d5f-925ad9b97237\",\n \"state\": \"INSTALLED\",\n \"certificateTrustedByUser\": true,\n \"lockboxPassphrase\": \"ut\",\n \"upgradeToken\": \"dolor sunt exercitation occaecat dolor\",\n \"certificateDetailsMap\": {\n  \"issuerDN\": \"CN=Entrust Code Signing CA - OVCS1,OU=(c) 2015 Entrust\\\\\\\\, Inc. - for authorized use only,OU=See www.entrust.net/legal-terms,O=Entrust\\\\\\\\, Inc.,C=US\",\n  \"md5\": \"A8:CA:D7:A2:87:CE:46:7D:54:22:7E:F6:48:00:D7:F7\",\n  \"notAfter\": \"2020-11-13T18:40:58.000+0000\",\n  \"notBefore\": \"2018-11-27T18:11:01.000+0000\",\n  \"publicKey\": \"RSA public key\",\n  \"publicKeyExponent\": \"65537\",\n  \"publicKeyModulus\": \"28960436902272994990842327932793501079190030541382043284118832665312776269446498640419791240454180242586486085708937734083403079002675942200659672006922211955640645340519418577217605521853665489538005758686672003656588145476218479453412730875755080172327057354731921316729121658964135024802322078500693787277083123358314858038960555352152289672471625254193779104016053331569238519722568716038933287609754732628187721307712701984454977189333349182725470926457368220839164994041565288508095067640843719732336878602089454538914456233996689333685080643187924928683921102207259893124969451536291317395148153287269036808351\",\n  \"publicKeySize\": \"2048\",\n  \"serialNumber\": \"cfaba488b3b34a5c0000000055667d65\",\n  \"sha1\": \"EE:EC:4A:1C:E5:59:0D:39:46:0D:B4:4D:CB:2B:A1:EB:1C:4D:A7:36\",\n  \"sha256\": \"78:14:65:93:0C:1B:05:F9:4A:DF:7F:90:61:2F:FE:29:AE:A3:2A:CE:C8:62:16:81:83:6C:51:6E:91:F4:F5:39\",\n  \"signatureAlgorithmName\": \"SHA256withRSA\",\n  \"signatureAlgorithmOID\": \"1.2.840.113549.1.1.11\",\n  \"subjectDN\": \"cillum aliqua ipsum\",\n  \"version\": \"3\"\n },\n \"dateInstalled\": \"2008-07-19T15:18:07.883Z\",\n \"description\": \"Full details of the upgrade can be found on the support site: https://support.emc.com/products/40720_PowerProtect-Data-Manager/Documentation/\",\n \"errorMessage\": \"consequat non id\",\n \"fileName\": \"dellemc-ppdm-upgrade-sw-19.3.0-1.pkg\",\n \"fromVersion\": \"19.2.0-1\",\n \"lockboxResetRequired\": true,\n \"madeAvailable\": \"1989-05-14T18:15:44.507Z\",\n \"maintenanceUpgrade\": false,\n \"minimumVersion\": \"enim eu qui\",\n \"name\": \"Dell EMC PowerProtect Data Manager - Major Release\",\n \"packageVersion\": \"19.3.0-1\",\n \"rebootRequired\": true,\n \"sizeInBytes\": 3915497644,\n \"subComponentDetails\": [\n  {\n   \"attributes\": {},\n   \"componentName\": \"PPDM\",\n   \"dateInstalled\": \"1950-07-09T21:16:20.467Z\",\n   \"errorMessage\": \"nulla proident\",\n   \"fileName\": \"sunt veniam dolore sint in\",\n   \"fromVersion\": \"non labore ex ut ut\",\n   \"minimumVersion\": \"adipisicing dolor\",\n   \"subComponentUpgradeState\": \"UPGRADED\",\n   \"upgradeError\": {\n    \"reason\": \"incididunt\",\n    \"message\": \"in eu consectetur minim\",\n    \"messageArgs\": [\n     \"Ut\",\n     \"mollit laboris eu sunt\"\n    ],\n    \"messageID\": \"ex amet pro\",\n    \"remediation\": \"anim Excepteur reprehenderit\"\n   },\n   \"upgradeMode\": \"MDU\",\n   \"upgradeStarted\": \"2019-09-27T16:04:16.192+0000\",\n   \"upgradeVersion\": \"19.3.0-1\"\n  },\n  {\n   \"attributes\": {},\n   \"componentName\": \"PPDM\",\n   \"dateInstalled\": \"1953-01-24T03:58:15.373Z\",\n   \"errorMessage\": \"pariatur\",\n   \"fileName\": \"in tempor culpa mollit amet\",\n   \"fromVersion\": \"ad ea\",\n   \"minimumVersion\": \"nulla ex\",\n   \"subComponentUpgradeState\": \"UPGRADED\",\n   \"upgradeError\": {\n    \"reason\": \"tempor exercitat\",\n    \"message\": \"dolor ea Ut\",\n    \"messageArgs\": [\n     \"Lorem Excepteur\",\n     \"pariatur\"\n    ],\n    \"messageID\": \"ex\",\n    \"remediation\": \"exercitation ea nisi\"\n   },\n   \"upgradeMode\": \"MDU\",\n   \"upgradeStarted\": \"2019-09-27T16:04:16.192+0000\",\n   \"upgradeVersion\": \"19.3.0-1\"\n  }\n ],\n \"type\": \"RELEASE\",\n \"upgradeError\": {\n  \"reason\": \"consectetur consequat\",\n  \"message\": \"sed qui occaecat\",\n  \"messageArgs\": [\n   \"cillum sed ea\",\n   \"anim voluptate con\"\n  ],\n  \"messageID\": \"officia irure ea aliqua\",\n  \"remediation\": \"magna\"\n },\n \"upgradeMode\": \"DU\",\n \"upgradeStarted\": \"2019-09-27T16:04:16.192+0000\",\n \"validationDetails\": [\n  {\n   \"message\": \"quis exercitation mag\",\n   \"messageDetails\": {\n    \"reason\": \"do magna laborum veniam culpa\",\n    \"message\": \"fugiat consequat ex cillum\",\n    \"messageArgs\": [\n     \"officia est\",\n     \"\"\n    ],\n    \"messageID\": \"voluptate\",\n    \"remediation\": \"Duis exercitation aute in\"\n   },\n   \"resultType\": \"INFO\",\n   \"subComponent\": \"adipisicing labore\",\n   \"validateTime\": \"1992-04-26T10:27:15.727Z\",\n   \"validationName\": \"eiusmod\"\n  },\n  {\n   \"message\": \"dolor\",\n   \"messageDetails\": {\n    \"reason\": \"Excepteur adipisicing qui ullamco\",\n    \"message\": \"exercitation voluptate dolore Excepteur\",\n    \"messageArgs\": [\n     \"eiusmod culpa\",\n     \"eu elit ad\"\n    ],\n    \"messageID\": \"velit adipisicing in id\",\n    \"remediation\": \"ullamco\"\n   },\n   \"resultType\": \"WARNING\",\n   \"subComponent\": \"ad\",\n   \"validateTime\": \"1946-02-20T16:27:34.802Z\",\n   \"validationName\": \"exercitation proident sit ut\"\n  }\n ]\n}"
										},
										{
											"name": "The precheck upgrade package request was accepted and is being processed.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/upgrade-packages/:id/precheck",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"upgrade-packages",
														":id",
														"precheck"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The requestor is not authorized to perform this operation.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/upgrade-packages/:id/precheck",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"upgrade-packages",
														":id",
														"precheck"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										},
										{
											"name": "The default response when an error occurs.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/upgrade-packages/:id/precheck",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"upgrade-packages",
														":id",
														"precheck"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Get list of all upgrade packages.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/upgrade-packages?page=1&pageSize=100&filter=<string>&orderby=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"upgrade-packages"
									],
									"query": [
										{
											"key": "page",
											"value": "1",
											"description": "The page number to be returned. Must not be less than 1. See Tutorials - Page the List Result."
										},
										{
											"key": "pageSize",
											"value": "100",
											"description": "The number of resources to be returned. Must not be less than 1. See Tutorials - Page the List Result."
										},
										{
											"key": "filter",
											"value": "<string>",
											"description": "The filter string that is expressed using PowerProtect Data Manager filter syntax. See Tutorials - Filter the List Result."
										},
										{
											"key": "orderby",
											"value": "<string>",
											"description": "The attributes/fields to be sorted by. This parameter can combine with sort direction \"ASC\" or \"DESC\". Default direction is ASC. See Tutorials - Sort the List Result."
										}
									]
								},
								"description": "Retrieves a list of all upgrade packages. This API call checks the upgrade history of the system. If the system has been upgraded multiple times, the list includes the installed upgrade packages. At any time, only one package that has not been installed can exist.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n\n> This endpoint supports pagination with types: random\n"
							},
							"response": [
								{
									"name": "The requestor is not authorized to perform this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/upgrade-packages?page=1&pageSize=100&filter=<string>&orderby=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"upgrade-packages"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "<string>"
												},
												{
													"key": "orderby",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "The requestor is not authorized to perform this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/upgrade-packages?page=1&pageSize=100&filter=<string>&orderby=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"upgrade-packages"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "<string>"
												},
												{
													"key": "orderby",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "The default response when error occurs.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/upgrade-packages?page=1&pageSize=100&filter=<string>&orderby=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"upgrade-packages"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "<string>"
												},
												{
													"key": "orderby",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "An unexpected error prevented the server from fulfilling your request.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/upgrade-packages?page=1&pageSize=100&filter=<string>&orderby=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"upgrade-packages"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "<string>"
												},
												{
													"key": "orderby",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "Located and returned all upgrade packages successfully.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/upgrade-packages?page=1&pageSize=100&filter=<string>&orderby=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"upgrade-packages"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "<string>"
												},
												{
													"key": "orderby",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"content\": [\n  {\n   \"id\": \"4c449963-ee0c-48b9-9d5f-925ad9b97237\",\n   \"state\": \"INSTALLED\",\n   \"certificateTrustedByUser\": true,\n   \"lockboxPassphrase\": \"nostrud commodo\",\n   \"upgradeToken\": \"nisi esse ea commodo\",\n   \"certificateDetailsMap\": {\n    \"issuerDN\": \"CN=Entrust Code Signing CA - OVCS1,OU=(c) 2015 Entrust\\\\\\\\, Inc. - for authorized use only,OU=See www.entrust.net/legal-terms,O=Entrust\\\\\\\\, Inc.,C=US\",\n    \"md5\": \"A8:CA:D7:A2:87:CE:46:7D:54:22:7E:F6:48:00:D7:F7\",\n    \"notAfter\": \"2020-11-13T18:40:58.000+0000\",\n    \"notBefore\": \"2018-11-27T18:11:01.000+0000\",\n    \"publicKey\": \"RSA public key\",\n    \"publicKeyExponent\": \"65537\",\n    \"publicKeyModulus\": \"28960436902272994990842327932793501079190030541382043284118832665312776269446498640419791240454180242586486085708937734083403079002675942200659672006922211955640645340519418577217605521853665489538005758686672003656588145476218479453412730875755080172327057354731921316729121658964135024802322078500693787277083123358314858038960555352152289672471625254193779104016053331569238519722568716038933287609754732628187721307712701984454977189333349182725470926457368220839164994041565288508095067640843719732336878602089454538914456233996689333685080643187924928683921102207259893124969451536291317395148153287269036808351\",\n    \"publicKeySize\": \"2048\",\n    \"serialNumber\": \"cfaba488b3b34a5c0000000055667d65\",\n    \"sha1\": \"EE:EC:4A:1C:E5:59:0D:39:46:0D:B4:4D:CB:2B:A1:EB:1C:4D:A7:36\",\n    \"sha256\": \"78:14:65:93:0C:1B:05:F9:4A:DF:7F:90:61:2F:FE:29:AE:A3:2A:CE:C8:62:16:81:83:6C:51:6E:91:F4:F5:39\",\n    \"signatureAlgorithmName\": \"SHA256withRSA\",\n    \"signatureAlgorithmOID\": \"1.2.840.113549.1.1.11\",\n    \"subjectDN\": \"elit\",\n    \"version\": \"3\"\n   },\n   \"dateInstalled\": \"1975-10-06T15:26:19.089Z\",\n   \"description\": \"Full details of the upgrade can be found on the support site: https://support.emc.com/products/40720_PowerProtect-Data-Manager/Documentation/\",\n   \"errorMessage\": \"nisi\",\n   \"fileName\": \"dellemc-ppdm-upgrade-sw-19.3.0-1.pkg\",\n   \"fromVersion\": \"19.2.0-1\",\n   \"lockboxResetRequired\": true,\n   \"madeAvailable\": \"2006-08-04T07:00:36.308Z\",\n   \"maintenanceUpgrade\": false,\n   \"minimumVersion\": \"nisi dolore labore consectetur\",\n   \"name\": \"Dell EMC PowerProtect Data Manager - Major Release\",\n   \"packageVersion\": \"19.3.0-1\",\n   \"rebootRequired\": true,\n   \"sizeInBytes\": 3915497644,\n   \"subComponentDetails\": [\n    {\n     \"attributes\": {},\n     \"componentName\": \"PPDM\",\n     \"dateInstalled\": \"1984-03-01T18:58:26.128Z\",\n     \"errorMessage\": \"quis Duis\",\n     \"fileName\": \"eu non proident\",\n     \"fromVersion\": \"ipsum Ut amet eiusmod mollit\",\n     \"minimumVersion\": \"dolor proident ad\",\n     \"subComponentUpgradeState\": \"UPGRADED\",\n     \"upgradeError\": {\n      \"reason\": \"cillum\",\n      \"message\": \"non sed occaecat dolor nisi\",\n      \"messageArgs\": [\n       \"c\",\n       \"aliqua Ut veniam laboris\"\n      ],\n      \"messageID\": \"veniam occaecat Lorem\",\n      \"remediation\": \"labore voluptate eiusmod deserunt\"\n     },\n     \"upgradeMode\": \"NDU\",\n     \"upgradeStarted\": \"2019-09-27T16:04:16.192+0000\",\n     \"upgradeVersion\": \"19.3.0-1\"\n    },\n    {\n     \"attributes\": {},\n     \"componentName\": \"PPDM\",\n     \"dateInstalled\": \"2014-02-06T22:10:35.996Z\",\n     \"errorMessage\": \"et proident sed\",\n     \"fileName\": \"cillum sunt\",\n     \"fromVersion\": \"elit\",\n     \"minimumVersion\": \"Excepteur amet ex culpa\",\n     \"subComponentUpgradeState\": \"UPGRADED\",\n     \"upgradeError\": {\n      \"reason\": \"amet consequat incididunt et\",\n      \"message\": \"dolore dolore\",\n      \"messageArgs\": [\n       \"amet laboris enim\",\n       \"minim nostrud eiusmod\"\n      ],\n      \"messageID\": \"officia\",\n      \"remediation\": \"sint occaecat deserunt officia\"\n     },\n     \"upgradeMode\": \"NDU\",\n     \"upgradeStarted\": \"2019-09-27T16:04:16.192+0000\",\n     \"upgradeVersion\": \"19.3.0-1\"\n    }\n   ],\n   \"type\": \"RELEASE\",\n   \"upgradeError\": {\n    \"reason\": \"eiusmod\",\n    \"message\": \"ipsum ut proident cillum\",\n    \"messageArgs\": [\n     \"ut\",\n     \"mollit Lorem\"\n    ],\n    \"messageID\": \"sint sed\",\n    \"remediation\": \"ex deserunt \"\n   },\n   \"upgradeMode\": \"DU\",\n   \"upgradeStarted\": \"2019-09-27T16:04:16.192+0000\",\n   \"validationDetails\": [\n    {\n     \"message\": \"sint occaecat Duis\",\n     \"messageDetails\": {\n      \"reason\": \"reprehenderit in consequat\",\n      \"message\": \"dolo\",\n      \"messageArgs\": [\n       \"aliquip pariatur commodo amet\",\n       \"ullamco laborum labore Duis\"\n      ],\n      \"messageID\": \"elit labore\",\n      \"remediation\": \"dolor ullamco \"\n     },\n     \"resultType\": \"ERROR\",\n     \"subComponent\": \"in ut Duis amet\",\n     \"validateTime\": \"1944-05-08T00:34:43.240Z\",\n     \"validationName\": \"qui cillum ipsum\"\n    },\n    {\n     \"message\": \"proident sed eu occaec\",\n     \"messageDetails\": {\n      \"reason\": \"cillum ea cupidatat est a\",\n      \"message\": \"fugiat repr\",\n      \"messageArgs\": [\n       \"ipsum sunt eu in\",\n       \"nisi qui esse\"\n      ],\n      \"messageID\": \"sit nulla tempor laborum commodo\",\n      \"remediation\": \"Lorem sunt\"\n     },\n     \"resultType\": \"ERROR\",\n     \"subComponent\": \"mollit\",\n     \"validateTime\": \"1986-07-13T04:33:07.636Z\",\n     \"validationName\": \"dolor officia ut\"\n    }\n   ]\n  },\n  {\n   \"id\": \"4c449963-ee0c-48b9-9d5f-925ad9b97237\",\n   \"state\": \"INSTALLED\",\n   \"certificateTrustedByUser\": true,\n   \"lockboxPassphrase\": \"Lorem magna cupidatat ut\",\n   \"upgradeToken\": \"cupidatat labore nulla nostrud\",\n   \"certificateDetailsMap\": {\n    \"issuerDN\": \"CN=Entrust Code Signing CA - OVCS1,OU=(c) 2015 Entrust\\\\\\\\, Inc. - for authorized use only,OU=See www.entrust.net/legal-terms,O=Entrust\\\\\\\\, Inc.,C=US\",\n    \"md5\": \"A8:CA:D7:A2:87:CE:46:7D:54:22:7E:F6:48:00:D7:F7\",\n    \"notAfter\": \"2020-11-13T18:40:58.000+0000\",\n    \"notBefore\": \"2018-11-27T18:11:01.000+0000\",\n    \"publicKey\": \"RSA public key\",\n    \"publicKeyExponent\": \"65537\",\n    \"publicKeyModulus\": \"28960436902272994990842327932793501079190030541382043284118832665312776269446498640419791240454180242586486085708937734083403079002675942200659672006922211955640645340519418577217605521853665489538005758686672003656588145476218479453412730875755080172327057354731921316729121658964135024802322078500693787277083123358314858038960555352152289672471625254193779104016053331569238519722568716038933287609754732628187721307712701984454977189333349182725470926457368220839164994041565288508095067640843719732336878602089454538914456233996689333685080643187924928683921102207259893124969451536291317395148153287269036808351\",\n    \"publicKeySize\": \"2048\",\n    \"serialNumber\": \"cfaba488b3b34a5c0000000055667d65\",\n    \"sha1\": \"EE:EC:4A:1C:E5:59:0D:39:46:0D:B4:4D:CB:2B:A1:EB:1C:4D:A7:36\",\n    \"sha256\": \"78:14:65:93:0C:1B:05:F9:4A:DF:7F:90:61:2F:FE:29:AE:A3:2A:CE:C8:62:16:81:83:6C:51:6E:91:F4:F5:39\",\n    \"signatureAlgorithmName\": \"SHA256withRSA\",\n    \"signatureAlgorithmOID\": \"1.2.840.113549.1.1.11\",\n    \"subjectDN\": \"cillum\",\n    \"version\": \"3\"\n   },\n   \"dateInstalled\": \"1973-02-11T23:08:13.932Z\",\n   \"description\": \"Full details of the upgrade can be found on the support site: https://support.emc.com/products/40720_PowerProtect-Data-Manager/Documentation/\",\n   \"errorMessage\": \"qu\",\n   \"fileName\": \"dellemc-ppdm-upgrade-sw-19.3.0-1.pkg\",\n   \"fromVersion\": \"19.2.0-1\",\n   \"lockboxResetRequired\": true,\n   \"madeAvailable\": \"1951-06-17T12:29:36.460Z\",\n   \"maintenanceUpgrade\": false,\n   \"minimumVersion\": \"aliqua cillum\",\n   \"name\": \"Dell EMC PowerProtect Data Manager - Major Release\",\n   \"packageVersion\": \"19.3.0-1\",\n   \"rebootRequired\": true,\n   \"sizeInBytes\": 3915497644,\n   \"subComponentDetails\": [\n    {\n     \"attributes\": {},\n     \"componentName\": \"PPDM\",\n     \"dateInstalled\": \"1966-02-22T00:39:14.012Z\",\n     \"errorMessage\": \"in aliqua et occaecat\",\n     \"fileName\": \"non magna fugiat sunt Excepteur\",\n     \"fromVersion\": \"Ut laborum\",\n     \"minimumVersion\": \"exercitation amet proident sit pariatur\",\n     \"subComponentUpgradeState\": \"UPGRADED\",\n     \"upgradeError\": {\n      \"reason\": \"incididunt et irure dolore\",\n      \"message\": \"dolor velit magna\",\n      \"messageArgs\": [\n       \"fugiat do\",\n       \"incididunt laboris in irure\"\n      ],\n      \"messageID\": \"Ut irure ad\",\n      \"remediation\": \"cillum reprehenderit\"\n     },\n     \"upgradeMode\": \"MDU\",\n     \"upgradeStarted\": \"2019-09-27T16:04:16.192+0000\",\n     \"upgradeVersion\": \"19.3.0-1\"\n    },\n    {\n     \"attributes\": {},\n     \"componentName\": \"PPDM\",\n     \"dateInstalled\": \"1956-07-28T13:49:28.568Z\",\n     \"errorMessage\": \"adipisicing sit ut\",\n     \"fileName\": \"nisi\",\n     \"fromVersion\": \"minim\",\n     \"minimumVersion\": \"dolor commodo veniam dolor\",\n     \"subComponentUpgradeState\": \"UPGRADED\",\n     \"upgradeError\": {\n      \"reason\": \"non Ut ut\",\n      \"message\": \"veniam nostrud in mollit\",\n      \"messageArgs\": [\n       \"nostrud laborum non et\",\n       \"occaecat exercitation\"\n      ],\n      \"messageID\": \"esse fugiat id\",\n      \"remediation\": \"sint cupidatat dolore voluptate\"\n     },\n     \"upgradeMode\": \"DU\",\n     \"upgradeStarted\": \"2019-09-27T16:04:16.192+0000\",\n     \"upgradeVersion\": \"19.3.0-1\"\n    }\n   ],\n   \"type\": \"RELEASE\",\n   \"upgradeError\": {\n    \"reason\": \"tempor nostrud\",\n    \"message\": \"pari\",\n    \"messageArgs\": [\n     \"dolore voluptate sit commodo amet\",\n     \"aliqua eu elit voluptate sunt\"\n    ],\n    \"messageID\": \"occaecat velit tempor aliquip sed\",\n    \"remediation\": \"consectetur elit aliquip e\"\n   },\n   \"upgradeMode\": \"DU\",\n   \"upgradeStarted\": \"2019-09-27T16:04:16.192+0000\",\n   \"validationDetails\": [\n    {\n     \"message\": \"voluptate magna\",\n     \"messageDetails\": {\n      \"reason\": \"nulla sed incididunt\",\n      \"message\": \"quis minim\",\n      \"messageArgs\": [\n       \"ullamco fugiat consequat\",\n       \"pariatur aliquip cupidatat dolore laboris\"\n      ],\n      \"messageID\": \"sit dolore commodo culpa\",\n      \"remediation\": \"e\"\n     },\n     \"resultType\": \"ERROR\",\n     \"subComponent\": \"velit\",\n     \"validateTime\": \"1953-02-24T14:30:10.787Z\",\n     \"validationName\": \"sit occaecat in irure pariatur\"\n    },\n    {\n     \"message\": \"nostrud in voluptate\",\n     \"messageDetails\": {\n      \"reason\": \"enim ea do\",\n      \"message\": \"eu cupidatat labore\",\n      \"messageArgs\": [\n       \"proident qu\",\n       \"enim amet ex\"\n      ],\n      \"messageID\": \"dolore in\",\n      \"remediation\": \"id consectetur\"\n     },\n     \"resultType\": \"WARNING\",\n     \"subComponent\": \"dolore deserunt adipisicing\",\n     \"validateTime\": \"1966-07-20T14:42:28.521Z\",\n     \"validationName\": \"labor\"\n    }\n   ]\n  }\n ],\n \"page\": {\n  \"number\": -92865327,\n  \"queryState\": \"in tempor consectetur eiusmod voluptate\",\n  \"size\": -89497497,\n  \"totalElements\": 47322699,\n  \"totalPages\": 17251987\n }\n}"
								},
								{
									"name": "The filter syntax is not valid.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/upgrade-packages?page=1&pageSize=100&filter=<string>&orderby=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"upgrade-packages"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "<string>"
												},
												{
													"key": "orderby",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								}
							]
						},
						{
							"name": "Upload an upgrade package to the appliance.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "multipart/form-data"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"value": "<binary>",
											"description": "Upgrade package file to be uploaded.",
											"type": "text"
										}
									],
									"options": {
										"formdata": {}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/upgrade-packages",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"upgrade-packages"
									]
								},
								"description": "Uploads only one upgrade package at a time. To upload another, install or delete the existing upgrade package.\n> This endpoint supports execution by the following roles: admin\n"
							},
							"response": [
								{
									"name": "The requestor is not authorized to perform this operation.\n",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "file",
													"value": "<binary>",
													"description": {
														"content": "Upgrade package file to be uploaded.",
														"type": "text/plain"
													},
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/upgrade-packages",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"upgrade-packages"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "An unexpected error prevented the server from fulfilling your request.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "file",
													"value": "<binary>",
													"description": {
														"content": "Upgrade package file to be uploaded.",
														"type": "text/plain"
													},
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/upgrade-packages",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"upgrade-packages"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "The requestor is not authorized to perform this operation.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "file",
													"value": "<binary>",
													"description": {
														"content": "Upgrade package file to be uploaded.",
														"type": "text/plain"
													},
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/upgrade-packages",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"upgrade-packages"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "The uploaded upgrade package is invalid.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "file",
													"value": "<binary>",
													"description": {
														"content": "Upgrade package file to be uploaded.",
														"type": "text/plain"
													},
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/upgrade-packages",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"upgrade-packages"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "The create upgrade package request was accepted and is being processed.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "file",
													"value": "<binary>",
													"description": {
														"content": "Upgrade package file to be uploaded.",
														"type": "text/plain"
													},
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/upgrade-packages",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"upgrade-packages"
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"id\": \"4c449963-ee0c-48b9-9d5f-925ad9b97237\",\n \"state\": \"INSTALLED\",\n \"certificateTrustedByUser\": true,\n \"lockboxPassphrase\": \"ut\",\n \"upgradeToken\": \"dolor sunt exercitation occaecat dolor\",\n \"certificateDetailsMap\": {\n  \"issuerDN\": \"CN=Entrust Code Signing CA - OVCS1,OU=(c) 2015 Entrust\\\\\\\\, Inc. - for authorized use only,OU=See www.entrust.net/legal-terms,O=Entrust\\\\\\\\, Inc.,C=US\",\n  \"md5\": \"A8:CA:D7:A2:87:CE:46:7D:54:22:7E:F6:48:00:D7:F7\",\n  \"notAfter\": \"2020-11-13T18:40:58.000+0000\",\n  \"notBefore\": \"2018-11-27T18:11:01.000+0000\",\n  \"publicKey\": \"RSA public key\",\n  \"publicKeyExponent\": \"65537\",\n  \"publicKeyModulus\": \"28960436902272994990842327932793501079190030541382043284118832665312776269446498640419791240454180242586486085708937734083403079002675942200659672006922211955640645340519418577217605521853665489538005758686672003656588145476218479453412730875755080172327057354731921316729121658964135024802322078500693787277083123358314858038960555352152289672471625254193779104016053331569238519722568716038933287609754732628187721307712701984454977189333349182725470926457368220839164994041565288508095067640843719732336878602089454538914456233996689333685080643187924928683921102207259893124969451536291317395148153287269036808351\",\n  \"publicKeySize\": \"2048\",\n  \"serialNumber\": \"cfaba488b3b34a5c0000000055667d65\",\n  \"sha1\": \"EE:EC:4A:1C:E5:59:0D:39:46:0D:B4:4D:CB:2B:A1:EB:1C:4D:A7:36\",\n  \"sha256\": \"78:14:65:93:0C:1B:05:F9:4A:DF:7F:90:61:2F:FE:29:AE:A3:2A:CE:C8:62:16:81:83:6C:51:6E:91:F4:F5:39\",\n  \"signatureAlgorithmName\": \"SHA256withRSA\",\n  \"signatureAlgorithmOID\": \"1.2.840.113549.1.1.11\",\n  \"subjectDN\": \"cillum aliqua ipsum\",\n  \"version\": \"3\"\n },\n \"dateInstalled\": \"2008-07-19T15:18:07.883Z\",\n \"description\": \"Full details of the upgrade can be found on the support site: https://support.emc.com/products/40720_PowerProtect-Data-Manager/Documentation/\",\n \"errorMessage\": \"consequat non id\",\n \"fileName\": \"dellemc-ppdm-upgrade-sw-19.3.0-1.pkg\",\n \"fromVersion\": \"19.2.0-1\",\n \"lockboxResetRequired\": true,\n \"madeAvailable\": \"1989-05-14T18:15:44.507Z\",\n \"maintenanceUpgrade\": false,\n \"minimumVersion\": \"enim eu qui\",\n \"name\": \"Dell EMC PowerProtect Data Manager - Major Release\",\n \"packageVersion\": \"19.3.0-1\",\n \"rebootRequired\": true,\n \"sizeInBytes\": 3915497644,\n \"subComponentDetails\": [\n  {\n   \"attributes\": {},\n   \"componentName\": \"PPDM\",\n   \"dateInstalled\": \"1950-07-09T21:16:20.467Z\",\n   \"errorMessage\": \"nulla proident\",\n   \"fileName\": \"sunt veniam dolore sint in\",\n   \"fromVersion\": \"non labore ex ut ut\",\n   \"minimumVersion\": \"adipisicing dolor\",\n   \"subComponentUpgradeState\": \"UPGRADED\",\n   \"upgradeError\": {\n    \"reason\": \"incididunt\",\n    \"message\": \"in eu consectetur minim\",\n    \"messageArgs\": [\n     \"Ut\",\n     \"mollit laboris eu sunt\"\n    ],\n    \"messageID\": \"ex amet pro\",\n    \"remediation\": \"anim Excepteur reprehenderit\"\n   },\n   \"upgradeMode\": \"MDU\",\n   \"upgradeStarted\": \"2019-09-27T16:04:16.192+0000\",\n   \"upgradeVersion\": \"19.3.0-1\"\n  },\n  {\n   \"attributes\": {},\n   \"componentName\": \"PPDM\",\n   \"dateInstalled\": \"1953-01-24T03:58:15.373Z\",\n   \"errorMessage\": \"pariatur\",\n   \"fileName\": \"in tempor culpa mollit amet\",\n   \"fromVersion\": \"ad ea\",\n   \"minimumVersion\": \"nulla ex\",\n   \"subComponentUpgradeState\": \"UPGRADED\",\n   \"upgradeError\": {\n    \"reason\": \"tempor exercitat\",\n    \"message\": \"dolor ea Ut\",\n    \"messageArgs\": [\n     \"Lorem Excepteur\",\n     \"pariatur\"\n    ],\n    \"messageID\": \"ex\",\n    \"remediation\": \"exercitation ea nisi\"\n   },\n   \"upgradeMode\": \"MDU\",\n   \"upgradeStarted\": \"2019-09-27T16:04:16.192+0000\",\n   \"upgradeVersion\": \"19.3.0-1\"\n  }\n ],\n \"type\": \"RELEASE\",\n \"upgradeError\": {\n  \"reason\": \"consectetur consequat\",\n  \"message\": \"sed qui occaecat\",\n  \"messageArgs\": [\n   \"cillum sed ea\",\n   \"anim voluptate con\"\n  ],\n  \"messageID\": \"officia irure ea aliqua\",\n  \"remediation\": \"magna\"\n },\n \"upgradeMode\": \"DU\",\n \"upgradeStarted\": \"2019-09-27T16:04:16.192+0000\",\n \"validationDetails\": [\n  {\n   \"message\": \"quis exercitation mag\",\n   \"messageDetails\": {\n    \"reason\": \"do magna laborum veniam culpa\",\n    \"message\": \"fugiat consequat ex cillum\",\n    \"messageArgs\": [\n     \"officia est\",\n     \"\"\n    ],\n    \"messageID\": \"voluptate\",\n    \"remediation\": \"Duis exercitation aute in\"\n   },\n   \"resultType\": \"INFO\",\n   \"subComponent\": \"adipisicing labore\",\n   \"validateTime\": \"1992-04-26T10:27:15.727Z\",\n   \"validationName\": \"eiusmod\"\n  },\n  {\n   \"message\": \"dolor\",\n   \"messageDetails\": {\n    \"reason\": \"Excepteur adipisicing qui ullamco\",\n    \"message\": \"exercitation voluptate dolore Excepteur\",\n    \"messageArgs\": [\n     \"eiusmod culpa\",\n     \"eu elit ad\"\n    ],\n    \"messageID\": \"velit adipisicing in id\",\n    \"remediation\": \"ullamco\"\n   },\n   \"resultType\": \"WARNING\",\n   \"subComponent\": \"ad\",\n   \"validateTime\": \"1946-02-20T16:27:34.802Z\",\n   \"validationName\": \"exercitation proident sit ut\"\n  }\n ]\n}"
								},
								{
									"name": "It is not allowed to upload upgrade package in the current state.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "file",
													"value": "<binary>",
													"description": {
														"content": "Upgrade package file to be uploaded.",
														"type": "text/plain"
													},
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/upgrade-packages",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"upgrade-packages"
											]
										}
									},
									"status": "Conflict",
									"code": 409,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "Unable to parse the request body.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "file",
													"value": "<binary>",
													"description": {
														"content": "Upgrade package file to be uploaded.",
														"type": "text/plain"
													},
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/upgrade-packages",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"upgrade-packages"
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								},
								{
									"name": "The default response when error occurs.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "file",
													"value": "<binary>",
													"description": {
														"content": "Upgrade package file to be uploaded.",
														"type": "text/plain"
													},
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/upgrade-packages",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"upgrade-packages"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "user-groups",
					"item": [
						{
							"name": "{user Group Id}",
							"item": [
								{
									"name": "Delete a user group.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/user-groups/:userGroupId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"user-groups",
												":userGroupId"
											],
											"variable": [
												{
													"id": "e8bd4acb-a3bc-41e6-8b32-6a6ccb9f2b46",
													"key": "userGroupId",
													"value": "<string>",
													"type": "string",
													"description": "(Required) User group ID."
												}
											]
										},
										"description": "Deletes a user group by ID. When the user group is deleted, the users that are defined by the user group no longer have access to the system and can no longer perform actions.\n> This endpoint supports execution by the following roles: admin\n"
									},
									"response": [
										{
											"name": "The request body is either invalid or is missing the required fields.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/user-groups/:userGroupId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"user-groups",
														":userGroupId"
													],
													"variable": [
														{
															"key": "userGroupId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The operation is currently unavailable. The system may currently be in maintenance mode.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/user-groups/:userGroupId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"user-groups",
														":userGroupId"
													],
													"variable": [
														{
															"key": "userGroupId"
														}
													]
												}
											},
											"status": "Service Unavailable",
											"code": 503,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The authorization token is either invalid or expired.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/user-groups/:userGroupId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"user-groups",
														":userGroupId"
													],
													"variable": [
														{
															"key": "userGroupId"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Successfully delete the user group.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/user-groups/:userGroupId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"user-groups",
														":userGroupId"
													],
													"variable": [
														{
															"key": "userGroupId"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The user does not have the proper privileges to perform the action.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/user-groups/:userGroupId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"user-groups",
														":userGroupId"
													],
													"variable": [
														{
															"key": "userGroupId"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "An internal server error occurred. Please contact the system administrator.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/user-groups/:userGroupId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"user-groups",
														":userGroupId"
													],
													"variable": [
														{
															"key": "userGroupId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The user group was not found.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/user-groups/:userGroupId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"user-groups",
														":userGroupId"
													],
													"variable": [
														{
															"key": "userGroupId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Get user group.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/user-groups/:userGroupId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"user-groups",
												":userGroupId"
											],
											"variable": [
												{
													"id": "d6096d04-d909-44b7-a200-23f1185f60d3",
													"key": "userGroupId",
													"value": "<string>",
													"type": "string",
													"description": "(Required) User group ID."
												}
											]
										},
										"description": "Retrieves a user group by ID, which is an identity source group-to-role mapping. User groups define who has access to the system and the actions they can perform based on their role.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
									},
									"response": [
										{
											"name": "Successfully retrieved the specified user group.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/user-groups/:userGroupId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"user-groups",
														":userGroupId"
													],
													"variable": [
														{
															"key": "userGroupId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"name\": \"consequat Lorem ea ipsum culpa\",\n \"identitySourceGroups\": [\n  {\n   \"groups\": [\n    \"tempor dolor \",\n    \"v\"\n   ],\n   \"identitySourceId\": \"tempor ea ut dolore qui\"\n  },\n  {\n   \"groups\": [\n    \"i\",\n    \"ullamco\"\n   ],\n   \"identitySourceId\": \"ea eu dolor dolore aliqua\"\n  }\n ],\n \"createdDate\": \"1974-12-23T02:45:46.028Z\",\n \"id\": \"Lorem pariatur quis esse\",\n \"roleId\": \"proident nostrud do\"\n}"
										},
										{
											"name": "The authorization token is either invalid or expired.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/user-groups/:userGroupId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"user-groups",
														":userGroupId"
													],
													"variable": [
														{
															"key": "userGroupId"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The user does not have the proper privileges to perform the action.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/user-groups/:userGroupId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"user-groups",
														":userGroupId"
													],
													"variable": [
														{
															"key": "userGroupId"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The operation is currently unavailable. The system may currently be in maintenance mode.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/user-groups/:userGroupId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"user-groups",
														":userGroupId"
													],
													"variable": [
														{
															"key": "userGroupId"
														}
													]
												}
											},
											"status": "Service Unavailable",
											"code": 503,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "An internal server error occurred. Please contact the system administrator.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/user-groups/:userGroupId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"user-groups",
														":userGroupId"
													],
													"variable": [
														{
															"key": "userGroupId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The user group was not found.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/user-groups/:userGroupId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"user-groups",
														":userGroupId"
													],
													"variable": [
														{
															"key": "userGroupId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The request body is either invalid or is missing the required fields.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/user-groups/:userGroupId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"user-groups",
														":userGroupId"
													],
													"variable": [
														{
															"key": "userGroupId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Update a user group.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"<string>\",\n    \"identitySourceGroups\": [\n        {\n            \"groups\": [\n                \"<string>\"\n            ],\n            \"identitySourceId\": \"<string>\"\n        }\n    ],\n    \"createdDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"roleId\": \"<string>\"\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/user-groups/:userGroupId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"user-groups",
												":userGroupId"
											],
											"variable": [
												{
													"id": "79d51c31-b3a4-4b25-9935-764ffcb99185",
													"key": "userGroupId",
													"value": "<string>",
													"type": "string",
													"description": "(Required) User group ID."
												}
											]
										},
										"description": "Updates a user group by ID. When the user group is updated, the users that are defined by the user group have updated privileges to perform actions that are defined by their role.\n> This endpoint supports execution by the following roles: admin\n"
									},
									"response": [
										{
											"name": "Successfully updated the user group.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/user-groups/:userGroupId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"user-groups",
														":userGroupId"
													],
													"variable": [
														{
															"key": "userGroupId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"name\": \"consequat Lorem ea ipsum culpa\",\n \"identitySourceGroups\": [\n  {\n   \"groups\": [\n    \"tempor dolor \",\n    \"v\"\n   ],\n   \"identitySourceId\": \"tempor ea ut dolore qui\"\n  },\n  {\n   \"groups\": [\n    \"i\",\n    \"ullamco\"\n   ],\n   \"identitySourceId\": \"ea eu dolor dolore aliqua\"\n  }\n ],\n \"createdDate\": \"1974-12-23T02:45:46.028Z\",\n \"id\": \"Lorem pariatur quis esse\",\n \"roleId\": \"proident nostrud do\"\n}"
										},
										{
											"name": "The request body is either invalid or is missing the required fields.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/user-groups/:userGroupId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"user-groups",
														":userGroupId"
													],
													"variable": [
														{
															"key": "userGroupId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The operation is currently unavailable. The system may currently be in maintenance mode.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/user-groups/:userGroupId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"user-groups",
														":userGroupId"
													],
													"variable": [
														{
															"key": "userGroupId"
														}
													]
												}
											},
											"status": "Service Unavailable",
											"code": 503,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The authorization token is either invalid or expired.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/user-groups/:userGroupId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"user-groups",
														":userGroupId"
													],
													"variable": [
														{
															"key": "userGroupId"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The user does not have the proper privileges to perform the action.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/user-groups/:userGroupId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"user-groups",
														":userGroupId"
													],
													"variable": [
														{
															"key": "userGroupId"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Conflict.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/user-groups/:userGroupId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"user-groups",
														":userGroupId"
													],
													"variable": [
														{
															"key": "userGroupId"
														}
													]
												}
											},
											"status": "Conflict",
											"code": 409,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "An internal server error occurred. Please contact the system administrator.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/user-groups/:userGroupId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"user-groups",
														":userGroupId"
													],
													"variable": [
														{
															"key": "userGroupId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The user group was not found.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/user-groups/:userGroupId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"user-groups",
														":userGroupId"
													],
													"variable": [
														{
															"key": "userGroupId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Get all user groups.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/user-groups?page=1&pageSize=100&filter=<string>&orderby=<string>&role=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"user-groups"
									],
									"query": [
										{
											"key": "page",
											"value": "1",
											"description": "The page number to be returned. Must not be less than 1. See Tutorials - Page the List Result."
										},
										{
											"key": "pageSize",
											"value": "100",
											"description": "The number of resources to be returned. Must not be less than 1. See Tutorials - Page the List Result."
										},
										{
											"key": "filter",
											"value": "<string>",
											"description": "The filter string that is expressed using PowerProtect Data Manager filter syntax. See Tutorials - Filter the List Result."
										},
										{
											"key": "orderby",
											"value": "<string>",
											"description": "The attributes/fields to be sorted by. This parameter can combine with sort direction \"ASC\" or \"DESC\". Default direction is ASC. See Tutorials - Sort the List Result."
										},
										{
											"key": "role",
											"value": "<string>",
											"description": "Filter the user groups by role ID or role name."
										}
									]
								},
								"description": "Retrieves all user groups, which are identity source group-to-role mappings. These user groups define who has access to the system and the actions they can perform based on their role.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n\n> This endpoint supports pagination with types: random\n"
							},
							"response": [
								{
									"name": "The user does not have the proper privileges to perform the action.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/user-groups?page=1&pageSize=100&filter=<string>&orderby=<string>&role=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"user-groups"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "<string>"
												},
												{
													"key": "orderby",
													"value": "<string>"
												},
												{
													"key": "role",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "The operation is currently unavailable. The system may currently be in maintenance mode.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/user-groups?page=1&pageSize=100&filter=<string>&orderby=<string>&role=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"user-groups"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "<string>"
												},
												{
													"key": "orderby",
													"value": "<string>"
												},
												{
													"key": "role",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Service Unavailable",
									"code": 503,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "An internal server error occurred. Please contact the system administrator.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/user-groups?page=1&pageSize=100&filter=<string>&orderby=<string>&role=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"user-groups"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "<string>"
												},
												{
													"key": "orderby",
													"value": "<string>"
												},
												{
													"key": "role",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "The request body is either invalid or is missing the required fields.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/user-groups?page=1&pageSize=100&filter=<string>&orderby=<string>&role=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"user-groups"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "<string>"
												},
												{
													"key": "orderby",
													"value": "<string>"
												},
												{
													"key": "role",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "The authorization token is either invalid or expired.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/user-groups?page=1&pageSize=100&filter=<string>&orderby=<string>&role=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"user-groups"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "<string>"
												},
												{
													"key": "orderby",
													"value": "<string>"
												},
												{
													"key": "role",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Successfully retrieved all the user groups.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/user-groups?page=1&pageSize=100&filter=<string>&orderby=<string>&role=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"user-groups"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "<string>"
												},
												{
													"key": "orderby",
													"value": "<string>"
												},
												{
													"key": "role",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"content\": [\n  {\n   \"name\": \"fugiat quis eu id occaecat\",\n   \"identitySourceGroups\": [\n    {\n     \"groups\": [\n      \"ex fugiat laboris\",\n      \"non sit labore\"\n     ],\n     \"identitySourceId\": \"cillum sed\"\n    },\n    {\n     \"groups\": [\n      \"cupidatat mollit Lorem\",\n      \"sunt tempor non fugi\"\n     ],\n     \"identitySourceId\": \"ad eu do Excepteur\"\n    }\n   ],\n   \"createdDate\": \"1957-02-22T01:32:14.846Z\",\n   \"id\": \"v\",\n   \"roleId\": \"amet tempor\"\n  },\n  {\n   \"name\": \"Excepteur sunt\",\n   \"identitySourceGroups\": [\n    {\n     \"groups\": [\n      \"velit voluptate\",\n      \"cupidatat\"\n     ],\n     \"identitySourceId\": \"eiusmod dolore nulla aliqua\"\n    },\n    {\n     \"groups\": [\n      \"U\",\n      \"consectetur eu ut fugiat\"\n     ],\n     \"identitySourceId\": \"culpa laboris amet\"\n    }\n   ],\n   \"createdDate\": \"1985-06-29T02:16:58.425Z\",\n   \"id\": \"et non\",\n   \"roleId\": \"fugiat eu irure dolore\"\n  }\n ],\n \"page\": {\n  \"number\": 58515689,\n  \"queryState\": \"est dolor\",\n  \"size\": -77567810,\n  \"totalElements\": -48855559,\n  \"totalPages\": 92291416\n }\n}"
								}
							]
						},
						{
							"name": "Create a user group.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<string>\",\n    \"identitySourceGroups\": [\n        {\n            \"groups\": [\n                \"<string>\"\n            ],\n            \"identitySourceId\": \"<string>\"\n        }\n    ],\n    \"createdDate\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"roleId\": \"<string>\"\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/user-groups",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"user-groups"
									]
								},
								"description": "Creates a user group, which is an identity source group-to-role mapping. These user groups define who has access to the system and the actions they can perform based on their role.\n> This endpoint supports execution by the following roles: admin\n"
							},
							"response": [
								{
									"name": "The request body is either invalid or is missing the required fields.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/user-groups",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"user-groups"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Conflict.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/user-groups",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"user-groups"
											]
										}
									},
									"status": "Conflict",
									"code": 409,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "The operation is currently unavailable. The system may currently be in maintenance mode.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/user-groups",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"user-groups"
											]
										}
									},
									"status": "Service Unavailable",
									"code": 503,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "The authorization token is either invalid or expired.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/user-groups",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"user-groups"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "An internal server error occurred. Please contact the system administrator.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/user-groups",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"user-groups"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "The user does not have the proper privileges to perform the action.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/user-groups",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"user-groups"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Successfully created the user group.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/user-groups",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"user-groups"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"name\": \"consequat Lorem ea ipsum culpa\",\n \"identitySourceGroups\": [\n  {\n   \"groups\": [\n    \"tempor dolor \",\n    \"v\"\n   ],\n   \"identitySourceId\": \"tempor ea ut dolore qui\"\n  },\n  {\n   \"groups\": [\n    \"i\",\n    \"ullamco\"\n   ],\n   \"identitySourceId\": \"ea eu dolor dolore aliqua\"\n  }\n ],\n \"createdDate\": \"1974-12-23T02:45:46.028Z\",\n \"id\": \"Lorem pariatur quis esse\",\n \"roleId\": \"proident nostrud do\"\n}"
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "users",
					"item": [
						{
							"name": "{user Id}",
							"item": [
								{
									"name": "Delete a local system user by ID.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/users/:userId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"users",
												":userId"
											],
											"variable": [
												{
													"id": "aee01b34-d0b3-4708-9d1e-970cbe9ac9c7",
													"key": "userId",
													"value": "<string>",
													"type": "string",
													"description": "(Required) User ID."
												}
											]
										},
										"description": "Deletes a user by ID. When the user is deleted, the user can no longer access the system or perform any actions.\n> This endpoint supports execution by the following roles: admin\n"
									},
									"response": [
										{
											"name": "The user does not have the proper privileges to perform the action.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/users/:userId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"users",
														":userId"
													],
													"variable": [
														{
															"key": "userId"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The operation is currently unavailable. The system may currently be in maintenance mode.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/users/:userId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"users",
														":userId"
													],
													"variable": [
														{
															"key": "userId"
														}
													]
												}
											},
											"status": "Service Unavailable",
											"code": 503,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Successfully deleted the specified user.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/users/:userId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"users",
														":userId"
													],
													"variable": [
														{
															"key": "userId"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The request body is either invalid or is missing the required fields.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/users/:userId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"users",
														":userId"
													],
													"variable": [
														{
															"key": "userId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The user was not found.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/users/:userId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"users",
														":userId"
													],
													"variable": [
														{
															"key": "userId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The authorization token is either invalid or expired.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/users/:userId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"users",
														":userId"
													],
													"variable": [
														{
															"key": "userId"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "An internal server error occurred. Please contact the system administrator.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/users/:userId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"users",
														":userId"
													],
													"variable": [
														{
															"key": "userId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Get a local system user by ID.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/users/:userId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"users",
												":userId"
											],
											"variable": [
												{
													"id": "822f8bf3-2f4b-4ea1-be8b-ba8a1e8d775f",
													"key": "userId",
													"value": "<string>",
													"type": "string",
													"description": "(Required) User ID."
												}
											]
										},
										"description": "Retrieves the user that is specified by ID. The list of user information includes information such as name, username, and roles.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
									},
									"response": [
										{
											"name": "The authorization token is either invalid or expired.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/users/:userId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"users",
														":userId"
													],
													"variable": [
														{
															"key": "userId"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The operation is currently unavailable. The system may currently be in maintenance mode.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/users/:userId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"users",
														":userId"
													],
													"variable": [
														{
															"key": "userId"
														}
													]
												}
											},
											"status": "Service Unavailable",
											"code": 503,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The user was not found.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/users/:userId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"users",
														":userId"
													],
													"variable": [
														{
															"key": "userId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The user does not have the proper privileges to perform the action.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/users/:userId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"users",
														":userId"
													],
													"variable": [
														{
															"key": "userId"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "An internal server error occurred. Please contact the system administrator.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/users/:userId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"users",
														":userId"
													],
													"variable": [
														{
															"key": "userId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The request body is either invalid or is missing the required fields.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/users/:userId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"users",
														":userId"
													],
													"variable": [
														{
															"key": "userId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Successfully retrieved the specified user.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/users/:userId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"users",
														":userId"
													],
													"variable": [
														{
															"key": "userId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"username\": \"TC1E\",\n \"createdDate\": \"1945-12-18T22:28:40.886Z\",\n \"emailAddress\": \"consequat consectetur\",\n \"firstName\": \"cupi\",\n \"forcePasswordChange\": true,\n \"id\": \"cupidatat L\",\n \"lastName\": \"occa\",\n \"password\": \"eu\",\n \"roleId\": \"amet incididunt voluptate dolore\"\n}"
										}
									]
								},
								{
									"name": "Update a local system user.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"description": "(Required) Logged in user password to modify sensitive data.",
												"key": "x-auth-password",
												"value": "<string>"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"username\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"emailAddress\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"forcePasswordChange\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"password\": \"<string>\",\n    \"roleId\": \"<string>\"\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/users/:userId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"users",
												":userId"
											],
											"variable": [
												{
													"id": "ec4cce0c-0241-4e1d-a5f9-398b6a763ba0",
													"key": "userId",
													"value": "<string>",
													"type": "string",
													"description": "(Required) User ID."
												}
											]
										},
										"description": "Updates a user by ID. When updated, the user information is available. If the role changes, the user can perform only those actions that are defined by the role.\n> This endpoint supports execution by the following roles: admin\n"
									},
									"response": [
										{
											"name": "Conflict.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													},
													{
														"description": "(Required) Logged in user password to modify sensitive data.",
														"key": "x-auth-password",
														"value": "<string>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"username\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"emailAddress\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"forcePasswordChange\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"password\": \"<string>\",\n    \"roleId\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/users/:userId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"users",
														":userId"
													],
													"variable": [
														{
															"key": "userId"
														}
													]
												}
											},
											"status": "Conflict",
											"code": 409,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The user does not have the proper privileges to perform the action.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													},
													{
														"description": "(Required) Logged in user password to modify sensitive data.",
														"key": "x-auth-password",
														"value": "<string>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"username\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"emailAddress\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"forcePasswordChange\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"password\": \"<string>\",\n    \"roleId\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/users/:userId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"users",
														":userId"
													],
													"variable": [
														{
															"key": "userId"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The user was not found.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													},
													{
														"description": "(Required) Logged in user password to modify sensitive data.",
														"key": "x-auth-password",
														"value": "<string>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"username\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"emailAddress\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"forcePasswordChange\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"password\": \"<string>\",\n    \"roleId\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/users/:userId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"users",
														":userId"
													],
													"variable": [
														{
															"key": "userId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Successfully updated the user properties.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													},
													{
														"description": "(Required) Logged in user password to modify sensitive data.",
														"key": "x-auth-password",
														"value": "<string>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"username\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"emailAddress\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"forcePasswordChange\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"password\": \"<string>\",\n    \"roleId\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/users/:userId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"users",
														":userId"
													],
													"variable": [
														{
															"key": "userId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"username\": \"TC1E\",\n \"createdDate\": \"1945-12-18T22:28:40.886Z\",\n \"emailAddress\": \"consequat consectetur\",\n \"firstName\": \"cupi\",\n \"forcePasswordChange\": true,\n \"id\": \"cupidatat L\",\n \"lastName\": \"occa\",\n \"password\": \"eu\",\n \"roleId\": \"amet incididunt voluptate dolore\"\n}"
										},
										{
											"name": "The authorization token is either invalid or expired.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													},
													{
														"description": "(Required) Logged in user password to modify sensitive data.",
														"key": "x-auth-password",
														"value": "<string>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"username\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"emailAddress\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"forcePasswordChange\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"password\": \"<string>\",\n    \"roleId\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/users/:userId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"users",
														":userId"
													],
													"variable": [
														{
															"key": "userId"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Expectation failed.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													},
													{
														"description": "(Required) Logged in user password to modify sensitive data.",
														"key": "x-auth-password",
														"value": "<string>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"username\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"emailAddress\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"forcePasswordChange\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"password\": \"<string>\",\n    \"roleId\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/users/:userId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"users",
														":userId"
													],
													"variable": [
														{
															"key": "userId"
														}
													]
												}
											},
											"status": "Expectation Failed",
											"code": 417,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The request body is either invalid or is missing the required fields.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													},
													{
														"description": "(Required) Logged in user password to modify sensitive data.",
														"key": "x-auth-password",
														"value": "<string>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"username\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"emailAddress\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"forcePasswordChange\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"password\": \"<string>\",\n    \"roleId\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/users/:userId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"users",
														":userId"
													],
													"variable": [
														{
															"key": "userId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "An internal server error occurred. Please contact the system administrator.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													},
													{
														"description": "(Required) Logged in user password to modify sensitive data.",
														"key": "x-auth-password",
														"value": "<string>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"username\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"emailAddress\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"forcePasswordChange\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"password\": \"<string>\",\n    \"roleId\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/users/:userId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"users",
														":userId"
													],
													"variable": [
														{
															"key": "userId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Unprocessable entity.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													},
													{
														"description": "(Required) Logged in user password to modify sensitive data.",
														"key": "x-auth-password",
														"value": "<string>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"username\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"emailAddress\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"forcePasswordChange\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"password\": \"<string>\",\n    \"roleId\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/users/:userId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"users",
														":userId"
													],
													"variable": [
														{
															"key": "userId"
														}
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The operation is currently unavailable. The system may currently be in maintenance mode.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													},
													{
														"description": "(Required) Logged in user password to modify sensitive data.",
														"key": "x-auth-password",
														"value": "<string>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"username\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"emailAddress\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"forcePasswordChange\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"password\": \"<string>\",\n    \"roleId\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/users/:userId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"users",
														":userId"
													],
													"variable": [
														{
															"key": "userId"
														}
													]
												}
											},
											"status": "Service Unavailable",
											"code": 503,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Get all the local system users.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/users?page=1&pageSize=100&filter=<string>&orderby=<string>&role=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"users"
									],
									"query": [
										{
											"key": "page",
											"value": "1",
											"description": "The page number to be returned. Must not be less than 1. See Tutorials - Page the List Result."
										},
										{
											"key": "pageSize",
											"value": "100",
											"description": "The number of resources to be returned. Must not be less than 1. See Tutorials - Page the List Result."
										},
										{
											"key": "filter",
											"value": "<string>",
											"description": "The filter string that is expressed using PowerProtect Data Manager filter syntax. See Tutorials - Filter the List Result."
										},
										{
											"key": "orderby",
											"value": "<string>",
											"description": "The attributes/fields to be sorted by. This parameter can combine with sort direction \"ASC\" or \"DESC\". Default direction is ASC. See Tutorials - Sort the List Result."
										},
										{
											"key": "role",
											"value": "<string>",
											"description": "Filters the user by role ID or role name."
										}
									]
								},
								"description": "Retrieves the list of all local users. The list of user information includes user information such as name, username, and roles.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n\n> This endpoint supports pagination with types: random\n"
							},
							"response": [
								{
									"name": "An internal server error occurred. Please contact the system administrator.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/users?page=1&pageSize=100&filter=<string>&orderby=<string>&role=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"users"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "<string>"
												},
												{
													"key": "orderby",
													"value": "<string>"
												},
												{
													"key": "role",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "The user does not have the proper privileges to perform the action.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/users?page=1&pageSize=100&filter=<string>&orderby=<string>&role=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"users"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "<string>"
												},
												{
													"key": "orderby",
													"value": "<string>"
												},
												{
													"key": "role",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "The operation is currently unavailable. The system may currently be in maintenance mode.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/users?page=1&pageSize=100&filter=<string>&orderby=<string>&role=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"users"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "<string>"
												},
												{
													"key": "orderby",
													"value": "<string>"
												},
												{
													"key": "role",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Service Unavailable",
									"code": 503,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Successfully retrieved the list of users.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/users?page=1&pageSize=100&filter=<string>&orderby=<string>&role=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"users"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "<string>"
												},
												{
													"key": "orderby",
													"value": "<string>"
												},
												{
													"key": "role",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"content\": [\n  {\n   \"username\": \"Vgbz\",\n   \"createdDate\": \"2014-04-18T01:00:40.655Z\",\n   \"emailAddress\": \"et tempor est nulla consectetur\",\n   \"firstName\": \"ut m\",\n   \"forcePasswordChange\": true,\n   \"id\": \"adipisicing Ut in tempor ut\",\n   \"lastName\": \"temp\",\n   \"password\": \"sed ipsum cillum fugiat dolore\",\n   \"roleId\": \"proident voluptate eu et\"\n  },\n  {\n   \"username\": \"QbhH\",\n   \"createdDate\": \"1948-12-06T23:04:51.957Z\",\n   \"emailAddress\": \"aliqua fugiat Lorem\",\n   \"firstName\": \"sunt\",\n   \"forcePasswordChange\": false,\n   \"id\": \"occaecat in\",\n   \"lastName\": \"ad v\",\n   \"password\": \"commodo occaeca\",\n   \"roleId\": \"Ut velit qui\"\n  }\n ],\n \"page\": {\n  \"number\": -96767728,\n  \"queryState\": \"eiusmod incididunt\",\n  \"size\": -65321333,\n  \"totalElements\": 15608644,\n  \"totalPages\": 95353981\n }\n}"
								},
								{
									"name": "The request body is either invalid or is missing the required fields.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/users?page=1&pageSize=100&filter=<string>&orderby=<string>&role=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"users"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "<string>"
												},
												{
													"key": "orderby",
													"value": "<string>"
												},
												{
													"key": "role",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "The authorization token is either invalid or expired.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/users?page=1&pageSize=100&filter=<string>&orderby=<string>&role=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"users"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "<string>"
												},
												{
													"key": "orderby",
													"value": "<string>"
												},
												{
													"key": "role",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Create a local system user.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"emailAddress\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"forcePasswordChange\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"password\": \"<string>\",\n    \"roleId\": \"<string>\"\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"users"
									]
								},
								"description": "Creates a user. Once the user is created, the user can access the system and perform actions that are defined by the user role.\n> This endpoint supports execution by the following roles: admin\n"
							},
							"response": [
								{
									"name": "Successfully created the user.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"username\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"emailAddress\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"forcePasswordChange\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"password\": \"<string>\",\n    \"roleId\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/users",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"users"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"username\": \"TC1E\",\n \"createdDate\": \"1945-12-18T22:28:40.886Z\",\n \"emailAddress\": \"consequat consectetur\",\n \"firstName\": \"cupi\",\n \"forcePasswordChange\": true,\n \"id\": \"cupidatat L\",\n \"lastName\": \"occa\",\n \"password\": \"eu\",\n \"roleId\": \"amet incididunt voluptate dolore\"\n}"
								},
								{
									"name": "The Authorization token is either invalid or expired.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"username\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"emailAddress\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"forcePasswordChange\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"password\": \"<string>\",\n    \"roleId\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/users",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"users"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Conflict",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"username\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"emailAddress\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"forcePasswordChange\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"password\": \"<string>\",\n    \"roleId\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/users",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"users"
											]
										}
									},
									"status": "Conflict",
									"code": 409,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "The user does not have the proper privileges to perform the action.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"username\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"emailAddress\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"forcePasswordChange\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"password\": \"<string>\",\n    \"roleId\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/users",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"users"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unprocessable Entity",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"username\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"emailAddress\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"forcePasswordChange\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"password\": \"<string>\",\n    \"roleId\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/users",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"users"
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "An internal server error occurred. Please contact the system administrator.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"username\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"emailAddress\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"forcePasswordChange\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"password\": \"<string>\",\n    \"roleId\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/users",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"users"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "The operation is currently unavailable. The system may currently be in maintenance mode.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"username\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"emailAddress\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"forcePasswordChange\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"password\": \"<string>\",\n    \"roleId\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/users",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"users"
											]
										}
									},
									"status": "Service Unavailable",
									"code": 503,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "The request body is either invalid or is missing the required fields.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"username\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"emailAddress\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"forcePasswordChange\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"password\": \"<string>\",\n    \"roleId\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/users",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"users"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "whitelist",
					"item": [
						{
							"name": "automatic",
							"item": [
								{
									"name": "Get automatic whitelist.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/whitelist/automatic",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"whitelist",
												"automatic"
											]
										},
										"description": "Retrieves the automatic whitelist element, if available. If the automatic whitelist is not set, HTTP 404 is returned. If the automatic whitelist is set, HTTP 200 is returned with the corresponding automatic whitelist element. The ID of the automatic whitelist element is always the same.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
									},
									"response": [
										{
											"name": "Successfully retrieved the automatic whitelist entry.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/whitelist/automatic",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"whitelist",
														"automatic"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"createdTime\": \"incididunt ad aute eu culpa\",\n \"expiresAt\": \"ex nostrud\",\n \"id\": \"tempor deserunt\",\n \"internal\": true,\n \"ip\": \"\",\n \"roleId\": \"dolor pariatur in\",\n \"state\": \"APPROVED\"\n}"
										},
										{
											"name": "The automatic whitelist entry was not found.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/whitelist/automatic",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"whitelist",
														"automatic"
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "An internal server error occurred. Please contact the system administrator.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/whitelist/automatic",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"whitelist",
														"automatic"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The authorization token is either invalid or expired.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/whitelist/automatic",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"whitelist",
														"automatic"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Enable automatic whitelisting.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"createdTime\": \"<string>\",\n    \"expiresAt\": \"<string>\",\n    \"id\": \"<string>\",\n    \"internal\": \"<boolean>\",\n    \"ip\": \"<string>\",\n    \"roleId\": \"<string>\",\n    \"state\": \"<string>\"\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/whitelist/automatic",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"whitelist",
												"automatic"
											]
										},
										"description": "Enables automatic whitelist by creating whitelist entry. IP address must be set to 0.0.0.0 and state must be set to AUTOMATIC in the payload. The expiresAt property specifies when the automatic whitelist should expire.\n> This endpoint supports execution by the following roles: admin\n"
									},
									"response": [
										{
											"name": "Successfully enabled the automatic whitelist feature.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"createdTime\": \"<string>\",\n    \"expiresAt\": \"<string>\",\n    \"id\": \"<string>\",\n    \"internal\": \"<boolean>\",\n    \"ip\": \"<string>\",\n    \"roleId\": \"<string>\",\n    \"state\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/whitelist/automatic",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"whitelist",
														"automatic"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"createdTime\": \"incididunt ad aute eu culpa\",\n \"expiresAt\": \"ex nostrud\",\n \"id\": \"tempor deserunt\",\n \"internal\": true,\n \"ip\": \"\",\n \"roleId\": \"dolor pariatur in\",\n \"state\": \"APPROVED\"\n}"
										},
										{
											"name": "An internal server error occurred. Please contact the system administrator.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"createdTime\": \"<string>\",\n    \"expiresAt\": \"<string>\",\n    \"id\": \"<string>\",\n    \"internal\": \"<boolean>\",\n    \"ip\": \"<string>\",\n    \"roleId\": \"<string>\",\n    \"state\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/whitelist/automatic",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"whitelist",
														"automatic"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The authorization token is either invalid or expired.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"createdTime\": \"<string>\",\n    \"expiresAt\": \"<string>\",\n    \"id\": \"<string>\",\n    \"internal\": \"<boolean>\",\n    \"ip\": \"<string>\",\n    \"roleId\": \"<string>\",\n    \"state\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/whitelist/automatic",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"whitelist",
														"automatic"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "{id}",
							"item": [
								{
									"name": "Delete a whitelist entry.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/whitelist/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"whitelist",
												":id"
											],
											"variable": [
												{
													"id": "7f304be4-f4ce-46d2-940d-71ee3955c2c2",
													"key": "id",
													"value": "<string>",
													"type": "string",
													"description": "(Required) Whitelist ID."
												}
											]
										},
										"description": "Deletes a whitelist entry by the specified ID. The whitelist defines which hosts are either pending, approved, or rejected for application agent registration.\n> This endpoint supports execution by the following roles: admin\n"
									},
									"response": [
										{
											"name": "Successfully deleted the whitelist entry.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/whitelist/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"whitelist",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The authorization token is either invalid or expired.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/whitelist/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"whitelist",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "An internal server error occurred. Please contact the system administrator.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/whitelist/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"whitelist",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The whitelist entry was not found.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/whitelist/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"whitelist",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Get a whitelist entry.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/whitelist/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"whitelist",
												":id"
											],
											"variable": [
												{
													"id": "46eb1b6a-76bb-4699-9144-4f551a482127",
													"key": "id",
													"value": "<string>",
													"type": "string",
													"description": "(Required) Whitelist ID."
												}
											]
										},
										"description": "Retrieves a whitelist entry by the specified ID. The whitelist defines which hosts are either pending, approved, or rejected for application agent registration.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
									},
									"response": [
										{
											"name": "An internal server error occurred. Please contact the system administrator.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/whitelist/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"whitelist",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Successfully retrieved the whitelist entry.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/whitelist/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"whitelist",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"createdTime\": \"incididunt ad aute eu culpa\",\n \"expiresAt\": \"ex nostrud\",\n \"id\": \"tempor deserunt\",\n \"internal\": true,\n \"ip\": \"\",\n \"roleId\": \"dolor pariatur in\",\n \"state\": \"APPROVED\"\n}"
										},
										{
											"name": "The whitelist entry was not found.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/whitelist/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"whitelist",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The authorization token is either invalid or expired.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/whitelist/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"whitelist",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Patch a whitelist entry.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"createdTime\": \"<string>\",\n    \"expiresAt\": \"<string>\",\n    \"id\": \"<string>\",\n    \"internal\": \"<boolean>\",\n    \"ip\": \"<string>\",\n    \"roleId\": \"<string>\",\n    \"state\": \"<string>\"\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/whitelist/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"whitelist",
												":id"
											],
											"variable": [
												{
													"id": "9518e309-6d06-4359-88cf-f0cc022dd428",
													"key": "id",
													"value": "<string>",
													"type": "string",
													"description": "(Required) Whitelist ID."
												}
											]
										},
										"description": "Updates specific properties in the whitelist by the specified ID. The whitelist defines which hosts are either pending, approved, or rejected for application agent registration.\n> This endpoint supports execution by the following roles: admin\n"
									},
									"response": [
										{
											"name": "The authorization token is either invalid or expired.",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/whitelist/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"whitelist",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Successfully updated the whitelist entry.",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/whitelist/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"whitelist",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"createdTime\": \"incididunt ad aute eu culpa\",\n \"expiresAt\": \"ex nostrud\",\n \"id\": \"tempor deserunt\",\n \"internal\": true,\n \"ip\": \"\",\n \"roleId\": \"dolor pariatur in\",\n \"state\": \"APPROVED\"\n}"
										},
										{
											"name": "An internal server error occurred. Please contact the system administrator.",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/whitelist/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"whitelist",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Update a whitelist entry.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"createdTime\": \"<string>\",\n    \"expiresAt\": \"<string>\",\n    \"id\": \"<string>\",\n    \"internal\": \"<boolean>\",\n    \"ip\": \"<string>\",\n    \"roleId\": \"<string>\",\n    \"state\": \"<string>\"\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/whitelist/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"whitelist",
												":id"
											],
											"variable": [
												{
													"id": "48a46e5b-57a6-4a9c-b6aa-3bc4edae64fd",
													"key": "id",
													"value": "<string>",
													"type": "string",
													"description": "(Required) Whitelist ID."
												}
											]
										},
										"description": "Updates a whitelist entry by the specified ID. The whitelist defines which hosts are either pending, approved, or rejected for application agent registration.\n> This endpoint supports execution by the following roles: admin\n"
									},
									"response": [
										{
											"name": "Successfully updated the whitelist entry.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"createdTime\": \"<string>\",\n    \"expiresAt\": \"<string>\",\n    \"id\": \"<string>\",\n    \"internal\": \"<boolean>\",\n    \"ip\": \"<string>\",\n    \"roleId\": \"<string>\",\n    \"state\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/whitelist/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"whitelist",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"createdTime\": \"incididunt ad aute eu culpa\",\n \"expiresAt\": \"ex nostrud\",\n \"id\": \"tempor deserunt\",\n \"internal\": true,\n \"ip\": \"\",\n \"roleId\": \"dolor pariatur in\",\n \"state\": \"APPROVED\"\n}"
										},
										{
											"name": "An internal server error occurred. Please contact the system administrator.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"createdTime\": \"<string>\",\n    \"expiresAt\": \"<string>\",\n    \"id\": \"<string>\",\n    \"internal\": \"<boolean>\",\n    \"ip\": \"<string>\",\n    \"roleId\": \"<string>\",\n    \"state\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/whitelist/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"whitelist",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The whitelist entry was not found.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"createdTime\": \"<string>\",\n    \"expiresAt\": \"<string>\",\n    \"id\": \"<string>\",\n    \"internal\": \"<boolean>\",\n    \"ip\": \"<string>\",\n    \"roleId\": \"<string>\",\n    \"state\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/whitelist/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"whitelist",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The authorization token is either invalid or expired.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"createdTime\": \"<string>\",\n    \"expiresAt\": \"<string>\",\n    \"id\": \"<string>\",\n    \"internal\": \"<boolean>\",\n    \"ip\": \"<string>\",\n    \"roleId\": \"<string>\",\n    \"state\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/whitelist/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"whitelist",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Get all the whitelist entries.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/whitelist?page=1&pageSize=100&filter=<string>&orderby=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"whitelist"
									],
									"query": [
										{
											"key": "page",
											"value": "1",
											"description": "The page number to be returned. Must not be less than 1. See Tutorials - Page the List Result."
										},
										{
											"key": "pageSize",
											"value": "100",
											"description": "The number of resources to be returned. Must not be less than 1. See Tutorials - Page the List Result."
										},
										{
											"key": "filter",
											"value": "<string>",
											"description": "The filter string that is expressed using PowerProtect Data Manager filter syntax. See Tutorials - Filter the List Result."
										},
										{
											"key": "orderby",
											"value": "<string>",
											"description": "The attributes/fields to be sorted by. This parameter can combine with sort direction \"ASC\" or \"DESC\". Default direction is ASC. See Tutorials - Sort the List Result."
										}
									]
								},
								"description": "Retrieves all whitelist entries. The whitelist defines which hosts are either pending, approved, or rejected for application agent registration.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n\n> This endpoint supports pagination with types: random\n"
							},
							"response": [
								{
									"name": "The authorization token is either invalid or expired.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/whitelist?page=1&pageSize=100&filter=<string>&orderby=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"whitelist"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "<string>"
												},
												{
													"key": "orderby",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "An internal server error occurred. Please contact the system administrator.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/whitelist?page=1&pageSize=100&filter=<string>&orderby=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"whitelist"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "<string>"
												},
												{
													"key": "orderby",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Successfully retrieved the whitelist entries.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/whitelist?page=1&pageSize=100&filter=<string>&orderby=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"whitelist"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "<string>"
												},
												{
													"key": "orderby",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"content\": [\n  {\n   \"createdTime\": \"nulla est\",\n   \"expiresAt\": \"dolor sint pariatur sed\",\n   \"id\": \"commodo\",\n   \"internal\": true,\n   \"ip\": \"qui officia\",\n   \"roleId\": \"officia fugiat ipsum minim\",\n   \"state\": \"UNDEFINED\"\n  },\n  {\n   \"createdTime\": \"veniam laborum proident sed\",\n   \"expiresAt\": \"proident deserunt ex enim\",\n   \"id\": \"enim veniam est\",\n   \"internal\": true,\n   \"ip\": \"elit tempor ex\",\n   \"roleId\": \"consequat labore\",\n   \"state\": \"APPROVED\"\n  }\n ],\n \"page\": {\n  \"number\": 7340477,\n  \"queryState\": \"reprehenderit\",\n  \"size\": 36876677,\n  \"totalElements\": -3008640,\n  \"totalPages\": 24484507\n }\n}"
								}
							]
						},
						{
							"name": "Create a whitelist entry.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"createdTime\": \"<string>\",\n    \"expiresAt\": \"<string>\",\n    \"id\": \"<string>\",\n    \"internal\": \"<boolean>\",\n    \"ip\": \"<string>\",\n    \"roleId\": \"<string>\",\n    \"state\": \"<string>\"\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/whitelist",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"whitelist"
									]
								},
								"description": "Creates a whitelist entry. The whitelist defines which hosts are either pending, approved, or rejected for application agent registration. Approved hosts can be approved for a user-defined period.\n> This endpoint supports execution by the following roles: admin\n"
							},
							"response": [
								{
									"name": "Successfully retrieved the whitelist entry.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/whitelist",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"whitelist"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"createdTime\": \"incididunt ad aute eu culpa\",\n \"expiresAt\": \"ex nostrud\",\n \"id\": \"tempor deserunt\",\n \"internal\": true,\n \"ip\": \"\",\n \"roleId\": \"dolor pariatur in\",\n \"state\": \"APPROVED\"\n}"
								},
								{
									"name": "The authorization token is either invalid or expired.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/whitelist",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"whitelist"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "An internal server error occurred. Please contact the system administrator.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/whitelist",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"whitelist"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Get aggregation of state counts for activities.",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v2/activity-metrics?createTime=<dateTime>&state=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"activity-metrics"
							],
							"query": [
								{
									"key": "createTime",
									"value": "<dateTime>",
									"description": "createTime gt \"2019-07-08T20:26:16.032Z\""
								},
								{
									"key": "state",
									"value": "<string>",
									"description": "state in (\"RUNNING\", \"QUEUED\", \"PENDING_CANCELLATION\")."
								}
							]
						},
						"description": "Retrieves aggregation metrics for jobs and job groups in different states.\n> This endpoint supports execution by the following roles: admin\n"
					},
					"response": [
						{
							"name": "The requestor is not authenticated.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/activity-metrics?createTime=<dateTime>&state=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"activity-metrics"
									],
									"query": [
										{
											"key": "createTime",
											"value": "<dateTime>"
										},
										{
											"key": "state",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
						},
						{
							"name": "The requestor does not have required permissions.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/activity-metrics?createTime=<dateTime>&state=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"activity-metrics"
									],
									"query": [
										{
											"key": "createTime",
											"value": "<dateTime>"
										},
										{
											"key": "state",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
						},
						{
							"name": "The request is not valid. Check request body and/or filters.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/activity-metrics?createTime=<dateTime>&state=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"activity-metrics"
									],
									"query": [
										{
											"key": "createTime",
											"value": "<dateTime>"
										},
										{
											"key": "state",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
						},
						{
							"name": "A server error prevented the completion of the request.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/activity-metrics?createTime=<dateTime>&state=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"activity-metrics"
									],
									"query": [
										{
											"key": "createTime",
											"value": "<dateTime>"
										},
										{
											"key": "state",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
						},
						{
							"name": "Successfully returned available resources.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/activity-metrics?createTime=<dateTime>&state=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"activity-metrics"
									],
									"query": [
										{
											"key": "createTime",
											"value": "<dateTime>"
										},
										{
											"key": "state",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"aggregation\": [\n  {\n   \"name\": \"ok\",\n   \"value\": 7\n  },\n  {\n   \"name\": \"canceled\",\n   \"value\": 1\n  },\n  {\n   \"name\": \"failed\",\n   \"value\": 3\n  },\n  {\n   \"name\": \"ok_with_errors\",\n   \"value\": 1\n  },\n  {\n   \"name\": \"pending_cancellation\",\n   \"value\": 2\n  },\n  {\n   \"name\": \"queued\",\n   \"value\": 3\n  },\n  {\n   \"name\": \"running\",\n   \"value\": 10\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "Get the agent registration status.",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v2/agent-registration-status?page=1&pageSize=100&filter=<string>&orderby=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"agent-registration-status"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"description": "The page number to be returned. Must not be less than 1. See Tutorials - Page the List Result."
								},
								{
									"key": "pageSize",
									"value": "100",
									"description": "The number of resources to be returned. Must not be less than 1. See Tutorials - Page the List Result."
								},
								{
									"key": "filter",
									"value": "<string>",
									"description": "The filter string that is expressed using PowerProtect Data Manager filter syntax. See Tutorials - Filter the List Result."
								},
								{
									"key": "orderby",
									"value": "<string>",
									"description": "The attributes/fields to be sorted by. This parameter can combine with sort direction \"ASC\" or \"DESC\". Default direction is ASC. See Tutorials - Sort the List Result."
								}
							]
						},
						"description": "Retrieves the agent registration status. You can filter and sort various fields.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
					},
					"response": [
						{
							"name": "Successfully returned the result.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/agent-registration-status?page=1&pageSize=100&filter=<string>&orderby=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"agent-registration-status"
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "pageSize",
											"value": "100"
										},
										{
											"key": "filter",
											"value": "<string>"
										},
										{
											"key": "orderby",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"content\": [\n  {\n   \"agent\": {\n    \"address\": \"sint dolore\",\n    \"certificateSigningRequest\": \"enim officia\",\n    \"createdTime\": \"do cupidatat ad veniam\",\n    \"id\": \"sed exercitation in culpa\",\n    \"plugins\": [\n     {\n      \"arch\": \"AMD64\",\n      \"binaryPath\": \"qui est quis\",\n      \"createdAt\": \"1963-08-08T00:25:39.249Z\",\n      \"endpoints\": [\n       {\n        \"method\": \"PUT\",\n        \"path\": \"laborum\"\n       },\n       {\n        \"method\": \"OPTIONS\",\n        \"path\": \"in proident tempor\"\n       }\n      ],\n      \"id\": \"reprehenderit Excepteur\",\n      \"name\": \"mollit velit id ex ullamco\",\n      \"os\": \"WINDOWS\",\n      \"tenantId\": \"velit Excepteur labore\",\n      \"updatedAt\": \"1996-05-23T13:00:32.165Z\",\n      \"version\": \"id nulla\"\n     },\n     {\n      \"arch\": \"X86\",\n      \"binaryPath\": \"ad enim id\",\n      \"createdAt\": \"1958-11-17T15:37:40.380Z\",\n      \"endpoints\": [\n       {\n        \"method\": \"PUT\",\n        \"path\": \"culpa deserunt ex aute\"\n       },\n       {\n        \"method\": \"GET\",\n        \"path\": \"ipsum qui consectetur\"\n       }\n      ],\n      \"id\": \"culpa\",\n      \"name\": \"et\",\n      \"os\": \"WINDOWS\",\n      \"tenantId\": \"non eu aute\",\n      \"updatedAt\": \"1948-08-16T17:00:44.946Z\",\n      \"version\": \"qui proident occaecat reprehenderit do\"\n     }\n    ],\n    \"port\": 9216,\n    \"registeredTime\": \"id dolor sed elit in\",\n    \"version\": \"minim in in veniam\"\n   },\n   \"applications\": [\n    {\n     \"name\": \"nulla ipsum irure\",\n     \"packageId\": \"sed eu quis nostrud ea\",\n     \"packageVersion\": \"commodo in eu\",\n     \"version\": \"laboris in proident\"\n    },\n    {\n     \"name\": \"proident amet\",\n     \"packageId\": \"et mollit eiusmod\",\n     \"packageVersion\": \"consectetur sit comm\",\n     \"version\": \"consectetur exercitation\"\n    }\n   ],\n   \"hostname\": \"veniam ipsum nost\",\n   \"inventorySourceId\": \"Ut ad\",\n   \"status\": \"WAITING\",\n   \"summary\": [\n    {\n     \"pending\": -25779426,\n     \"registered\": -57407156,\n     \"rejected\": -4651837,\n     \"updatesAvailable\": 76899375,\n     \"waiting\": -77269632\n    },\n    {\n     \"pending\": -41328962,\n     \"registered\": 40286373,\n     \"rejected\": -82232414,\n     \"updatesAvailable\": -77613273,\n     \"waiting\": -174339\n    }\n   ],\n   \"whitelist\": {\n    \"createdTime\": \"magna dolor\",\n    \"expiresAt\": \"sunt\",\n    \"id\": \"aute consectetur voluptate\",\n    \"ip\": \"consectetur reprehenderit ullamco in\",\n    \"state\": \"REJECTED\"\n   }\n  },\n  {\n   \"agent\": {\n    \"address\": \"sunt\",\n    \"certificateSigningRequest\": \"exercitation\",\n    \"createdTime\": \"consequat\",\n    \"id\": \"do\",\n    \"plugins\": [\n     {\n      \"arch\": \"AMD64\",\n      \"binaryPath\": \"Lorem do\",\n      \"createdAt\": \"1945-07-25T09:47:21.272Z\",\n      \"endpoints\": [\n       {\n        \"method\": \"GET\",\n        \"path\": \"aute tempor\"\n       },\n       {\n        \"method\": \"DELETE\",\n        \"path\": \"eiusmod\"\n       }\n      ],\n      \"id\": \"minim\",\n      \"name\": \"cillum ut nulla officia\",\n      \"os\": \"WINDOWS\",\n      \"tenantId\": \"commodo cupidatat laborum exercitation ad\",\n      \"updatedAt\": \"1954-10-17T16:09:35.936Z\",\n      \"version\": \"elit mollit velit dolore ut\"\n     },\n     {\n      \"arch\": \"X86\",\n      \"binaryPath\": \"ex qui laboris reprehenderit\",\n      \"createdAt\": \"2020-08-08T23:46:57.629Z\",\n      \"endpoints\": [\n       {\n        \"method\": \"HEAD\",\n        \"path\": \"tempor labore in aute\"\n       },\n       {\n        \"method\": \"DELETE\",\n        \"path\": \"sit nulla ad Ut\"\n       }\n      ],\n      \"id\": \"ad\",\n      \"name\": \"ex sint\",\n      \"os\": \"WINDOWS\",\n      \"tenantId\": \"est dolore quis Ut\",\n      \"updatedAt\": \"2003-10-12T16:59:39.387Z\",\n      \"version\": \"consequat irure aliquip\"\n     }\n    ],\n    \"port\": 29548,\n    \"registeredTime\": \"elit q\",\n    \"version\": \"eu in minim dolore sed\"\n   },\n   \"applications\": [\n    {\n     \"name\": \"tempor anim nisi cupidatat dolore\",\n     \"packageId\": \"velit\",\n     \"packageVersion\": \"elit velit do\",\n     \"version\": \"qui quis Lorem\"\n    },\n    {\n     \"name\": \"sunt Ut adi\",\n     \"packageId\": \"deserunt ut sint pariatur\",\n     \"packageVersion\": \"aliquip cons\",\n     \"version\": \"in cillum veniam id Excepteur\"\n    }\n   ],\n   \"hostname\": \"Excepteur occaecat Ut Lorem\",\n   \"inventorySourceId\": \"sint\",\n   \"status\": \"REGISTERED\",\n   \"summary\": [\n    {\n     \"pending\": -97052816,\n     \"registered\": -10739142,\n     \"rejected\": 94465029,\n     \"updatesAvailable\": -86475492,\n     \"waiting\": -71789872\n    },\n    {\n     \"pending\": -84111293,\n     \"registered\": -44461394,\n     \"rejected\": 78179381,\n     \"updatesAvailable\": 42395521,\n     \"waiting\": 16502261\n    }\n   ],\n   \"whitelist\": {\n    \"createdTime\": \"aliqua mollit ad nostrud laborum\",\n    \"expiresAt\": \"exercitation\",\n    \"id\": \"Excepteur eiusmod\",\n    \"ip\": \"ullamco veniam non\",\n    \"state\": \"REJECTED\"\n   }\n  }\n ],\n \"page\": {\n  \"number\": -50886173,\n  \"queryState\": \"commodo cillum laborum non\",\n  \"size\": 25482541,\n  \"totalElements\": -42443800,\n  \"totalPages\": -45978260\n }\n}"
						},
						{
							"name": "Bad request. Invalid argument.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/agent-registration-status?page=1&pageSize=100&filter=<string>&orderby=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"agent-registration-status"
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "pageSize",
											"value": "100"
										},
										{
											"key": "filter",
											"value": "<string>"
										},
										{
											"key": "orderby",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
						},
						{
							"name": "The requestor is not allowed to perform this operation.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/agent-registration-status?page=1&pageSize=100&filter=<string>&orderby=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"agent-registration-status"
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "pageSize",
											"value": "100"
										},
										{
											"key": "filter",
											"value": "<string>"
										},
										{
											"key": "orderby",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
						},
						{
							"name": "Service unavailable. Internal server error.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/agent-registration-status?page=1&pageSize=100&filter=<string>&orderby=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"agent-registration-status"
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "pageSize",
											"value": "100"
										},
										{
											"key": "filter",
											"value": "<string>"
										},
										{
											"key": "orderby",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "The requestor is not authorized to perform this operation.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/agent-registration-status?page=1&pageSize=100&filter=<string>&orderby=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"agent-registration-status"
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "pageSize",
											"value": "100"
										},
										{
											"key": "filter",
											"value": "<string>"
										},
										{
											"key": "orderby",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
						}
					]
				},
				{
					"name": "Get all Alert metrics.",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v2/alert-metrics?filter=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"alert-metrics"
							],
							"query": [
								{
									"key": "filter",
									"value": "<string>",
									"description": "The filter string that is expressed using PowerProtect Data Manager filter syntax. See Tutorials - Filter the List Result."
								}
							]
						},
						"description": "Retrieves all alert metrics posted within a given time interval and includes the number of unacknowledged critical, warning, and informational alerts. \n> This endpoint supports execution by the following roles: admin\n"
					},
					"response": [
						{
							"name": "The requestor is not authorized to perform this operation.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/alert-metrics?filter=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"alert-metrics"
									],
									"query": [
										{
											"key": "filter",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
						},
						{
							"name": "The request is not valid.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/alert-metrics?filter=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"alert-metrics"
									],
									"query": [
										{
											"key": "filter",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
						},
						{
							"name": "Any server error that prevented the completion of the request.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/alert-metrics?filter=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"alert-metrics"
									],
									"query": [
										{
											"key": "filter",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
						},
						{
							"name": "Successfully returned available alert metrics.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/alert-metrics?filter=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"alert-metrics"
									],
									"query": [
										{
											"key": "filter",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"fromPostTime\": \"2019-10-20T21:36:41.590Z\",\n \"toPostTime\": \"2019-10-21T21:36:41.590Z\",\n \"unacknowledgedCriticalCount\": 0,\n \"unacknowledgedInformationalCount\": 1,\n \"unacknowledgedWarningCount\": 0\n}"
						},
						{
							"name": "The requestor is not authenticated to perform this operation.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/alert-metrics?filter=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"alert-metrics"
									],
									"query": [
										{
											"key": "filter",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
						}
					]
				},
				{
					"name": "Trigger manual backup for an asset.",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"assetId\": \"<string>\",\n    \"backupType\": \"<string>\"\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/asset-backups",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"asset-backups"
							]
						},
						"description": "Triggers a manual backup for a single asset. The asset must be in a protection policy.\n> This endpoint supports execution by the following roles: admin\n"
					},
					"response": [
						{
							"name": "The request is not valid.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"assetId\": \"<string>\",\n    \"backupType\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/asset-backups",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"asset-backups"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
						},
						{
							"name": "A resource with the specified ID is not found.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"assetId\": \"<string>\",\n    \"backupType\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/asset-backups",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"asset-backups"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
						},
						{
							"name": "The requestor is not authorized to perform this operation.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"assetId\": \"<string>\",\n    \"backupType\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/asset-backups",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"asset-backups"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
						},
						{
							"name": "The requestor is not allowed to perform this operation.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"assetId\": \"<string>\",\n    \"backupType\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/asset-backups",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"asset-backups"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
						},
						{
							"name": "Successful operation. Returns asset ID, backup type, and task ID.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"assetId\": \"<string>\",\n    \"backupType\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/asset-backups",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"asset-backups"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"assetId\": \"tempor magna\",\n \"backupType\": \"FULL\",\n \"taskId\": \"non sed labore nisi nulla\"\n}"
						},
						{
							"name": "An unexpected error prevented the server from fulfilling your request.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"assetId\": \"<string>\",\n    \"backupType\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/asset-backups",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"asset-backups"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
						}
					]
				},
				{
					"name": "Export asset compliance details as CSV.",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v2/asset-compliance-details?filter=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"asset-compliance-details"
							],
							"query": [
								{
									"key": "filter",
									"value": "<string>",
									"description": "The filter string that is expressed using PowerProtect Data Manager filter syntax. See Tutorials - Filter the List Result."
								}
							]
						},
						"description": "Retrieves asset compliance details from compliance verification result, extracts some fields, and exports to CSV. This API can support multiple filters (for example: slaId, timeRange, and completionStatus).\n> This endpoint supports execution by the following roles: admin,user\n"
					},
					"response": [
						{
							"name": "The request is not valid.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/asset-compliance-details?filter=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"asset-compliance-details"
									],
									"query": [
										{
											"key": "filter",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "The requestor is not authorized to perform this operation.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/asset-compliance-details?filter=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"asset-compliance-details"
									],
									"query": [
										{
											"key": "filter",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "The requestor is not allowed to perform this operation.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/asset-compliance-details?filter=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"asset-compliance-details"
									],
									"query": [
										{
											"key": "filter",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "An unexpected error prevented the server from fulfilling your request.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/asset-compliance-details?filter=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"asset-compliance-details"
									],
									"query": [
										{
											"key": "filter",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Successfully returned a CSV file containing the asset compliance details.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/asset-compliance-details?filter=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"asset-compliance-details"
									],
									"query": [
										{
											"key": "filter",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/csv"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Network assignment / unassignment on assets.",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"requests\": [\n        {\n            \"body\": {\n                \"id\": \"<string>\",\n                \"networkLabel\": \"<string>\"\n            },\n            \"id\": \"<string>\"\n        },\n        {\n            \"body\": {\n                \"id\": \"<string>\",\n                \"networkLabel\": \"<string>\"\n            },\n            \"id\": \"<string>\"\n        }\n    ]\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/asset-networks-batch",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"asset-networks-batch"
							]
						},
						"description": "Initiates assset networks assignment / unassignment batch operation on selected asset ids.\n> This endpoint supports execution by the following roles: admin\n"
					},
					"response": [
						{
							"name": "The requestor is not authorized to perform this operation.",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"requests\": [\n        {\n            \"body\": {\n                \"id\": \"<string>\",\n                \"networkLabel\": \"<string>\"\n            },\n            \"id\": \"<string>\"\n        },\n        {\n            \"body\": {\n                \"id\": \"<string>\",\n                \"networkLabel\": \"<string>\"\n            },\n            \"id\": \"<string>\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/asset-networks-batch",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"asset-networks-batch"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "The request is not valid.",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"requests\": [\n        {\n            \"body\": {\n                \"id\": \"<string>\",\n                \"networkLabel\": \"<string>\"\n            },\n            \"id\": \"<string>\"\n        },\n        {\n            \"body\": {\n                \"id\": \"<string>\",\n                \"networkLabel\": \"<string>\"\n            },\n            \"id\": \"<string>\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/asset-networks-batch",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"asset-networks-batch"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "The requestor is not allowed to perform this operation.",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"requests\": [\n        {\n            \"body\": {\n                \"id\": \"<string>\",\n                \"networkLabel\": \"<string>\"\n            },\n            \"id\": \"<string>\"\n        },\n        {\n            \"body\": {\n                \"id\": \"<string>\",\n                \"networkLabel\": \"<string>\"\n            },\n            \"id\": \"<string>\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/asset-networks-batch",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"asset-networks-batch"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "An unexpected error prevented the server from fulfilling your request.",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"requests\": [\n        {\n            \"body\": {\n                \"id\": \"<string>\",\n                \"networkLabel\": \"<string>\"\n            },\n            \"id\": \"<string>\"\n        },\n        {\n            \"body\": {\n                \"id\": \"<string>\",\n                \"networkLabel\": \"<string>\"\n            },\n            \"id\": \"<string>\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/asset-networks-batch",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"asset-networks-batch"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Successfully patched asset networks.",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"requests\": [\n        {\n            \"body\": {\n                \"id\": \"<string>\",\n                \"networkLabel\": \"<string>\"\n            },\n            \"id\": \"<string>\"\n        },\n        {\n            \"body\": {\n                \"id\": \"<string>\",\n                \"networkLabel\": \"<string>\"\n            },\n            \"id\": \"<string>\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/asset-networks-batch",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"asset-networks-batch"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						}
					]
				},
				{
					"name": "Update a batch of assets.",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"requests\": [\n        {\n            \"body\": {\n                \"backupDetails\": [\n                    {\n                        \"backupType\": \"<string>\",\n                        \"parallelism\": \"<integer>\"\n                    },\n                    {\n                        \"backupType\": \"<string>\",\n                        \"parallelism\": \"<integer>\"\n                    }\n                ],\n                \"id\": \"<string>\"\n            },\n            \"id\": \"<string>\"\n        },\n        {\n            \"body\": {\n                \"backupDetails\": [\n                    {\n                        \"backupType\": \"<string>\",\n                        \"parallelism\": \"<integer>\"\n                    },\n                    {\n                        \"backupType\": \"<string>\",\n                        \"parallelism\": \"<integer>\"\n                    }\n                ],\n                \"id\": \"<string>\"\n            },\n            \"id\": \"<string>\"\n        }\n    ]\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/assets-batch",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"assets-batch"
							]
						},
						"description": "Update a batch of assets.\n> This endpoint supports execution by the following roles: admin\n"
					},
					"response": [
						{
							"name": "Some of the assets failed to update.",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"requests\": [\n        {\n            \"body\": {\n                \"backupDetails\": [\n                    {\n                        \"backupType\": \"<string>\",\n                        \"parallelism\": \"<integer>\"\n                    },\n                    {\n                        \"backupType\": \"<string>\",\n                        \"parallelism\": \"<integer>\"\n                    }\n                ],\n                \"id\": \"<string>\"\n            },\n            \"id\": \"<string>\"\n        },\n        {\n            \"body\": {\n                \"backupDetails\": [\n                    {\n                        \"backupType\": \"<string>\",\n                        \"parallelism\": \"<integer>\"\n                    },\n                    {\n                        \"backupType\": \"<string>\",\n                        \"parallelism\": \"<integer>\"\n                    }\n                ],\n                \"id\": \"<string>\"\n            },\n            \"id\": \"<string>\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/assets-batch",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"assets-batch"
									]
								}
							},
							"status": "Multi-Status (WebDAV) (RFC 4918)",
							"code": 207,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"response\": [\n  {\n   \"body\": {\n    \"code\": 12257912,\n    \"extendedInfo\": \"in ut aliquip\",\n    \"path\": \"Lorem minim Excepteur\",\n    \"reason\": \"non dolore sint in exercitation\",\n    \"remediation\": \"in\",\n    \"timestamp\": 19512694\n   },\n   \"id\": \"magna\",\n   \"status\": \"incididunt enim aliquip nulla eiusmod\"\n  },\n  {\n   \"body\": {\n    \"code\": 31958872,\n    \"extendedInfo\": \"officia \",\n    \"path\": \"cillum\",\n    \"reason\": \"Lorem Excepteur\",\n    \"remediation\": \"irure in dolore\",\n    \"timestamp\": 67547038\n   },\n   \"id\": \"do consectetur\",\n   \"status\": \"consequat\"\n  }\n ]\n}"
						},
						{
							"name": "Error Response.",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"requests\": [\n        {\n            \"body\": {\n                \"backupDetails\": [\n                    {\n                        \"backupType\": \"<string>\",\n                        \"parallelism\": \"<integer>\"\n                    },\n                    {\n                        \"backupType\": \"<string>\",\n                        \"parallelism\": \"<integer>\"\n                    }\n                ],\n                \"id\": \"<string>\"\n            },\n            \"id\": \"<string>\"\n        },\n        {\n            \"body\": {\n                \"backupDetails\": [\n                    {\n                        \"backupType\": \"<string>\",\n                        \"parallelism\": \"<integer>\"\n                    },\n                    {\n                        \"backupType\": \"<string>\",\n                        \"parallelism\": \"<integer>\"\n                    }\n                ],\n                \"id\": \"<string>\"\n            },\n            \"id\": \"<string>\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/assets-batch",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"assets-batch"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
						},
						{
							"name": "The batch of assets have been update successfully.",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"requests\": [\n        {\n            \"body\": {\n                \"backupDetails\": [\n                    {\n                        \"backupType\": \"<string>\",\n                        \"parallelism\": \"<integer>\"\n                    },\n                    {\n                        \"backupType\": \"<string>\",\n                        \"parallelism\": \"<integer>\"\n                    }\n                ],\n                \"id\": \"<string>\"\n            },\n            \"id\": \"<string>\"\n        },\n        {\n            \"body\": {\n                \"backupDetails\": [\n                    {\n                        \"backupType\": \"<string>\",\n                        \"parallelism\": \"<integer>\"\n                    },\n                    {\n                        \"backupType\": \"<string>\",\n                        \"parallelism\": \"<integer>\"\n                    }\n                ],\n                \"id\": \"<string>\"\n            },\n            \"id\": \"<string>\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/assets-batch",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"assets-batch"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						}
					]
				},
				{
					"name": "Sign a certificate signing request (CSR).",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"csr\": \"<string>\",\n    \"fqdn\": \"<string>\",\n    \"ips\": \"<string>\"\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/certificates-signing",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"certificates-signing"
							]
						},
						"description": "Signs a CSR by providing the certificate content and the IP and FQDN of the external host. The IP of the external host must be added to the whitelist before signing the CSR.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin \n"
					},
					"response": [
						{
							"name": "Successfully signed CSR and returned the signed certificate.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"csr\": \"<string>\",\n    \"fqdn\": \"<string>\",\n    \"ips\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/certificates-signing",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"certificates-signing"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"rootCA\": \"nostrud\",\n \"cert\": \"minim et\",\n \"id\": \"occaecat consequat Lorem\"\n}"
						},
						{
							"name": "The operation is currently unavailable. The system may currently be in maintenance mode.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"csr\": \"<string>\",\n    \"fqdn\": \"<string>\",\n    \"ips\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/certificates-signing",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"certificates-signing"
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "The request body is either invalid or is missing the required fields.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"csr\": \"<string>\",\n    \"fqdn\": \"<string>\",\n    \"ips\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/certificates-signing",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"certificates-signing"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "The Authorization token is either invalid or expired.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"csr\": \"<string>\",\n    \"fqdn\": \"<string>\",\n    \"ips\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/certificates-signing",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"certificates-signing"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "An issue has occurred on the system. Please contact the system administrator.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"csr\": \"<string>\",\n    \"fqdn\": \"<string>\",\n    \"ips\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/certificates-signing",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"certificates-signing"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Request could not be processed because of a data conflict.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"csr\": \"<string>\",\n    \"fqdn\": \"<string>\",\n    \"ips\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/certificates-signing",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"certificates-signing"
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get Cloud DR target networks.",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v2/cloud-dr-regions/:region/networks",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"cloud-dr-regions",
								":region",
								"networks"
							],
							"variable": [
								{
									"id": "7b78a72c-ea1c-4a77-a176-63a088308462",
									"key": "region",
									"value": "<string>",
									"type": "string",
									"description": "(Required) Specific region."
								}
							]
						},
						"description": "Retrieves Cloud Disaster Recovery networks for the specified region in order to perform a disaster recovery operation.\n> This endpoint supports execution by the following roles: user\n"
					},
					"response": [
						{
							"name": "The response is a list of all the available networks in the specified region.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/cloud-dr-regions/:region/networks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"cloud-dr-regions",
										":region",
										"networks"
									],
									"variable": [
										{
											"key": "region"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"content\": [\n  {\n   \"securityGroups\": [\n    {\n     \"id\": \"officia amet et in est\",\n     \"name\": \"magna sint pariatur id\"\n    },\n    {\n     \"id\": \"dolore cill\",\n     \"name\": \"commodo\"\n    }\n   ],\n   \"subnets\": [\n    {\n     \"addressSpace\": \"aliqua\",\n     \"occupiedIPs\": [\n      \"ad dolor consectetur mollit magna\",\n      \"consequat eu Duis\"\n     ],\n     \"subnetId\": \"consectetur sint sit ullamco\",\n     \"subnetName\": \"dolore id\",\n     \"subnetZone\": \"sit\"\n    },\n    {\n     \"addressSpace\": \"deserunt ut\",\n     \"occupiedIPs\": [\n      \"id veniam\",\n      \"nisi ullamco ut minim\"\n     ],\n     \"subnetId\": \"in id Duis in exercitation\",\n     \"subnetName\": \"tempor reprehenderit irure consequat\",\n     \"subnetZone\": \"non aliquip commodo velit \"\n    }\n   ],\n   \"virtualNetworkId\": \"in laboris sit\",\n   \"virtualNetworkName\": \"enim culpa ad elit\"\n  },\n  {\n   \"securityGroups\": [\n    {\n     \"id\": \"Duis quis\",\n     \"name\": \"amet dolore ut proident\"\n    },\n    {\n     \"id\": \"nisi proident aliqua magna Duis\",\n     \"name\": \"nostrud labor\"\n    }\n   ],\n   \"subnets\": [\n    {\n     \"addressSpace\": \"laborum\",\n     \"occupiedIPs\": [\n      \"in veniam ipsum nisi sed\",\n      \"esse enim culpa Excepteur\"\n     ],\n     \"subnetId\": \"cupidatat \",\n     \"subnetName\": \"sunt minim in\",\n     \"subnetZone\": \"minim in magna Duis\"\n    },\n    {\n     \"addressSpace\": \"magna in Lorem\",\n     \"occupiedIPs\": [\n      \"ipsum pariatur esse do\",\n      \"ut esse proident elit\"\n     ],\n     \"subnetId\": \"eiusmod voluptate aliqua consequat\",\n     \"subnetName\": \"mollit laborum reprehenderit enim\",\n     \"subnetZone\": \"eiusmod esse dolor\"\n    }\n   ],\n   \"virtualNetworkId\": \"laborum anim est dolore pariatur\",\n   \"virtualNetworkName\": \"esse enim ut\"\n  }\n ],\n \"pageInfo\": {\n  \"number\": 98938566,\n  \"queryState\": \"enim magna\",\n  \"size\": -71227082,\n  \"totalElements\": -12658568,\n  \"totalPages\": 52279435\n }\n}"
						},
						{
							"name": "Any server error that prevented the completion of the request.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/cloud-dr-regions/:region/networks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"cloud-dr-regions",
										":region",
										"networks"
									],
									"variable": [
										{
											"key": "region"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
						},
						{
							"name": "The requestor is not authenticated to perform this operation.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/cloud-dr-regions/:region/networks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"cloud-dr-regions",
										":region",
										"networks"
									],
									"variable": [
										{
											"key": "region"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
						},
						{
							"name": "The request is not valid.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/cloud-dr-regions/:region/networks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"cloud-dr-regions",
										":region",
										"networks"
									],
									"variable": [
										{
											"key": "region"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
						},
						{
							"name": "The requestor is not authorized to perform this operation.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/cloud-dr-regions/:region/networks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"cloud-dr-regions",
										":region",
										"networks"
									],
									"variable": [
										{
											"key": "region"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
						}
					]
				},
				{
					"name": "Get CDRS version.",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v2/cloud-dr-server-version",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"cloud-dr-server-version"
							]
						},
						"description": "Retrieves the Cloud Disaster Recovery Server (CDRS) version.\n> This endpoint supports execution by the following roles: user\n"
					},
					"response": [
						{
							"name": "The requester is not authenticated to perform this operation.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/cloud-dr-server-version",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"cloud-dr-server-version"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
						},
						{
							"name": "The request is not valid.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/cloud-dr-server-version",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"cloud-dr-server-version"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
						},
						{
							"name": "Successfully returned CDRS version.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/cloud-dr-server-version",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"cloud-dr-server-version"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"version\": \"consequat sunt\"\n}"
						},
						{
							"name": "Any server error that prevented the completion of the request.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/cloud-dr-server-version",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"cloud-dr-server-version"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
						},
						{
							"name": "The requester is not authorized to perform this operation.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/cloud-dr-server-version",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"cloud-dr-server-version"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
						}
					]
				},
				{
					"name": "Creates cloud tiering process for an asset or a copy set.",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"protectionCopySetId\": \"<string>\",\n    \"assetId\": \"<string>\",\n    \"cloudTierStageId\": \"<string>\",\n    \"protectionLifeCycleId\": \"<string>\",\n    \"protectionPolicyId\": \"<string>\",\n    \"workflowTaskId\": \"<string>\"\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/cloud-tiered-copies",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"cloud-tiered-copies"
							]
						},
						"description": "Starts a process to move copies from the Data Domain active tier to the cloud tier/cloud unit. Copies are moved to the cloud for long-term retention.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
					},
					"response": [
						{
							"name": "The request is not valid.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"protectionCopySetId\": \"<string>\",\n    \"assetId\": \"<string>\",\n    \"cloudTierStageId\": \"<string>\",\n    \"protectionLifeCycleId\": \"<string>\",\n    \"protectionPolicyId\": \"<string>\",\n    \"workflowTaskId\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/cloud-tiered-copies",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"cloud-tiered-copies"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
						},
						{
							"name": "The requester is not authenticated to perform this operation.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"protectionCopySetId\": \"<string>\",\n    \"assetId\": \"<string>\",\n    \"cloudTierStageId\": \"<string>\",\n    \"protectionLifeCycleId\": \"<string>\",\n    \"protectionPolicyId\": \"<string>\",\n    \"workflowTaskId\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/cloud-tiered-copies",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"cloud-tiered-copies"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
						},
						{
							"name": "Any server error that prevented the completion of the request.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"protectionCopySetId\": \"<string>\",\n    \"assetId\": \"<string>\",\n    \"cloudTierStageId\": \"<string>\",\n    \"protectionLifeCycleId\": \"<string>\",\n    \"protectionPolicyId\": \"<string>\",\n    \"workflowTaskId\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/cloud-tiered-copies",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"cloud-tiered-copies"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
						},
						{
							"name": "The requester is not authorized to perform this operation.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"protectionCopySetId\": \"<string>\",\n    \"assetId\": \"<string>\",\n    \"cloudTierStageId\": \"<string>\",\n    \"protectionLifeCycleId\": \"<string>\",\n    \"protectionPolicyId\": \"<string>\",\n    \"workflowTaskId\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/cloud-tiered-copies",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"cloud-tiered-copies"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
						},
						{
							"name": "Cloud tiering process for asset has been created. ",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"protectionCopySetId\": \"<string>\",\n    \"assetId\": \"<string>\",\n    \"cloudTierStageId\": \"<string>\",\n    \"protectionLifeCycleId\": \"<string>\",\n    \"protectionPolicyId\": \"<string>\",\n    \"workflowTaskId\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/cloud-tiered-copies",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"cloud-tiered-copies"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"taskId\": \"magna velit\"\n}"
						}
					]
				},
				{
					"name": "Get all compliance details.",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v2/compliance-details?page=1&pageSize=100&filter=<string>&orderby=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"compliance-details"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"description": "The page number to be returned. Must not be less than 1. See Tutorials - Page the List Result."
								},
								{
									"key": "pageSize",
									"value": "100",
									"description": "The number of resources to be returned. Must not be less than 1. See Tutorials - Page the List Result."
								},
								{
									"key": "filter",
									"value": "<string>",
									"description": "The filter string that is expressed using PowerProtect Data Manager filter syntax. See Tutorials - Filter the List Result."
								},
								{
									"key": "orderby",
									"value": "<string>",
									"description": "The attributes/fields to be sorted by. This parameter can combine with sort direction \"ASC\" or \"DESC\". Default direction is ASC. See Tutorials - Sort the List Result."
								}
							]
						},
						"description": "Retrieves the **Compliance Details**. **Compliance Detail** is a summary of the compliance result for one asset on one SLA on one stage of policy. The compliance result is one run of compliance verification for one asset for all SLAs that are assigned to the asset. Normally, one compliance result has multiple assigned SLAs. This API can support multiple filters (for example, assetId and completionTime).\n\nThis API has a known issue for pagination. The size is not the actual page size, but the compliance result size.  For example, if you request a page size of 10, you receive 10 compliance results. If each compliance result has 4 SLAs on different stages, the return size is 40 instead of 10. The totalPages and totalElements properties are for the compliance result instead of compliance detail.\n\n> This endpoint supports execution by the following roles: admin,user\n\n> This endpoint supports pagination with types: random,serial\n"
					},
					"response": [
						{
							"name": "An default error response.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/compliance-details?page=1&pageSize=100&filter=<string>&orderby=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"compliance-details"
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "pageSize",
											"value": "100"
										},
										{
											"key": "filter",
											"value": "<string>"
										},
										{
											"key": "orderby",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
						},
						{
							"name": "The requestor is not allowed to perform this operation.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/compliance-details?page=1&pageSize=100&filter=<string>&orderby=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"compliance-details"
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "pageSize",
											"value": "100"
										},
										{
											"key": "filter",
											"value": "<string>"
										},
										{
											"key": "orderby",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
						},
						{
							"name": "Successfully returned available compliance results.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/compliance-details?page=1&pageSize=100&filter=<string>&orderby=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"compliance-details"
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "pageSize",
											"value": "100"
										},
										{
											"key": "filter",
											"value": "<string>"
										},
										{
											"key": "orderby",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"content\": [\n  {\n   \"assetId\": \"non in\",\n   \"completionStatus\": \"FAILED\",\n   \"completionTime\": \"2012-08-02T20:04:29.819Z\",\n   \"createdAt\": \"1971-03-11T03:20:21.579Z\",\n   \"failedObjectiveList\": [\n    {\n     \"code\": \"ea sint dolor Ut\",\n     \"name\": \"officia exercitation Lorem non\",\n     \"reason\": \"Duis ad incididunt\",\n     \"remediation\": \"eu nisi ad consequat enim\"\n    },\n    {\n     \"code\": \"dolor reprehenderit minim\",\n     \"name\": \"aliquip Lorem\",\n     \"reason\": \"elit dolore laborum Duis ex\",\n     \"remediation\": \"laboris repr\"\n    }\n   ],\n   \"id\": \"Lorem veniam et exercitation sunt\",\n   \"nextStartTime\": \"1997-11-28T21:56:03.153Z\",\n   \"objectiveCount\": 5,\n   \"objectiveFailedNameList\": [\n    \"Retention Lock\",\n    \"Minimum Copies\",\n    \"Recovery Point\",\n    \"Location\",\n    \"Deletion Compliance\",\n    \"Maximum Copies\",\n    \"Compliance Window\",\n    \"Retention Time\"\n   ],\n   \"objectiveSuccessCount\": 0,\n   \"plcId\": \"nostrud \",\n   \"protectionPolicyId\": \"nulla velit Duis\",\n   \"slaId\": \"minim tempor\",\n   \"stageId\": \"in\",\n   \"startTime\": \"1982-06-11T14:42:51.915Z\",\n   \"windowEndTime\": \"1957-09-07T03:18:35.406Z\"\n  },\n  {\n   \"assetId\": \"sed exercitation lab\",\n   \"completionStatus\": \"SUCCESS\",\n   \"completionTime\": \"2007-09-07T00:15:16.772Z\",\n   \"createdAt\": \"1994-11-13T16:20:43.018Z\",\n   \"failedObjectiveList\": [\n    {\n     \"code\": \"consectetur eiusmod deserunt\",\n     \"name\": \"tempor proident cillum irure id\",\n     \"reason\": \"sint\",\n     \"remediation\": \"labore fugiat\"\n    },\n    {\n     \"code\": \"ex anim tempor minim aute\",\n     \"name\": \"amet elit sint reprehenderit in\",\n     \"reason\": \"amet in mollit in\",\n     \"remediation\": \"ut irure in incididunt\"\n    }\n   ],\n   \"id\": \"dolore Lorem in ipsu\",\n   \"nextStartTime\": \"1950-06-22T11:11:01.411Z\",\n   \"objectiveCount\": 1,\n   \"objectiveFailedNameList\": [\n    \"Compliance Window\",\n    \"Recovery Point\",\n    \"Location\",\n    \"Minimum Copies\",\n    \"Retention Time\",\n    \"Retention Lock\",\n    \"Deletion Compliance\"\n   ],\n   \"objectiveSuccessCount\": 0,\n   \"plcId\": \"magna ad ullamco\",\n   \"protectionPolicyId\": \"laborum magna\",\n   \"slaId\": \"adipisicing exercitation pariatur voluptate\",\n   \"stageId\": \"Excepteur labor\",\n   \"startTime\": \"1950-11-20T06:21:37.578Z\",\n   \"windowEndTime\": \"2017-11-19T13:34:07.510Z\"\n  }\n ],\n \"page\": {\n  \"number\": -42458347,\n  \"queryState\": \"occaecat culpa aliqua non\",\n  \"size\": 1430933,\n  \"totalElements\": 73447089,\n  \"totalPages\": 79642499\n }\n}"
						},
						{
							"name": "An unexpected error prevented the server from fulfilling your request.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/compliance-details?page=1&pageSize=100&filter=<string>&orderby=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"compliance-details"
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "pageSize",
											"value": "100"
										},
										{
											"key": "filter",
											"value": "<string>"
										},
										{
											"key": "orderby",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
						},
						{
							"name": "The requestor is not authorized to perform this operation.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/compliance-details?page=1&pageSize=100&filter=<string>&orderby=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"compliance-details"
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "pageSize",
											"value": "100"
										},
										{
											"key": "filter",
											"value": "<string>"
										},
										{
											"key": "orderby",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
						},
						{
							"name": "The request is not valid.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/compliance-details?page=1&pageSize=100&filter=<string>&orderby=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"compliance-details"
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "pageSize",
											"value": "100"
										},
										{
											"key": "filter",
											"value": "<string>"
										},
										{
											"key": "orderby",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
						}
					]
				},
				{
					"name": "Change retention time for copies.",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"requests\": [\n        {\n            \"body\": {\n                \"id\": \"<string>\",\n                \"retentionTime\": \"<string>\"\n            },\n            \"id\": \"<string>\"\n        },\n        {\n            \"body\": {\n                \"id\": \"<string>\",\n                \"retentionTime\": \"<string>\"\n            },\n            \"id\": \"<string>\"\n        }\n    ]\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/copies-batch",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"copies-batch"
							]
						},
						"description": "Changes retention time for copies. All asset types and backup types are supported. The maximum batch size is 1000.\n> This endpoint supports execution by the following roles: admin\n"
					},
					"response": [
						{
							"name": "The requestor is not authorized to perform this operation.",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"requests\": [\n        {\n            \"body\": {\n                \"id\": \"<string>\",\n                \"retentionTime\": \"<string>\"\n            },\n            \"id\": \"<string>\"\n        },\n        {\n            \"body\": {\n                \"id\": \"<string>\",\n                \"retentionTime\": \"<string>\"\n            },\n            \"id\": \"<string>\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/copies-batch",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"copies-batch"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "The request is invalid.",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"requests\": [\n        {\n            \"body\": {\n                \"id\": \"<string>\",\n                \"retentionTime\": \"<string>\"\n            },\n            \"id\": \"<string>\"\n        },\n        {\n            \"body\": {\n                \"id\": \"<string>\",\n                \"retentionTime\": \"<string>\"\n            },\n            \"id\": \"<string>\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/copies-batch",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"copies-batch"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "The requestor is not allowed to perform this operation.",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"requests\": [\n        {\n            \"body\": {\n                \"id\": \"<string>\",\n                \"retentionTime\": \"<string>\"\n            },\n            \"id\": \"<string>\"\n        },\n        {\n            \"body\": {\n                \"id\": \"<string>\",\n                \"retentionTime\": \"<string>\"\n            },\n            \"id\": \"<string>\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/copies-batch",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"copies-batch"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "An unexpected error prevented the server from fulfilling your request.",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"requests\": [\n        {\n            \"body\": {\n                \"id\": \"<string>\",\n                \"retentionTime\": \"<string>\"\n            },\n            \"id\": \"<string>\"\n        },\n        {\n            \"body\": {\n                \"id\": \"<string>\",\n                \"retentionTime\": \"<string>\"\n            },\n            \"id\": \"<string>\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/copies-batch",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"copies-batch"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Retention time change request has been accepted.",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"requests\": [\n        {\n            \"body\": {\n                \"id\": \"<string>\",\n                \"retentionTime\": \"<string>\"\n            },\n            \"id\": \"<string>\"\n        },\n        {\n            \"body\": {\n                \"id\": \"<string>\",\n                \"retentionTime\": \"<string>\"\n            },\n            \"id\": \"<string>\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/copies-batch",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"copies-batch"
									]
								}
							},
							"status": "Accepted",
							"code": 202,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"activityId\": \"dolore dolor exercitation voluptate\"\n}"
						}
					]
				},
				{
					"name": "Batch delete copies.",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"requests\": [\n        {\n            \"body\": {\n                \"copyId\": \"<string>\"\n            },\n            \"id\": \"<string>\"\n        },\n        {\n            \"body\": {\n                \"copyId\": \"<string>\"\n            },\n            \"id\": \"<string>\"\n        }\n    ]\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/copies-deletion-batch?cascadeDelete=false&removeConfigurationOnly=false&forceRemoveLatestBackup=false",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"copies-deletion-batch"
							],
							"query": [
								{
									"key": "cascadeDelete",
									"value": "false",
									"description": "For asset type without dependency, this option makes no difference. For asset type with dependency between copies:\n- cascadeDelete=true deletes all copies in the dependency chain.\n- cascadeDelete=false does not delete any copy with HTTP status code of 409 (Conflict).\n- By default, if cascadeDelete is not specified, it functions as if cascadeDelete is false."
								},
								{
									"key": "removeConfigurationOnly",
									"value": "false",
									"description": "- removeConfigurationOnly=true only deletes metadata from PowerProtect Data Manager without physically deleting from storage or application agent.\n- removeConfigurationOnly=false deletes copy from storage and application agent (if any). If successfully deletes from storage and application agent, then it deletes metadata from PowerProtect Data Manager.\n- By default, if removeConfigurationOnly is not specified, it behaves as if removeConfigurationOnly is false."
								},
								{
									"key": "forceRemoveLatestBackup",
									"value": "false",
									"description": "- forceRemoveLatestBackup=true enables deleting the latest backup. It may break the later chain, or for VM CBT backup, it may break the in-progress backup.\n- forceRemoveLatestBackup=false, if the specified copy is the latest backup, returns 409 error.\n- By default is forceRemoveLatestBackup is not specified, it behaves as if removeConfigurationOnly is false."
								}
							]
						},
						"description": "Batch deletes copies from different assets and stage types."
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"requests\": [\n        {\n            \"body\": {\n                \"copyId\": \"<string>\"\n            },\n            \"id\": \"<string>\"\n        },\n        {\n            \"body\": {\n                \"copyId\": \"<string>\"\n            },\n            \"id\": \"<string>\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/copies-deletion-batch?cascadeDelete=false&removeConfigurationOnly=false&forceRemoveLatestBackup=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"copies-deletion-batch"
									],
									"query": [
										{
											"key": "cascadeDelete",
											"value": "false"
										},
										{
											"key": "removeConfigurationOnly",
											"value": "false"
										},
										{
											"key": "forceRemoveLatestBackup",
											"value": "false"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"requests\": [\n        {\n            \"body\": {\n                \"copyId\": \"<string>\"\n            },\n            \"id\": \"<string>\"\n        },\n        {\n            \"body\": {\n                \"copyId\": \"<string>\"\n            },\n            \"id\": \"<string>\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/copies-deletion-batch?cascadeDelete=false&removeConfigurationOnly=false&forceRemoveLatestBackup=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"copies-deletion-batch"
									],
									"query": [
										{
											"key": "cascadeDelete",
											"value": "false"
										},
										{
											"key": "removeConfigurationOnly",
											"value": "false"
										},
										{
											"key": "forceRemoveLatestBackup",
											"value": "false"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"requests\": [\n        {\n            \"body\": {\n                \"copyId\": \"<string>\"\n            },\n            \"id\": \"<string>\"\n        },\n        {\n            \"body\": {\n                \"copyId\": \"<string>\"\n            },\n            \"id\": \"<string>\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/copies-deletion-batch?cascadeDelete=false&removeConfigurationOnly=false&forceRemoveLatestBackup=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"copies-deletion-batch"
									],
									"query": [
										{
											"key": "cascadeDelete",
											"value": "false"
										},
										{
											"key": "removeConfigurationOnly",
											"value": "false"
										},
										{
											"key": "forceRemoveLatestBackup",
											"value": "false"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"requests\": [\n        {\n            \"body\": {\n                \"copyId\": \"<string>\"\n            },\n            \"id\": \"<string>\"\n        },\n        {\n            \"body\": {\n                \"copyId\": \"<string>\"\n            },\n            \"id\": \"<string>\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/copies-deletion-batch?cascadeDelete=false&removeConfigurationOnly=false&forceRemoveLatestBackup=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"copies-deletion-batch"
									],
									"query": [
										{
											"key": "cascadeDelete",
											"value": "false"
										},
										{
											"key": "removeConfigurationOnly",
											"value": "false"
										},
										{
											"key": "forceRemoveLatestBackup",
											"value": "false"
										}
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"requests\": [\n        {\n            \"body\": {\n                \"copyId\": \"<string>\"\n            },\n            \"id\": \"<string>\"\n        },\n        {\n            \"body\": {\n                \"copyId\": \"<string>\"\n            },\n            \"id\": \"<string>\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/copies-deletion-batch?cascadeDelete=false&removeConfigurationOnly=false&forceRemoveLatestBackup=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"copies-deletion-batch"
									],
									"query": [
										{
											"key": "cascadeDelete",
											"value": "false"
										},
										{
											"key": "removeConfigurationOnly",
											"value": "false"
										},
										{
											"key": "forceRemoveLatestBackup",
											"value": "false"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"requests\": [\n        {\n            \"body\": {\n                \"copyId\": \"<string>\"\n            },\n            \"id\": \"<string>\"\n        },\n        {\n            \"body\": {\n                \"copyId\": \"<string>\"\n            },\n            \"id\": \"<string>\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/copies-deletion-batch?cascadeDelete=false&removeConfigurationOnly=false&forceRemoveLatestBackup=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"copies-deletion-batch"
									],
									"query": [
										{
											"key": "cascadeDelete",
											"value": "false"
										},
										{
											"key": "removeConfigurationOnly",
											"value": "false"
										},
										{
											"key": "forceRemoveLatestBackup",
											"value": "false"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Export deleted copies as CSV report.",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v2/copies-report?filter=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"copies-report"
							],
							"query": [
								{
									"key": "filter",
									"value": "<string>",
									"description": "The filter string that is expressed using PowerProtect Data Manager filter syntax. See Tutorials - Filter the List Result."
								}
							]
						},
						"description": "Retrieves deleted copies based on the filter provided and exports detailed information in the report in CSV format.\n> This endpoint supports execution by the following roles: admin,user\n"
					},
					"response": [
						{
							"name": "The requestor is not allowed to perform this operation.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/copies-report?filter=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"copies-report"
									],
									"query": [
										{
											"key": "filter",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "The request is not valid.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/copies-report?filter=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"copies-report"
									],
									"query": [
										{
											"key": "filter",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Successfully returned a CSV file containing the deleted copies detail information.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/copies-report?filter=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"copies-report"
									],
									"query": [
										{
											"key": "filter",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/csv"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "The requestor is not authorized to perform this operation.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/copies-report?filter=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"copies-report"
									],
									"query": [
										{
											"key": "filter",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "An unexpected error prevented the server from fulfilling your request.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/copies-report?filter=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"copies-report"
									],
									"query": [
										{
											"key": "filter",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Credentials batch update.",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"requests\": [\n        {\n            \"body\": {\n                \"id\": \"<string>\",\n                \"password\": \"<string>\"\n            },\n            \"id\": \"<string>\"\n        },\n        {\n            \"body\": {\n                \"id\": \"<string>\",\n                \"password\": \"<string>\"\n            },\n            \"id\": \"<string>\"\n        }\n    ]\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/credentials-batch",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"credentials-batch"
							]
						},
						"description": "Credentials batch update for password\n> This endpoint supports execution by the following roles: admin\n"
					},
					"response": [
						{
							"name": "Credential password batch request has been accepted.",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"requests\": [\n        {\n            \"body\": {\n                \"id\": \"<string>\",\n                \"password\": \"<string>\"\n            },\n            \"id\": \"<string>\"\n        },\n        {\n            \"body\": {\n                \"id\": \"<string>\",\n                \"password\": \"<string>\"\n            },\n            \"id\": \"<string>\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/credentials-batch",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"credentials-batch"
									]
								}
							},
							"status": "Accepted",
							"code": 202,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"activityId\": \"mollit esse\"\n}"
						},
						{
							"name": "The requestor is not allowed to perform this operation.",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"requests\": [\n        {\n            \"body\": {\n                \"id\": \"<string>\",\n                \"password\": \"<string>\"\n            },\n            \"id\": \"<string>\"\n        },\n        {\n            \"body\": {\n                \"id\": \"<string>\",\n                \"password\": \"<string>\"\n            },\n            \"id\": \"<string>\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/credentials-batch",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"credentials-batch"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "The requestor is not authorized to perform this operation.",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"requests\": [\n        {\n            \"body\": {\n                \"id\": \"<string>\",\n                \"password\": \"<string>\"\n            },\n            \"id\": \"<string>\"\n        },\n        {\n            \"body\": {\n                \"id\": \"<string>\",\n                \"password\": \"<string>\"\n            },\n            \"id\": \"<string>\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/credentials-batch",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"credentials-batch"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "An unexpected error prevented the server from fulfilling your request.",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"requests\": [\n        {\n            \"body\": {\n                \"id\": \"<string>\",\n                \"password\": \"<string>\"\n            },\n            \"id\": \"<string>\"\n        },\n        {\n            \"body\": {\n                \"id\": \"<string>\",\n                \"password\": \"<string>\"\n            },\n            \"id\": \"<string>\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/credentials-batch",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"credentials-batch"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "The request is invalid.",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"requests\": [\n        {\n            \"body\": {\n                \"id\": \"<string>\",\n                \"password\": \"<string>\"\n            },\n            \"id\": \"<string>\"\n        },\n        {\n            \"body\": {\n                \"id\": \"<string>\",\n                \"password\": \"<string>\"\n            },\n            \"id\": \"<string>\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/credentials-batch",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"credentials-batch"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get all cloud units by storage system ID.",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v2/datadomain-cloud-units/:storageSystemId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"datadomain-cloud-units",
								":storageSystemId"
							],
							"variable": [
								{
									"id": "dd6d2634-3a57-4e42-9362-b52a27951a08",
									"key": "storageSystemId",
									"value": "<string>",
									"type": "string",
									"description": "(Required) Storage system ID."
								}
							]
						},
						"description": "Provides a storage system ID to retrieve a list of all cloud units on the specified Data Domain storage system. The result contains information about the cloud profile and provider name.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
					},
					"response": [
						{
							"name": "The requestor is not authorized to perform this operation.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/datadomain-cloud-units/:storageSystemId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"datadomain-cloud-units",
										":storageSystemId"
									],
									"variable": [
										{
											"key": "storageSystemId"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
						},
						{
							"name": "The request is not valid.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/datadomain-cloud-units/:storageSystemId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"datadomain-cloud-units",
										":storageSystemId"
									],
									"variable": [
										{
											"key": "storageSystemId"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
						},
						{
							"name": "The request completed successfully.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/datadomain-cloud-units/:storageSystemId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"datadomain-cloud-units",
										":storageSystemId"
									],
									"variable": [
										{
											"key": "storageSystemId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"content\": [\n  {\n   \"name\": \"culpa laborum minim\",\n   \"profileName\": \"mollit consectetur cillum\",\n   \"providerName\": \"occaecat\",\n   \"state\": \"Excepteur consectetur ea Ut\",\n   \"storageArrayId\": \"veniam labore aliquip\"\n  },\n  {\n   \"name\": \"aliquip deserunt culpa reprehenderit incididunt\",\n   \"profileName\": \"dolore aute Lorem magna\",\n   \"providerName\": \"do ullamco dolor\",\n   \"state\": \"pariatur sit Excepteur\",\n   \"storageArrayId\": \"dolore culpa anim dolore Ut\"\n  }\n ],\n \"page\": {\n  \"number\": 30791672,\n  \"queryState\": \"et am\",\n  \"size\": -10853996,\n  \"totalElements\": 93711075,\n  \"totalPages\": 23725395\n }\n}"
						},
						{
							"name": "The requestor is not allowed to perform this operation.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/datadomain-cloud-units/:storageSystemId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"datadomain-cloud-units",
										":storageSystemId"
									],
									"variable": [
										{
											"key": "storageSystemId"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
						},
						{
							"name": "The requested cloud unit does not exist.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/datadomain-cloud-units/:storageSystemId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"datadomain-cloud-units",
										":storageSystemId"
									],
									"variable": [
										{
											"key": "storageSystemId"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
						},
						{
							"name": "An unexpected error prevented the server from fulfilling your request.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/datadomain-cloud-units/:storageSystemId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"datadomain-cloud-units",
										":storageSystemId"
									],
									"variable": [
										{
											"key": "storageSystemId"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
						}
					]
				},
				{
					"name": "Get all Data Domain system MTrees.",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v2/datadomain-mtrees?page=1&pageSize=100&filter=<string>&orderby=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"datadomain-mtrees"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"description": "The page number to be returned. Must not be less than 1. See Tutorials - Page the List Result."
								},
								{
									"key": "pageSize",
									"value": "100",
									"description": "The number of resources to be returned. Must not be less than 1. See Tutorials - Page the List Result."
								},
								{
									"key": "filter",
									"value": "<string>",
									"description": "The filter string that is expressed using PowerProtect Data Manager filter syntax. See Tutorials - Filter the List Result."
								},
								{
									"key": "orderby",
									"value": "<string>",
									"description": "The attributes/fields to be sorted by. This parameter can combine with sort direction \"ASC\" or \"DESC\". Default direction is ASC. See Tutorials - Sort the List Result."
								}
							]
						},
						"description": "Retrieves a list of all Data Domain MTrees existing in all added Data Domain systems in the current PowerProtect system. The result contains information about each Mtree on the list such as the name, retention lock, storage system, and quotas.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
					},
					"response": [
						{
							"name": "The requestor is not allowed to perform this operation.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/datadomain-mtrees?page=1&pageSize=100&filter=<string>&orderby=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"datadomain-mtrees"
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "pageSize",
											"value": "100"
										},
										{
											"key": "filter",
											"value": "<string>"
										},
										{
											"key": "orderby",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "The requestor is not authorized to perform this operation.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/datadomain-mtrees?page=1&pageSize=100&filter=<string>&orderby=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"datadomain-mtrees"
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "pageSize",
											"value": "100"
										},
										{
											"key": "filter",
											"value": "<string>"
										},
										{
											"key": "orderby",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "The request is not valid.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/datadomain-mtrees?page=1&pageSize=100&filter=<string>&orderby=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"datadomain-mtrees"
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "pageSize",
											"value": "100"
										},
										{
											"key": "filter",
											"value": "<string>"
										},
										{
											"key": "orderby",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "The request completed successfully.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/datadomain-mtrees?page=1&pageSize=100&filter=<string>&orderby=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"datadomain-mtrees"
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "pageSize",
											"value": "100"
										},
										{
											"key": "filter",
											"value": "<string>"
										},
										{
											"key": "orderby",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"content\": [\n  {\n   \"name\": \"reprehenderit dolore\",\n   \"storageSystem\": {\n    \"id\": \"reprehenderit ex incididunt\"\n   },\n   \"tenant\": {\n    \"id\": \"ad veniam sin\"\n   },\n   \"attributes\": {},\n   \"availableCapacityInBytes\": -60196890.63219893,\n   \"createdAt\": \"1986-03-09T06:26:31.879Z\",\n   \"credential\": {\n    \"id\": \"id\"\n   },\n   \"discovered\": false,\n   \"hardCapacityQuotaLevel\": 85721357,\n   \"hardStreamQuotaLevel\": 70647852,\n   \"id\": \"pariatur aliquip eu est\",\n   \"lastDiscoveryStatus\": \"eiusmod\",\n   \"lastUpdated\": \"1995-11-20T11:44:50.360Z\",\n   \"notDetected\": false,\n   \"protectionCreated\": true,\n   \"replicationSources\": [\n    \"in ea\",\n    \"deserunt ad veniam\"\n   ],\n   \"replicationTargets\": [\n    \"esse\",\n    \"mollit nostrud\"\n   ],\n   \"retentionLockMode\": \"esse pariatur velit sit\",\n   \"retentionLockStatus\": \"dolor Duis\",\n   \"retentionMaximum\": -44528594,\n   \"retentionMinimum\": -47741465,\n   \"softCapacityQuotaLevel\": -71767381,\n   \"softStreamQuotaLevel\": -56395089,\n   \"totalCapacityInBytes\": 23585716.026022837,\n   \"type\": \"ut\",\n   \"updatedAt\": \"2010-03-12T20:56:22.923Z\",\n   \"userTags\": [\n    \"nulla\",\n    \"mollit amet\"\n   ]\n  },\n  {\n   \"name\": \"officia Ut nisi\",\n   \"storageSystem\": {\n    \"id\": \"non voluptate sit nulla\"\n   },\n   \"tenant\": {\n    \"id\": \"cillum\"\n   },\n   \"attributes\": {},\n   \"availableCapacityInBytes\": 64882252.73320186,\n   \"createdAt\": \"1975-05-09T10:18:02.604Z\",\n   \"credential\": {\n    \"id\": \"veniam\"\n   },\n   \"discovered\": true,\n   \"hardCapacityQuotaLevel\": -39624066,\n   \"hardStreamQuotaLevel\": 66460239,\n   \"id\": \"reprehenderit aute veniam\",\n   \"lastDiscoveryStatus\": \"Excepteur\",\n   \"lastUpdated\": \"1943-04-20T23:02:22.278Z\",\n   \"notDetected\": true,\n   \"protectionCreated\": true,\n   \"replicationSources\": [\n    \"ea et laboris\",\n    \"consectetur aliquip laborum dolor\"\n   ],\n   \"replicationTargets\": [\n    \"magna incididunt\",\n    \"laboris do\"\n   ],\n   \"retentionLockMode\": \"Ut laboris\",\n   \"retentionLockStatus\": \"veni\",\n   \"retentionMaximum\": 37675654,\n   \"retentionMinimum\": -65042072,\n   \"softCapacityQuotaLevel\": 65194213,\n   \"softStreamQuotaLevel\": 87719206,\n   \"totalCapacityInBytes\": -69624959.64016253,\n   \"type\": \"ad laboris labore in\",\n   \"updatedAt\": \"1975-10-09T03:01:09.449Z\",\n   \"userTags\": [\n    \"nisi\",\n    \"commodo adipisi\"\n   ]\n  }\n ],\n \"page\": {\n  \"number\": 54765922,\n  \"queryState\": \"magna Ut anim\",\n  \"size\": -93051652,\n  \"totalElements\": 14638742,\n  \"totalPages\": -80894011\n }\n}"
						},
						{
							"name": "An unexpected error prevented the server from fulfilling your request.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/datadomain-mtrees?page=1&pageSize=100&filter=<string>&orderby=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"datadomain-mtrees"
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "pageSize",
											"value": "100"
										},
										{
											"key": "filter",
											"value": "<string>"
										},
										{
											"key": "orderby",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get storage unit by data target ID.",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v2/datadomain-storage-units/:dataTargetId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"datadomain-storage-units",
								":dataTargetId"
							],
							"variable": [
								{
									"id": "8a3e03cc-ff9b-4e37-b8e9-1e1f04f2cfff",
									"key": "dataTargetId",
									"value": "<string>",
									"type": "string",
									"description": "(Required) Data target ID"
								}
							]
						},
						"description": "Provides a data target ID to get information about the storage unit such as name, retention lock status, and Data Domain storage system.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
					},
					"response": [
						{
							"name": "The request completed successfully.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/datadomain-storage-units/:dataTargetId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"datadomain-storage-units",
										":dataTargetId"
									],
									"variable": [
										{
											"key": "dataTargetId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"credentialId\": \"magna proident anim\",\n \"dataTargetId\": \"enim dolore irure\",\n \"retentionLock\": {\n  \"enable\": true,\n  \"mode\": \"compliance\"\n },\n \"storageArrayId\": \"ad elit laboris aute\",\n \"storageUnit\": {\n  \"combinedStreamHardLimit\": -70611688,\n  \"combinedStreamSoftLimit\": -93246715,\n  \"hardLimit\": 8118542,\n  \"name\": \"ipsum\",\n  \"softLimit\": 41258650,\n  \"tenantUnit\": \"nisi elit velit molli\"\n }\n}"
						},
						{
							"name": "An unexpected error prevented the server from fulfilling your request.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/datadomain-storage-units/:dataTargetId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"datadomain-storage-units",
										":dataTargetId"
									],
									"variable": [
										{
											"key": "dataTargetId"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
						},
						{
							"name": "The requestor is not authorized to perform this operation.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/datadomain-storage-units/:dataTargetId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"datadomain-storage-units",
										":dataTargetId"
									],
									"variable": [
										{
											"key": "dataTargetId"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
						},
						{
							"name": "The request is not valid.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/datadomain-storage-units/:dataTargetId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"datadomain-storage-units",
										":dataTargetId"
									],
									"variable": [
										{
											"key": "dataTargetId"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
						},
						{
							"name": "The requestor is not allowed to perform this operation.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/datadomain-storage-units/:dataTargetId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"datadomain-storage-units",
										":dataTargetId"
									],
									"variable": [
										{
											"key": "dataTargetId"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
						},
						{
							"name": "The requested resource was not found.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/datadomain-storage-units/:dataTargetId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"datadomain-storage-units",
										":dataTargetId"
									],
									"variable": [
										{
											"key": "dataTargetId"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						}
					]
				},
				{
					"name": "Execute dynamic filters.",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"assetRuleIds\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"inventorySourceType\": \"<string>\"\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/dynamic-filters-execution",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"dynamic-filters-execution"
							]
						},
						"description": "Executes dynamic filters.\n> This endpoint supports execution by the following roles: admin\n"
					},
					"response": [
						{
							"name": "The requestor is not allowed to perform this operation.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/dynamic-filters-execution",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"dynamic-filters-execution"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
						},
						{
							"name": "The requestor is not authorized to perform this operation.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/dynamic-filters-execution",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"dynamic-filters-execution"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
						},
						{
							"name": "The request is not valid.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/dynamic-filters-execution",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"dynamic-filters-execution"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
						},
						{
							"name": "Successfully triggered the dynamic filters.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/dynamic-filters-execution",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"dynamic-filters-execution"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "An unexpected error prevented the server from fulfilling your request.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/dynamic-filters-execution",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"dynamic-filters-execution"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
						}
					]
				},
				{
					"name": "Get files and folders within protected assets.",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v2/file-instances?page=1&pageSize=100&filter=<string>&orderby=<string>&copyStartDate=<dateTime>&copyEndDate=<dateTime>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"file-instances"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"description": "The page number to be returned. Must not be less than 1. See Tutorials - Page the List Result."
								},
								{
									"key": "pageSize",
									"value": "100",
									"description": "The number of resources to be returned. Must not be less than 1. See Tutorials - Page the List Result."
								},
								{
									"key": "filter",
									"value": "<string>",
									"description": "The filter string that is expressed using PowerProtect Data Manager filter syntax. See Tutorials - Filter the List Result."
								},
								{
									"key": "orderby",
									"value": "<string>",
									"description": "The attributes/fields to be sorted by. This parameter can combine with sort direction \"ASC\" or \"DESC\". Default direction is ASC. See Tutorials - Sort the List Result."
								},
								{
									"key": "copyStartDate",
									"value": "<dateTime>",
									"description": "The start date from which to show document copies.  Each file or folder copy has a copy start date and copy end date that records the from-and-to time.  Modifications to that file or folder cause another document to be indexed with a different copy start date and copy end date.  This filter limits result sets to be greater or equal to a particular copy start date."
								},
								{
									"key": "copyEndDate",
									"value": "<dateTime>",
									"description": "The end date up to which to show document copies.  Each file or folder copy has a copy start date and copy end date that records the from-and-to time.  Modifications to that file or folder cause another document to be indexed with a different copy start date and copy end date.  This filter limits result sets to be less or equal to a particular copy end date."
								}
							]
						},
						"description": "Retrieves a paginated list of files and folder documents within the protected assets. By default, a list of 10 objects is returned. The specified query parameters customize the ordering, pagination, and filtering of the result.\n> This endpoint supports execution by the following roles: admin\n"
					},
					"response": [
						{
							"name": "The requestor is not authorized to perform this operation.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/file-instances?page=1&pageSize=100&filter=<string>&orderby=<string>&copyStartDate=<dateTime>&copyEndDate=<dateTime>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"file-instances"
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "pageSize",
											"value": "100"
										},
										{
											"key": "filter",
											"value": "<string>"
										},
										{
											"key": "orderby",
											"value": "<string>"
										},
										{
											"key": "copyStartDate",
											"value": "<dateTime>"
										},
										{
											"key": "copyEndDate",
											"value": "<dateTime>"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
						},
						{
							"name": "The requestor is not authenticated to perform this operation.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/file-instances?page=1&pageSize=100&filter=<string>&orderby=<string>&copyStartDate=<dateTime>&copyEndDate=<dateTime>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"file-instances"
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "pageSize",
											"value": "100"
										},
										{
											"key": "filter",
											"value": "<string>"
										},
										{
											"key": "orderby",
											"value": "<string>"
										},
										{
											"key": "copyStartDate",
											"value": "<dateTime>"
										},
										{
											"key": "copyEndDate",
											"value": "<dateTime>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
						},
						{
							"name": "Server error prevented the successful completion of the request.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/file-instances?page=1&pageSize=100&filter=<string>&orderby=<string>&copyStartDate=<dateTime>&copyEndDate=<dateTime>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"file-instances"
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "pageSize",
											"value": "100"
										},
										{
											"key": "filter",
											"value": "<string>"
										},
										{
											"key": "orderby",
											"value": "<string>"
										},
										{
											"key": "copyStartDate",
											"value": "<dateTime>"
										},
										{
											"key": "copyEndDate",
											"value": "<dateTime>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
						},
						{
							"name": "Successfully returned the files and folders within the protected assets.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/file-instances?page=1&pageSize=100&filter=<string>&orderby=<string>&copyStartDate=<dateTime>&copyEndDate=<dateTime>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"file-instances"
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "pageSize",
											"value": "100"
										},
										{
											"key": "filter",
											"value": "<string>"
										},
										{
											"key": "orderby",
											"value": "<string>"
										},
										{
											"key": "copyStartDate",
											"value": "<dateTime>"
										},
										{
											"key": "copyEndDate",
											"value": "<dateTime>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"content\": [\n  {\n   \"assetId\": \"157765f3-65f9-5b74-8e2b-deba621eb371\",\n   \"assetName\": \"WIN750-13\",\n   \"backupType\": \"Windows VM\",\n   \"copyEndDate\": \"2007-02-18T11:02:41.621Z\",\n   \"copyStartDate\": \"2007-02-18T11:02:41.621Z\",\n   \"createdAt\": \"2007-02-18T11:02:41.621Z\",\n   \"id\": \"cdbaae2e-8a07-11e9-bc42-526af7764f64\",\n   \"itemType\": \"file\",\n   \"location\": \"C:/Users/Joe Smith/My Documents\",\n   \"name\": \"MyDocument.pdf\",\n   \"protectionPolicyId\": \"ddbaae2e-8a07-11e9-bc42-526af7764f64\",\n   \"size\": 10272,\n   \"sourceServer\": \"src-vso.brsvirtdev.asl.lab.emc.com\",\n   \"type\": \"pdf\",\n   \"updatedAt\": \"2007-02-18T11:02:41.621Z\"\n  },\n  {\n   \"assetId\": \"157765f3-65f9-5b74-8e2b-deba621eb371\",\n   \"assetName\": \"WIN750-13\",\n   \"backupType\": \"Windows VM\",\n   \"copyEndDate\": \"2007-02-18T11:02:41.621Z\",\n   \"copyStartDate\": \"2007-02-18T11:02:41.621Z\",\n   \"createdAt\": \"2007-02-18T11:02:41.621Z\",\n   \"id\": \"e3fca052-8a07-11e9-bc42-526af7764f64\",\n   \"itemType\": \"folder\",\n   \"location\": \"C:/Users/Joe Smith\",\n   \"name\": \"Documents\",\n   \"protectionPolicyId\": \"ddbaae2e-8a07-11e9-bc42-526af7764f64\",\n   \"size\": 0,\n   \"sourceServer\": \"src-vso.brsvirtdev.asl.lab.emc.com\",\n   \"type\": \"folder\",\n   \"updatedAt\": \"2007-02-18T11:02:41.621Z\"\n  }\n ],\n \"page\": {\n  \"number\": 1,\n  \"size\": 10,\n  \"totalElements\": 2,\n  \"totalPages\": 1\n }\n}"
						},
						{
							"name": "The request is not valid.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/file-instances?page=1&pageSize=100&filter=<string>&orderby=<string>&copyStartDate=<dateTime>&copyEndDate=<dateTime>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"file-instances"
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "pageSize",
											"value": "100"
										},
										{
											"key": "filter",
											"value": "<string>"
										},
										{
											"key": "orderby",
											"value": "<string>"
										},
										{
											"key": "copyStartDate",
											"value": "<dateTime>"
										},
										{
											"key": "copyEndDate",
											"value": "<dateTime>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
						}
					]
				},
				{
					"name": "Get latest copies of specified assets.",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v2/latest-copies?filter=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"latest-copies"
							],
							"query": [
								{
									"key": "filter",
									"value": "<string>",
									"description": "The filter string that is expressed using PowerProtect Data Manager filter syntax. See Tutorials - Filter the List Result."
								}
							]
						},
						"description": "This API returns the latest copies of the assets that are specified in the filter. One copy for one asset. The filter and the assetId must be provided. Examples follow:\n\nGet latest copies of specified assets\n`GET /api/v2/latest-copies?filter=assetId in (\"725efee5-b9e6-40be-a86c-e42c69e71894\", \"0e11f488-63b4-4a70-860c-994e5e433b19\")`\n\nGet latest copies that satisfy particular copy characteristics\n`GET /api/v2/latest-copies?filter=assetId in (\"725efee5-b9e6-40be-a86c-e42c69e71894\", \"0e11f488-63b4-4a70-860c-994e5e433b19\") and copyType in (\"FULL\", \"DIFFERENTIAL\", \"INCREMENTAL\") and replicatedCopy eq false and location in (\"LOCAL\", \"LOCAL_RECALLED\") and storageSystemId eq \"deaedef1-986a-4a44-a475-80afa3709b1f\" and not state in (\"DELETED\", \"DELETING\", \"SOFT_DELETED\", \"DELETE_FAILED\")`\n\nGet latest copies before a time point\n`GET /api/v2/latest-copies?filter=assetId in (\"725efee5-b9e6-40be-a86c-e42c69e71894\", \"0e11f488-63b4-4a70-860c-994e5e433b19\") and createTime lt \"2020-08-24T08:29:00Z\"`\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
					},
					"response": [
						{
							"name": "Successfully returned latest copies for specified asset.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/latest-copies?filter=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"latest-copies"
									],
									"query": [
										{
											"key": "filter",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"content\": [\n  {\n   \"adhocBackup\": true,\n   \"assetId\": \"quis culpa aute enim\",\n   \"backupTransactionId\": \"reprehenderit dolore occaecat incididunt\",\n   \"baseCopyId\": \"adipisicing dolore ad\",\n   \"copyConsistency\": \"CRASH_CONSISTENT\",\n   \"copyType\": \"DIFF_INCR\",\n   \"createTime\": \"1989-04-14T23:09:48.898Z\",\n   \"details\": {\n    \"k8sBackup\": {\n     \"backupId\": \"eu laboris sed non in\",\n     \"persistentVolumeClaims\": [\n      {\n       \"appConsistentType\": \"aliquip fugiat eu\",\n       \"dataMover\": \"commodo ea dolor eiusmod\",\n       \"excluded\": \"voluptate id non commodo officia\",\n       \"name\": \"sed sint ullamco\",\n       \"size\": 84543898.91856766,\n       \"storageClass\": \"ea sit voluptate tempor\",\n       \"uid\": \"commodo aliqua\"\n      },\n      {\n       \"appConsistentType\": \"dolore ullamco officia in\",\n       \"dataMover\": \"pariatur\",\n       \"excluded\": \"sunt nulla exercitation enim veniam\",\n       \"name\": \"nulla \",\n       \"size\": 45501259.538220674,\n       \"storageClass\": \"Duis est\",\n       \"uid\": \"dolore\"\n      }\n     ]\n    },\n    \"mssqlBackup\": {\n     \"protectionFlowEngine\": \"VMDIRECT\"\n    },\n    \"nasBackup\": {\n     \"directoryCount\": \"non commodo\",\n     \"fileCount\": \"magna veniam sint consectetur\",\n     \"snapshotMetadata\": {\n      \"id\": \"pariatur in commodo\",\n      \"name\": \"et ut adipisicing\",\n      \"path\": \"magna ex nostrud\",\n      \"pathId\": \"cillum\"\n     }\n    },\n    \"vmBackup\": {\n     \"dataMoverType\": \"SDM\"\n    }\n   },\n   \"exportedCopyCount\": -53389411,\n   \"externalId\": \"Duis reprehenderit incididunt enim\",\n   \"id\": \"cupidatat\",\n   \"location\": \"LOCAL_RECALLED\",\n   \"logCount\": \"laboris incididunt\",\n   \"metadataIndexingStatus\": \"RUNNING, FAILED, PARTIAL_SUCCESS,  SUCCESS, null\",\n   \"partialCopy\": false,\n   \"partialCopyDescription\": \"mollit in nulla\",\n   \"protectionCreated\": true,\n   \"replicatedCopy\": true,\n   \"restoreTargetCompatibilities\": [\n    {\n     \"compatibilityFailureReason\": \"eu do\",\n     \"targetName\": \"ea Ut laborum do\",\n     \"type\": \"UNKNOWN\"\n    },\n    {\n     \"compatibilityFailureReason\": \"exercitation Duis\",\n     \"targetName\": \"deserunt nostr\",\n     \"type\": \"INCOMPATIBLE\"\n    }\n   ],\n   \"retentionLock\": \"PARTIAL_COPIES_LOCKED\",\n   \"retentionTime\": \"2006-08-26T18:11:07.732Z\",\n   \"retierTime\": \"1952-08-12T17:57:28.034Z\",\n   \"size\": 72424677,\n   \"state\": \"CLOUD_RECALLING\",\n   \"storageSystemId\": \"laborum\",\n   \"validationResult\": {\n    \"status\": \"id esse\",\n    \"time\": \"1957-01-18T19:46:32.685Z\"\n   }\n  },\n  {\n   \"adhocBackup\": true,\n   \"assetId\": \"pariatur\",\n   \"backupTransactionId\": \"fugiat qui\",\n   \"baseCopyId\": \"exercitation\",\n   \"copyConsistency\": \"APPLICATION_CONSISTENT\",\n   \"copyType\": \"UNKNOWN\",\n   \"createTime\": \"1990-02-15T14:21:14.210Z\",\n   \"details\": {\n    \"k8sBackup\": {\n     \"backupId\": \"voluptate esse aliquip enim\",\n     \"persistentVolumeClaims\": [\n      {\n       \"appConsistentType\": \"non dolor aliqua\",\n       \"dataMover\": \"nisi est in culpa sunt\",\n       \"excluded\": \"quis fug\",\n       \"name\": \"cillum est qui amet\",\n       \"size\": -85897874.98747112,\n       \"storageClass\": \"tempor officia consequat esse\",\n       \"uid\": \"id\"\n      },\n      {\n       \"appConsistentType\": \"ex do sit\",\n       \"dataMover\": \"ullamco voluptate sit nisi velit\",\n       \"excluded\": \"ut commodo\",\n       \"name\": \"dolor cupidatat adipisicing elit\",\n       \"size\": -36347150.17617802,\n       \"storageClass\": \"anim exercitation ipsum\",\n       \"uid\": \"minim veniam aliqua aute\"\n      }\n     ]\n    },\n    \"mssqlBackup\": {\n     \"protectionFlowEngine\": \"VMDIRECT\"\n    },\n    \"nasBackup\": {\n     \"directoryCount\": \"aute eu ali\",\n     \"fileCount\": \"pariatur eu veniam\",\n     \"snapshotMetadata\": {\n      \"id\": \"nulla ad elit voluptate\",\n      \"name\": \"\",\n      \"path\": \"mollit enim dolore\",\n      \"pathId\": \"dolor irure ut in\"\n     }\n    },\n    \"vmBackup\": {\n     \"dataMoverType\": \"VADP\"\n    }\n   },\n   \"exportedCopyCount\": -75427811,\n   \"externalId\": \"ullamco ad sit deserunt labor\",\n   \"id\": \"sunt minim\",\n   \"location\": \"CLOUD\",\n   \"logCount\": \"quis dolore proident\",\n   \"metadataIndexingStatus\": \"RUNNING, FAILED, PARTIAL_SUCCESS,  SUCCESS, null\",\n   \"partialCopy\": false,\n   \"partialCopyDescription\": \"deserunt Duis ullamco\",\n   \"protectionCreated\": false,\n   \"replicatedCopy\": true,\n   \"restoreTargetCompatibilities\": [\n    {\n     \"compatibilityFailureReason\": \"irure\",\n     \"targetName\": \"laborum\",\n     \"type\": \"COMPATIBLE\"\n    },\n    {\n     \"compatibilityFailureReason\": \"elit enim cupidatat dolor\",\n     \"targetName\": \"consectetur\",\n     \"type\": \"UNKNOWN\"\n    }\n   ],\n   \"retentionLock\": \"PARTIAL_COPIES_LOCKED\",\n   \"retentionTime\": \"1955-08-02T13:04:48.002Z\",\n   \"retierTime\": \"1964-05-30T08:58:39.516Z\",\n   \"size\": -90944428,\n   \"state\": \"null\",\n   \"storageSystemId\": \"fugiat cupidatat aliquip pariatur\",\n   \"validationResult\": {\n    \"status\": \"ea sed ad\",\n    \"time\": \"1950-03-26T00:43:40.039Z\"\n   }\n  }\n ],\n \"page\": {\n  \"number\": -57293656,\n  \"queryState\": \"Duis velit ad adipisicing\",\n  \"size\": 33648697,\n  \"totalElements\": 17578011,\n  \"totalPages\": 1438069\n }\n}"
						},
						{
							"name": "The request is not valid.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/latest-copies?filter=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"latest-copies"
									],
									"query": [
										{
											"key": "filter",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
						},
						{
							"name": "An unexpected error prevented the server from fulfilling your request.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/latest-copies?filter=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"latest-copies"
									],
									"query": [
										{
											"key": "filter",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
						},
						{
							"name": "The requester is not authorized to perform this operation.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/latest-copies?filter=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"latest-copies"
									],
									"query": [
										{
											"key": "filter",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
						},
						{
							"name": "The requester is not allowed to perform this operation.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/latest-copies?filter=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"latest-copies"
									],
									"query": [
										{
											"key": "filter",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
						}
					]
				},
				{
					"name": "Get disk usage information for the partition on which logging resides.",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v2/log-disk-infos",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"log-disk-infos"
							]
						},
						"description": "Returns the current log disk information.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
					},
					"response": [
						{
							"name": "The requestor does not have required permissions to access the resource.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/log-disk-infos",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"log-disk-infos"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "The requestor did not provide valid authentication credentials.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/log-disk-infos",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"log-disk-infos"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Any server error that prevents completion of the request.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/log-disk-infos",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"log-disk-infos"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Successfully retrieved the log disk information.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/log-disk-infos",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"log-disk-infos"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"content\": [\n  {\n   \"totalDiskSpaceBytes\": 85078019,\n   \"availableDiskSpaceBytes\": 40119368\n  },\n  {\n   \"totalDiskSpaceBytes\": 91598699,\n   \"availableDiskSpaceBytes\": 7469959\n  }\n ],\n \"page\": {\n  \"number\": -40673644,\n  \"queryState\": \"sunt laboris amet\",\n  \"size\": 25338618,\n  \"totalElements\": 62854757,\n  \"totalPages\": 7131356\n }\n}"
						}
					]
				},
				{
					"name": "Log in to your account.",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"<string>\",\n    \"password\": \"<string>\"\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"login"
							]
						},
						"description": "Logs in with user credentials. Once logged in, the user may perform operations granted to the user and defined by the user role."
					},
					"response": [
						{
							"name": "An internal server error occurred. Please contact the system administrator.",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"<string>\",\n    \"password\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"login"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Successfully logged in with the user.",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"<string>\",\n    \"password\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"login"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"access_token\": \"..\",\n \"token_type\": \"deser\",\n \"expires_in\": 34774355,\n \"jti\": \"culpa ad tempor\",\n \"refresh_token\": \"p9L7u2..wi5FWr5auf\",\n \"scope\": \"id aliquip tempor\"\n}"
						},
						{
							"name": "The user password is expired. Redirecting the user to change the password.",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"<string>\",\n    \"password\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"login"
									]
								}
							},
							"status": "Found",
							"code": 302,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "The user account is locked.",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"<string>\",\n    \"password\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"login"
									]
								}
							},
							"status": "Locked (WebDAV) (RFC 4918)",
							"code": 423,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "The operation is currently unavailable. The system may currently be in maintenance mode.",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"<string>\",\n    \"password\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"login"
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "The authorization token is either invalid or expired.",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"<string>\",\n    \"password\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"login"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "The request body is either invalid or is missing the required fields.",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"<string>\",\n    \"password\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"login"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Log out from your account.",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v2/logout",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"logout"
							]
						},
						"description": "Logs out of the user as specified in the access token. When logged out, the user that is defined in the access token can no longer run operations.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
					},
					"response": [
						{
							"name": "Successfully logged out of the current user.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/logout",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logout"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "An internal server error occurred. Please contact the system administrator.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/logout",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logout"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "The authorization token is either invalid or expired.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/logout",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logout"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "The request body is either invalid or is missing the required fields.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/logout",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logout"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get required IPs",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v2/network-requirement?serverType=<string>&referenceId=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"network-requirement"
							],
							"query": [
								{
									"key": "serverType",
									"value": "<string>"
								},
								{
									"key": "referenceId",
									"value": "<string>"
								}
							]
						},
						"description": "Required Ip Count per component type, total just sum all up.\n> This endpoint supports execution by the following roles: admin, user, export and recovery admin\n"
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/network-requirement?serverType=<string>&referenceId=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"network-requirement"
									],
									"query": [
										{
											"key": "serverType",
											"value": "<string>"
										},
										{
											"key": "referenceId",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/network-requirement?serverType=<string>&referenceId=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"network-requirement"
									],
									"query": [
										{
											"key": "serverType",
											"value": "<string>"
										},
										{
											"key": "referenceId",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"networks\": [\n  {\n   \"id\": \"voluptate tempor\",\n   \"servers\": [\n    {\n     \"ipCount\": 12081521,\n     \"type\": \"DATA_MANAGER\"\n    },\n    {\n     \"ipCount\": 16347943,\n     \"type\": \"SEARCH\"\n    }\n   ]\n  },\n  {\n   \"id\": \"commodo offi\",\n   \"servers\": [\n    {\n     \"ipCount\": 19144683,\n     \"type\": \"DATA_MANAGER\"\n    },\n    {\n     \"ipCount\": 53403562,\n     \"type\": \"V_PROXY\"\n    }\n   ]\n  }\n ]\n}"
						},
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/network-requirement?serverType=<string>&referenceId=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"network-requirement"
									],
									"query": [
										{
											"key": "serverType",
											"value": "<string>"
										},
										{
											"key": "referenceId",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/network-requirement?serverType=<string>&referenceId=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"network-requirement"
									],
									"query": [
										{
											"key": "serverType",
											"value": "<string>"
										},
										{
											"key": "referenceId",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get a list of protection details.",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v2/protection-details?page=1&pageSize=100&filter=<string>&orderby=<string>&queryState=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"protection-details"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"description": "The page number to be returned. Must not be less than 1. See Tutorials - Page the List Result."
								},
								{
									"key": "pageSize",
									"value": "100",
									"description": "The number of resources to be returned. Must not be less than 1. See Tutorials - Page the List Result."
								},
								{
									"key": "filter",
									"value": "<string>",
									"description": "The filter string that is expressed using PowerProtect Data Manager filter syntax. See Tutorials - Filter the List Result."
								},
								{
									"key": "orderby",
									"value": "<string>",
									"description": "The attributes/fields to be sorted by. This parameter can combine with sort direction \"ASC\" or \"DESC\". Default direction is ASC. See Tutorials - Sort the List Result."
								},
								{
									"key": "queryState",
									"value": "<string>",
									"description": "Token string to use to retrieve the next page of a result. The initial search request with queryState must be queryState=BEGIN and a pageSize. After a search begins, subsequent responses include a token string to pass as a parameter for the next page retrieval. When the query state in the response that is returned from the previous search is END, no further results can be retrieved from this query. More details see Tutorials - Page the List Result."
								}
							]
						},
						"description": "Retrieves a list of existing protections such as backups and replications. If there are too many results, this API request returns the HTTP response code 416 (REQUEST RANGE NOT SATISFIABLE). If successful, the API request returns the HTTP response code 200 (OK).\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n\n> This endpoint supports pagination with types: random,serial\n"
					},
					"response": [
						{
							"name": "The request is too large to be satisfied.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/protection-details?page=1&pageSize=100&filter=<string>&orderby=<string>&queryState=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"protection-details"
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "pageSize",
											"value": "100"
										},
										{
											"key": "filter",
											"value": "<string>"
										},
										{
											"key": "orderby",
											"value": "<string>"
										},
										{
											"key": "queryState",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Requested Range Not Satisfiable",
							"code": 416,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
						},
						{
							"name": "The requestor is not allowed to perform this operation.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/protection-details?page=1&pageSize=100&filter=<string>&orderby=<string>&queryState=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"protection-details"
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "pageSize",
											"value": "100"
										},
										{
											"key": "filter",
											"value": "<string>"
										},
										{
											"key": "orderby",
											"value": "<string>"
										},
										{
											"key": "queryState",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
						},
						{
							"name": "The request is not valid.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/protection-details?page=1&pageSize=100&filter=<string>&orderby=<string>&queryState=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"protection-details"
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "pageSize",
											"value": "100"
										},
										{
											"key": "filter",
											"value": "<string>"
										},
										{
											"key": "orderby",
											"value": "<string>"
										},
										{
											"key": "queryState",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
						},
						{
							"name": "The requestor is not authorized to perform this operation.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/protection-details?page=1&pageSize=100&filter=<string>&orderby=<string>&queryState=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"protection-details"
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "pageSize",
											"value": "100"
										},
										{
											"key": "filter",
											"value": "<string>"
										},
										{
											"key": "orderby",
											"value": "<string>"
										},
										{
											"key": "queryState",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
						},
						{
							"name": "An unexpected error prevent the server from fulfilling your request.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/protection-details?page=1&pageSize=100&filter=<string>&orderby=<string>&queryState=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"protection-details"
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "pageSize",
											"value": "100"
										},
										{
											"key": "filter",
											"value": "<string>"
										},
										{
											"key": "orderby",
											"value": "<string>"
										},
										{
											"key": "queryState",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
						},
						{
							"name": "Successfully returned available protection details.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/protection-details?page=1&pageSize=100&filter=<string>&orderby=<string>&queryState=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"protection-details"
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "pageSize",
											"value": "100"
										},
										{
											"key": "filter",
											"value": "<string>"
										},
										{
											"key": "orderby",
											"value": "<string>"
										},
										{
											"key": "queryState",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"content\": [\n  {\n   \"assetId\": \"88226852-caa1-4f20-82a8-0cbd1e6b626a\",\n   \"backupLevel\": \"FULL\",\n   \"bytesTransferred\": 1024,\n   \"completionStatus\": \"SUCCESS\",\n   \"completionTime\": \"2019-01-17T03:15:20Z\",\n   \"createdAt\": \"2019-01-17T03:15:22Z\",\n   \"dataTargetId\": \"106eadf2-cb32-46d5-bfe9-674ac66f5dab\",\n   \"error\": {\n    \"code\": \"EEMI-123\",\n    \"extendedReason\": \"Proxy have heavy load right now.\",\n    \"reason\": \"Proxy rest api call timeout.\",\n    \"remediation\": \"Please try again later or contact admin for support.\"\n   },\n   \"id\": \"64c253f8-e3a5-4df6-ac29-f112b2e522aa\",\n   \"initiatedType\": \"ADHOC\",\n   \"nextScheduledTime\": \"2019-02-17T03:15:22Z\",\n   \"plcId\": \"773a2f2f-20de-47e5-ac32-17706eb51ccd\",\n   \"replicatedDataTargetId\": \"5d399e99-a21e-4381-9ba4-f58dae003d99\",\n   \"stageId\": \"66b47cbf-0d98-48c1-a9d0-3a34a2a90d74\",\n   \"startTime\": \"2019-01-17T03:12:01Z\",\n   \"transferDuration\": 10,\n   \"type\": \"PROTECT\"\n  }\n ],\n \"page\": {\n  \"number\": 1,\n  \"size\": 1,\n  \"totalElements\": 1,\n  \"totalPages\": 1\n }\n}"
						}
					]
				},
				{
					"name": "Execute protection rules.",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"assetRuleIds\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"inventorySourceType\": \"<string>\"\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/protection-rules-execution",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"protection-rules-execution"
							]
						},
						"description": "Executes protection rules.\n> This endpoint supports execution by the following roles: admin\n"
					},
					"response": [
						{
							"name": "An unexpected error prevented the server from fulfilling your request.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/protection-rules-execution",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"protection-rules-execution"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
						},
						{
							"name": "Successfully triggered the protection rules.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/protection-rules-execution",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"protection-rules-execution"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "The requestor is not authorized to perform this operation.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/protection-rules-execution",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"protection-rules-execution"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
						},
						{
							"name": "The requestor is not allowed to perform this operation.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/protection-rules-execution",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"protection-rules-execution"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
						},
						{
							"name": "The request is not valid.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/protection-rules-execution",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"protection-rules-execution"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
						}
					]
				},
				{
					"name": "Get all recovery contexts.",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v2/recovery-contexts",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"recovery-contexts"
							]
						},
						"description": "Retrieves all recovery contexts.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
					},
					"response": [
						{
							"name": "Successfully returned available recovery contexts.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/recovery-contexts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"recovery-contexts"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"content\": [\n  {\n   \"id\": \"veniam aliqua ut minim\",\n   \"name\": \"in ipsum deserunt\",\n   \"description\": \"dolore\",\n   \"systemTenantId\": \"aliqua voluptate Excepteur velit\",\n   \"local\": false\n  },\n  {\n   \"id\": \"fugiat officia pariatur mollit cillum\",\n   \"name\": \"laboris sint Duis eiusmod Lorem\",\n   \"description\": \"nulla elit proident aute\",\n   \"systemTenantId\": \"nulla ullamco amet\",\n   \"local\": false\n  }\n ],\n \"page\": {\n  \"number\": -93177579,\n  \"queryState\": \"in U\",\n  \"size\": 60520010,\n  \"totalElements\": -36464184,\n  \"totalPages\": 62220200\n }\n}"
						},
						{
							"name": "The request is not valid.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/recovery-contexts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"recovery-contexts"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "An unexpected error prevented the server from fulfilling your request.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/recovery-contexts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"recovery-contexts"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"content\": [\n  {\n   \"id\": \"veniam aliqua ut minim\",\n   \"name\": \"in ipsum deserunt\",\n   \"description\": \"dolore\",\n   \"systemTenantId\": \"aliqua voluptate Excepteur velit\",\n   \"local\": false\n  },\n  {\n   \"id\": \"fugiat officia pariatur mollit cillum\",\n   \"name\": \"laboris sint Duis eiusmod Lorem\",\n   \"description\": \"nulla elit proident aute\",\n   \"systemTenantId\": \"nulla ullamco amet\",\n   \"local\": false\n  }\n ],\n \"page\": {\n  \"number\": -93177579,\n  \"queryState\": \"in U\",\n  \"size\": 60520010,\n  \"totalElements\": -36464184,\n  \"totalPages\": 62220200\n }\n}"
						},
						{
							"name": "The requestor is not authorized to perform this operation.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/recovery-contexts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"recovery-contexts"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "The requestor is not allowed to perform this operation.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/recovery-contexts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"recovery-contexts"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get all server disaster recovery hosts.",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v2/server-disaster-recovery-hosts",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"server-disaster-recovery-hosts"
							]
						},
						"description": "Retrieves a list of all the server disaster recovery hosts. The host info includes id, node id, host name, and version.\nThe nodeID is used to prepare the system for recovery. This API provides a list of available servers with DR backups, there could be more than one\n> This endpoint supports execution by the following roles: admin,user\n\n> This endpoint supports pagination with types: random\n"
					},
					"response": [
						{
							"name": "OK. Retrieves a list of all the server disaster recovery hosts. The host info includes id, node id, host name, and version.\n",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/server-disaster-recovery-hosts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"server-disaster-recovery-hosts"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"content\": [\n  {\n   \"hostname\": \"vm-griffin-131.asl.lab.emc.com\",\n   \"id\": \"6dbb318a-4929-483f-9261-90c4d4d8617a\",\n   \"nodeId\": \"6dbb318a-4929-483f-9261-90c4d4d8617a\",\n   \"version\": \"19.1.0-1-SNAPSHOT\"\n  },\n  {\n   \"hostname\": \"vm-griffin-131.asl.lab.emc.com\",\n   \"id\": \"26fbafe1-31ec-47db-98e9-0e362ddd8f0c\",\n   \"nodeId\": \"26fbafe1-31ec-47db-98e9-0e362ddd8f0c\",\n   \"version\": \"19.1.0-1-SNAPSHOT\"\n  },\n  {\n   \"hostname\": \"vm-griffin-197.asl.lab.emc.com\",\n   \"id\": \"2edeb671-80bc-4d80-a278-d134630d3ba6\",\n   \"nodeId\": \"2edeb671-80bc-4d80-a278-d134630d3ba6\",\n   \"version\": \"19.1.0-1-SNAPSHOT\"\n  }\n ],\n \"page\": {\n  \"number\": 1,\n  \"size\": 3,\n  \"totalElements\": 3,\n  \"totalPages\": 1\n }\n}"
						},
						{
							"name": "OK. Retrieves a list of all the server disaster recovery hosts. The host info includes id, node id, host name, and version.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/server-disaster-recovery-hosts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"server-disaster-recovery-hosts"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"content\": [\n  {\n   \"hostname\": \"et sed\",\n   \"id\": \"laborum sed\",\n   \"nodeId\": \"ex reprehenderit anim\",\n   \"version\": \"officia\"\n  },\n  {\n   \"hostname\": \"qui\",\n   \"id\": \"et\",\n   \"nodeId\": \"ut\",\n   \"version\": \"qui eiusmod cupidatat id\"\n  }\n ]\n}"
						},
						{
							"name": "The requestor is not allowed to perform this operation. Errors can be like malformed request syntax, invalid request message parameters, or deceptive request routing etc.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/server-disaster-recovery-hosts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"server-disaster-recovery-hosts"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "The request is Forbidden. An error response indicates that the client's request is formed correctly, but the REST API refuses to honor it, i.e. the user does not have the necessary permissions for the resource.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/server-disaster-recovery-hosts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"server-disaster-recovery-hosts"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "The API request is bad. Errors can be like malformed request syntax, invalid request message parameters, or deceptive request routing etc.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/server-disaster-recovery-hosts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"server-disaster-recovery-hosts"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get status of server disaster recovery restore.",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v2/server-disaster-recovery-status",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"server-disaster-recovery-status"
							]
						},
						"description": "Retrieves the restore server disaster recovery status. The status includes action status like starting time, elapsed seconds, state, error, and so on.\nThe API is used by the UI to poll and check if restore is complete. Once the status is not active, the user is redirected to the login page.\n\n> This endpoint supports execution by the following roles: admin,user\n"
					},
					"response": [
						{
							"name": "OK. Retrieves the restore server disaster recovery status. The status includes action status like starting time, elapsed seconds, state, error ...etc.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/server-disaster-recovery-status",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"server-disaster-recovery-status"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"backupRef\": {\n  \"id\": \"in consectetur\"\n },\n \"elapsedSeconds\": 4779035,\n \"error\": \"culpa\",\n \"id\": \"sit adipisicing minim\",\n \"progress\": -56331020,\n \"startTime\": \"2019-06-01T23:54:33.268Z\",\n \"state\": \"dolor\",\n \"type\": \"Ut\"\n}"
						},
						{
							"name": "The requestor is not allowed to perform this operation. Errors can be like malformed request syntax, invalid request message parameters, or deceptive request routing etc.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/server-disaster-recovery-status",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"server-disaster-recovery-status"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "The request is Forbidden. An error response indicates that the client's request is formed correctly, but the REST API refuses to honor it, i.e. the user does not have the necessary permissions for the resource.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/server-disaster-recovery-status",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"server-disaster-recovery-status"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "The API request is bad. Errors can be like malformed request syntax, invalid request message parameters, or deceptive request routing etc.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/server-disaster-recovery-status",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"server-disaster-recovery-status"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "An unexpected error prevented the server from fulfilling your request. The internal server error with this response status code whenever they execute some request handler code that raises an exception.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/server-disaster-recovery-status",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"server-disaster-recovery-status"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"backupRef\": {\n  \"id\": \"7259fe7d-6ed1-48a9-b9f3-47ee89305467\"\n },\n \"elapsedSeconds\": 3,\n \"error\": null,\n \"id\": \"56c7bb36-6fcb-46eb-9770-1c0178ae0d5d\",\n \"progress\": null,\n \"startTime\": \"2019-06-10T18:54:29.795+0000\",\n \"state\": \"Active\",\n \"type\": \"Recover\"\n}"
						}
					]
				},
				{
					"name": "Get all supported time zones.",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v2/timezones",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"timezones"
							]
						},
						"description": "Retrieves all supported time zones.\n> This endpoint supports execution by the following roles: admin, user, export and recovery admin\n"
					},
					"response": [
						{
							"name": "Located and returned the available time zones successfully.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/timezones",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"timezones"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"id\": \"consequat eu\",\n  \"name\": \"est\"\n },\n {\n  \"id\": \"sint Lorem\",\n  \"name\": \"ad ut\"\n }\n]"
						},
						{
							"name": "An unexpected error prevented the server from fulfilling your request.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/timezones",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"timezones"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "The requestor is not allowed to perform this operation.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/timezones",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"timezones"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Renew the access token for extended usage period.",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"description": "(Required) Authorization token.",
								"key": "Authorization",
								"value": "<string>"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"refresh_token\": \"<string>\",\n    \"grant_type\": \"<string>\",\n    \"scope\": \"<string>\"\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/token",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"token"
							]
						},
						"description": "Extends the usage period of the user, as specified by the access token, by renewing the token. The grant_type in the request body must be refresh_token.\n> This endpoint supports execution by the following roles: admin,user,export-and-recovery-admin\n"
					},
					"response": [
						{
							"name": "The authorization token is either invalid or expired.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									},
									{
										"description": "(Required) Authorization token.",
										"key": "Authorization",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"refresh_token\": \"<string>\",\n    \"grant_type\": \"<string>\",\n    \"scope\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/token",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"token"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "The request body is either invalid or is missing the required fields.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									},
									{
										"description": "(Required) Authorization token.",
										"key": "Authorization",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"refresh_token\": \"<string>\",\n    \"grant_type\": \"<string>\",\n    \"scope\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/token",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"token"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Successfully renewed the authorization token (also known as access token).",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									},
									{
										"description": "(Required) Authorization token.",
										"key": "Authorization",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"refresh_token\": \"<string>\",\n    \"grant_type\": \"<string>\",\n    \"scope\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/token",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"token"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"access_token\": \"..\",\n \"token_type\": \"deser\",\n \"expires_in\": 34774355,\n \"jti\": \"culpa ad tempor\",\n \"refresh_token\": \"p9L7u2..wi5FWr5auf\",\n \"scope\": \"id aliquip tempor\"\n}"
						},
						{
							"name": "An internal server error occurred. Please contact the system administrator.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									},
									{
										"description": "(Required) Authorization token.",
										"key": "Authorization",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"refresh_token\": \"<string>\",\n    \"grant_type\": \"<string>\",\n    \"scope\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/token",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"token"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "The operation is currently unavailable. The system may currently be in maintenance mode.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									},
									{
										"description": "(Required) Authorization token.",
										"key": "Authorization",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"refresh_token\": \"<string>\",\n    \"grant_type\": \"<string>\",\n    \"scope\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/token",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"token"
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Initiate agent installation on VM asset.",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"applicationType\": \"<string>\",\n    \"vmAssetId\": \"<string>\"\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/vm-agent-installation",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"vm-agent-installation"
							]
						},
						"description": "Initiates agent installation on selected VM asset.\n> This endpoint supports execution by the following roles: admin,export-and-recovery-admin\n"
					},
					"response": [
						{
							"name": "The requestor is not allowed to perform this operation.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"applicationType\": \"<string>\",\n    \"vmAssetId\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/vm-agent-installation",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"vm-agent-installation"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
						},
						{
							"name": "An unexpected error prevented the server from fulfilling your request.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"applicationType\": \"<string>\",\n    \"vmAssetId\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/vm-agent-installation",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"vm-agent-installation"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
						},
						{
							"name": "Successfully triggered the agent installation process on VM.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"applicationType\": \"<string>\",\n    \"vmAssetId\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/vm-agent-installation",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"vm-agent-installation"
									]
								}
							},
							"status": "Accepted",
							"code": 202,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"activityId\": \"tempor quis fugiat\"\n}"
						},
						{
							"name": "The request is not valid.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"applicationType\": \"<string>\",\n    \"vmAssetId\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/vm-agent-installation",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"vm-agent-installation"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
						},
						{
							"name": "The requestor is not authorized to perform this operation.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: apikey",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"applicationType\": \"<string>\",\n    \"vmAssetId\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/vm-agent-installation",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"vm-agent-installation"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": -50812900,\n \"extendedInfo\": \"labore\",\n \"path\": \"consectetur\",\n \"reason\": \"ut exercitation\",\n \"remediation\": \"proident in laborum sint deserunt\",\n \"timestamp\": 42379584\n}"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Authentication and Authorization",
			"item": [
				{
					"name": "Log into with user credential",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "07bbda2b-0f73-4ce7-b4f4-19b74733396c",
								"exec": [
									"//console.log(\"Comming form Tests scripting\")",
									"//console.log(\"The whole response body:...\" +responseBody)",
									"//JSON Array füllen mit dem Response Body",
									"json1 = JSON.parse(responseBody)",
									"//console.log(\"access_token: \" +json1.access_token)",
									"//setzen den Token in eine Environment Variable für weitere Automatisierung",
									"pm.environment.set(\"X-auth-token\", json1.access_token);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"username\": \"admin\",\r\n  \"password\": \"Password123!\"\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Logout",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJraWQiOiJhM2RmNjY2YS05MzkxLTQ3NTUtOTRkOC1hMDJiOTJmMDk1NTUiLCJhbGciOiJFUzI1NiJ9.eyJqdGkiOiJhOGM0N2E5MC01NzVhLTRiMWUtOTA0NS1jNjkyNzNjMzlkNTYiLCJpc3MiOiJlQ0RNIEFBQSBTZXJ2aWNlIiwiaWF0IjoxNTczNjUyNjU0LCJleHAiOjE1NzM2ODE0NTQsImV4dCI6eyJzeXN0ZW0iOnsicm9sZSI6WyJBZG1pbiJdfSwiYXVkaXQiOnsidWlkIjoiMDAwMDAwMDAtMDAwMC00MDAwLWEwMDAtMDAwMDAwMDAwMDAwIn19LCJzdWIiOiJhZG1pbiIsImF1dGhvcml6YXRpb24tdG9rZW4tYml0bWFwIjp7InVzZXJuYW1lIjoiYWRtaW4iLCJhdXRoZW50aWNhdGVkIjp0cnVlLCJpZCI6IjAwMDAwMDAwLTAwMDAtNDAwMC1hMDAwLTAwMDAwMDAwMDAwMCIsInVzZXJUeXBlIjoiTE9DQUwiLCJ0aW1lc3RhbXAiOjAsImNyZWF0aW9uVGltZSI6MCwidGVuYW50U2NvcGUiOiIvMDAwMDAwMDAtMDAwMC00MDAwLWIwMDAtMDAwMDAwMDAwMDAwLzAwMDAwMDAwLTAwMDAtNDAwMC1hMDAwLTAwMDAwMDAwMDAwMCIsImF1dGhvcml0aWVzIjpbeyJ0ZW5hbnRzIjpbIjAwMDAwMDAwLTAwMDAtNDAwMC1iMDAwLTAwMDAwMDAwMDAwMCJdLCJwcml2aWxlZ2VzIjpbIjE3MTc5ODY5MTgzIl0sInJvbGVzIjpbIjJiYzkwMDIwLTc2NzUtMDEzNi0yOWU5LTViYmQzY2U3MjliMCJdfV19LCJydGkiOiJhYjAzOTM1NS0wZDJiLTQ0YzQtYThlMi1iN2QyZDI1MjBiZGEifQ.EAYGAcvjY7gkSk-UZjL2D-iVoZu9XQOfuIxzRKAyUpg-XzAGHYi81gH0VgXFHWH_801RwqxL1lozAoj7j0nmHg",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": " {{AUTH-TOKEN}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "\r\n  \"refresh_token\": \"string\",\r\n  \"grant_type\": \"authorization_code\",\r\n  \"scope\": \"string\"\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/logout",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"logout"
							]
						}
					},
					"response": []
				},
				{
					"name": "Renew the Access Token",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": " {{AUTH-TOKEN}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/logout",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"logout"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"variable": [
		{
			"id": "baseUrl",
			"key": "baseUrl",
			"value": "https://localhost:8443",
			"type": "string"
		}
	],
	"protocolProfileBehavior": {}
}